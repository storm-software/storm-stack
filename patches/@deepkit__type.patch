diff --git a/dist/.gitkeep b/dist/.gitkeep
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
diff --git a/dist/cjs/index.d.ts b/dist/cjs/index.d.ts
index 0e9c31c4b4e4570331823d0f42fa15ccf607918c..a1594986297164308ba060496455a4bb9d666d84 100644
--- a/dist/cjs/index.d.ts
+++ b/dist/cjs/index.d.ts
@@ -1,26 +1,26 @@
-export * from './src/core.js';
-export * from './src/changes.js';
-export * from './src/decorator.js';
-export * from './src/decorator-builder.js';
-export * from './src/reference.js';
-export * from './src/serializer.js';
-export * from './src/serializer-facade.js';
-export * from './src/typeguard.js';
-export * from './src/types.js';
-export * from './src/utils.js';
-export * from './src/validator.js';
-export * from './src/validators.js';
-export * from './src/snapshot.js';
-export * from './src/change-detector.js';
-export * from './src/path.js';
-export * from './src/type-serialization.js';
-export * from './src/registry.js';
-export * from './src/default.js';
-export * from './src/mixin.js';
-export * from './src/reflection/type.js';
-export { typeAnnotation as metaAnnotation } from './src/reflection/type.js';
-export * from './src/reflection/processor.js';
-export * from './src/reflection/type.js';
-export * from './src/reflection/extends.js';
-export * from './src/reflection/reflection.js';
-export { TypeNumberBrand } from '@deepkit/type-spec';
+export * from "./src/change-detector.js";
+export * from "./src/changes.js";
+export * from "./src/core.js";
+export * from "./src/decorator-builder.js";
+export * from "./src/decorator.js";
+export * from "./src/default.js";
+export * from "./src/mixin.js";
+export * from "./src/path.js";
+export * from "./src/reference.js";
+export * from "./src/registry.js";
+export * from "./src/serializer-facade.js";
+export * from "./src/serializer.js";
+export * from "./src/snapshot.js";
+export * from "./src/type-serialization.js";
+export * from "./src/typeguard.js";
+export * from "./src/types.js";
+export * from "./src/utils.js";
+export * from "./src/validator.js";
+export * from "./src/validators.js";
+export * from "./src/reflection/type.js";
+export { typeAnnotation as metaAnnotation } from "./src/reflection/type.js";
+export * from "./src/reflection/extends.js";
+export * from "./src/reflection/processor.js";
+export * from "./src/reflection/reflection.js";
+export * from "./src/reflection/type.js";
+export { TypeNumberBrand } from "@deepkit/type-spec";
diff --git a/dist/cjs/index.js b/dist/cjs/index.js
index e612a9f123d4d38a3a3dcc3cb1461593a48bb5e9..579391143737312090f48cc0433801dfa21727e5 100644
--- a/dist/cjs/index.js
+++ b/dist/cjs/index.js
@@ -24,32 +24,32 @@ var __exportStar = (this && this.__exportStar) || function(m, exports) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.TypeNumberBrand = exports.metaAnnotation = void 0;
-__exportStar(require("./src/core.js"), exports);
+__exportStar(require("./src/change-detector.js"), exports);
 __exportStar(require("./src/changes.js"), exports);
-__exportStar(require("./src/decorator.js"), exports);
+__exportStar(require("./src/core.js"), exports);
 __exportStar(require("./src/decorator-builder.js"), exports);
+__exportStar(require("./src/decorator.js"), exports);
+__exportStar(require("./src/default.js"), exports);
+__exportStar(require("./src/mixin.js"), exports);
+__exportStar(require("./src/path.js"), exports);
 __exportStar(require("./src/reference.js"), exports);
-__exportStar(require("./src/serializer.js"), exports);
+__exportStar(require("./src/registry.js"), exports);
 __exportStar(require("./src/serializer-facade.js"), exports);
+__exportStar(require("./src/serializer.js"), exports);
+__exportStar(require("./src/snapshot.js"), exports);
+__exportStar(require("./src/type-serialization.js"), exports);
 __exportStar(require("./src/typeguard.js"), exports);
 __exportStar(require("./src/types.js"), exports);
 __exportStar(require("./src/utils.js"), exports);
 __exportStar(require("./src/validator.js"), exports);
 __exportStar(require("./src/validators.js"), exports);
-__exportStar(require("./src/snapshot.js"), exports);
-__exportStar(require("./src/change-detector.js"), exports);
-__exportStar(require("./src/path.js"), exports);
-__exportStar(require("./src/type-serialization.js"), exports);
-__exportStar(require("./src/registry.js"), exports);
-__exportStar(require("./src/default.js"), exports);
-__exportStar(require("./src/mixin.js"), exports);
 __exportStar(require("./src/reflection/type.js"), exports);
 var type_js_1 = require("./src/reflection/type.js");
 Object.defineProperty(exports, "metaAnnotation", { enumerable: true, get: function () { return type_js_1.typeAnnotation; } });
-__exportStar(require("./src/reflection/processor.js"), exports);
-__exportStar(require("./src/reflection/type.js"), exports);
 __exportStar(require("./src/reflection/extends.js"), exports);
+__exportStar(require("./src/reflection/processor.js"), exports);
 __exportStar(require("./src/reflection/reflection.js"), exports);
+__exportStar(require("./src/reflection/type.js"), exports);
 var type_spec_1 = require("@deepkit/type-spec");
 Object.defineProperty(exports, "TypeNumberBrand", { enumerable: true, get: function () { return type_spec_1.TypeNumberBrand; } });
 //# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/dist/cjs/index.js.map b/dist/cjs/index.js.map
index 7cb84ebf5b50883dcbc951d8155f353f4e91b67f..dd7efcd9b4d1333b0db583f4fff30e3d2da387c5 100644
--- a/dist/cjs/index.js.map
+++ b/dist/cjs/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../index.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;;;;;;;;;;;;;;;;;AAEH,gDAA8B;AAC9B,mDAAiC;AACjC,qDAAmC;AACnC,6DAA2C;AAC3C,qDAAmC;AACnC,sDAAoC;AACpC,6DAA2C;AAC3C,qDAAmC;AACnC,iDAA+B;AAC/B,iDAA+B;AAC/B,qDAAmC;AACnC,sDAAoC;AACpC,oDAAkC;AAClC,2DAAyC;AACzC,gDAA8B;AAC9B,8DAA4C;AAC5C,oDAAkC;AAClC,mDAAiC;AACjC,iDAA+B;AAE/B,2DAAyC;AACzC,oDAA4E;AAAnE,yGAAA,cAAc,OAAkB;AAEzC,gEAA8C;AAC9C,2DAAyC;AACzC,8DAA4C;AAC5C,iEAA+C;AAE/C,gDAAqD;AAA5C,4GAAA,eAAe,OAAA"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../index.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;;;;;;;;;;;;;;;;;AAEH,2DAAyC;AACzC,mDAAiC;AACjC,gDAA8B;AAC9B,6DAA2C;AAC3C,qDAAmC;AACnC,mDAAiC;AACjC,iDAA+B;AAC/B,gDAA8B;AAC9B,qDAAmC;AACnC,oDAAkC;AAClC,6DAA2C;AAC3C,sDAAoC;AACpC,oDAAkC;AAClC,8DAA4C;AAC5C,qDAAmC;AACnC,iDAA+B;AAC/B,iDAA+B;AAC/B,qDAAmC;AACnC,sDAAoC;AAEpC,2DAAyC;AACzC,oDAA4E;AAAnE,yGAAA,cAAc,OAAkB;AAEzC,8DAA4C;AAC5C,gEAA8C;AAC9C,iEAA+C;AAC/C,2DAAyC;AAEzC,gDAAqD;AAA5C,4GAAA,eAAe,OAAA"}
\ No newline at end of file
diff --git a/dist/cjs/package.json b/dist/cjs/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..b731bd61b9cefea28f38a00e57c8cb9a3866bd84
--- /dev/null
+++ b/dist/cjs/package.json
@@ -0,0 +1 @@
+{"type": "commonjs"}
diff --git a/dist/cjs/src/core.d.ts b/dist/cjs/src/core.d.ts
index 890424c19ae36d315461360ce2770ca519571606..735d3d07312f27227a0e7c8a77bc3720269c53f9 100644
--- a/dist/cjs/src/core.d.ts
+++ b/dist/cjs/src/core.d.ts
@@ -1,5 +1,5 @@
-import { Buffer } from 'buffer';
-import { ClassType } from '@deepkit/core';
+import { ClassType } from "@deepkit/core";
+import { Buffer } from "buffer";
 export declare enum UnpopulatedCheck {
     None = 0,//returns undefined
     Throw = 1,//throws regular error
@@ -77,7 +77,7 @@ export declare function arrayBufferFrom(data: string, encoding?: string): ArrayB
 /**
  * Same as Buffer.from(arrayBuffer).toString(encoding), but more in line with the current API.
  */
-export declare function arrayBufferTo(arrayBuffer: ArrayBuffer, encoding?: string | 'utf8' | 'base64' | 'ascii'): string;
+export declare function arrayBufferTo(arrayBuffer: ArrayBuffer, encoding?: string | "utf8" | "base64" | "ascii"): string;
 export declare type __ΩUnpopulatedCheck = any[];
 export declare type __ΩTypeSettings = any[];
 export declare type __ΩTypedArrayClassType = any[];
diff --git a/dist/cjs/src/core.js b/dist/cjs/src/core.js
index d41e7d1b058f5eaef73cf9c43f1fc76d59ee85c4..e4a50ee52e19f0241e9434a233378eded2b074b0 100644
--- a/dist/cjs/src/core.js
+++ b/dist/cjs/src/core.js
@@ -13,16 +13,7 @@ exports.arrayBufferTo = arrayBufferTo;
 const __ΩArrayBufferLike = [() => __ΩArrayBufferTypes, () => __ΩArrayBufferTypes, 'ArrayBufferLike', 'n!n"gfw#y'];
 const __ΩArrayBufferTypes = ['ArrayBuffer', 'ArrayBufferTypes', 'P_4!Mw"y'];
 /*@ts-ignore*/
-const { __ΩClassType } = require('@deepkit/core');
-/*
- * Deepkit Framework
- * Copyright (c) Deepkit UG, Marc J. Schmidt
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the MIT License.
- *
- * You should have received a copy of the MIT License along with this program.
- */
+const { __ΩClassType } = require("@deepkit/core");
 const buffer_1 = require("buffer");
 const __ΩUnpopulatedCheck = ['None', 'Throw', 'ReturnSymbol', 'UnpopulatedCheck', 'PC!C"C#Bw$'];
 exports.__ΩUnpopulatedCheck = __ΩUnpopulatedCheck;
@@ -31,12 +22,15 @@ var UnpopulatedCheck;
 (function (UnpopulatedCheck) {
     UnpopulatedCheck[UnpopulatedCheck["None"] = 0] = "None";
     UnpopulatedCheck[UnpopulatedCheck["Throw"] = 1] = "Throw";
-    UnpopulatedCheck[UnpopulatedCheck["ReturnSymbol"] = 2] = "ReturnSymbol";
+    UnpopulatedCheck[UnpopulatedCheck["ReturnSymbol"] = 2] = "ReturnSymbol"; //returns `unpopulatedSymbol`
 })(UnpopulatedCheck || (exports.UnpopulatedCheck = UnpopulatedCheck = {}));
-exports.unpopulatedSymbol = Symbol('unpopulated');
+exports.unpopulatedSymbol = Symbol("unpopulated");
 const __ΩTypeSettings = [() => __ΩClassType, 'registeredEntities', () => __ΩUnpopulatedCheck, 'unpopulatedCheck', 'TypeSettings', 'PP&n!LM4"n#4$Mw%y'];
 exports.__ΩTypeSettings = __ΩTypeSettings;
-exports.typeSettings = { registeredEntities: {}, unpopulatedCheck: UnpopulatedCheck.Throw };
+exports.typeSettings = {
+    registeredEntities: {},
+    unpopulatedCheck: UnpopulatedCheck.Throw
+};
 const __ΩTypedArrayClassType = ['T', 'args', 'new', 'BYTES_PER_ELEMENT', 'TypedArrayClassType', 'b!PP"@2"e#!1#\'4$9Mw%y'];
 exports.__ΩTypedArrayClassType = __ΩTypedArrayClassType;
 const __ΩTypedArray = ['BYTES_PER_ELEMENT', () => __ΩArrayBufferLike, 'buffer', 'length', 'byteLength', 'byteOffset', 'TypedArray', 'P\'4!9n"4#9\'4$9\'4%9\'4&9Mw\'y'];
@@ -68,10 +62,10 @@ base64ToUint8ArrayAtoB.__type = ['base64', 'base64ToUint8ArrayAtoB', 'P&2!W/"'];
  * a raw ArrayBuffer that represents the actual data correctly.
  */
 function base64ToTypedArray(base64, type) {
-    if ('function' === typeof atob) {
+    if ("function" === typeof atob) {
         return new type(base64ToUint8ArrayAtoB(base64).buffer);
     }
-    return nodeBufferToTypedArray(buffer_1.Buffer.from(base64, 'base64'), type);
+    return nodeBufferToTypedArray(buffer_1.Buffer.from(base64, "base64"), type);
 }
 base64ToTypedArray.__type = ['base64', () => __ΩTypedArrayClassType, 'type', 'base64ToTypedArray', 'P&2!"o""2#"/$'];
 /**
@@ -80,10 +74,10 @@ base64ToTypedArray.__type = ['base64', () => __ΩTypedArrayClassType, 'type', 'b
  * sure a copy happens and the ArrayBuffer is not shared.
  */
 function base64ToArrayBuffer(base64) {
-    if ('function' === typeof atob) {
+    if ("function" === typeof atob) {
         return base64ToUint8ArrayAtoB(base64).buffer;
     }
-    return nodeBufferToArrayBuffer(buffer_1.Buffer.from(base64, 'base64'));
+    return nodeBufferToArrayBuffer(buffer_1.Buffer.from(base64, "base64"));
 }
 base64ToArrayBuffer.__type = ['base64', 'base64ToArrayBuffer', 'P&2!_/"'];
 /**
@@ -110,11 +104,11 @@ function typedArrayToBuffer(typedArray) {
 }
 typedArrayToBuffer.__type = [() => __ΩTypedArray, 'typedArray', () => buffer_1.Buffer, 'typedArrayToBuffer', 'Pn!2"P7#/$'];
 function arrayBufferToBase64(arrayBuffer) {
-    return buffer_1.Buffer.from(arrayBuffer).toString('base64');
+    return buffer_1.Buffer.from(arrayBuffer).toString("base64");
 }
 arrayBufferToBase64.__type = ['arrayBuffer', 'arrayBufferToBase64', 'P_2!&/"'];
 function typedArrayToBase64(typedArray) {
-    return typedArrayToBuffer(typedArray).toString('base64');
+    return typedArrayToBuffer(typedArray).toString("base64");
 }
 typedArrayToBase64.__type = [() => __ΩTypedArray, 'typedArray', 'typedArrayToBase64', 'Pn!2"&/#'];
 /**
diff --git a/dist/cjs/src/core.js.map b/dist/cjs/src/core.js.map
index 565e81a72941557c6e0903c7fd0fc1629aab8f8a..451a0d449c7f1c8974418ca838076c351cb23dc9 100644
--- a/dist/cjs/src/core.js.map
+++ b/dist/cjs/src/core.js.map
@@ -1 +1 @@
-{"version":3,"file":"core.js","sourceRoot":"","sources":["../../../src/core.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"core.js","sourceRoot":"","sources":["../../../src/core.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/src/default.d.ts b/dist/cjs/src/default.d.ts
index 302e08e9edd71bb44e18d8d7071c61842d5162a0..9a2c9f096e7189e69130d5c9a154abf56e56d371 100644
--- a/dist/cjs/src/default.d.ts
+++ b/dist/cjs/src/default.d.ts
@@ -1,4 +1,4 @@
-import { Type } from './reflection/type.js';
+import { Type } from "./reflection/type.js";
 /**
  * Returns a sensible default value for a given type.
  * Sensible means it satisfies the type checker, but not necessarily attached validators.
diff --git a/dist/cjs/src/default.js b/dist/cjs/src/default.js
index 4943ad88767a5be1dfefb7b2c4d76d781a92ad95..a2645a18853f3051cbf17f3f3fd116dc7acbfcb0 100644
--- a/dist/cjs/src/default.js
+++ b/dist/cjs/src/default.js
@@ -17,7 +17,7 @@ function defaultValue(type) {
         case type_js_1.ReflectionKind.null:
             return null;
         case type_js_1.ReflectionKind.string:
-            return '';
+            return "";
         case type_js_1.ReflectionKind.number:
             return 0;
         case type_js_1.ReflectionKind.boolean:
@@ -66,28 +66,34 @@ function defaultValue(type) {
             const types = (0, type_js_1.resolveTypeMembers)(type);
             for (const type of types) {
                 if (type.kind === type_js_1.ReflectionKind.propertySignature) {
-                    if (type.optional)
+                    if (type.optional) {
                         continue;
+                    }
                     result[type.name] = defaultValue(type.type);
                 }
             }
             return result;
         }
         case type_js_1.ReflectionKind.class: {
-            if (type.classType === Date)
-                return new Date;
-            if (type.classType === Set)
-                return new Set;
-            if (type.classType === Map)
-                return new Map;
-            if (type_js_1.binaryTypes.includes(type.classType))
-                return new type.classType;
+            if (type.classType === Date) {
+                return new Date();
+            }
+            if (type.classType === Set) {
+                return new Set();
+            }
+            if (type.classType === Map) {
+                return new Map();
+            }
+            if (type_js_1.binaryTypes.includes(type.classType)) {
+                return new type.classType();
+            }
             const result = {};
             const types = (0, type_js_1.resolveTypeMembers)(type);
             for (const type of types) {
                 if (type.kind === type_js_1.ReflectionKind.property) {
-                    if (type.optional)
+                    if (type.optional) {
                         continue;
+                    }
                     result[type.name] = defaultValue(type.type);
                 }
             }
diff --git a/dist/cjs/src/default.js.map b/dist/cjs/src/default.js.map
index 43b8bcfe4455a3d306ff81d51679dee0dbff3c4c..d9c5e646cd30c45d49ddd4af3b79d63f8ccd21c3 100644
--- a/dist/cjs/src/default.js.map
+++ b/dist/cjs/src/default.js.map
@@ -1 +1 @@
-{"version":3,"file":"default.js","sourceRoot":"","sources":["../../../src/default.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"default.js","sourceRoot":"","sources":["../../../src/default.ts"],"names":[],"mappings":";;AAWA,oCAgGC;AA3GD,kDAK8B;AAE9B;;;GAGG;AACH,SAAgB,YAAY,CAAC,IAAU;IACrC,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;QAClB,KAAK,wBAAc,CAAC,IAAI,CAAC;QACzB,KAAK,wBAAc,CAAC,GAAG,CAAC;QACxB,KAAK,wBAAc,CAAC,KAAK,CAAC;QAC1B,KAAK,wBAAc,CAAC,OAAO,CAAC;QAC5B,KAAK,wBAAc,CAAC,SAAS;YAC3B,OAAO,SAAS,CAAC;QACnB,KAAK,wBAAc,CAAC,IAAI;YACtB,OAAO,IAAI,CAAC;QACd,KAAK,wBAAc,CAAC,MAAM;YACxB,OAAO,EAAE,CAAC;QACZ,KAAK,wBAAc,CAAC,MAAM;YACxB,OAAO,CAAC,CAAC;QACX,KAAK,wBAAc,CAAC,OAAO;YACzB,OAAO,KAAK,CAAC;QACf,KAAK,wBAAc,CAAC,MAAM;YACxB,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;QACnB,KAAK,wBAAc,CAAC,MAAM;YACxB,OAAO,EAAE,CAAC;QACZ,KAAK,wBAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM;gBAAE,OAAO,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM;QACR,CAAC;QACD,KAAK,wBAAc,CAAC,OAAO;YACzB,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,KAAK,wBAAc,CAAC,KAAK;YACvB,OAAO,EAAE,CAAC;QACZ,KAAK,wBAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACnC,CAAC;QACD,KAAK,wBAAc,CAAC,WAAW,CAAC,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAC1B,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;QACD,KAAK,wBAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,MAAM,MAAM,GAAU,EAAE,CAAC;YACzB,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBAC7B,MAAM,KAAK,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;gBAChC,IAAI,KAAK,KAAK,SAAS;oBAAE,SAAS;gBAClC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,IAAI,EAAE,CAAC;oBAC1C,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;gBACxB,CAAC;qBAAM,CAAC;oBACN,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC;YACH,CAAC;YAED,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,KAAK,wBAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC;QACD,KAAK,wBAAc,CAAC,aAAa,CAAC,CAAC,CAAC;YAClC,MAAM,MAAM,GAAQ,EAAE,CAAC;YACvB,MAAM,KAAK,GAAG,IAAA,4BAAkB,EAAC,IAAI,CAAC,CAAC;YACvC,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;gBACzB,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,iBAAiB,EAAE,CAAC;oBACnD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAClB,SAAS;oBACX,CAAC;oBAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9C,CAAC;YACH,CAAC;YAED,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,KAAK,wBAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE,CAAC;gBAC5B,OAAO,IAAI,IAAI,EAAE,CAAC;YACpB,CAAC;YACD,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,EAAE,CAAC;gBAC3B,OAAO,IAAI,GAAG,EAAE,CAAC;YACnB,CAAC;YACD,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,EAAE,CAAC;gBAC3B,OAAO,IAAI,GAAG,EAAE,CAAC;YACnB,CAAC;YACD,IAAI,qBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;gBACzC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YAC9B,CAAC;YAED,MAAM,MAAM,GAAQ,EAAE,CAAC;YACvB,MAAM,KAAK,GAAG,IAAA,4BAAkB,EAAC,IAAI,CAAC,CAAC;YACvC,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;gBACzB,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,QAAQ,EAAE,CAAC;oBAC1C,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAClB,SAAS;oBACX,CAAC;oBAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9C,CAAC;YACH,CAAC;YAED,OAAO,MAAM,CAAC;QAChB,CAAC;IACH,CAAC;AACH,CAAC"}
\ No newline at end of file
diff --git a/dist/cjs/src/reflection/processor.d.ts b/dist/cjs/src/reflection/processor.d.ts
index 1cf6e4d91f5a176d6dfc4281b3c1f8aa043f984f..9874f1da5856426846d0c726ec9043e646f99502 100644
--- a/dist/cjs/src/reflection/processor.d.ts
+++ b/dist/cjs/src/reflection/processor.d.ts
@@ -1,6 +1,6 @@
-import { Type } from './type.js';
-import { ReflectionOp } from '@deepkit/type-spec';
-import { ClassType } from '@deepkit/core';
+import { ClassType } from "@deepkit/core";
+import { ReflectionOp } from "@deepkit/type-spec";
+import { Type } from "./type.js";
 export type RuntimeStackEntry = Type | Object | (() => ClassType | Object) | string | number | boolean | bigint;
 export type Packed = (RuntimeStackEntry | string)[] & {
     __is?: (data: any) => boolean;
diff --git a/dist/cjs/src/reflection/processor.js b/dist/cjs/src/reflection/processor.js
index ea768f53a1bcd30b36d981ebe7995a21a1739633..b14936d76ee850d85a71d857abcbb84f17aa98f1 100644
--- a/dist/cjs/src/reflection/processor.js
+++ b/dist/cjs/src/reflection/processor.js
@@ -17,19 +17,19 @@ const __ΩIteratorResult = ['T', 'TReturn', () => __ΩIteratorYieldResult, () =>
 const __ΩIteratorYieldResult = ['TYield', false, 'done', 'value', 'IteratorYieldResult', 'b!P."4#8e"!4$Mw%y'];
 const __ΩIteratorReturnResult = ['TReturn', true, 'done', 'value', 'IteratorReturnResult', 'b!P."4#e"!4$Mw%y'];
 /*@ts-ignore*/
-const { __ΩClassType } = require('@deepkit/core');
+const { __ΩClassType } = require("@deepkit/core");
 /*@ts-ignore*/
-const { __ΩTypeClass } = require('./type.js');
+const { __ΩTypeClass } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩTypePropertySignature } = require('./type.js');
+const { __ΩTypePropertySignature } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩTypeMethodSignature } = require('./type.js');
+const { __ΩTypeMethodSignature } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩTypeObjectLiteral } = require('./type.js');
+const { __ΩTypeObjectLiteral } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩTypeIndexSignature } = require('./type.js');
+const { __ΩTypeIndexSignature } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩTypeCallSignature } = require('./type.js');
+const { __ΩTypeCallSignature } = require("./type.js");
 function __assignType(fn, args) {
     fn.__type = args;
     return fn;
@@ -43,14 +43,14 @@ function __assignType(fn, args) {
  *
  * You should have received a copy of the MIT License along with this program.
  */
-const type_js_1 = require("./type.js");
-const type_spec_1 = require("@deepkit/type-spec");
-const extends_js_1 = require("./extends.js");
 const core_1 = require("@deepkit/core");
+const type_spec_1 = require("@deepkit/type-spec");
+const debug_js_1 = require("../debug.js");
 const decorator_js_1 = require("../decorator.js");
+const extends_js_1 = require("./extends.js");
 const reflection_js_1 = require("./reflection.js");
 const state_js_1 = require("./state.js");
-const debug_js_1 = require("../debug.js");
+const type_js_1 = require("./type.js");
 const __ΩRuntimeStackEntry = ['Type', () => __ΩObject, () => __ΩClassType, () => __ΩObject, '', 'RuntimeStackEntry', 'P"w!n"PPn#n$J/%&\')*Jw&y'];
 exports.__ΩRuntimeStackEntry = __ΩRuntimeStackEntry;
 const __ΩPacked = [() => __ΩRuntimeStackEntry, 'data', '', '__is', 'Type', '__type', () => PackStruct, '__unpack', 'Packed', 'PPn!&JFPP"2")/#4$8MP"w%4&8MPP7\'4(8MKw)y'];
@@ -70,7 +70,7 @@ function unpackOps(decodedOps, encodedOPs) {
 }
 unpackOps.__type = ['ReflectionOp', 'decodedOps', 'encodedOPs', 'unpackOps', 'P"w!F2"&2#$/$'];
 function encodeOps(ops) {
-    return ops.map(__assignType(v => String.fromCharCode(v + 33), ['v', '', 'P"2!"/"'])).join('');
+    return ops.map(__assignType(v => String.fromCharCode(v + 33), ['v', '', 'P"2!"/"'])).join("");
 }
 encodeOps.__type = ['ReflectionOp', 'ops', 'encodeOps', 'P"w!F2"&/#'];
 /**
@@ -91,7 +91,7 @@ function unpack(pack) {
     const ops = [];
     const encodedOPs = pack[pack.length - 1];
     //the end has always to be a string
-    if ('string' !== typeof encodedOPs)
+    if ("string" !== typeof encodedOPs)
         return { ops: [], stack: [] };
     unpackOps(ops, encodedOPs);
     return { ops, stack: pack.length > 1 ? pack.slice(0, -1) : [] };
@@ -115,7 +115,7 @@ function resolveRuntimeType(o, args = [], options) {
     if ((0, type_js_1.isType)(type)) {
         return type;
     }
-    throw new Error('No type returned from runtime type program');
+    throw new Error("No type returned from runtime type program");
 }
 resolveRuntimeType.__type = [() => __ΩClassType, () => Function, () => __ΩPacked, 'o', 'args', () => [], () => __ΩReflectOptions, 'options', 'Type', 'resolveRuntimeType', 'PPn!Pu"n#"J2$"F2%>&n\'2(8"w)/*'];
 const __ΩFrame = ['index', 'startIndex', 'variables', () => __ΩRuntimeStackEntry, 'inputs', 0, 'previous', () => Loop, 'mappedType', () => Loop, 'distributiveLoop', 'Frame', 'P\'4!\'4"\'4#n$F4%n&4\'8P7(4)8P7*4+8Mw,y'];
@@ -143,12 +143,14 @@ function assignResult(ref, result, assignParents) {
         // if (ref.kind === ReflectionKind.class && ref.arguments) {
         //     for (const member of ref.arguments) member.parent = ref;
         // }
-        if (ref.kind === type_js_1.ReflectionKind.function || ref.kind === type_js_1.ReflectionKind.method || ref.kind === type_js_1.ReflectionKind.methodSignature) {
+        if (ref.kind === type_js_1.ReflectionKind.function ||
+            ref.kind === type_js_1.ReflectionKind.method ||
+            ref.kind === type_js_1.ReflectionKind.methodSignature) {
             ref.return.parent = ref;
             for (const member of ref.parameters)
                 member.parent = ref;
         }
-        if ('types' in ref) {
+        if ("types" in ref) {
             for (const member of ref.types) {
                 member.parent = ref;
             }
@@ -158,7 +160,7 @@ function assignResult(ref, result, assignParents) {
 }
 assignResult.__type = ['Type', 'ref', 'result', 'assignParents', 'assignResult', 'P"w!2""2#)2$"/%'];
 function isConditionTruthy(condition) {
-    if ('number' === typeof condition)
+    if ("number" === typeof condition)
         return condition !== 0;
     return !!(condition.kind === type_js_1.ReflectionKind.literal && condition.literal);
 }
@@ -166,7 +168,13 @@ isConditionTruthy.__type = ['Type', 'condition', 'isConditionTruthy', 'PP"w!\'J2
 function createProgram(options, inputs) {
     const program = {
         active: true,
-        frame: { index: 0, startIndex: -1, inputs: inputs || [], variables: 0, previous: undefined },
+        frame: {
+            index: 0,
+            startIndex: -1,
+            inputs: inputs || [],
+            variables: 0,
+            previous: undefined
+        },
         stack: options.stack || [],
         stackPointer: options.stackPointer ?? -1,
         program: 0,
@@ -180,7 +188,7 @@ function createProgram(options, inputs) {
         // resultTypes: [],
         // typeParameters: [],
         // previous: undefined,
-        object: options.object,
+        object: options.object
     };
     if (options.initialStack)
         for (let i = 0; i < options.initialStack.length; i++) {
@@ -191,7 +199,9 @@ function createProgram(options, inputs) {
                 program.stack.push(options.initialStack[i]);
             }
         }
-    program.stackPointer = options.initialStack ? options.initialStack.length - 1 : -1;
+    program.stackPointer = options.initialStack
+        ? options.initialStack.length - 1
+        : -1;
     program.frame.startIndex = program.stackPointer;
     return program;
 }
@@ -203,7 +213,8 @@ function isValidCacheEntry(current, object, inputs = []) {
         let sameInputs = current.inputs.length === inputs.length;
         if (sameInputs) {
             for (let i = 0; i < current.inputs.length; i++) {
-                if (!inputs[i] || !(0, type_js_1.isSameType)(current.inputs[i], inputs[i])) {
+                if (!inputs[i] ||
+                    !(0, type_js_1.isSameType)(current.inputs[i], inputs[i])) {
                     sameInputs = false;
                     break;
                 }
@@ -229,7 +240,8 @@ function findExistingProgram(current, object, inputs = []) {
             let sameInputs = current.inputs.length === inputs.length;
             if (sameInputs) {
                 for (let i = 0; i < current.inputs.length; i++) {
-                    if (!inputs[i] || !(0, type_js_1.isSameType)(current.inputs[i], inputs[i])) {
+                    if (!inputs[i] ||
+                        !(0, type_js_1.isSameType)(current.inputs[i], inputs[i])) {
                         sameInputs = false;
                         break;
                     }
@@ -275,13 +287,13 @@ class Processor {
             inputs: [],
             end: 0,
             ops: [],
-            started: 0,
+            started: 0
             // previous: undefined,
             // object: undefined,
         };
     }
     static get() {
-        return Processor.typeProcessor || (Processor.typeProcessor = new Processor());
+        return (Processor.typeProcessor || (Processor.typeProcessor = new Processor()));
     }
     reflect(object, inputs = [], options = {}) {
         const start = Date.now();
@@ -299,8 +311,10 @@ class Processor {
                 //functions without any type annotations do not have the overhead of an assigned __type
                 return {
                     kind: type_js_1.ReflectionKind.function,
-                    function: object, name: object.name,
-                    parameters: [], return: { kind: type_js_1.ReflectionKind.any },
+                    function: object,
+                    name: object.name,
+                    parameters: [],
+                    return: { kind: type_js_1.ReflectionKind.any }
                 };
             }
             throw new Error(`No valid runtime type for ${(0, core_1.stringifyValueWithType)(object)} given. Is @deepkit/type-compiler correctly installed? Execute deepkit-type-install to check`);
@@ -324,7 +338,9 @@ class Processor {
         //We cache only direct non-generic (inputs empty) types passed to typeOf<>() or resolveRuntimeType(). all other reflect() calls do not use this cache.
         //make sure the same type is returned if already known.
         //packed.length === 0 for deserialized TypeClass with reconstructed classes.
-        if ((options.reuseCached || packed.length === 0) && packed.__type && inputs.length === 0) {
+        if ((options.reuseCached || packed.length === 0) &&
+            packed.__type &&
+            inputs.length === 0) {
             return packed.__type;
         }
         //all computed types should be cached until the program terminates, otherwise a lot of types will be computed
@@ -334,7 +350,9 @@ class Processor {
         for (const cache of this.cache) {
             if (isValidCacheEntry(cache, object, inputs)) {
                 //if program is still active, create new ref otherwise copy computed type
-                const result = cache.active ? createRef(cache) : (0, type_js_1.copyAndSetParent)(cache.resultType);
+                const result = cache.active
+                    ? createRef(cache)
+                    : (0, type_js_1.copyAndSetParent)(cache.resultType);
                 result.typeName || (result.typeName = options.typeName);
                 return result;
             }
@@ -348,7 +366,7 @@ class Processor {
             return result;
         }
         // process.stdout.write(`${options.reuseCached} Cache miss ${stringifyValueWithType(object)}(...${inputs.length})\n`);
-        const pack = packed.__unpack || (packed.__unpack = unpack(packed));
+        const pack = (packed.__unpack || (packed.__unpack = unpack(packed)));
         const program = createProgram({ ops: pack.ops, initialStack: pack.stack, object }, inputs);
         const type = this.runProgram(program);
         type.typeName || (type.typeName = options.typeName);
@@ -444,7 +462,10 @@ class Processor {
                         break;
                     case type_spec_1.ReflectionOp.literal: {
                         const ref = this.eatParameter();
-                        this.pushType({ kind: type_js_1.ReflectionKind.literal, literal: program.stack[ref] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.literal,
+                            literal: program.stack[ref]
+                        });
                         break;
                     }
                     case type_spec_1.ReflectionOp.templateLiteral: {
@@ -452,56 +473,107 @@ class Processor {
                         break;
                     }
                     case type_spec_1.ReflectionOp.date:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: Date, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Date,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.uint8Array:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: Uint8Array, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Uint8Array,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.int8Array:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: Int8Array, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Int8Array,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.uint8ClampedArray:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: Uint8ClampedArray, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Uint8ClampedArray,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.uint16Array:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: Uint16Array, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Uint16Array,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.int16Array:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: Int16Array, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Int16Array,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.uint32Array:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: Uint32Array, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Uint32Array,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.int32Array:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: Int32Array, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Int32Array,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.float32Array:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: Float32Array, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Float32Array,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.float64Array:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: Float64Array, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Float64Array,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.bigInt64Array:
                         this.pushType({
                             kind: type_js_1.ReflectionKind.class,
-                            classType: 'undefined' !== typeof BigInt64Array ? BigInt64Array : class BigInt64ArrayNotAvailable {
-                            },
-                            types: [],
+                            classType: "undefined" !== typeof BigInt64Array
+                                ? BigInt64Array
+                                : class BigInt64ArrayNotAvailable {
+                                },
+                            types: []
                         });
                         break;
                     case type_spec_1.ReflectionOp.arrayBuffer:
-                        this.pushType({ kind: type_js_1.ReflectionKind.class, classType: ArrayBuffer, types: [] });
+                        this.pushType({
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: ArrayBuffer,
+                            types: []
+                        });
                         break;
                     case type_spec_1.ReflectionOp.class: {
                         const types = this.popFrame();
-                        let t = { kind: type_js_1.ReflectionKind.class, id: state_js_1.state.nominalId++, classType: Object, types: [] };
+                        let t = {
+                            kind: type_js_1.ReflectionKind.class,
+                            id: state_js_1.state.nominalId++,
+                            classType: Object,
+                            types: []
+                        };
                         function add(member) {
                             if (member.kind === type_js_1.ReflectionKind.propertySignature) {
                                 member = {
                                     ...member,
                                     parent: t,
                                     visibility: type_js_1.ReflectionVisibility.public,
-                                    kind: type_js_1.ReflectionKind.property,
+                                    kind: type_js_1.ReflectionKind.property
                                 };
                             }
                             else if (member.kind === type_js_1.ReflectionKind.methodSignature) {
@@ -509,7 +581,7 @@ class Processor {
                                     ...member,
                                     parent: t,
                                     visibility: type_js_1.ReflectionVisibility.public,
-                                    kind: type_js_1.ReflectionKind.method,
+                                    kind: type_js_1.ReflectionKind.method
                                 };
                             }
                             switch (member.kind) {
@@ -520,26 +592,32 @@ class Processor {
                                 }
                                 case type_js_1.ReflectionKind.property:
                                 case type_js_1.ReflectionKind.method: {
-                                    const existing = t.types.findIndex(v => (v.kind === type_js_1.ReflectionKind.property || v.kind === type_js_1.ReflectionKind.method) && v.name === member.name);
+                                    const existing = t.types.findIndex(v => (v.kind === type_js_1.ReflectionKind.property ||
+                                        v.kind === type_js_1.ReflectionKind.method) &&
+                                        v.name === member.name);
                                     if (existing !== -1) {
                                         //remove entry, since we replace it
                                         t.types.splice(existing, 1);
                                     }
                                     t.types.push(member);
-                                    if (member.kind === type_js_1.ReflectionKind.method && member.name === 'constructor') {
+                                    if (member.kind === type_js_1.ReflectionKind.method &&
+                                        member.name === "constructor") {
                                         for (const parameter of member.parameters) {
-                                            if (parameter.visibility !== undefined || parameter.readonly) {
+                                            if (parameter.visibility !== undefined ||
+                                                parameter.readonly) {
                                                 const property = {
                                                     kind: type_js_1.ReflectionKind.property,
                                                     name: parameter.name,
                                                     visibility: parameter.visibility,
                                                     default: parameter.default,
-                                                    type: parameter.type,
+                                                    type: parameter.type
                                                 };
-                                                if (parameter.optional)
+                                                if (parameter.optional) {
                                                     property.optional = true;
-                                                if (parameter.readonly)
+                                                }
+                                                if (parameter.readonly) {
                                                     property.readonly = true;
+                                                }
                                                 parameter.type.parent = property;
                                                 add(property);
                                             }
@@ -599,12 +677,18 @@ class Processor {
                         for (let i = 0; i < argsNumber; i++) {
                             types.push(this.pop());
                         }
-                        program.stack[program.stackPointer].implements = types;
+                        program.stack[program.stackPointer].implements =
+                            types;
                         break;
                     }
                     case type_spec_1.ReflectionOp.parameter: {
                         const ref = this.eatParameter();
-                        const t = { kind: type_js_1.ReflectionKind.parameter, parent: undefined, name: program.stack[ref], type: this.pop() };
+                        const t = {
+                            kind: type_js_1.ReflectionKind.parameter,
+                            parent: undefined,
+                            name: program.stack[ref],
+                            type: this.pop()
+                        };
                         t.type.parent = t;
                         this.pushType(t);
                         break;
@@ -620,16 +704,31 @@ class Processor {
                         }
                         if (!classOrFunction.__type) {
                             if (op === type_spec_1.ReflectionOp.classReference) {
-                                this.pushType({ kind: type_js_1.ReflectionKind.class, classType: classOrFunction, typeArguments: inputs, types: [] });
+                                this.pushType({
+                                    kind: type_js_1.ReflectionKind.class,
+                                    classType: classOrFunction,
+                                    typeArguments: inputs,
+                                    types: []
+                                });
                             }
                             else if (op === type_spec_1.ReflectionOp.functionReference) {
-                                this.pushType({ kind: type_js_1.ReflectionKind.function, function: classOrFunction, parameters: [], return: { kind: type_js_1.ReflectionKind.unknown } });
+                                this.pushType({
+                                    kind: type_js_1.ReflectionKind.function,
+                                    function: classOrFunction,
+                                    parameters: [],
+                                    return: { kind: type_js_1.ReflectionKind.unknown }
+                                });
                             }
                         }
                         else {
                             //when it's just a simple reference resolution like typeOf<Class>() then enable cache re-use (so always the same type is returned)
-                            const directReference = !!(this.isEnded() && program.previous && program.previous.end === 0);
-                            const result = this.reflect(classOrFunction, inputs, { inline: !directReference, reuseCached: directReference });
+                            const directReference = !!(this.isEnded() &&
+                                program.previous &&
+                                program.previous.end === 0);
+                            const result = this.reflect(classOrFunction, inputs, {
+                                inline: !directReference,
+                                reuseCached: directReference
+                            });
                             if (directReference)
                                 program.directReturn = true;
                             this.push(result, program);
@@ -653,10 +752,12 @@ class Processor {
                         const enumType = {};
                         let i = 0;
                         for (const type of types) {
-                            if (type.default) {
-                                const v = type.default();
+                            if (type.default !== undefined) {
+                                const v = typeof type.default === "function"
+                                    ? type.default()
+                                    : type.default;
                                 enumType[type.name] = v;
-                                if ('number' === typeof v) {
+                                if ("number" === typeof v) {
                                     i = v + 1;
                                 }
                             }
@@ -665,7 +766,12 @@ class Processor {
                             }
                         }
                         const values = Object.values(enumType);
-                        const t = { kind: type_js_1.ReflectionKind.enum, enum: enumType, values, indexType: getEnumType(values) };
+                        const t = {
+                            kind: type_js_1.ReflectionKind.enum,
+                            enum: enumType,
+                            values,
+                            indexType: getEnumType(values)
+                        };
                         this.pushType(t);
                         break;
                     }
@@ -674,7 +780,7 @@ class Processor {
                         this.pushType({
                             kind: type_js_1.ReflectionKind.enumMember,
                             parent: undefined,
-                            name: (0, core_1.isFunction)(name) ? name() : name,
+                            name: (0, core_1.isFunction)(name) ? name() : name
                         });
                         break;
                     }
@@ -684,8 +790,9 @@ class Processor {
                     }
                     case type_spec_1.ReflectionOp.tupleMember: {
                         const t = {
-                            kind: type_js_1.ReflectionKind.tupleMember, type: this.pop(),
-                            parent: undefined,
+                            kind: type_js_1.ReflectionKind.tupleMember,
+                            type: this.pop(),
+                            parent: undefined
                         };
                         t.type.parent = t;
                         this.pushType(t);
@@ -694,9 +801,10 @@ class Processor {
                     case type_spec_1.ReflectionOp.namedTupleMember: {
                         const name = program.stack[this.eatParameter()];
                         const t = {
-                            kind: type_js_1.ReflectionKind.tupleMember, type: this.pop(),
+                            kind: type_js_1.ReflectionKind.tupleMember,
+                            type: this.pop(),
                             parent: undefined,
-                            name: (0, core_1.isFunction)(name) ? name() : name,
+                            name: (0, core_1.isFunction)(name) ? name() : name
                         };
                         t.type.parent = t;
                         this.pushType(t);
@@ -706,7 +814,7 @@ class Processor {
                         const t = {
                             kind: type_js_1.ReflectionKind.rest,
                             parent: undefined,
-                            type: this.pop(),
+                            type: this.pop()
                         };
                         t.type.parent = t;
                         this.pushType(t);
@@ -729,8 +837,14 @@ class Processor {
                         }
                         if (type === undefined) {
                             //generic not instantiated
-                            program.typeParameters.push({ kind: type_js_1.ReflectionKind.any, typeParameter: true });
-                            this.pushType({ kind: type_js_1.ReflectionKind.typeParameter, name: program.stack[nameRef] });
+                            program.typeParameters.push({
+                                kind: type_js_1.ReflectionKind.any,
+                                typeParameter: true
+                            });
+                            this.pushType({
+                                kind: type_js_1.ReflectionKind.typeParameter,
+                                name: program.stack[nameRef]
+                            });
                         }
                         else {
                             program.typeParameters.push(type);
@@ -739,7 +853,12 @@ class Processor {
                         break;
                     }
                     case type_spec_1.ReflectionOp.set: {
-                        const t = { kind: type_js_1.ReflectionKind.class, classType: Set, arguments: [this.pop()], types: [] };
+                        const t = {
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Set,
+                            arguments: [this.pop()],
+                            types: []
+                        };
                         t.arguments[0].parent = t;
                         this.pushType(t);
                         break;
@@ -747,7 +866,12 @@ class Processor {
                     case type_spec_1.ReflectionOp.map: {
                         const value = this.pop();
                         const key = this.pop();
-                        const t = { kind: type_js_1.ReflectionKind.class, classType: Map, arguments: [key, value], types: [] };
+                        const t = {
+                            kind: type_js_1.ReflectionKind.class,
+                            classType: Map,
+                            arguments: [key, value],
+                            types: []
+                        };
                         t.arguments[0].parent = t;
                         t.arguments[1].parent = t;
                         this.pushType(t);
@@ -763,7 +887,10 @@ class Processor {
                     case type_spec_1.ReflectionOp.union: {
                         const types = this.popFrame();
                         const flattened = (0, type_js_1.flattenUnionTypes)(types);
-                        const t = (0, type_js_1.unboxUnion)({ kind: type_js_1.ReflectionKind.union, types: flattened });
+                        const t = (0, type_js_1.unboxUnion)({
+                            kind: type_js_1.ReflectionKind.union,
+                            types: flattened
+                        });
                         if (t.kind === type_js_1.ReflectionKind.union) {
                             for (const member of t.types) {
                                 member.parent = t;
@@ -782,20 +909,24 @@ class Processor {
                     case type_spec_1.ReflectionOp.function: {
                         const types = this.popFrame();
                         let name = program.stack[this.eatParameter()];
-                        const returnType = types.length > 0 ? types[types.length - 1] : { kind: type_js_1.ReflectionKind.any };
+                        const returnType = types.length > 0
+                            ? types[types.length - 1]
+                            : { kind: type_js_1.ReflectionKind.any };
                         const parameters = types.length > 1 ? types.slice(0, -1) : [];
                         if ((0, core_1.isFunction)(name))
                             name = name();
-                        let t = op === type_spec_1.ReflectionOp.callSignature ? {
-                            kind: type_js_1.ReflectionKind.callSignature,
-                            return: returnType,
-                            parameters,
-                        } : {
-                            kind: type_js_1.ReflectionKind.function,
-                            name: name || undefined,
-                            return: returnType,
-                            parameters,
-                        };
+                        let t = op === type_spec_1.ReflectionOp.callSignature
+                            ? {
+                                kind: type_js_1.ReflectionKind.callSignature,
+                                return: returnType,
+                                parameters
+                            }
+                            : {
+                                kind: type_js_1.ReflectionKind.function,
+                                name: name || undefined,
+                                return: returnType,
+                                parameters
+                            };
                         t.return.parent = t;
                         for (const member of t.parameters)
                             member.parent = t;
@@ -803,7 +934,10 @@ class Processor {
                         break;
                     }
                     case type_spec_1.ReflectionOp.array: {
-                        const t = { kind: type_js_1.ReflectionKind.array, type: this.pop() };
+                        const t = {
+                            kind: type_js_1.ReflectionKind.array,
+                            type: this.pop()
+                        };
                         t.type.parent = t;
                         this.pushType(t);
                         break;
@@ -815,22 +949,26 @@ class Processor {
                         let isOptional = false;
                         if (type.kind === type_js_1.ReflectionKind.union && type.types.length === 2) {
                             const undefinedType = type.types.find(v => v.kind === type_js_1.ReflectionKind.undefined);
-                            const restType = type.types.find(v => v.kind !== type_js_1.ReflectionKind.null && v.kind !== type_js_1.ReflectionKind.undefined);
+                            const restType = type.types.find(v => v.kind !== type_js_1.ReflectionKind.null &&
+                                v.kind !== type_js_1.ReflectionKind.undefined);
                             if (restType && undefinedType) {
                                 type = restType;
                                 isOptional = true;
                             }
                         }
                         const property = {
-                            kind: op === type_spec_1.ReflectionOp.propertySignature ? type_js_1.ReflectionKind.propertySignature : type_js_1.ReflectionKind.property,
+                            kind: op === type_spec_1.ReflectionOp.propertySignature
+                                ? type_js_1.ReflectionKind.propertySignature
+                                : type_js_1.ReflectionKind.property,
                             type,
-                            name: (0, core_1.isFunction)(name) ? name() : name,
+                            name: (0, core_1.isFunction)(name) ? name() : name
                         };
                         if (isOptional) {
                             property.optional = true;
                         }
                         if (op === type_spec_1.ReflectionOp.property) {
-                            property.visibility = type_js_1.ReflectionVisibility.public;
+                            property.visibility =
+                                type_js_1.ReflectionVisibility.public;
                         }
                         property.type.parent = property;
                         this.pushType(property);
@@ -840,13 +978,28 @@ class Processor {
                     case type_spec_1.ReflectionOp.methodSignature: {
                         let name = program.stack[this.eatParameter()];
                         const types = this.popFrame();
-                        const returnType = types.length > 0 ? types[types.length - 1] : { kind: type_js_1.ReflectionKind.any };
+                        const returnType = types.length > 0
+                            ? types[types.length - 1]
+                            : { kind: type_js_1.ReflectionKind.any };
                         const parameters = types.length > 1 ? types.slice(0, -1) : [];
                         if ((0, core_1.isFunction)(name))
                             name = name();
                         let t = op === type_spec_1.ReflectionOp.method
-                            ? { kind: type_js_1.ReflectionKind.method, parent: undefined, visibility: type_js_1.ReflectionVisibility.public, name, return: returnType, parameters }
-                            : { kind: type_js_1.ReflectionKind.methodSignature, parent: undefined, name, return: returnType, parameters };
+                            ? {
+                                kind: type_js_1.ReflectionKind.method,
+                                parent: undefined,
+                                visibility: type_js_1.ReflectionVisibility.public,
+                                name,
+                                return: returnType,
+                                parameters
+                            }
+                            : {
+                                kind: type_js_1.ReflectionKind.methodSignature,
+                                parent: undefined,
+                                name,
+                                return: returnType,
+                                parameters
+                            };
                         t.return.parent = t;
                         for (const member of t.parameters)
                             member.parent = t;
@@ -857,34 +1010,50 @@ class Processor {
                         program.stack[program.stackPointer].optional = true;
                         break;
                     case type_spec_1.ReflectionOp.readonly:
-                        program.stack[program.stackPointer].readonly = true;
+                        program.stack[program.stackPointer].readonly =
+                            true;
                         break;
                     case type_spec_1.ReflectionOp.public:
-                        program.stack[program.stackPointer].visibility = type_js_1.ReflectionVisibility.public;
+                        program.stack[program.stackPointer].visibility =
+                            type_js_1.ReflectionVisibility.public;
                         break;
                     case type_spec_1.ReflectionOp.protected:
-                        program.stack[program.stackPointer].visibility = type_js_1.ReflectionVisibility.protected;
+                        program.stack[program.stackPointer].visibility =
+                            type_js_1.ReflectionVisibility.protected;
                         break;
                     case type_spec_1.ReflectionOp.private:
-                        program.stack[program.stackPointer].visibility = type_js_1.ReflectionVisibility.private;
+                        program.stack[program.stackPointer].visibility =
+                            type_js_1.ReflectionVisibility.private;
                         break;
                     case type_spec_1.ReflectionOp.abstract:
-                        program.stack[program.stackPointer].abstract = true;
+                        program.stack[program.stackPointer].abstract =
+                            true;
                         break;
                     case type_spec_1.ReflectionOp.static:
-                        program.stack[program.stackPointer].static = true;
+                        program.stack[program.stackPointer].static =
+                            true;
                         break;
                     case type_spec_1.ReflectionOp.defaultValue:
-                        program.stack[program.stackPointer].default = program.stack[this.eatParameter()];
+                        const stackDefaultValue = program.stack[program.stackPointer];
+                        stackDefaultValue.default =
+                            program.stack[this.eatParameter()];
                         break;
                     case type_spec_1.ReflectionOp.description:
-                        program.stack[program.stackPointer].description = program.stack[this.eatParameter()];
+                        const stackDescription = program.stack[program.stackPointer];
+                        stackDescription.description = program.stack[this.eatParameter()];
+                        break;
+                    case type_spec_1.ReflectionOp.tags:
+                        const stackTags = program.stack[program.stackPointer];
+                        stackTags.tags = program.stack[this.eatParameter()];
                         break;
                     case type_spec_1.ReflectionOp.typeName: {
                         const type = program.stack[program.stackPointer];
                         const name = program.stack[this.eatParameter()];
                         if (type.typeName) {
-                            type.originTypes = [{ typeName: type.typeName, typeArguments: type.typeArguments }, ...(type.originTypes || [])];
+                            type.originTypes = [
+                                { typeName: type.typeName, typeArguments: type.typeArguments },
+                                ...(type.originTypes || [])
+                            ];
                             type.typeArguments = undefined;
                         }
                         type.typeName = name;
@@ -893,7 +1062,12 @@ class Processor {
                     case type_spec_1.ReflectionOp.indexSignature: {
                         const type = this.pop();
                         const index = this.pop();
-                        const t = { kind: type_js_1.ReflectionKind.indexSignature, parent: undefined, index, type };
+                        const t = {
+                            kind: type_js_1.ReflectionKind.indexSignature,
+                            parent: undefined,
+                            index,
+                            type
+                        };
                         t.type.parent = t;
                         t.index.parent = t;
                         this.pushType(t);
@@ -903,7 +1077,7 @@ class Processor {
                         let t = {
                             kind: type_js_1.ReflectionKind.objectLiteral,
                             id: state_js_1.state.nominalId++,
-                            types: [],
+                            types: []
                         };
                         const frameTypes = this.popFrame();
                         pushObjectLiteralTypes(t, frameTypes);
@@ -925,7 +1099,9 @@ class Processor {
                         const left = this.pop();
                         const condition = this.pop();
                         this.popFrame();
-                        isConditionTruthy(condition) ? this.pushType(left) : this.pushType(right);
+                        isConditionTruthy(condition)
+                            ? this.pushType(left)
+                            : this.pushType(right);
                         break;
                     }
                     case type_spec_1.ReflectionOp.jumpCondition: {
@@ -942,19 +1118,28 @@ class Processor {
                         const frame = program.frame;
                         let last = { kind: type_js_1.ReflectionKind.unknown };
                         this.push({
-                            kind: type_js_1.ReflectionKind.infer, set: (type) => {
+                            kind: type_js_1.ReflectionKind.infer,
+                            set: (type) => {
                                 if (last.kind !== type_js_1.ReflectionKind.unknown) {
-                                    if (last.kind === type_js_1.ReflectionKind.union || last.kind === type_js_1.ReflectionKind.intersection) {
+                                    if (last.kind === type_js_1.ReflectionKind.union ||
+                                        last.kind === type_js_1.ReflectionKind.intersection) {
                                         if (!(0, type_js_1.isTypeIncluded)(last.types, type)) {
                                             last.types.push(type);
                                         }
                                     }
                                     else {
-                                        if (type.parent && type.parent.kind === type_js_1.ReflectionKind.parameter) {
-                                            last = { kind: type_js_1.ReflectionKind.intersection, types: [last, type] };
+                                        if (type.parent &&
+                                            type.parent.kind === type_js_1.ReflectionKind.parameter) {
+                                            last = {
+                                                kind: type_js_1.ReflectionKind.intersection,
+                                                types: [last, type]
+                                            };
                                         }
                                         else {
-                                            last = { kind: type_js_1.ReflectionKind.union, types: [last, type] };
+                                            last = {
+                                                kind: type_js_1.ReflectionKind.union,
+                                                types: [last, type]
+                                            };
                                         }
                                     }
                                 }
@@ -971,18 +1156,23 @@ class Processor {
                                     program.stack[frame.previous.previous.startIndex + 1 + stackEntryIndex] = last;
                                 }
                                 else if (frameOffset === 3) {
-                                    program.stack[frame.previous.previous.previous.startIndex + 1 + stackEntryIndex] = last;
+                                    program.stack[frame.previous.previous.previous.startIndex +
+                                        1 +
+                                        stackEntryIndex] = last;
                                 }
                                 else if (frameOffset === 4) {
-                                    program.stack[frame.previous.previous.previous.previous.startIndex + 1 + stackEntryIndex] = last;
+                                    program.stack[frame.previous.previous.previous.previous.startIndex +
+                                        1 +
+                                        stackEntryIndex] = last;
                                 }
                                 else {
                                     let current = frame;
                                     for (let i = 0; i < frameOffset; i++)
                                         current = current.previous;
-                                    program.stack[current.startIndex + 1 + stackEntryIndex] = last;
+                                    program.stack[current.startIndex + 1 + stackEntryIndex] =
+                                        last;
                                 }
-                            },
+                            }
                         });
                         break;
                     }
@@ -1039,13 +1229,20 @@ class Processor {
                             this.push(program.stack[program.frame.previous.startIndex + 1 + stackEntryIndex]);
                         }
                         else if (frameOffset === 2) {
-                            this.push(program.stack[program.frame.previous.previous.startIndex + 1 + stackEntryIndex]);
+                            this.push(program.stack[program.frame.previous.previous.startIndex +
+                                1 +
+                                stackEntryIndex]);
                         }
                         else if (frameOffset === 3) {
-                            this.push(program.stack[program.frame.previous.previous.previous.startIndex + 1 + stackEntryIndex]);
+                            this.push(program.stack[program.frame.previous.previous.previous.startIndex +
+                                1 +
+                                stackEntryIndex]);
                         }
                         else if (frameOffset === 4) {
-                            this.push(program.stack[program.frame.previous.previous.previous.previous.startIndex + 1 + stackEntryIndex]);
+                            this.push(program.stack[program.frame.previous.previous.previous.previous
+                                .startIndex +
+                                1 +
+                                stackEntryIndex]);
                         }
                         else {
                             let current = program.frame;
@@ -1062,7 +1259,10 @@ class Processor {
                         if (t instanceof reflection_js_1.ReflectionClass) {
                             this.push({ ...t.type, typeName: t.getClassName() });
                         }
-                        else if ('string' === typeof t || 'number' === typeof t || 'boolean' === typeof t || 'bigint' === typeof t) {
+                        else if ("string" === typeof t ||
+                            "number" === typeof t ||
+                            "boolean" === typeof t ||
+                            "bigint" === typeof t) {
                             this.push({ kind: type_js_1.ReflectionKind.literal, literal: t });
                         }
                         else {
@@ -1109,14 +1309,19 @@ class Processor {
                             (0, debug_js_1.debug)(`Failed runtime inlining of ${pOrFn.toString()}. Value is undefined, probably because of a circular reference or failed import.`);
                             this.push({ kind: type_js_1.ReflectionKind.unknown });
                         }
-                        else if ('number' === typeof p) {
+                        else if ("number" === typeof p) {
                             //self circular reference, usually a 0, which indicates we put the result of the current program as the type on the stack.
                             this.push(program.resultType);
                         }
                         else {
                             //when it's just a simple reference resolution like typeOf<Class>() then don't issue a new reference (no inline: true)
-                            const directReference = !!(this.isEnded() && program.previous && program.previous.end === 0);
-                            const result = this.reflect(p, [], { inline: !directReference, reuseCached: directReference });
+                            const directReference = !!(this.isEnded() &&
+                                program.previous &&
+                                program.previous.end === 0);
+                            const result = this.reflect(p, [], {
+                                inline: !directReference,
+                                reuseCached: directReference
+                            });
                             if (directReference)
                                 program.directReturn = true;
                             this.push(result, program);
@@ -1135,7 +1340,9 @@ class Processor {
                         const inputs = [];
                         for (let i = 0; i < argumentSize; i++) {
                             let input = this.pop();
-                            if ((input.kind === type_js_1.ReflectionKind.never || input.kind === type_js_1.ReflectionKind.unknown) && program.inputs[i])
+                            if ((input.kind === type_js_1.ReflectionKind.never ||
+                                input.kind === type_js_1.ReflectionKind.unknown) &&
+                                program.inputs[i])
                                 input = program.inputs[i];
                             inputs.unshift(input);
                         }
@@ -1145,7 +1352,7 @@ class Processor {
                             (0, debug_js_1.debug)(`Failed runtime inlining call of ${pOrFn.toString()}. Value is undefined, probably because of a circular reference or failed import.`);
                             this.push({ kind: type_js_1.ReflectionKind.unknown });
                         }
-                        else if ('number' === typeof p) {
+                        else if ("number" === typeof p) {
                             if (argumentSize === 0) {
                                 //self circular reference, usually a 0, which indicates we put the result of the current program as the type on the stack.
                                 this.push(program.resultType);
@@ -1160,7 +1367,7 @@ class Processor {
                                     //execute again the current program
                                     const nextProgram = createProgram({
                                         ops: program.ops,
-                                        initialStack: program.initialStack,
+                                        initialStack: program.initialStack
                                     }, inputs);
                                     this.push(this.runProgram(nextProgram), program);
                                     //continue to next this.program that was assigned by runProgram()
@@ -1193,7 +1400,8 @@ class Processor {
             // process.stdout.write(`Done ${program.depth} in ${Date.now() - program.started}ms with ${stringifyValueWithType(program.object)} -> ${stringifyShortResolvedType(result as Type)}\n`);
             if ((0, type_js_1.isType)(result)) {
                 if (program.object) {
-                    if (result.kind === type_js_1.ReflectionKind.class && result.classType === Object) {
+                    if (result.kind === type_js_1.ReflectionKind.class &&
+                        result.classType === Object) {
                         result.classType = program.object;
                         applyClassDecorators(result);
                     }
@@ -1226,11 +1434,13 @@ class Processor {
         const types = [];
         const stackTypes = this.popFrame();
         for (const type of stackTypes) {
-            const resolved = type.kind === type_js_1.ReflectionKind.tupleMember ? type : {
-                kind: type_js_1.ReflectionKind.tupleMember,
-                parent: undefined,
-                type,
-            };
+            const resolved = type.kind === type_js_1.ReflectionKind.tupleMember
+                ? type
+                : {
+                    kind: type_js_1.ReflectionKind.tupleMember,
+                    parent: undefined,
+                    type
+                };
             type.parent = resolved;
             if (resolved.type.kind === type_js_1.ReflectionKind.rest) {
                 if (resolved.type.type.kind === type_js_1.ReflectionKind.tuple) {
@@ -1270,10 +1480,19 @@ class Processor {
                 decorators.push(...a.decorators);
         }
         function handleUnion(a, unionType) {
-            if (a.kind === type_js_1.ReflectionKind.objectLiteral || a.kind === type_js_1.ReflectionKind.class) {
-                return (0, type_js_1.unboxUnion)({ kind: type_js_1.ReflectionKind.union, types: unionType.types.map(v => collapse(v, a)).filter(v => v.kind !== type_js_1.ReflectionKind.never) });
+            if (a.kind === type_js_1.ReflectionKind.objectLiteral ||
+                a.kind === type_js_1.ReflectionKind.class) {
+                return (0, type_js_1.unboxUnion)({
+                    kind: type_js_1.ReflectionKind.union,
+                    types: unionType.types
+                        .map(v => collapse(v, a))
+                        .filter(v => v.kind !== type_js_1.ReflectionKind.never)
+                });
             }
-            return (0, type_js_1.unboxUnion)({ kind: type_js_1.ReflectionKind.union, types: unionType.types.filter(v => (0, extends_js_1.isExtendable)(v, a)) });
+            return (0, type_js_1.unboxUnion)({
+                kind: type_js_1.ReflectionKind.union,
+                types: unionType.types.filter(v => (0, extends_js_1.isExtendable)(v, a))
+            });
         }
         function handleAndObject(a, objectType) {
             if (objectType.types.length === 0) {
@@ -1294,16 +1513,21 @@ class Processor {
             if (b.kind === type_js_1.ReflectionKind.union) {
                 return handleUnion(a, b);
             }
-            if ((a.kind === type_js_1.ReflectionKind.objectLiteral || a.kind === type_js_1.ReflectionKind.class) && (b.kind === type_js_1.ReflectionKind.objectLiteral || b.kind === type_js_1.ReflectionKind.class)) {
+            if ((a.kind === type_js_1.ReflectionKind.objectLiteral ||
+                a.kind === type_js_1.ReflectionKind.class) &&
+                (b.kind === type_js_1.ReflectionKind.objectLiteral ||
+                    b.kind === type_js_1.ReflectionKind.class)) {
                 appendAnnotations(a);
                 appendAnnotations(b);
                 return (0, type_js_1.merge)([a, b]);
             }
             // object & {then() ...}
-            if (a.kind === type_js_1.ReflectionKind.object && b.kind === type_js_1.ReflectionKind.objectLiteral) {
+            if (a.kind === type_js_1.ReflectionKind.object &&
+                b.kind === type_js_1.ReflectionKind.objectLiteral) {
                 return b;
             }
-            if (b.kind === type_js_1.ReflectionKind.object && a.kind === type_js_1.ReflectionKind.objectLiteral) {
+            if (b.kind === type_js_1.ReflectionKind.object &&
+                a.kind === type_js_1.ReflectionKind.objectLiteral) {
                 return a;
             }
             if ((0, type_js_1.isPrimitive)(a) && b.kind === type_js_1.ReflectionKind.objectLiteral) {
@@ -1330,7 +1554,10 @@ class Processor {
             if ((0, type_js_1.isPrimitive)(a) && (0, type_js_1.isPrimitive)(b) && a.kind !== b.kind) {
                 return { kind: type_js_1.ReflectionKind.never };
             }
-            if (a.kind === type_js_1.ReflectionKind.objectLiteral || a.kind === type_js_1.ReflectionKind.class || a.kind === type_js_1.ReflectionKind.never || a.kind === type_js_1.ReflectionKind.unknown)
+            if (a.kind === type_js_1.ReflectionKind.objectLiteral ||
+                a.kind === type_js_1.ReflectionKind.class ||
+                a.kind === type_js_1.ReflectionKind.never ||
+                a.kind === type_js_1.ReflectionKind.unknown)
                 return b;
             if (b.annotations) {
                 Object.assign(annotations, b.annotations);
@@ -1394,7 +1621,10 @@ class Processor {
         if (next === undefined) {
             //end
             const types = this.popFrame();
-            const result = { kind: type_js_1.ReflectionKind.union, types: (0, type_js_1.flattenUnionTypes)(types) };
+            const result = {
+                kind: type_js_1.ReflectionKind.union,
+                types: (0, type_js_1.flattenUnionTypes)(types)
+            };
             const t = (0, type_js_1.unboxUnion)(result);
             if (t.kind === type_js_1.ReflectionKind.union)
                 for (const member of t.types)
@@ -1415,34 +1645,71 @@ class Processor {
         else {
             const t = (0, type_js_1.indexAccess)(left, right);
             if ((0, type_js_1.isWithAnnotations)(t)) {
-                t.indexAccessOrigin = { container: left, index: right };
+                t.indexAccessOrigin = {
+                    container: left,
+                    index: right
+                };
             }
             this.push((0, type_js_1.copyAndSetParent)(t));
         }
     }
     handleKeyOf() {
         const type = this.pop();
-        if (type.kind === type_js_1.ReflectionKind.objectLiteral || type.kind === type_js_1.ReflectionKind.class) {
-            const union = { kind: type_js_1.ReflectionKind.union, origin: type, types: [] };
+        if (type.kind === type_js_1.ReflectionKind.objectLiteral ||
+            type.kind === type_js_1.ReflectionKind.class) {
+            const union = {
+                kind: type_js_1.ReflectionKind.union,
+                origin: type,
+                types: []
+            };
             for (const member of type.types) {
-                if ((member.kind === type_js_1.ReflectionKind.propertySignature || member.kind === type_js_1.ReflectionKind.property) && member.name !== 'new') {
-                    union.types.push({ kind: type_js_1.ReflectionKind.literal, literal: member.name, parent: union, origin: member });
+                if ((member.kind === type_js_1.ReflectionKind.propertySignature ||
+                    member.kind === type_js_1.ReflectionKind.property) &&
+                    member.name !== "new") {
+                    union.types.push({
+                        kind: type_js_1.ReflectionKind.literal,
+                        literal: member.name,
+                        parent: union,
+                        origin: member
+                    });
                 }
-                else if ((member.kind === type_js_1.ReflectionKind.methodSignature || member.kind === type_js_1.ReflectionKind.method) && member.name !== 'constructor') {
-                    union.types.push({ kind: type_js_1.ReflectionKind.literal, literal: member.name, parent: union, origin: member });
+                else if ((member.kind === type_js_1.ReflectionKind.methodSignature ||
+                    member.kind === type_js_1.ReflectionKind.method) &&
+                    member.name !== "constructor") {
+                    union.types.push({
+                        kind: type_js_1.ReflectionKind.literal,
+                        literal: member.name,
+                        parent: union,
+                        origin: member
+                    });
                 }
             }
             this.push(union);
         }
         else if (type.kind === type_js_1.ReflectionKind.tuple) {
-            const union = { kind: type_js_1.ReflectionKind.union, origin: type, types: [] };
+            const union = {
+                kind: type_js_1.ReflectionKind.union,
+                origin: type,
+                types: []
+            };
             for (let i = 0; i < type.types.length; i++) {
-                union.types.push({ kind: type_js_1.ReflectionKind.literal, literal: i, parent: union });
+                union.types.push({
+                    kind: type_js_1.ReflectionKind.literal,
+                    literal: i,
+                    parent: union
+                });
             }
             this.push(union);
         }
         else if (type.kind === type_js_1.ReflectionKind.any) {
-            this.push({ kind: type_js_1.ReflectionKind.union, types: [{ kind: type_js_1.ReflectionKind.string }, { kind: type_js_1.ReflectionKind.number }, { kind: type_js_1.ReflectionKind.symbol }] });
+            this.push({
+                kind: type_js_1.ReflectionKind.union,
+                types: [
+                    { kind: type_js_1.ReflectionKind.string },
+                    { kind: type_js_1.ReflectionKind.number },
+                    { kind: type_js_1.ReflectionKind.symbol }
+                ]
+            });
         }
         else {
             this.push({ kind: type_js_1.ReflectionKind.never });
@@ -1452,7 +1719,9 @@ class Processor {
         const functionPointer = this.eatParameter();
         const modifier = this.eatParameter();
         function isSimpleIndex(index) {
-            if (index.kind === type_js_1.ReflectionKind.string || index.kind === type_js_1.ReflectionKind.number || index.kind === type_js_1.ReflectionKind.symbol)
+            if (index.kind === type_js_1.ReflectionKind.string ||
+                index.kind === type_js_1.ReflectionKind.number ||
+                index.kind === type_js_1.ReflectionKind.symbol)
                 return true;
             if (index.kind === type_js_1.ReflectionKind.union) {
                 const types = index.types.filter(v => isSimpleIndex(v));
@@ -1462,14 +1731,15 @@ class Processor {
         }
         if (program.frame.mappedType) {
             let type = this.pop();
-            let index = program.stack[program.frame.startIndex + 1];
+            let index = program
+                .stack[program.frame.startIndex + 1];
             if (withName) {
                 if (type.kind === type_js_1.ReflectionKind.tuple) {
                     index = type.types[1].type;
                     type = type.types[0].type;
                 }
                 else {
-                    throw new Error('Tuple expect');
+                    throw new Error("Tuple expect");
                 }
             }
             const fromType = program.frame.mappedType.fromType;
@@ -1478,7 +1748,12 @@ class Processor {
                 //ignore
             }
             else if (index.kind === type_js_1.ReflectionKind.any || isSimpleIndex(index)) {
-                const t = { kind: type_js_1.ReflectionKind.indexSignature, type, index, parent: undefined };
+                const t = {
+                    kind: type_js_1.ReflectionKind.indexSignature,
+                    type,
+                    index,
+                    parent: undefined
+                };
                 t.type.parent = t;
                 t.index.parent = t;
                 this.push(t);
@@ -1486,23 +1761,37 @@ class Processor {
             else {
                 let optional = undefined;
                 let readonly = undefined;
-                if (index.kind === type_js_1.ReflectionKind.literal && !(index.literal instanceof RegExp)) {
-                    optional = !!index.origin && (0, type_js_1.isMember)(index.origin) && index.origin.optional ? true : undefined;
+                if (index.kind === type_js_1.ReflectionKind.literal &&
+                    !(index.literal instanceof RegExp)) {
+                    optional =
+                        !!index.origin && (0, type_js_1.isMember)(index.origin) && index.origin.optional
+                            ? true
+                            : undefined;
                     index = index.literal;
                 }
                 // If the type was a property, then grab the optional modifier from the property itself.
                 // Note: This is inconsistent with TS official behaviour, as
                 // mapped types only preserve modifiers when its homomorphic
                 // https://github.com/microsoft/TypeScript/pull/12563
-                if (type.parent && (type.parent.kind === type_js_1.ReflectionKind.propertySignature || type.parent.kind === type_js_1.ReflectionKind.property)) {
+                if (type.parent &&
+                    (type.parent.kind === type_js_1.ReflectionKind.propertySignature ||
+                        type.parent.kind === type_js_1.ReflectionKind.property)) {
                     if (type.parent.optional)
                         optional = true;
                     if (type.parent.readonly)
                         readonly = true;
                 }
-                const property = type.kind === type_js_1.ReflectionKind.propertySignature || type.kind === type_js_1.ReflectionKind.property || type.kind === type_js_1.ReflectionKind.tupleMember
+                const property = type.kind === type_js_1.ReflectionKind.propertySignature ||
+                    type.kind === type_js_1.ReflectionKind.property ||
+                    type.kind === type_js_1.ReflectionKind.tupleMember
                     ? type
-                    : { kind: isTuple ? type_js_1.ReflectionKind.tupleMember : type_js_1.ReflectionKind.propertySignature, name: index, type };
+                    : {
+                        kind: isTuple
+                            ? type_js_1.ReflectionKind.tupleMember
+                            : type_js_1.ReflectionKind.propertySignature,
+                        name: index,
+                        type
+                    };
                 if (optional) {
                     property.optional = true;
                 }
@@ -1523,7 +1812,8 @@ class Processor {
                             if (modifier & 4 /* MappedModifier.readonly */) {
                                 property.readonly = true;
                             }
-                            if (modifier & 8 /* MappedModifier.removeReadonly */ && property.readonly) {
+                            if (modifier & 8 /* MappedModifier.removeReadonly */ &&
+                                property.readonly) {
                                 property.readonly = undefined;
                             }
                         }
@@ -1545,7 +1835,11 @@ class Processor {
                 t = { kind: type_js_1.ReflectionKind.tuple, types: members };
             }
             else {
-                t = { kind: type_js_1.ReflectionKind.objectLiteral, id: state_js_1.state.nominalId++, types: members };
+                t = {
+                    kind: type_js_1.ReflectionKind.objectLiteral,
+                    id: state_js_1.state.nominalId++,
+                    types: members
+                };
             }
             this.push(t);
         }
@@ -1566,7 +1860,10 @@ class Processor {
         }
         const product = cartesian.calculate();
         outer: for (const combination of product) {
-            const template = { kind: type_js_1.ReflectionKind.templateLiteral, types: [] };
+            const template = {
+                kind: type_js_1.ReflectionKind.templateLiteral,
+                types: []
+            };
             let hasPlaceholder = false;
             let lastLiteral = undefined;
             //merge a combination of types, e.g. [string, 'abc', '3'] as template literal => `${string}abc3`.
@@ -1577,10 +1874,14 @@ class Processor {
                 }
                 if (item.kind === type_js_1.ReflectionKind.literal) {
                     if (lastLiteral) {
-                        lastLiteral.literal += item.literal + '';
+                        lastLiteral.literal += item.literal + "";
                     }
                     else {
-                        lastLiteral = { kind: type_js_1.ReflectionKind.literal, literal: item.literal + '', parent: template };
+                        lastLiteral = {
+                            kind: type_js_1.ReflectionKind.literal,
+                            literal: item.literal + "",
+                            parent: template
+                        };
                         template.types.push(lastLiteral);
                     }
                 }
@@ -1592,7 +1893,8 @@ class Processor {
                 }
             }
             if (hasPlaceholder) {
-                if (template.types.length === 1 && template.types[0].kind === type_js_1.ReflectionKind.string) {
+                if (template.types.length === 1 &&
+                    template.types[0].kind === type_js_1.ReflectionKind.string) {
                     template.types[0].parent = result;
                     result.types.push(template.types[0]);
                 }
@@ -1623,7 +1925,7 @@ class Processor {
     }
     pop() {
         if (this.program.stackPointer < 0)
-            throw new Error('Stack empty');
+            throw new Error("Stack empty");
         // return this.program.stack.pop()!;
         return this.program.stack[this.program.stackPointer--];
     }
@@ -1633,7 +1935,7 @@ class Processor {
             startIndex: this.program.stackPointer,
             inputs: [],
             variables: 0,
-            previous: this.program.frame,
+            previous: this.program.frame
         };
     }
     popFrame() {
@@ -1661,7 +1963,7 @@ class Processor {
         // process.stdout.write(`[${this.program.frame.index}] return ${returnAddress}\n`);
         this.program.stackPointer = this.program.frame.startIndex - 1; //-1 because call convention adds `return address` before entering new frame
         this.push(returnValue);
-        if ('number' === typeof returnAddress)
+        if ("number" === typeof returnAddress)
             this.program.program = returnAddress - 1; //-1 because iteration does program++
         if (this.program.frame.previous)
             this.program.frame = this.program.frame.previous;
@@ -1681,11 +1983,19 @@ function typeInferFromContainer(container) {
         if (!(0, type_js_1.isTypeIncluded)(union.types, type))
             union.types.push(type);
     }
-    return union.types.length === 0 ? { kind: type_js_1.ReflectionKind.any } : union.types.length === 1 ? union.types[0] : union;
+    return union.types.length === 0
+        ? { kind: type_js_1.ReflectionKind.any }
+        : union.types.length === 1
+            ? union.types[0]
+            : union;
 }
 typeInferFromContainer.__type = [() => __ΩIterable, 'container', 'Type', 'typeInferFromContainer', 'P"o!"2""w#/$'];
 function typeInfer(value) {
-    if ('string' === typeof value || 'number' === typeof value || 'boolean' === typeof value || 'bigint' === typeof value || 'symbol' === typeof value) {
+    if ("string" === typeof value ||
+        "number" === typeof value ||
+        "boolean" === typeof value ||
+        "bigint" === typeof value ||
+        "symbol" === typeof value) {
         return { kind: type_js_1.ReflectionKind.literal, literal: value };
     }
     else if (null === value) {
@@ -1697,28 +2007,44 @@ function typeInfer(value) {
     else if (value instanceof RegExp) {
         return { kind: type_js_1.ReflectionKind.literal, literal: value };
     }
-    else if ('function' === typeof value) {
+    else if ("function" === typeof value) {
         if ((0, core_1.isArray)(value.__type)) {
             //with emitted types: function or class
             //don't use resolveRuntimeType since we don't allow cache here
             // console.log('typeInfer of', value.name);
-            return Processor.get().reflect(value, undefined, { inline: true });
+            return Processor.get().reflect(value, undefined, {
+                inline: true
+            });
         }
         if ((0, core_1.isClass)(value)) {
             //unknown class
-            return { kind: type_js_1.ReflectionKind.class, classType: value, types: [] };
+            return {
+                kind: type_js_1.ReflectionKind.class,
+                classType: value,
+                types: []
+            };
         }
-        return { kind: type_js_1.ReflectionKind.function, function: value, name: value.name, return: { kind: type_js_1.ReflectionKind.any }, parameters: [] };
+        return {
+            kind: type_js_1.ReflectionKind.function,
+            function: value,
+            name: value.name,
+            return: { kind: type_js_1.ReflectionKind.any },
+            parameters: []
+        };
     }
     else if ((0, core_1.isArray)(value)) {
         return { kind: type_js_1.ReflectionKind.array, type: typeInferFromContainer(value) };
     }
-    else if ('object' === typeof value) {
+    else if ("object" === typeof value) {
         const constructor = value.constructor;
-        if ('function' === typeof constructor && constructor !== Object && (0, core_1.isArray)(constructor.__type)) {
+        if ("function" === typeof constructor &&
+            constructor !== Object &&
+            (0, core_1.isArray)(constructor.__type)) {
             //with emitted types
             //don't use resolveRuntimeType since we don't allow cache here
-            return Processor.get().reflect(constructor, undefined, { inline: true });
+            return Processor.get().reflect(constructor, undefined, {
+                inline: true
+            });
         }
         if (constructor === RegExp)
             return { kind: type_js_1.ReflectionKind.regexp };
@@ -1726,18 +2052,32 @@ function typeInfer(value) {
             return { kind: type_js_1.ReflectionKind.class, classType: Date, types: [] };
         if (constructor === Set) {
             const type = typeInferFromContainer(value);
-            return { kind: type_js_1.ReflectionKind.class, classType: Set, arguments: [type], types: [] };
+            return {
+                kind: type_js_1.ReflectionKind.class,
+                classType: Set,
+                arguments: [type],
+                types: []
+            };
         }
         if (constructor === Map) {
             const keyType = typeInferFromContainer(value.keys());
             const valueType = typeInferFromContainer(value.values());
-            return { kind: type_js_1.ReflectionKind.class, classType: Map, arguments: [keyType, valueType], types: [] };
+            return {
+                kind: type_js_1.ReflectionKind.class,
+                classType: Map,
+                arguments: [keyType, valueType],
+                types: []
+            };
         }
         //generate a new program that builds a objectLiteral. This is necessary since typeInfer() with its Processor.reflect() calls might return immediately TypeAny if
         //the execution was scheduled (if we are in an executing program) so we can not depend on the result directly.
         //each part of the program of a value[i] is executed after the current OP, so we have to schedule new OPs doing the same as
         //in this loop here and construct the objectLiteral in the VM.
-        const resultType = { kind: type_js_1.ReflectionKind.objectLiteral, id: state_js_1.state.nominalId++, types: [] };
+        const resultType = {
+            kind: type_js_1.ReflectionKind.objectLiteral,
+            id: state_js_1.state.nominalId++,
+            types: []
+        };
         const ops = [];
         const stack = [];
         for (const i in value) {
@@ -1763,10 +2103,13 @@ function applyClassDecorators(type) {
             const member = (0, type_js_1.getMember)(type, property);
             if (!member)
                 continue;
-            if (member.kind === type_js_1.ReflectionKind.propertySignature || member.kind === type_js_1.ReflectionKind.property) {
+            if (member.kind === type_js_1.ReflectionKind.propertySignature ||
+                member.kind === type_js_1.ReflectionKind.property) {
                 applyPropertyDecorator(member.type, data);
             }
-            if ('number' === typeof parameterIndexOrDescriptor && (member.kind === type_js_1.ReflectionKind.method || member.kind === type_js_1.ReflectionKind.methodSignature)) {
+            if ("number" === typeof parameterIndexOrDescriptor &&
+                (member.kind === type_js_1.ReflectionKind.method ||
+                    member.kind === type_js_1.ReflectionKind.methodSignature)) {
                 const param = member.parameters[parameterIndexOrDescriptor];
                 if (param) {
                     applyPropertyDecorator(param.type, data);
@@ -1782,22 +2125,32 @@ function applyPropertyDecorator(type, data) {
         const annotations = (0, type_js_1.getAnnotations)(type);
         for (const validator of data.validators) {
             type_js_1.validationAnnotation.register(annotations, {
-                name: 'function',
-                args: [{ kind: type_js_1.ReflectionKind.function, function: validator, parameters: [], return: { kind: type_js_1.ReflectionKind.any } }],
+                name: "function",
+                args: [
+                    {
+                        kind: type_js_1.ReflectionKind.function,
+                        function: validator,
+                        parameters: [],
+                        return: { kind: type_js_1.ReflectionKind.any }
+                    }
+                ]
             });
         }
     }
 }
 applyPropertyDecorator.__type = ['Type', 'type', () => reflection_js_1.TData, 'data', 'applyPropertyDecorator', 'P"w!2"P7#2$"/%'];
 function collapseFunctionToMethod(member) {
-    return member.kind === type_js_1.ReflectionKind.propertySignature && member.type.kind === type_js_1.ReflectionKind.function && member.type.function !== Function;
+    return (member.kind === type_js_1.ReflectionKind.propertySignature &&
+        member.type.kind === type_js_1.ReflectionKind.function &&
+        member.type.function !== Function);
 }
 collapseFunctionToMethod.__type = [() => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, 'member', 'collapseFunctionToMethod', 'PPn!n"J2#!/$'];
 function pushObjectLiteralTypes(type, types) {
     let annotations = {};
     const decorators = [];
     outer: for (const member of types) {
-        if (member.kind === type_js_1.ReflectionKind.propertySignature && member.type.kind === type_js_1.ReflectionKind.never)
+        if (member.kind === type_js_1.ReflectionKind.propertySignature &&
+            member.type.kind === type_js_1.ReflectionKind.never)
             continue;
         if (member.kind === type_js_1.ReflectionKind.objectLiteral) {
             //all `extends T` expression land at the beginning of the stack frame, and are always an objectLiteral.
@@ -1824,15 +2177,20 @@ function pushObjectLiteralTypes(type, types) {
             //note: is it possible to overwrite an index signature?
             type.types.push(member);
         }
-        else if (member.kind === type_js_1.ReflectionKind.propertySignature || member.kind === type_js_1.ReflectionKind.methodSignature) {
-            const toAdd = collapseFunctionToMethod(member) ? {
-                kind: type_js_1.ReflectionKind.methodSignature,
-                name: member.name,
-                optional: member.optional,
-                parameters: member.type.parameters,
-                return: member.type.return,
-            } : member;
-            const existing = type.types.findIndex(__assignType(v => (v.kind === type_js_1.ReflectionKind.propertySignature || v.kind === type_js_1.ReflectionKind.methodSignature) && v.name === toAdd.name, ['v', '', 'P"2!"/"']));
+        else if (member.kind === type_js_1.ReflectionKind.propertySignature ||
+            member.kind === type_js_1.ReflectionKind.methodSignature) {
+            const toAdd = collapseFunctionToMethod(member)
+                ? {
+                    kind: type_js_1.ReflectionKind.methodSignature,
+                    name: member.name,
+                    optional: member.optional,
+                    parameters: member.type.parameters,
+                    return: member.type.return
+                }
+                : member;
+            const existing = type.types.findIndex(__assignType(v => (v.kind === type_js_1.ReflectionKind.propertySignature ||
+                v.kind === type_js_1.ReflectionKind.methodSignature) &&
+                v.name === toAdd.name, ['v', '', 'P"2!"/"']));
             if (existing !== -1) {
                 //remove entry, since we replace it
                 type.types.splice(existing, 1, toAdd);
@@ -1861,9 +2219,9 @@ function getEnumType(values) {
             allowUndefined = true;
         if (v === null)
             allowNull = true;
-        if (typeof v === 'number')
+        if (typeof v === "number")
             allowNumber = true;
-        if (typeof v === 'string')
+        if (typeof v === "string")
             allowString = true;
     }
     const union = { kind: type_js_1.ReflectionKind.union, types: [] };
diff --git a/dist/cjs/src/reflection/processor.js.map b/dist/cjs/src/reflection/processor.js.map
index 915fe5b7ff3327aca2d1129bc4a170148f3e61ba..fc78bcfeb50f4fc05386b5d8d1ac80b7ad7a30c4 100644
--- a/dist/cjs/src/reflection/processor.js.map
+++ b/dist/cjs/src/reflection/processor.js.map
@@ -1 +1 @@
-{"version":3,"file":"processor.js","sourceRoot":"","sources":["../../../../src/reflection/processor.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"processor.js","sourceRoot":"","sources":["../../../../src/reflection/processor.ts"],"names":[],"mappings":";;;AAgGA,8BAEC;AAKD,oBAWC;AAED,wBAWC;AAED,sCAMC;AAWD,gDAgBC;AAooED,8BAgHC;AAmJD,kCAoBC;;;;;;;;;;iCA7iFM,eAAe;;iCAoDf,WAAW;;6CAAX,WAAW;;2CAAX,WAAW;;yCAAX,WAAW;;0CAAX,WAAW;;yCAAX,WAAW;;;;;AApElB;;;;;;;;GAQG;AAEH,wCAMuB;AACvB,kDAAkE;AAClE,0CAAoC;AACpC,kDAA2D;AAC3D,6CAA4C;AAC5C,mDAAyD;AACzD,yCAAmC;AACnC,uCA6CmB;;;;;AAenB,MAAa,UAAU;IACrB,YACS,MAAsB,EAAE,EACxB,QAA6B,EAAE;QAD/B,QAAG,GAAH,GAAG,CAAqB;QACxB,UAAK,GAAL,KAAK,CAA0B;IACrC,CAAC;;AAJN,gCAKC;;AAED,SAAS,SAAS,CAAC,UAA0B,EAAE,UAAkB;IAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAC3C,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IACjD,CAAC;AACH,CAAC;;AAED,SAAgB,SAAS,CAAC,GAAmB;IAC3C,OAAO,GAAG,CAAC,GAAG,cAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,wBAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC5D,CAAC;;AAED;;GAEG;AACH,SAAgB,IAAI,CAAC,SAAsC;IACzD,MAAM,GAAG,GAAG,IAAA,cAAO,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;IAC3D,MAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IAElC,IAAI,CAAC,IAAA,cAAO,EAAC,SAAS,CAAC,EAAE,CAAC;QACxB,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YAC3B,OAAO,CAAC,GAAI,SAAS,CAAC,KAA6B,EAAE,UAAU,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;IAED,OAAO,CAAC,UAAU,CAAC,CAAC;AACtB,CAAC;;AAED,SAAgB,MAAM,CAAC,IAAY;IACjC,MAAM,GAAG,GAAmB,EAAE,CAAC;IAE/B,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAEzC,mCAAmC;IACnC,IAAI,QAAQ,KAAK,OAAO,UAAU;QAAE,OAAO,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;IAElE,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAE3B,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAClE,CAAC;;AAED,SAAgB,aAAa,CAC3B,IAAY,EACZ,OAAc,EAAE,EAChB,OAAwB;IAExB,OAAO,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAS,CAAC;AACzD,CAAC;;AAED,SAAS,MAAM,CAAC,CAAM;IACpB,OAAO,IAAA,cAAO,EAAC,CAAC,CAAC,CAAC;AACpB,CAAC;;AAED;;;;GAIG;AACH,SAAgB,kBAAkB,CAChC,CAAsC,EACtC,OAAc,EAAE,EAChB,OAAwB;IAExB,MAAM,IAAI,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,OAAO,CAClC,CAAC,EACD,IAAI,EACJ,OAAO,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CACjC,CAAC;IAEF,IAAI,IAAA,gBAAM,EAAC,IAAI,CAAC,EAAE,CAAC;QACjB,OAAO,IAAY,CAAC;IACtB,CAAC;IAED,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;AAChE,CAAC;;;AAYD,MAAM,IAAI;IAIR,YAAmB,QAAc;QAAd,aAAQ,GAAR,QAAQ,CAAM;QAHzB,UAAK,GAAW,EAAE,CAAC;QACnB,MAAC,GAAW,CAAC,CAAC;QAGpB,IAAI,QAAQ,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;YAC3C,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC9B,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,IAAI;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;;qDAbuB,EAAE,+BACN,CAAC;;AAqCvB,SAAS,YAAY,CACnB,GAAS,EACT,MAAS,EACT,aAAsB;IAEtB,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAE3B,IAAI,aAAa,EAAE,CAAC;QAClB,4DAA4D;QAC5D,+DAA+D;QAC/D,IAAI;QAEJ,IACE,GAAG,CAAC,IAAI,KAAK,wBAAc,CAAC,QAAQ;YACpC,GAAG,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM;YAClC,GAAG,CAAC,IAAI,KAAK,wBAAc,CAAC,eAAe,EAC3C,CAAC;YACD,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;YACxB,KAAK,MAAM,MAAM,IAAI,GAAG,CAAC,UAAU;gBAAE,MAAM,CAAC,MAAM,GAAG,GAAU,CAAC;QAClE,CAAC;QAED,IAAI,OAAO,IAAI,GAAG,EAAE,CAAC;YACnB,KAAK,MAAM,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;gBAC/B,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;YACtB,CAAC;QACH,CAAC;IACH,CAAC;IAED,OAAO,GAAQ,CAAC;AAClB,CAAC;;AAED,SAAS,iBAAiB,CAAC,SAAwB;IACjD,IAAI,QAAQ,KAAK,OAAO,SAAS;QAAE,OAAO,SAAS,KAAK,CAAC,CAAC;IAC1D,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC;AAC5E,CAAC;;AAED,SAAS,aAAa,CACpB,OAAyB,EACzB,MAA4B;IAE5B,MAAM,OAAO,GAAY;QACvB,MAAM,EAAE,IAAI;QACZ,KAAK,EAAE;YACL,KAAK,EAAE,CAAC;YACR,UAAU,EAAE,CAAC,CAAC;YACd,MAAM,EAAE,MAAM,IAAI,EAAE;YACpB,SAAS,EAAE,CAAC;YACZ,QAAQ,EAAE,SAAS;SACpB;QACD,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;QAC1B,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC;QACV,KAAK,EAAE,CAAC;QACR,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,EAAE;QACxC,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE;QAClE,GAAG,EAAE,OAAO,CAAC,GAAG,IAAI,EAAE;QACtB,GAAG,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,EAAE,MAAM,IAAI,EAAE;QACpB,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE;QACnB,mBAAmB;QACnB,sBAAsB;QACtB,uBAAuB;QACvB,MAAM,EAAE,OAAO,CAAC,MAAM;KACvB,CAAC;IAEF,IAAI,OAAO,CAAC,YAAY;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACrD,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;gBAC7B,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC7C,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,CAAC;QACH,CAAC;IAEH,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY;QACzC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC;IAEhD,OAAO,OAAO,CAAC;AACjB,CAAC;;AAED,SAAS,iBAAiB,CACxB,OAAgB,EAChB,MAA2C,EAC3C,SAA8B,EAAE;IAEhC,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;QAC9B,8CAA8C;QAC9C,wHAAwH;QACxH,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,CAAC;QACzD,IAAI,UAAU,EAAE,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC/C,IACE,CAAC,MAAM,CAAC,CAAC,CAAC;oBACV,CAAC,IAAA,oBAAU,EAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAS,EAAE,MAAM,CAAC,CAAC,CAAS,CAAC,EACzD,CAAC;oBACD,UAAU,GAAG,KAAK,CAAC;oBACnB,MAAM;gBACR,CAAC;YACH,CAAC;YACD,IAAI,UAAU,EAAE,CAAC;gBACf,OAAO,OAAO,CAAC;YACjB,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO;AACT,CAAC;;AAED,SAAS,mBAAmB,CAC1B,OAA4B,EAC5B,MAA2C,EAC3C,SAA8B,EAAE;IAEhC,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,OAAO,OAAO,EAAE,CAAC;QACf,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;YAC9B,MAAM,EAAE,CAAC;YACT,iIAAiI;YACjI,IAAI,MAAM,GAAG,IAAI;gBAAE,OAAO,OAAO,CAAC;YAElC,8CAA8C;YAC9C,wHAAwH;YACxH,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,CAAC;YACzD,IAAI,UAAU,EAAE,CAAC;gBACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC/C,IACE,CAAC,MAAM,CAAC,CAAC,CAAC;wBACV,CAAC,IAAA,oBAAU,EAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAS,EAAE,MAAM,CAAC,CAAC,CAAS,CAAC,EACzD,CAAC;wBACD,UAAU,GAAG,KAAK,CAAC;wBACnB,MAAM;oBACR,CAAC;gBACH,CAAC;gBACD,IAAI,UAAU;oBAAE,OAAO,OAAO,CAAC;YACjC,CAAC;QACH,CAAC;QAED,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC7B,CAAC;IAED,OAAO;AACT,CAAC;;AAED,SAAS,SAAS,CAAC,OAAgB;IACjC,IAAI,CAAC,OAAO,CAAC,WAAW;QAAE,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;IACnD,MAAM,GAAG,GAAS,EAAE,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;IAC5C,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,OAAO,GAAG,CAAC;AACb,CAAC;;;;AAaD;;GAEG;AACH,MAAa,SAAS;IAAtB;QAOU,UAAK,GAAc,EAAE,CAAC;QAE9B;;WAEG;QACO,YAAO,GAAY;YAC3B,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;YAC7D,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,CAAC,CAAC;YAChB,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,UAAU,EAAE,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE;YAC5C,mBAAmB;YACnB,MAAM,EAAE,EAAE;YACV,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,EAAE;YACP,OAAO,EAAE,CAAC;YACV,uBAAuB;YACvB,qBAAqB;SACtB,CAAC;IAg4DJ,CAAC;IAz5DC,MAAM,CAAC,GAAG;QACR,OAAO,CAAC,SAAS,CAAC,aAAa,KAAvB,SAAS,CAAC,aAAa,GAAK,IAAI,SAAS,EAAE,EAAC,CAAC;IACvD,CAAC;IAyBD,OAAO,CACL,MAA2C,EAC3C,SAA8B,EAAE,EAChC,UAA0B,EAAE;QAE5B,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAEtD,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;QAChC,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,CACV,mCAAmC,IAAI,UAAU,IAAA,uBAAa,EAAC,MAAM,CAAC,EAAE,CACzE,CAAC;QACJ,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,QAAQ,CACN,MAA2C,EAC3C,SAA8B,EAAE,EAChC,UAA0B,EAAE;QAE5B,MAAM,MAAM,GAAuB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;QAC3E,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,IAAI,IAAA,iBAAU,EAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC9C,uFAAuF;gBACvF,OAAO;oBACL,IAAI,EAAE,wBAAc,CAAC,QAAQ;oBAC7B,QAAQ,EAAE,MAAM;oBAChB,IAAI,EAAE,MAAM,CAAC,IAAI;oBACjB,UAAU,EAAE,EAAE;oBACd,MAAM,EAAE,EAAE,IAAI,EAAE,wBAAc,CAAC,GAAG,EAAE;iBACrC,CAAC;YACJ,CAAC;YACD,MAAM,IAAI,KAAK,CACb,6BAA6B,IAAA,6BAAsB,EAAC,MAAM,CAAC,8FAA8F,CAC1J,CAAC;QACJ,CAAC;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACvC,IAAI,IAAA,cAAO,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC;QAED,yGAAyG;QACzG,sHAAsH;QACtH,kGAAkG;QAClG,MAAM,KAAK,GAAG,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAChE,IAAI,KAAK,EAAE,CAAC;YACV,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;YAChC,MAAM,CAAC,QAAQ,KAAf,MAAM,CAAC,QAAQ,GAAK,OAAO,CAAC,QAAQ,EAAC;YACrC,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,6IAA6I;QAC7I,+IAA+I;QAC/I,mHAAmH;QACnH,sJAAsJ;QACtJ,uDAAuD;QACvD,4EAA4E;QAC5E,IACE,CAAC,OAAO,CAAC,WAAW,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;YAC5C,MAAM,CAAC,MAAM;YACb,MAAM,CAAC,MAAM,KAAK,CAAC,EACnB,CAAC;YACD,OAAO,MAAM,CAAC,MAAM,CAAC;QACvB,CAAC;QAED,6GAA6G;QAC7G,6GAA6G;QAC7G,gGAAgG;QAChG,yGAAyG;QACzG,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAI,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC;gBAC7C,yEAAyE;gBACzE,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM;oBACzB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;oBAClB,CAAC,CAAC,IAAA,0BAAgB,EAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACvC,MAAM,CAAC,QAAQ,KAAf,MAAM,CAAC,QAAQ,GAAK,OAAO,CAAC,QAAQ,EAAC;gBACrC,OAAO,MAAM,CAAC;YAChB,CAAC;QACH,CAAC;QAED,kGAAkG;QAClG,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACjE,MAAM,MAAM,GAAG,IAAA,0BAAgB,EAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,QAAQ,KAAf,MAAM,CAAC,QAAQ,GAAK,OAAO,CAAC,QAAQ,EAAC;YACrC,IAAI,OAAO,CAAC,MAAM;gBAAE,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YAC1C,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,sHAAsH;QACtH,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,KAAf,MAAM,CAAC,QAAQ,GAAK,MAAM,CAAC,MAAM,CAAC,EAAC,CAAC;QAClD,MAAM,OAAO,GAAG,aAAa,CAC3B,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,EACnD,MAAM,CACP,CAAC;QACF,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,KAAb,IAAI,CAAC,QAAQ,GAAK,OAAO,CAAC,QAAQ,EAAC;QAEnC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACxB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC;QAED,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;YAC5B,0GAA0G;YAC1G,yHAAyH;YACzH,MAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,KAAf,MAAM,CAAC,QAAQ,GAAK,OAAO,CAAC,QAAQ,EAAC;YACrC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,GAAG,CACD,GAAmB,EACnB,YAAiC,EACjC,SAA8B,EAAE,EAChC,MAA4C;QAE5C,OAAO,IAAI,CAAC,UAAU,CACpB,aAAa,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,CACrD,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,OAAgB;QACzB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC;QAC3C,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QAChC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEzB,wFAAwF;QACxF,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAS,CAAC;QACpC,CAAC;QAED,OAAO,OAAO,CAAC,UAAU,CAAC;IAC5B,CAAC;IAED;;;;;;OAMG;IACO,OAAO;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;IACtD,CAAC;IAED;;OAEG;IACO,IAAI,CAAC,KAAe;QAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAEnC,WAAW,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACxC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,wFAAwF;YACxF,OAAO,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;gBACxD,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAExC,mHAAmH;gBACnH,QAAQ,EAAE,EAAE,CAAC;oBACX,KAAK,wBAAY,CAAC,MAAM;wBACtB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE,CAAC,CAAC;wBAC/C,MAAM;oBACR,KAAK,wBAAY,CAAC,MAAM;wBACtB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE,CAAC,CAAC;wBAC/C,MAAM;oBACR,KAAK,wBAAY,CAAC,WAAW;wBAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAC1C,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;wBAC3D,MAAM;oBACR,KAAK,wBAAY,CAAC,OAAO;wBACvB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,CAAC,CAAC;wBAChD,MAAM;oBACR,KAAK,wBAAY,CAAC,IAAI;wBACpB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,IAAI,EAAE,CAAC,CAAC;wBAC7C,MAAM;oBACR,KAAK,wBAAY,CAAC,OAAO;wBACvB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,CAAC,CAAC;wBAChD,MAAM;oBACR,KAAK,wBAAY,CAAC,MAAM;wBACtB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE,CAAC,CAAC;wBAC/C,MAAM;oBACR,KAAK,wBAAY,CAAC,KAAK;wBACrB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,CAAC,CAAC;wBAC9C,MAAM;oBACR,KAAK,wBAAY,CAAC,SAAS;wBACzB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,SAAS,EAAE,CAAC,CAAC;wBAClD,MAAM;oBACR,KAAK,wBAAY,CAAC,MAAM;wBACtB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE,CAAC,CAAC;wBAC/C,MAAM;oBACR,KAAK,wBAAY,CAAC,MAAM;wBACtB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE,CAAC,CAAC;wBAC/C,MAAM;oBACR,KAAK,wBAAY,CAAC,IAAI;wBACpB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,IAAI,EAAE,CAAC,CAAC;wBAC7C,MAAM;oBACR,KAAK,wBAAY,CAAC,GAAG;wBACnB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,GAAG,EAAE,CAAC,CAAC;wBAC5C,MAAM;oBACR,KAAK,wBAAY,CAAC,OAAO,CAAC,CAAC,CAAC;wBAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAC1C,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,OAAO;4BAC5B,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAuC;yBAClE,CAAC,CAAC;wBACH,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,eAAe,CAAC,CAAC,CAAC;wBAClC,IAAI,CAAC,qBAAqB,EAAE,CAAC;wBAC7B,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,IAAI;wBACpB,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,IAAI;4BACf,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,UAAU;wBAC1B,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,UAAU;4BACrB,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,SAAS;wBACzB,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,SAAS;4BACpB,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,iBAAiB;wBACjC,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,iBAAiB;4BAC5B,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,WAAW;wBAC3B,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,WAAW;4BACtB,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,UAAU;wBAC1B,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,UAAU;4BACrB,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,WAAW;wBAC3B,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,WAAW;4BACtB,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,UAAU;wBAC1B,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,UAAU;4BACrB,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,YAAY;wBAC5B,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,YAAY;4BACvB,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,YAAY;wBAC5B,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,YAAY;4BACvB,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,aAAa;wBAC7B,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EACP,WAAW,KAAK,OAAO,aAAa;gCAClC,CAAC,CAAC,aAAa;gCACf,CAAC,CAAC,MAAM,yBAAyB;iCAAG;4BACxC,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,WAAW;wBAC3B,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,WAAW;4BACtB,KAAK,EAAE,EAAE;yBACV,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,wBAAY,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAY,CAAC;wBACxC,IAAI,CAAC,GAAG;4BACN,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,EAAE,EAAE,gBAAK,CAAC,SAAS,EAAE;4BACrB,SAAS,EAAE,MAAM;4BACjB,KAAK,EAAE,EAAE;yBACG,CAAC;wBAEf,SAAS,GAAG,CAAC,MAAY;4BACvB,IAAI,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,iBAAiB,EAAE,CAAC;gCACrD,MAAM,GAAG;oCACP,GAAG,MAAM;oCACT,MAAM,EAAE,CAAC;oCACT,UAAU,EAAE,8BAAoB,CAAC,MAAM;oCACvC,IAAI,EAAE,wBAAc,CAAC,QAAQ;iCACd,CAAC;4BACpB,CAAC;iCAAM,IAAI,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,eAAe,EAAE,CAAC;gCAC1D,MAAM,GAAG;oCACP,GAAG,MAAM;oCACT,MAAM,EAAE,CAAC;oCACT,UAAU,EAAE,8BAAoB,CAAC,MAAM;oCACvC,IAAI,EAAE,wBAAc,CAAC,MAAM;iCACd,CAAC;4BAClB,CAAC;4BAED,QAAQ,MAAM,CAAC,IAAI,EAAE,CAAC;gCACpB,KAAK,wBAAc,CAAC,cAAc,CAAC,CAAC,CAAC;oCACnC,4BAA4B;oCAC5B,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oCACrB,MAAM;gCACR,CAAC;gCACD,KAAK,wBAAc,CAAC,QAAQ,CAAC;gCAC7B,KAAK,wBAAc,CAAC,MAAM,CAAC,CAAC,CAAC;oCAC3B,MAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAChC,CAAC,CAAC,EAAE,CACF,CAAC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,QAAQ;wCACjC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM,CAAC;wCACnC,CAAC,CAAC,IAAI,KAAM,MAAoC,CAAC,IAAI,CACxD,CAAC;oCACF,IAAI,QAAQ,KAAK,CAAC,CAAC,EAAE,CAAC;wCACpB,mCAAmC;wCACnC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oCAC9B,CAAC;oCACD,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oCAErB,IACE,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM;wCACrC,MAAM,CAAC,IAAI,KAAK,aAAa,EAC7B,CAAC;wCACD,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;4CAC1C,IACE,SAAS,CAAC,UAAU,KAAK,SAAS;gDAClC,SAAS,CAAC,QAAQ,EAClB,CAAC;gDACD,MAAM,QAAQ,GAAG;oDACf,IAAI,EAAE,wBAAc,CAAC,QAAQ;oDAC7B,IAAI,EAAE,SAAS,CAAC,IAAI;oDACpB,UAAU,EAAE,SAAS,CAAC,UAAU;oDAChC,OAAO,EAAE,SAAS,CAAC,OAAO;oDAC1B,IAAI,EAAE,SAAS,CAAC,IAAI;iDACL,CAAC;gDAClB,IAAI,SAAS,CAAC,QAAQ,EAAE,CAAC;oDACvB,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;gDAC3B,CAAC;gDACD,IAAI,SAAS,CAAC,QAAQ,EAAE,CAAC;oDACvB,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;gDAC3B,CAAC;gDAED,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gDACjC,GAAG,CAAC,QAAQ,CAAC,CAAC;4CAChB,CAAC;wCACH,CAAC;oCACH,CAAC;oCACD,MAAM;gCACR,CAAC;4BACH,CAAC;wBACH,CAAC;wBAED,KAAK,MAAM,MAAM,IAAI,KAAK,EAAE,CAAC;4BAC3B,QAAQ,MAAM,CAAC,IAAI,EAAE,CAAC;gCACpB,KAAK,wBAAc,CAAC,aAAa,CAAC;gCAClC,KAAK,wBAAc,CAAC,KAAK,CAAC,CAAC,CAAC;oCAC1B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK;wCAAE,GAAG,CAAC,GAAG,CAAC,CAAC;oCACzC,MAAM;gCACR,CAAC;gCACD,KAAK,wBAAc,CAAC,cAAc,CAAC;gCACnC,KAAK,wBAAc,CAAC,QAAQ,CAAC;gCAC7B,KAAK,wBAAc,CAAC,MAAM,CAAC,CAAC,CAAC;oCAC3B,GAAG,CAAC,MAAM,CAAC,CAAC;gCACd,CAAC;4BACH,CAAC;4BACD,wFAAwF;wBAC1F,CAAC;wBACD,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAM,CAAC,CAAC;wBAEjD,KAAK,MAAM,MAAM,IAAI,CAAC,CAAC,KAAK;4BAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;wBAChD,IAAI,CAAC,CAAC,SAAS;4BACb,KAAK,MAAM,MAAM,IAAI,CAAC,CAAC,SAAS;gCAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;wBAEtD,IAAI,IAAI,CAAC,MAAM;4BAAE,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;wBACpC,CAAC,CAAC,aAAa,GAAG,OAAO,CAAC,cAAc,CAAC;wBAEzC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxB,MAAM,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAS,CAAC;wBAC5D,IAAI,OAAO,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO,EAAE,CAAC;4BAC5C,IAAI,CAAC,QAAQ,CAAC,IAAA,sBAAY,EAAC,IAAI,CAAC,GAAG,EAAiB,CAAC,CAAC,CAAC;wBACzD,CAAC;wBACD,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,YAAY,CAAC,CAAC,CAAC;wBAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBACjD,MAAM,aAAa,GAAW,EAAE,CAAC;wBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC;4BACpC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAU,CAAC,CAAC;wBACzC,CAAC;wBAGC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CACnC,CAAC,gBAAgB,GAAG,aAAa,CAAC;wBAEnC,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBACjD,MAAM,KAAK,GAAW,EAAE,CAAC;wBACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC;4BACpC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAU,CAAC,CAAC;wBACjC,CAAC;wBAEA,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAe,CAAC,UAAU;4BAC3D,KAAK,CAAC;wBAER,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAC1C,MAAM,CAAC,GAAS;4BACd,IAAI,EAAE,wBAAc,CAAC,SAAS;4BAC9B,MAAM,EAAE,SAAgB;4BACxB,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAW;4BAClC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAU;yBACzB,CAAC;wBACF,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAClB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,iBAAiB,CAAC;oBACpC,KAAK,wBAAY,CAAC,cAAc,CAAC,CAAC,CAAC;wBACjC,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAC1C,MAAM,eAAe,GAAG,eAAe,CACrC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAa,EAC9B,OAAO,CAAC,MAAM,CACf,CAAC;wBACF,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAY,CAAC;wBACzC,IAAI,CAAC,eAAe,EAAE,CAAC;4BACrB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,CAAC,CAAC;4BAChD,MAAM;wBACR,CAAC;wBAED,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;4BAC5B,IAAI,EAAE,KAAK,wBAAY,CAAC,cAAc,EAAE,CAAC;gCACvC,IAAI,CAAC,QAAQ,CAAC;oCACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;oCAC1B,SAAS,EAAE,eAAe;oCAC1B,aAAa,EAAE,MAAM;oCACrB,KAAK,EAAE,EAAE;iCACV,CAAC,CAAC;4BACL,CAAC;iCAAM,IAAI,EAAE,KAAK,wBAAY,CAAC,iBAAiB,EAAE,CAAC;gCACjD,IAAI,CAAC,QAAQ,CAAC;oCACZ,IAAI,EAAE,wBAAc,CAAC,QAAQ;oCAC7B,QAAQ,EAAE,eAAe;oCACzB,UAAU,EAAE,EAAE;oCACd,MAAM,EAAE,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE;iCACzC,CAAC,CAAC;4BACL,CAAC;wBACH,CAAC;6BAAM,CAAC;4BACN,kIAAkI;4BAClI,MAAM,eAAe,GAAG,CAAC,CAAC,CACxB,IAAI,CAAC,OAAO,EAAE;gCACd,OAAO,CAAC,QAAQ;gCAChB,OAAO,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,CAC3B,CAAC;4BACF,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,MAAM,EAAE;gCACnD,MAAM,EAAE,CAAC,eAAe;gCACxB,WAAW,EAAE,eAAe;6BAC7B,CAAC,CAAC;4BACH,IAAI,eAAe;gCAAE,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;4BACjD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;4BAE3B,IAAI,IAAA,2BAAiB,EAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;gCAC/C,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,IAAI,EAAE,CAAC;gCAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oCACvC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gCACtC,CAAC;4BACH,CAAC;4BAED,kFAAkF;4BAClF,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE,CAAC;gCAC7B,gCAAgC;gCAChC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,yDAAyD;gCAC5E,SAAS,WAAW,CAAC;4BACvB,CAAC;wBACH,CAAC;wBACD,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,IAAI,CAAC,CAAC,CAAC;wBACvB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAsB,CAAC;wBAClD,MAAM,QAAQ,GAAwC,EAAE,CAAC;wBAEzD,IAAI,CAAC,GAAG,CAAC,CAAC;wBACV,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;4BACzB,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;gCAC/B,MAAM,CAAC,GACL,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU;oCAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;oCAChB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;gCACnB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACxB,IAAI,QAAQ,KAAK,OAAO,CAAC,EAAE,CAAC;oCAC1B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCACZ,CAAC;4BACH,CAAC;iCAAM,CAAC;gCACN,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;4BAC5B,CAAC;wBACH,CAAC;wBACD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wBACvC,MAAM,CAAC,GAAS;4BACd,IAAI,EAAE,wBAAc,CAAC,IAAI;4BACzB,IAAI,EAAE,QAAQ;4BACd,MAAM;4BACN,SAAS,EAAE,WAAW,CAAC,MAAM,CAAC;yBAC/B,CAAC;wBACF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAY,CAEtC,CAAC;wBACnB,IAAI,CAAC,QAAQ,CAAC;4BACZ,IAAI,EAAE,wBAAc,CAAC,UAAU;4BAC/B,MAAM,EAAE,SAAgB;4BACxB,IAAI,EAAE,IAAA,iBAAU,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI;yBACvC,CAAC,CAAC;wBACH,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,WAAW,CAAC,CAAC,CAAC;wBAC9B,MAAM,CAAC,GAAoB;4BACzB,IAAI,EAAE,wBAAc,CAAC,WAAW;4BAChC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAU;4BACxB,MAAM,EAAE,SAAgB;yBACzB,CAAC;wBACF,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAClB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBACnC,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAY,CAAW,CAAC;wBACpE,MAAM,CAAC,GAAS;4BACd,IAAI,EAAE,wBAAc,CAAC,WAAW;4BAChC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAU;4BACxB,MAAM,EAAE,SAAgB;4BACxB,IAAI,EAAE,IAAA,iBAAU,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI;yBACvC,CAAC;wBACF,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAClB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,IAAI,CAAC,CAAC,CAAC;wBACvB,MAAM,CAAC,GAAS;4BACd,IAAI,EAAE,wBAAc,CAAC,IAAI;4BACzB,MAAM,EAAE,SAAgB;4BACxB,IAAI,EAAE,IAAI,CAAC,GAAG,EAAU;yBACzB,CAAC;wBACF,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAClB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,MAAM,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE,CAAC,CAAC;wBAC/C,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,aAAa,CAAC;oBAChC,KAAK,wBAAY,CAAC,oBAAoB,CAAC,CAAC,CAAC;wBACvC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAC9C,OAAO,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,IAAI,EAAE,CAAC;wBACtD,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;wBAE3D,IAAI,EAAE,KAAK,wBAAY,CAAC,oBAAoB,EAAE,CAAC;4BAC7C,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;4BAChC,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;gCACvB,IAAI,GAAG,YAAY,CAAC;4BACtB,CAAC;wBACH,CAAC;wBAED,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;4BACvB,0BAA0B;4BAC1B,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC;gCAC1B,IAAI,EAAE,wBAAc,CAAC,GAAG;gCACxB,aAAa,EAAE,IAAI;6BACb,CAAC,CAAC;4BACV,IAAI,CAAC,QAAQ,CAAC;gCACZ,IAAI,EAAE,wBAAc,CAAC,aAAa;gCAClC,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,OAAO,CAAW;6BACvC,CAAC,CAAC;wBACL,CAAC;6BAAM,CAAC;4BACN,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAY,CAAC,CAAC;4BAC1C,IAAI,CAAC,QAAQ,CAAC,IAAY,CAAC,CAAC;wBAC9B,CAAC;wBACD,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,GAAG,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC,GAAS;4BACd,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,GAAG;4BACd,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,EAAU,CAAC;4BAC/B,KAAK,EAAE,EAAE;yBACV,CAAC;wBACF,CAAC,CAAC,SAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;wBAC3B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,GAAG,CAAC,CAAC,CAAC;wBACtB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;wBACjC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;wBAC/B,MAAM,CAAC,GAAc;4BACnB,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,SAAS,EAAE,GAAG;4BACd,SAAS,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC;4BACvB,KAAK,EAAE,EAAE;yBACV,CAAC;wBACF,CAAC,CAAC,SAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;wBAC3B,CAAC,CAAC,SAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;wBAC3B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,OAAO,CAAC,CAAC,CAAC;wBAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;wBAChC,MAAM,CAAC,GAAgB,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC;wBAC9D,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAClB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAY,CAAC;wBACxC,MAAM,SAAS,GAAG,IAAA,2BAAiB,EAAC,KAAK,CAAC,CAAC;wBAC3C,MAAM,CAAC,GAAS,IAAA,oBAAU,EAAC;4BACzB,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,KAAK,EAAE,SAAS;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;4BACpC,KAAK,MAAM,MAAM,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;gCAC7B,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;4BACpB,CAAC;wBACH,CAAC;wBACD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,YAAY,CAAC,CAAC,CAAC;wBAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAClC,IAAI,CAAC;4BAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACxB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,aAAa,CAAC;oBAChC,KAAK,wBAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAY,CAAC;wBACxC,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAY,CAAW,CAAC;wBAElE,MAAM,UAAU,GACd,KAAK,CAAC,MAAM,GAAG,CAAC;4BACd,CAAC,CAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAU;4BACnC,CAAC,CAAE,EAAE,IAAI,EAAE,wBAAc,CAAC,GAAG,EAAW,CAAC;wBAC7C,MAAM,UAAU,GACd,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAqB,CAAC,CAAC,CAAC,EAAE,CAAC;wBAClE,IAAI,IAAA,iBAAU,EAAC,IAAI,CAAC;4BAAE,IAAI,GAAG,IAAI,EAAE,CAAC;wBAEpC,IAAI,CAAC,GACH,EAAE,KAAK,wBAAY,CAAC,aAAa;4BAC/B,CAAC,CAAE;gCACC,IAAI,EAAE,wBAAc,CAAC,aAAa;gCAClC,MAAM,EAAE,UAAU;gCAClB,UAAU;6BACW;4BACzB,CAAC,CAAE;gCACC,IAAI,EAAE,wBAAc,CAAC,QAAQ;gCAC7B,IAAI,EAAE,IAAI,IAAI,SAAS;gCACvB,MAAM,EAAE,UAAU;gCAClB,UAAU;6BACM,CAAC;wBACzB,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;wBACpB,KAAK,MAAM,MAAM,IAAI,CAAC,CAAC,UAAU;4BAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;wBACrD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxB,MAAM,CAAC,GAAS;4BACd,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,IAAI,EAAE,IAAI,CAAC,GAAG,EAAU;yBACzB,CAAC;wBACF,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAClB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,QAAQ,CAAC;oBAC3B,KAAK,wBAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBACpC,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAY,CAItC,CAAC;wBACnB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;wBAC9B,IAAI,UAAU,GAAG,KAAK,CAAC;wBAEvB,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;4BAClE,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CACnC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,SAAS,CACzC,CAAC;4BACF,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAC9B,CAAC,CAAC,EAAE,CACF,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,IAAI;gCAC9B,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,SAAS,CACtC,CAAC;4BACF,IAAI,QAAQ,IAAI,aAAa,EAAE,CAAC;gCAC9B,IAAI,GAAG,QAAQ,CAAC;gCAChB,UAAU,GAAG,IAAI,CAAC;4BACpB,CAAC;wBACH,CAAC;wBAED,MAAM,QAAQ,GAAG;4BACf,IAAI,EACF,EAAE,KAAK,wBAAY,CAAC,iBAAiB;gCACnC,CAAC,CAAC,wBAAc,CAAC,iBAAiB;gCAClC,CAAC,CAAC,wBAAc,CAAC,QAAQ;4BAC7B,IAAI;4BACJ,IAAI,EAAE,IAAA,iBAAU,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI;yBACC,CAAC;wBAE1C,IAAI,UAAU,EAAE,CAAC;4BACf,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;wBAC3B,CAAC;wBAED,IAAI,EAAE,KAAK,wBAAY,CAAC,QAAQ,EAAE,CAAC;4BAChC,QAAyB,CAAC,UAAU;gCACnC,8BAAoB,CAAC,MAAM,CAAC;wBAChC,CAAC;wBAED,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;wBAChC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBACxB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,MAAM,CAAC;oBACzB,KAAK,wBAAY,CAAC,eAAe,CAAC,CAAC,CAAC;wBAClC,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAY,CAIpC,CAAC;wBACnB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAY,CAAC;wBACxC,MAAM,UAAU,GACd,KAAK,CAAC,MAAM,GAAG,CAAC;4BACd,CAAC,CAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAU;4BACnC,CAAC,CAAE,EAAE,IAAI,EAAE,wBAAc,CAAC,GAAG,EAAW,CAAC;wBAC7C,MAAM,UAAU,GACd,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAqB,CAAC,CAAC,CAAC,EAAE,CAAC;wBAClE,IAAI,IAAA,iBAAU,EAAC,IAAI,CAAC;4BAAE,IAAI,GAAG,IAAI,EAAE,CAAC;wBAEpC,IAAI,CAAC,GACH,EAAE,KAAK,wBAAY,CAAC,MAAM;4BACxB,CAAC,CAAC;gCACE,IAAI,EAAE,wBAAc,CAAC,MAAM;gCAC3B,MAAM,EAAE,SAAgB;gCACxB,UAAU,EAAE,8BAAoB,CAAC,MAAM;gCACvC,IAAI;gCACJ,MAAM,EAAE,UAAU;gCAClB,UAAU;6BACX;4BACH,CAAC,CAAC;gCACE,IAAI,EAAE,wBAAc,CAAC,eAAe;gCACpC,MAAM,EAAE,SAAgB;gCACxB,IAAI;gCACJ,MAAM,EAAE,UAAU;gCAClB,UAAU;6BACX,CAAC;wBACR,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;wBACpB,KAAK,MAAM,MAAM,IAAI,CAAC,CAAC,UAAU;4BAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;wBACrD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,QAAQ;wBAEtB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAGnC,CAAC,QAAQ,GAAG,IAAI,CAAC;wBAClB,MAAM;oBACR,KAAK,wBAAY,CAAC,QAAQ;wBACvB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAoB,CAAC,QAAQ;4BAC9D,IAAI,CAAC;wBACP,MAAM;oBACR,KAAK,wBAAY,CAAC,MAAM;wBACrB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAoB,CAAC,UAAU;4BAChE,8BAAoB,CAAC,MAAM,CAAC;wBAC9B,MAAM;oBACR,KAAK,wBAAY,CAAC,SAAS;wBACxB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAoB,CAAC,UAAU;4BAChE,8BAAoB,CAAC,SAAS,CAAC;wBACjC,MAAM;oBACR,KAAK,wBAAY,CAAC,OAAO;wBACtB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAoB,CAAC,UAAU;4BAChE,8BAAoB,CAAC,OAAO,CAAC;wBAC/B,MAAM;oBACR,KAAK,wBAAY,CAAC,QAAQ;wBACvB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAoB,CAAC,QAAQ;4BAC9D,IAAI,CAAC;wBACP,MAAM;oBACR,KAAK,wBAAY,CAAC,MAAM;wBACrB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAoB,CAAC,MAAM;4BAC5D,IAAI,CAAC;wBACP,MAAM;oBACR,KAAK,wBAAY,CAAC,YAAY;wBAC5B,MAAM,iBAAiB,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAG3C,CAAC;wBAElB,iBAAiB,CAAC,OAAO;4BACvB,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAY,CAAC,CAAC;wBAC/C,MAAM;oBACR,KAAK,wBAAY,CAAC,WAAW;wBAC3B,MAAM,gBAAgB,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAStC,CAAC;wBAEtB,gBAAgB,CAAC,WAAW,GAAG,OAAO,CAAC,KAAK,CAC1C,IAAI,CAAC,YAAY,EAAY,CACpB,CAAC;wBACZ,MAAM;oBAER,KAAK,wBAAY,CAAC,IAAI;wBACpB,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAU/B,CAAC;wBAEtB,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,CAC5B,IAAI,CAAC,YAAY,EAAY,CACZ,CAAC;wBACpB,MAAM;oBAER,KAAK,wBAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC3B,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAS,CAAC;wBACzD,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAY,CAAW,CAAC;wBACpE,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;4BAClB,IAAI,CAAC,WAAW,GAAG;gCACjB,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE;gCAC9D,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;6BAC5B,CAAC;4BACF,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;wBACjC,CAAC;wBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,cAAc,CAAC,CAAC,CAAC;wBACjC,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;wBAChC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;wBACjC,MAAM,CAAC,GAAS;4BACd,IAAI,EAAE,wBAAc,CAAC,cAAc;4BACnC,MAAM,EAAE,SAAgB;4BACxB,KAAK;4BACL,IAAI;yBACL,CAAC;wBACF,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAClB,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;wBACnB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,aAAa,CAAC,CAAC,CAAC;wBAChC,IAAI,CAAC,GAAG;4BACN,IAAI,EAAE,wBAAc,CAAC,aAAa;4BAClC,EAAE,EAAE,gBAAK,CAAC,SAAS,EAAE;4BACrB,KAAK,EAAE,EAAE;yBACW,CAAC;wBAEvB,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAM7B,CAAC;wBACJ,sBAAsB,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;wBACtC,KAAK,MAAM,MAAM,IAAI,CAAC,CAAC,KAAK;4BAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;wBAChD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,+BAA+B;oBAC/B,+DAA+D;oBAC/D,aAAa;oBACb,IAAI;oBACJ,KAAK,wBAAY,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC7B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;wBAC/B,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;wBACjC,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;wBAChC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAmB,CAAC;wBAC9C,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAChB,iBAAiB,CAAC,SAAS,CAAC;4BAC1B,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;4BACrB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;wBACzB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,aAAa,CAAC,CAAC,CAAC;wBAChC,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAClD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBACnD,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAmB,CAAC;wBAC9C,MAAM,MAAM,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;wBAC5C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;wBAC/C,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxB,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAClD,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBACtD,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;wBAE5B,IAAI,IAAI,GAAS,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,CAAC;wBAClD,IAAI,CAAC,IAAI,CAAC;4BACR,IAAI,EAAE,wBAAc,CAAC,KAAK;4BAC1B,GAAG,EAAE,CAAC,IAAU,EAAE,EAAE;gCAClB,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO,EAAE,CAAC;oCACzC,IACE,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK;wCAClC,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,YAAY,EACzC,CAAC;wCACD,IAAI,CAAC,IAAA,wBAAc,EAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC;4CACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wCACxB,CAAC;oCACH,CAAC;yCAAM,CAAC;wCACN,IACE,IAAI,CAAC,MAAM;4CACX,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,SAAS,EAC7C,CAAC;4CACD,IAAI,GAAG;gDACL,IAAI,EAAE,wBAAc,CAAC,YAAY;gDACjC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;6CACpB,CAAC;wCACJ,CAAC;6CAAM,CAAC;4CACN,IAAI,GAAG;gDACL,IAAI,EAAE,wBAAc,CAAC,KAAK;gDAC1B,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;6CACpB,CAAC;wCACJ,CAAC;oCACH,CAAC;gCACH,CAAC;qCAAM,CAAC;oCACN,IAAI,GAAG,IAAI,CAAC;gCACd,CAAC;gCAED,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;oCACtB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,GAAG,eAAe,CAAC,GAAG,IAAI,CAAC;gCAC/D,CAAC;qCAAM,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;oCAC7B,OAAO,CAAC,KAAK,CACX,KAAK,CAAC,QAAS,CAAC,UAAU,GAAG,CAAC,GAAG,eAAe,CACjD,GAAG,IAAI,CAAC;gCACX,CAAC;qCAAM,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;oCAC7B,OAAO,CAAC,KAAK,CACX,KAAK,CAAC,QAAS,CAAC,QAAS,CAAC,UAAU,GAAG,CAAC,GAAG,eAAe,CAC3D,GAAG,IAAI,CAAC;gCACX,CAAC;qCAAM,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;oCAC7B,OAAO,CAAC,KAAK,CACX,KAAK,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,UAAU;wCAC5C,CAAC;wCACD,eAAe,CAClB,GAAG,IAAI,CAAC;gCACX,CAAC;qCAAM,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;oCAC7B,OAAO,CAAC,KAAK,CACX,KAAK,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,UAAU;wCACtD,CAAC;wCACD,eAAe,CAClB,GAAG,IAAI,CAAC;gCACX,CAAC;qCAAM,CAAC;oCACN,IAAI,OAAO,GAAG,KAAK,CAAC;oCACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE;wCAClC,OAAO,GAAG,OAAO,CAAC,QAAS,CAAC;oCAC9B,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,GAAG,eAAe,CAAC;wCACrD,IAAI,CAAC;gCACT,CAAC;4BACH,CAAC;yBACW,CAAC,CAAC;wBAChB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,OAAO,CAAC,CAAC,CAAC;wBAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAsC,CAAC;wBAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAsC,CAAC;wBAC5D,MAAM,MAAM,GAAG,IAAA,yBAAY,EAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBACzC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;wBACjE,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,WAAW,CAAC,CAAC,CAAC;wBAC9B,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBACzB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,MAAM,CAAC,CAAC,CAAC;wBACzB,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAC7C,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAc,CAAC;wBAC9C,MAAM,KAAK,GAAG,EAAE,EAAE,CAAC;wBAEnB,kFAAkF;wBAClF,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;wBAChC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;wBAE3B,kFAAkF;wBAClF,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE,CAAC;4BAC7B,gCAAgC;4BAChC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,yDAAyD;4BAC5E,SAAS,WAAW,CAAC;wBACvB,CAAC;wBACD,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,GAAG,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;wBACvD,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;wBAC1B,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,WAAW,CAAC,CAAC,CAAC;wBAC9B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;wBACrC,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC7B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;wBAC/B,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxB,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAClD,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBACtD,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;4BACtB,IAAI,CAAC,IAAI,CACP,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,GAAG,eAAe,CAAC,CAC9D,CAAC;wBACJ,CAAC;6BAAM,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;4BAC7B,IAAI,CAAC,IAAI,CACP,OAAO,CAAC,KAAK,CACX,OAAO,CAAC,KAAK,CAAC,QAAS,CAAC,UAAU,GAAG,CAAC,GAAG,eAAe,CACzD,CACF,CAAC;wBACJ,CAAC;6BAAM,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;4BAC7B,IAAI,CAAC,IAAI,CACP,OAAO,CAAC,KAAK,CACX,OAAO,CAAC,KAAK,CAAC,QAAS,CAAC,QAAS,CAAC,UAAU;gCAC1C,CAAC;gCACD,eAAe,CAClB,CACF,CAAC;wBACJ,CAAC;6BAAM,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;4BAC7B,IAAI,CAAC,IAAI,CACP,OAAO,CAAC,KAAK,CACX,OAAO,CAAC,KAAK,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,UAAU;gCACpD,CAAC;gCACD,eAAe,CAClB,CACF,CAAC;wBACJ,CAAC;6BAAM,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;4BAC7B,IAAI,CAAC,IAAI,CACP,OAAO,CAAC,KAAK,CACX,OAAO,CAAC,KAAK,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS;iCAClD,UAAU;gCACX,CAAC;gCACD,eAAe,CAClB,CACF,CAAC;wBACJ,CAAC;6BAAM,CAAC;4BACN,IAAI,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;4BAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE;gCAAE,OAAO,GAAG,OAAO,CAAC,QAAS,CAAC;4BAClE,IAAI,CAAC,IAAI,CACP,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,GAAG,eAAe,CAAC,CACxD,CAAC;wBACJ,CAAC;wBACD,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,GAAG,CAAC,CAAC,CAAC;wBACtB,+BAA+B;wBAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAC1C,MAAM,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAMjB,CAAC;wBACX,IAAI,CAAC,YAAY,+BAAe,EAAE,CAAC;4BACjC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;wBACvD,CAAC;6BAAM,IACL,QAAQ,KAAK,OAAO,CAAC;4BACrB,QAAQ,KAAK,OAAO,CAAC;4BACrB,SAAS,KAAK,OAAO,CAAC;4BACtB,QAAQ,KAAK,OAAO,CAAC,EACrB,CAAC;4BACD,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;wBAC1D,CAAC;6BAAM,CAAC;4BACN,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACf,CAAC;wBACD,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,MAAM,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,SAAS,EAAE,CAAC;wBACjB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;wBACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAChB,IAAI,IAAI;4BAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC1B,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,IAAI,CAAC,CAAC,CAAC;wBACvB,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAC1C,OAAO,CAAC,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,0CAA0C;wBACrE,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,IAAI,CAAC,CAAC,CAAC;wBACvB,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBACrD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAC1B,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,OAAO,CAAC,CAAC,CAAC;wBAC1B,MAAM,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAS,CAAC;wBACtD,mEAAmE;wBACnE,CAAC,CAAC,EAAE,GAAG,gBAAK,CAAC,SAAS,EAAE,CAAC;wBACzB,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,MAAM,CAAC,CAAC,CAAC;wBACzB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAChD,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAGnB,CAAC;wBACnB,MAAM,CAAC,GAAG,IAAA,iBAAU,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;wBAC9C,IAAI,CAAC,KAAK,SAAS,EAAE,CAAC;4BACpB,IAAA,gBAAK,EACH,8BAA8B,KAAK,CAAC,QAAQ,EAAE,kFAAkF,CACjI,CAAC;4BACF,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,CAAC,CAAC;wBAC9C,CAAC;6BAAM,IAAI,QAAQ,KAAK,OAAO,CAAC,EAAE,CAAC;4BACjC,0HAA0H;4BAC1H,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;wBAChC,CAAC;6BAAM,CAAC;4BACN,sHAAsH;4BACtH,MAAM,eAAe,GAAG,CAAC,CAAC,CACxB,IAAI,CAAC,OAAO,EAAE;gCACd,OAAO,CAAC,QAAQ;gCAChB,OAAO,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,CAC3B,CAAC;4BACF,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;gCACjC,MAAM,EAAE,CAAC,eAAe;gCACxB,WAAW,EAAE,eAAe;6BAC7B,CAAC,CAAC;4BACH,IAAI,eAAe;gCAAE,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;4BACjD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;4BAE3B,kFAAkF;4BAClF,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE,CAAC;gCAC7B,gCAAgC;gCAChC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,yDAAyD;gCAC5E,SAAS,WAAW,CAAC;4BACvB,CAAC;wBACH,CAAC;wBACD,MAAM;oBACR,CAAC;oBACD,KAAK,wBAAY,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBAChD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;wBACnD,MAAM,MAAM,GAAW,EAAE,CAAC;wBAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC;4BACtC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;4BAC/B,IACE,CAAC,KAAK,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK;gCAClC,KAAK,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO,CAAC;gCACxC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;gCAEjB,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAS,CAAC;4BACpC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBACxB,CAAC;wBACD,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAGnB,CAAC;wBACnB,MAAM,CAAC,GAAG,IAAA,iBAAU,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;wBAC9C,IAAI,CAAC,KAAK,SAAS,EAAE,CAAC;4BACpB,IAAA,gBAAK,EACH,mCAAmC,KAAK,CAAC,QAAQ,EAAE,kFAAkF,CACtI,CAAC;4BACF,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,CAAC,CAAC;wBAC9C,CAAC;6BAAM,IAAI,QAAQ,KAAK,OAAO,CAAC,EAAE,CAAC;4BACjC,IAAI,YAAY,KAAK,CAAC,EAAE,CAAC;gCACvB,0HAA0H;gCAC1H,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;4BAChC,CAAC;iCAAM,CAAC;gCACN,MAAM,KAAK,GAAG,mBAAmB,CAC/B,IAAI,CAAC,OAAO,EACZ,OAAO,CAAC,MAAM,EACd,MAAM,CACP,CAAC;gCACF,IAAI,KAAK,EAAE,CAAC;oCACV,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;gCACvC,CAAC;qCAAM,CAAC;oCACN,iFAAiF;oCACjF,mCAAmC;oCACnC,MAAM,WAAW,GAAG,aAAa,CAC/B;wCACE,GAAG,EAAE,OAAO,CAAC,GAAG;wCAChB,YAAY,EAAE,OAAO,CAAC,YAAY;qCACnC,EACD,MAAM,CACP,CAAC;oCACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,OAAO,CAAC,CAAC;oCAEjD,iEAAiE;oCACjE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,yDAAyD;oCAC5E,SAAS,WAAW,CAAC;gCACvB,CAAC;4BACH,CAAC;wBACH,CAAC;6BAAM,CAAC;4BACN,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;4BAEvC,IAAI,IAAA,2BAAiB,EAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;gCAC/C,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,IAAI,EAAE,CAAC;gCAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oCACvC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gCACtC,CAAC;4BACH,CAAC;4BAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;4BAE3B,kFAAkF;4BAClF,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE,CAAC;gCAC7B,gCAAgC;gCAChC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,yDAAyD;gCAC5E,SAAS,WAAW,CAAC;4BACvB,CAAC;wBACH,CAAC;wBACD,MAAM;oBACR,CAAC;gBACH,CAAC;YACH,CAAC;YAED,MAAM,GAAG,IAAA,+BAAqB,EAC5B,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAS,CAC5C,CAAC;YACF,wLAAwL;YAExL,IAAI,IAAA,gBAAM,EAAC,MAAM,CAAC,EAAE,CAAC;gBACnB,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;oBACnB,IACE,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK;wBACpC,MAAM,CAAC,SAAS,KAAK,MAAM,EAC3B,CAAC;wBACD,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC;wBAClC,oBAAoB,CAAC,MAAM,CAAC,CAAC;oBAC/B,CAAC;oBACD,IAAI,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;wBAChE,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC;oBACnC,CAAC;gBACH,CAAC;gBACD,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;oBAC1B,MAAM,GAAG,YAAY,CACnB,OAAO,CAAC,UAAU,EAClB,MAAc,EACd,CAAC,MAAM,CAAC,OAAO,CAChB,CAAC;oBACF,IAAA,mCAAyB,EAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC;YAED,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YACvB,IAAI,OAAO,CAAC,QAAQ;gBAAE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;YAEtD,IAAI,OAAO,CAAC,WAAW;gBACrB,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC;oBACtC,YAAY,CAAC,GAAG,EAAE,MAAc,EAAE,KAAK,CAAC,CAAC;oBACzC,IAAA,mCAAyB,EAAC,GAAG,CAAC,CAAC;gBACjC,CAAC;YACH,IAAI,KAAK,KAAK,OAAO,EAAE,CAAC;gBACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,OAAO,MAAM,CAAC;YAChB,CAAC;QACH,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,WAAW;QACjB,MAAM,KAAK,GAAsB,EAAE,CAAC;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAY,CAAC;QAC7C,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,QAAQ,GACZ,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,WAAW;gBACtC,CAAC,CAAC,IAAI;gBACN,CAAC,CAAC;oBACE,IAAI,EAAE,wBAAc,CAAC,WAAW;oBAChC,MAAM,EAAE,SAAgB;oBACxB,IAAI;iBACL,CAAC;YACR,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,IAAI,EAAE,CAAC;gBAC/C,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;oBACrD,KAAK,MAAM,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;wBAC3C,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClB,CAAC;gBACH,CAAC;qBAAM,CAAC;oBACN,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACvB,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvB,CAAC;QACH,CAAC;QACD,MAAM,CAAC,GAAS,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC;QACtD,KAAK,MAAM,MAAM,IAAI,CAAC,CAAC,KAAK;YAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEO,kBAAkB;QACxB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAY,CAAC;QACxC,IAAI,MAAM,GAAqB,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,CAAC,CAAC;YAC9C,OAAO;QACT,CAAC;QACD,MAAM,WAAW,GAAgB,EAAE,CAAC;QACpC,MAAM,UAAU,GAAwB,EAAE,CAAC;QAC3C,MAAM,iBAAiB,GAAW,EAAE,CAAC;QAErC,SAAS,iBAAiB,CAAC,CAAO;YAChC,IAAI,CAAC,CAAC,WAAW,KAAK,WAAW;gBAAE,OAAO;YAC1C,IAAI,CAAC,CAAC,WAAW;gBAAE,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;YAC7D,IAAI,CAAC,CAAC,UAAU;gBACd,UAAU,CAAC,IAAI,CAAC,GAAI,CAAC,CAAC,UAAkC,CAAC,CAAC;QAC9D,CAAC;QAED,SAAS,WAAW,CAAC,CAAO,EAAE,SAAoB;YAChD,IACE,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa;gBACvC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAC/B,CAAC;gBACD,OAAO,IAAA,oBAAU,EAAC;oBAChB,IAAI,EAAE,wBAAc,CAAC,KAAK;oBAC1B,KAAK,EAAE,SAAS,CAAC,KAAK;yBACnB,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yBACxB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,CAAC;iBAChD,CAAC,CAAC;YACL,CAAC;YACD,OAAO,IAAA,oBAAU,EAAC;gBAChB,IAAI,EAAE,wBAAc,CAAC,KAAK;gBAC1B,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAA,yBAAY,EAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACvD,CAAC,CAAC;QACL,CAAC;QAED,SAAS,eAAe,CAAC,CAAO,EAAE,UAA6B;YAC7D,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAClC,OAAO,IAAA,yBAAY,EAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,CAAC;YAC1E,CAAC;YACD,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACnC,WAAW,CAAC,2BAAiB,CAAC,MAAM,CAAC,GAAG,iBAAiB,CAAC;YAC1D,OAAO,CAAC,CAAC;QACX,CAAC;QAED,SAAS,QAAQ,CAAC,CAAO,EAAE,CAAO;YAChC,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,GAAG;gBAAE,OAAO,CAAC,CAAC;YAC5C,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,GAAG;gBAAE,OAAO,CAAC,CAAC;YAE5C,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;gBACpC,OAAO,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,CAAC;YAED,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;gBACpC,OAAO,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,CAAC;YAED,IACE,CAAC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa;gBACtC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,CAAC;gBAClC,CAAC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa;oBACtC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,CAAC,EAClC,CAAC;gBACD,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACrB,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACrB,OAAO,IAAA,eAAK,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC;YAED,wBAAwB;YACxB,IACE,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM;gBAChC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa,EACvC,CAAC;gBACD,OAAO,CAAC,CAAC;YACX,CAAC;YACD,IACE,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM;gBAChC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa,EACvC,CAAC;gBACD,OAAO,CAAC,CAAC;YACX,CAAC;YAED,IAAI,IAAA,qBAAW,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa,EAAE,CAAC;gBAC9D,OAAO,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,CAAC;YAED,IAAI,IAAA,qBAAW,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa,EAAE,CAAC;gBAC9D,OAAO,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,CAAC;YAED,iBAAiB;YACjB,iBAAiB;YACjB,qBAAqB;YACrB,qBAAqB;YACrB,qBAAqB;YACrB,qBAAqB;YACrB,uBAAuB;YACvB,uBAAuB;YACvB,IAAI,IAAA,qBAAW,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO,EAAE,CAAC;gBACxD,OAAO,IAAA,yBAAY,EAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,CAAC;YACjE,CAAC;YACD,IAAI,IAAA,qBAAW,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO,EAAE,CAAC;gBACxD,OAAO,IAAA,yBAAY,EAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,CAAC;YACjE,CAAC;YAED,+CAA+C;YAC/C,IAAI,IAAA,qBAAW,EAAC,CAAC,CAAC,IAAI,IAAA,qBAAW,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;gBAC1D,OAAO,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,CAAC;YACxC,CAAC;YAED,IACE,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa;gBACvC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK;gBAC/B,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK;gBAC/B,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO;gBAEjC,OAAO,CAAC,CAAC;YAEX,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;gBAClB,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;YAC5C,CAAC;YAED,OAAO,CAAC,CAAC;QACX,CAAC;QAED,KAAK,EAAE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YAChC,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK;gBAAE,SAAS;YACjD,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa,EAAE,CAAC;gBAC/C,KAAK,MAAM,SAAS,IAAI,wBAAc,EAAE,CAAC;oBACvC,IAAI,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC;wBACjC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACtB,SAAS,KAAK,CAAC;oBACjB,CAAC;gBACH,CAAC;YACH,CAAC;YACD,IAAI,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;gBACzC,MAAM,GAAG,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,CAAC;gBACxC,MAAM;YACR,CAAC;iBAAM,IAAI,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO,EAAE,CAAC;gBAClD,MAAM,GAAG,IAAI,CAAC;gBACd,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;iBAAM,CAAC;gBACN,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;QAED,IAAI,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO,EAAE,CAAC;YAC3C,0GAA0G;YAC1G,MAAM,CAAC,kBAAkB,GAAG,UAAU,CAAC;QACzC,CAAC;aAAM,CAAC;YACN,2CAA2C;YAC3C,MAAM,GAAG,IAAA,0BAAgB,EAAC,MAAM,CAAC,CAAC;YAClC,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC;YAC9C,IAAI,UAAU,CAAC,MAAM;gBAAE,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;YACtD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QACjD,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,gBAAgB,CAAC,OAAgB;QACvC,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;QAErD,IAAI,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;YACnC,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;YAEhC,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;gBACvC,qCAAqC;YACvC,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC;QACH,CAAC;aAAM,CAAC;YACN,YAAY;YACZ,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;YAC1C,OAAO,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5D,CAAC;QAED,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QACnD,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACvB,KAAK;YACL,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAY,CAAC;YACxC,MAAM,MAAM,GAAc;gBACxB,IAAI,EAAE,wBAAc,CAAC,KAAK;gBAC1B,KAAK,EAAE,IAAA,2BAAiB,EAAC,KAAK,CAAC;aAChC,CAAC;YACF,MAAM,CAAC,GAAS,IAAA,oBAAU,EAAC,MAAM,CAAC,CAAC;YACnC,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK;gBACjC,KAAK,MAAM,MAAM,IAAI,CAAC,CAAC,KAAK;oBAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YAClD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACf,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YACnD,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,6DAA6D;QAC9F,CAAC;IACH,CAAC;IAEO,iBAAiB;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;QACjC,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;QAEhC,IAAI,CAAC,IAAA,gBAAM,EAAC,IAAI,CAAC,EAAE,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,CAAC,CAAC;QAC5C,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,GAAS,IAAA,qBAAW,EAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACzC,IAAI,IAAA,2BAAiB,EAAC,CAAC,CAAC,EAAE,CAAC;gBACzB,CAAC,CAAC,iBAAiB,GAAG;oBACpB,SAAS,EAAE,IAAyB;oBACpC,KAAK,EAAE,KAAa;iBACrB,CAAC;YACJ,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,IAAA,0BAAgB,EAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAEO,WAAW;QACjB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;QAChC,IACE,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa;YAC1C,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAClC,CAAC;YACD,MAAM,KAAK,GAAG;gBACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;gBAC1B,MAAM,EAAE,IAAI;gBACZ,KAAK,EAAE,EAAE;aACG,CAAC;YACf,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBAChC,IACE,CAAC,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,iBAAiB;oBAC/C,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,QAAQ,CAAC;oBAC1C,MAAM,CAAC,IAAI,KAAK,KAAK,EACrB,CAAC;oBACD,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;wBACf,IAAI,EAAE,wBAAc,CAAC,OAAO;wBAC5B,OAAO,EAAE,MAAM,CAAC,IAAI;wBACpB,MAAM,EAAE,KAAK;wBACb,MAAM,EAAE,MAAM;qBACA,CAAC,CAAC;gBACpB,CAAC;qBAAM,IACL,CAAC,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,eAAe;oBAC7C,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM,CAAC;oBACxC,MAAM,CAAC,IAAI,KAAK,aAAa,EAC7B,CAAC;oBACD,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;wBACf,IAAI,EAAE,wBAAc,CAAC,OAAO;wBAC5B,OAAO,EAAE,MAAM,CAAC,IAAI;wBACpB,MAAM,EAAE,KAAK;wBACb,MAAM,EAAE,MAAM;qBACA,CAAC,CAAC;gBACpB,CAAC;YACH,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;YAC9C,MAAM,KAAK,GAAG;gBACZ,IAAI,EAAE,wBAAc,CAAC,KAAK;gBAC1B,MAAM,EAAE,IAAI;gBACZ,KAAK,EAAE,EAAE;aACG,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3C,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;oBACf,IAAI,EAAE,wBAAc,CAAC,OAAO;oBAC5B,OAAO,EAAE,CAAC;oBACV,MAAM,EAAE,KAAK;iBACC,CAAC,CAAC;YACpB,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,GAAG,EAAE,CAAC;YAC5C,IAAI,CAAC,IAAI,CAAC;gBACR,IAAI,EAAE,wBAAc,CAAC,KAAK;gBAC1B,KAAK,EAAE;oBACL,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE;oBAC/B,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE;oBAC/B,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE;iBAChC;aACF,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAEO,gBAAgB,CAAC,OAAgB,EAAE,QAAQ,GAAG,KAAK;QACzD,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;QACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAY,CAAC;QAE/C,SAAS,aAAa,CAAC,KAAW;YAChC,IACE,KAAK,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM;gBACpC,KAAK,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM;gBACpC,KAAK,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM;gBAEpC,OAAO,IAAI,CAAC;YACd,IAAI,KAAK,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;gBACxC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;YAC5B,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;YAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAU,CAAC;YAC9B,IAAI,KAAK,GAAuD,OAAO;iBACpE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAS,CAAC;YAC/C,IAAI,QAAQ,EAAE,CAAC;gBACb,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;oBACvC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC3B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC5B,CAAC;qBAAM,CAAC;oBACN,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;gBAClC,CAAC;YACH,CAAC;YACD,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC;YACnD,MAAM,OAAO,GACX,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,CAAC;YAEnE,IAAI,KAAK,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;gBACxC,QAAQ;YACV,CAAC;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,wBAAc,CAAC,GAAG,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;gBACrE,MAAM,CAAC,GAAuB;oBAC5B,IAAI,EAAE,wBAAc,CAAC,cAAc;oBACnC,IAAI;oBACJ,KAAK;oBACL,MAAM,EAAE,SAAgB;iBACzB,CAAC;gBACF,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAClB,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACf,CAAC;iBAAM,CAAC;gBACN,IAAI,QAAQ,GAAqB,SAAS,CAAC;gBAC3C,IAAI,QAAQ,GAAqB,SAAS,CAAC;gBAE3C,IACE,KAAK,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO;oBACrC,CAAC,CAAC,KAAK,CAAC,OAAO,YAAY,MAAM,CAAC,EAClC,CAAC;oBACD,QAAQ;wBACN,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,IAAA,kBAAQ,EAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ;4BAC/D,CAAC,CAAC,IAAI;4BACN,CAAC,CAAC,SAAS,CAAC;oBAChB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;gBACxB,CAAC;gBAED,wFAAwF;gBACxF,4DAA4D;gBAC5D,4DAA4D;gBAC5D,qDAAqD;gBACrD,IACE,IAAI,CAAC,MAAM;oBACX,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,iBAAiB;wBACpD,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,QAAQ,CAAC,EAC/C,CAAC;oBACD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ;wBAAE,QAAQ,GAAG,IAAI,CAAC;oBAC1C,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ;wBAAE,QAAQ,GAAG,IAAI,CAAC;gBAC5C,CAAC;gBAED,MAAM,QAAQ,GACZ,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,iBAAiB;oBAC9C,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,QAAQ;oBACrC,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,WAAW;oBACtC,CAAC,CAAC,IAAI;oBACN,CAAC,CAAE;wBACC,IAAI,EAAE,OAAO;4BACX,CAAC,CAAC,wBAAc,CAAC,WAAW;4BAC5B,CAAC,CAAC,wBAAc,CAAC,iBAAiB;wBACpC,IAAI,EAAE,KAAK;wBACX,IAAI;qBACqB,CAAC;gBAElC,IAAI,QAAQ,EAAE,CAAC;oBACb,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC3B,CAAC;gBACD,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,KAAK,wBAAc,CAAC,WAAW;oBAC1D,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAE3B,IAAI,QAAQ,KAAK,IAAI;oBAAE,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBAC9C,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;oBAChD,uBAAuB;oBACvB,IAAI,QAAQ,KAAK,CAAC,EAAE,CAAC;wBACnB,IAAI,QAAQ,kCAA0B,EAAE,CAAC;4BACvC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;wBAC3B,CAAC;wBACD,IAAI,QAAQ,wCAAgC,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC;4BAClE,QAAQ,CAAC,QAAQ,GAAG,SAAS,CAAC;wBAChC,CAAC;wBACD,IAAI,QAAQ,CAAC,IAAI,KAAK,wBAAc,CAAC,WAAW,EAAE,CAAC;4BACjD,IAAI,QAAQ,kCAA0B,EAAE,CAAC;gCACvC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;4BAC3B,CAAC;4BACD,IACE,QAAQ,wCAAgC;gCACxC,QAAQ,CAAC,QAAQ,EACjB,CAAC;gCACD,QAAQ,CAAC,QAAQ,GAAG,SAAS,CAAC;4BAChC,CAAC;wBACH,CAAC;oBACH,CAAC;oBACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC;QACH,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAU,CAAC,CAAC;QAC1D,CAAC;QAED,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QAC3C,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACvB,KAAK;YACL,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC;YACnD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAY,CAAC;YAC1C,IAAI,CAAO,CAAC;YAEZ,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;gBACrE,CAAC,GAAG,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,KAAK,EAAE,OAAgB,EAAE,CAAC;YAC9D,CAAC;iBAAM,CAAC;gBACN,CAAC,GAAG;oBACF,IAAI,EAAE,wBAAc,CAAC,aAAa;oBAClC,EAAE,EAAE,gBAAK,CAAC,SAAS,EAAE;oBACrB,KAAK,EAAE,OAAgB;iBACxB,CAAC;YACJ,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACf,CAAC;aAAM,CAAC;YACN,IAAI,IAAA,kBAAQ,EAAC,IAAI,CAAC,EAAE,CAAC;gBACnB,IAAI,GAAG,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;YAC9D,CAAC;YACD,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,kCAAkC;YACtF,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAEO,qBAAqB;QAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAY,CAAC;QACxC,MAAM,MAAM,GAAc,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;QACpE,MAAM,SAAS,GAAG,IAAI,0BAAgB,EAAE,CAAC;QACzC,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC;QACD,MAAM,OAAO,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC;QAEtC,KAAK,EAAE,KAAK,MAAM,WAAW,IAAI,OAAO,EAAE,CAAC;YACzC,MAAM,QAAQ,GAAwB;gBACpC,IAAI,EAAE,wBAAc,CAAC,eAAe;gBACpC,KAAK,EAAE,EAAE;aACV,CAAC;YACF,IAAI,cAAc,GAAG,KAAK,CAAC;YAC3B,IAAI,WAAW,GAEC,SAAS,CAAC;YAC1B,iGAAiG;YACjG,KAAK,MAAM,IAAI,IAAI,WAAW,EAAE,CAAC;gBAC/B,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;oBACvC,sFAAsF;oBACtF,SAAS,KAAK,CAAC;gBACjB,CAAC;gBAED,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,OAAO,EAAE,CAAC;oBACzC,IAAI,WAAW,EAAE,CAAC;wBAChB,WAAW,CAAC,OAAO,IAAK,IAAI,CAAC,OAAkB,GAAG,EAAE,CAAC;oBACvD,CAAC;yBAAM,CAAC;wBACN,WAAW,GAAG;4BACZ,IAAI,EAAE,wBAAc,CAAC,OAAO;4BAC5B,OAAO,EAAG,IAAI,CAAC,OAAkB,GAAG,EAAE;4BACtC,MAAM,EAAE,QAAQ;yBACjB,CAAC;wBACF,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACnC,CAAC;gBACH,CAAC;qBAAM,CAAC;oBACN,cAAc,GAAG,IAAI,CAAC;oBACtB,WAAW,GAAG,SAAS,CAAC;oBACxB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;oBACvB,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAA4C,CAAC,CAAC;gBACpE,CAAC;YACH,CAAC;YAED,IAAI,cAAc,EAAE,CAAC;gBACnB,IACE,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;oBAC3B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM,EAChD,CAAC;oBACD,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;oBAClC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,CAAC;qBAAM,CAAC;oBACN,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;oBACzB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC;iBAAM,IAAI,WAAW,EAAE,CAAC;gBACvB,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;gBAC5B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACjC,CAAC;QACH,CAAC;QACD,MAAM,CAAC,GAAS,IAAA,oBAAU,EAAC,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK;YACjC,KAAK,MAAM,MAAM,IAAI,CAAC,CAAC,KAAK;gBAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAES,IAAI,CACZ,KAAwB,EACxB,UAAmB,IAAI,CAAC,OAAO;QAE/B,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,YAAY,CAAC;QAEjC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YAC7B,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QAC3B,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAES,GAAG;QACX,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;QAClE,oCAAoC;QACpC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC;IACzD,CAAC;IAES,SAAS;QACjB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG;YACnB,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC;YACnC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;YACrC,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,CAAC;YACZ,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;SAC7B,CAAC;IACJ,CAAC;IAES,QAAQ;QAChB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,EAChE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC,CAC9B,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC;QAC1D,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ;YAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC;QACnD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACO,IAAI,CAAC,OAAe,EAAE,aAAqB,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,sBAAsB;QACpE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,2EAA2E;QAC3E,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,0CAA0C;IAChF,CAAC;IAED;;OAEG;IACO,WAAW;QACnB,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,+CAA+C;QAC/E,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,iFAAiF;QAC1J,mFAAmF;QACnF,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,4EAA4E;QAC3I,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvB,IAAI,QAAQ,KAAK,OAAO,aAAa;YACnC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,aAAa,GAAG,CAAC,CAAC,CAAC,qCAAqC;QACjF,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ;YAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC;IACrD,CAAC;IAES,QAAQ,CAAC,IAAU;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;IAES,YAAY;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;CACF;AA55DD,8BA45DC;AAED,SAAS,sBAAsB,CAAC,SAAwB;IACtD,MAAM,KAAK,GAAc,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;IACnE,KAAK,MAAM,IAAI,IAAI,SAAS,EAAE,CAAC;QAC7B,MAAM,IAAI,GAAG,IAAA,sBAAY,EAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAA,wBAAc,EAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC;YAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;QAC7B,CAAC,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,GAAG,EAAE;QAC9B,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;YACxB,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,CAAC,CAAC,KAAK,CAAC;AACd,CAAC;;AAED,SAAgB,SAAS,CAAC,KAAU;IAClC,IACE,QAAQ,KAAK,OAAO,KAAK;QACzB,QAAQ,KAAK,OAAO,KAAK;QACzB,SAAS,KAAK,OAAO,KAAK;QAC1B,QAAQ,KAAK,OAAO,KAAK;QACzB,QAAQ,KAAK,OAAO,KAAK,EACzB,CAAC;QACD,OAAO,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;IAC1D,CAAC;SAAM,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC;QAC1B,OAAO,EAAE,IAAI,EAAE,wBAAc,CAAC,IAAI,EAAE,CAAC;IACvC,CAAC;SAAM,IAAI,SAAS,KAAK,KAAK,EAAE,CAAC;QAC/B,OAAO,EAAE,IAAI,EAAE,wBAAc,CAAC,SAAS,EAAE,CAAC;IAC5C,CAAC;SAAM,IAAI,KAAK,YAAY,MAAM,EAAE,CAAC;QACnC,OAAO,EAAE,IAAI,EAAE,wBAAc,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;IAC1D,CAAC;SAAM,IAAI,UAAU,KAAK,OAAO,KAAK,EAAE,CAAC;QACvC,IAAI,IAAA,cAAO,EAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1B,uCAAuC;YACvC,8DAA8D;YAC9D,2CAA2C;YAC3C,OAAO,SAAS,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE;gBAC/C,MAAM,EAAE,IAAI;aACb,CAAS,CAAC;QACb,CAAC;QAED,IAAI,IAAA,cAAO,EAAC,KAAK,CAAC,EAAE,CAAC;YACnB,eAAe;YACf,OAAO;gBACL,IAAI,EAAE,wBAAc,CAAC,KAAK;gBAC1B,SAAS,EAAE,KAAkB;gBAC7B,KAAK,EAAE,EAAE;aACV,CAAC;QACJ,CAAC;QAED,OAAO;YACL,IAAI,EAAE,wBAAc,CAAC,QAAQ;YAC7B,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,MAAM,EAAE,EAAE,IAAI,EAAE,wBAAc,CAAC,GAAG,EAAE;YACpC,UAAU,EAAE,EAAE;SACf,CAAC;IACJ,CAAC;SAAM,IAAI,IAAA,cAAO,EAAC,KAAK,CAAC,EAAE,CAAC;QAC1B,OAAO,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,IAAI,EAAE,sBAAsB,CAAC,KAAK,CAAC,EAAE,CAAC;IAC7E,CAAC;SAAM,IAAI,QAAQ,KAAK,OAAO,KAAK,EAAE,CAAC;QACrC,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACtC,IACE,UAAU,KAAK,OAAO,WAAW;YACjC,WAAW,KAAK,MAAM;YACtB,IAAA,cAAO,EAAC,WAAW,CAAC,MAAM,CAAC,EAC3B,CAAC;YACD,oBAAoB;YACpB,8DAA8D;YAC9D,OAAO,SAAS,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,EAAE;gBACrD,MAAM,EAAE,IAAI;aACb,CAAS,CAAC;QACb,CAAC;QAED,IAAI,WAAW,KAAK,MAAM;YAAE,OAAO,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE,CAAC;QACnE,IAAI,WAAW,KAAK,IAAI;YACtB,OAAO,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;QACpE,IAAI,WAAW,KAAK,GAAG,EAAE,CAAC;YACxB,MAAM,IAAI,GAAG,sBAAsB,CAAC,KAAK,CAAC,CAAC;YAC3C,OAAO;gBACL,IAAI,EAAE,wBAAc,CAAC,KAAK;gBAC1B,SAAS,EAAE,GAAG;gBACd,SAAS,EAAE,CAAC,IAAI,CAAC;gBACjB,KAAK,EAAE,EAAE;aACV,CAAC;QACJ,CAAC;QAED,IAAI,WAAW,KAAK,GAAG,EAAE,CAAC;YACxB,MAAM,OAAO,GAAG,sBAAsB,CAAE,KAAuB,CAAC,IAAI,EAAE,CAAC,CAAC;YACxE,MAAM,SAAS,GAAG,sBAAsB,CACrC,KAAuB,CAAC,MAAM,EAAE,CAClC,CAAC;YACF,OAAO;gBACL,IAAI,EAAE,wBAAc,CAAC,KAAK;gBAC1B,SAAS,EAAE,GAAG;gBACd,SAAS,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC;gBAC/B,KAAK,EAAE,EAAE;aACV,CAAC;QACJ,CAAC;QAED,gKAAgK;QAChK,8GAA8G;QAC9G,2HAA2H;QAC3H,8DAA8D;QAC9D,MAAM,UAAU,GAAsB;YACpC,IAAI,EAAE,wBAAc,CAAC,aAAa;YAClC,EAAE,EAAE,gBAAK,CAAC,SAAS,EAAE;YACrB,KAAK,EAAE,EAAE;SACV,CAAC;QACF,MAAM,GAAG,GAAmB,EAAE,CAAC;QAC/B,MAAM,KAAK,GAAwB,EAAE,CAAC;QAEtC,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC;YACtB,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC;YACpC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3B,GAAG,CAAC,IAAI,CAAC,wBAAY,CAAC,MAAM,EAAE,cAAc,EAAE,wBAAY,CAAC,KAAK,CAAC,CAAC;YAElE,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,GAAG,CAAC,IAAI,CAAC,wBAAY,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;QACtD,CAAC;QAED,GAAG,CAAC,IAAI,CAAC,wBAAY,CAAC,aAAa,CAAC,CAAC;QAErC,OAAO,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAC/B,aAAa,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,CAClC,CAAC;IACZ,CAAC;IACD,OAAO,EAAE,IAAI,EAAE,wBAAc,CAAC,GAAG,EAAE,CAAC;AACtC,CAAC;;AAED,SAAS,oBAAoB,CAAC,IAAe;IAC3C,IAAI,CAAC,IAAA,uCAAwB,EAAC,IAAI,CAAC,SAAS,CAAC;QAAE,OAAO;IAEtD,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACpD,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,0BAA0B,EAAE,GAAG,SAAS,CAAC;QAEjE,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;YAC3B,MAAM,MAAM,GAAG,IAAA,mBAAS,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM;gBAAE,SAAS;YAEtB,IACE,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,iBAAiB;gBAChD,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,QAAQ,EACvC,CAAC;gBACD,sBAAsB,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC5C,CAAC;YAED,IACE,QAAQ,KAAK,OAAO,0BAA0B;gBAC9C,CAAC,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,MAAM;oBACpC,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,eAAe,CAAC,EACjD,CAAC;gBACD,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC;gBAC5D,IAAI,KAAK,EAAE,CAAC;oBACV,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC3C,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC;;AAED,SAAS,sBAAsB,CAAC,IAAU,EAAE,IAAW;IACrD,+BAA+B;IAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAA,2BAAiB,EAAC,IAAI,CAAC,EAAE,CAAC;QACtD,MAAM,WAAW,GAAG,IAAA,wBAAc,EAAC,IAAI,CAAC,CAAC;QACzC,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACxC,8BAAoB,CAAC,QAAQ,CAAC,WAAW,EAAE;gBACzC,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE;oBACJ;wBACE,IAAI,EAAE,wBAAc,CAAC,QAAQ;wBAC7B,QAAQ,EAAE,SAAS;wBACnB,UAAU,EAAE,EAAE;wBACd,MAAM,EAAE,EAAE,IAAI,EAAE,wBAAc,CAAC,GAAG,EAAE;qBACrC;iBACF;aACF,CAAC,CAAC;QACL,CAAC;IACH,CAAC;AACH,CAAC;;AAED,SAAS,wBAAwB,CAC/B,MAAmD;IAEnD,OAAO,CACL,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,iBAAiB;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,QAAQ;QAC5C,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAClC,CAAC;AACJ,CAAC;;AAED,SAAS,sBAAsB,CAC7B,IAAuB,EACvB,KAMG;IAEH,IAAI,WAAW,GAAgB,EAAE,CAAC;IAClC,MAAM,UAAU,GAAW,EAAE,CAAC;IAE9B,KAAK,EAAE,KAAK,MAAM,MAAM,IAAI,KAAK,EAAE,CAAC;QAClC,IACE,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,iBAAiB;YAChD,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK;YAEzC,SAAS;QAEX,IAAI,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa,EAAE,CAAC;YACjD,uGAAuG;YACvG,uDAAuD;YAEvD,yBAAyB;YACzB,KAAK,MAAM,SAAS,IAAI,wBAAc,EAAE,CAAC;gBACvC,IAAI,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,EAAE,CAAC;oBACnC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACxB,SAAS,KAAK,CAAC;gBACjB,CAAC;YACH,CAAC;YAED,IAAI,CAAC,UAAU,KAAf,IAAI,CAAC,UAAU,GAAK,EAAE,EAAC;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE7B,sBAAsB,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;YAE3C,qBAAqB;YACrB,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;gBACtB,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;YACxC,CAAC;YACD,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC;gBACvB,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;YAC/D,CAAC;QACH,CAAC;aAAM,IAAI,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,cAAc,EAAE,CAAC;YACzD,uDAAuD;YACvD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1B,CAAC;aAAM,IACL,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,iBAAiB;YAChD,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,eAAe,EAC9C,CAAC;YACD,MAAM,KAAK,GAAG,wBAAwB,CAAC,MAAM,CAAC;gBAC5C,CAAC,CAAE;oBACC,IAAI,EAAE,wBAAc,CAAC,eAAe;oBACpC,IAAI,EAAE,MAAM,CAAC,IAAI;oBACjB,QAAQ,EAAE,MAAM,CAAC,QAAQ;oBACzB,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU;oBAClC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM;iBACH;gBAC3B,CAAC,CAAC,MAAM,CAAC;YAEX,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,cACnC,CAAC,CAAC,EAAE,CACF,CAAC,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,iBAAiB;gBAC1C,CAAC,CAAC,IAAI,KAAK,wBAAc,CAAC,eAAe,CAAC;gBAC5C,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,wBACxB,CAAC;YACF,IAAI,QAAQ,KAAK,CAAC,CAAC,EAAE,CAAC;gBACpB,mCAAmC;gBACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YACxC,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC;QACH,CAAC;aAAM,IAAI,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,aAAa,EAAE,CAAC;YACxD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;IAC1C,IAAI,UAAU,CAAC,MAAM;QAAE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAEpD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;AAC/C,CAAC;;AAED,SAAgB,WAAW,CAAC,MAAa;IACvC,IAAI,cAAc,GAAG,KAAK,CAAC;IAC3B,IAAI,SAAS,GAAG,KAAK,CAAC;IACtB,IAAI,WAAW,GAAG,KAAK,CAAC;IACxB,IAAI,WAAW,GAAG,KAAK,CAAC;IAExB,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,SAAS;YAAE,cAAc,GAAG,IAAI,CAAC;QAC3C,IAAI,CAAC,KAAK,IAAI;YAAE,SAAS,GAAG,IAAI,CAAC;QACjC,IAAI,OAAO,CAAC,KAAK,QAAQ;YAAE,WAAW,GAAG,IAAI,CAAC;QAC9C,IAAI,OAAO,CAAC,KAAK,QAAQ;YAAE,WAAW,GAAG,IAAI,CAAC;IAChD,CAAC;IAED,MAAM,KAAK,GAAc,EAAE,IAAI,EAAE,wBAAc,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;IACnE,IAAI,WAAW;QAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE,CAAC,CAAC;IACnE,IAAI,WAAW;QAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,MAAM,EAAE,CAAC,CAAC;IACnE,IAAI,SAAS;QAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,IAAI,EAAE,CAAC,CAAC;IAC/D,IAAI,cAAc;QAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAc,CAAC,SAAS,EAAE,CAAC,CAAC;IAEzE,OAAO,IAAA,oBAAU,EAAC,KAAK,CAAC,CAAC;AAC3B,CAAC;;AAED,SAAS,eAAe,CAAqB,EAAK,EAAE,SAAc;IAChE,IAAI,CAAC;QACH,OAAO,EAAE,EAAE,CAAC;IACd,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,SAAS,CAAC;QACjB,qHAAqH;IACvH,CAAC;AACH,CAAC"}
\ No newline at end of file
diff --git a/dist/cjs/src/reflection/reflection.d.ts b/dist/cjs/src/reflection/reflection.d.ts
index 48bd902420f48d3622f1b5b5ee2ef4fb4e5b9a50..c168ec7dda145d40bf4751f5251c29325e541be2 100644
--- a/dist/cjs/src/reflection/reflection.d.ts
+++ b/dist/cjs/src/reflection/reflection.d.ts
@@ -1,8 +1,8 @@
-import { BackReferenceOptionsResolved, DatabaseFieldOptions, IndexOptions, ReferenceOptions, ReflectionKind, ReflectionVisibility, Type, TypeClass, TypeFunction, TypeMethod, TypeMethodSignature, TypeObjectLiteral, TypeParameter, TypeProperty, TypePropertySignature, TypeTemplateLiteral } from './type.js';
-import { AbstractClassType, ClassType } from '@deepkit/core';
-import { Packed } from './processor.js';
-import type { ValidateFunction } from '../validator.js';
-import { SerializedTypes } from '../type-serialization.js';
+import { AbstractClassType, ClassType } from "@deepkit/core";
+import { SerializedTypes } from "../type-serialization.js";
+import type { ValidateFunction } from "../validator.js";
+import { Packed } from "./processor.js";
+import { BackReferenceOptionsResolved, DatabaseFieldOptions, IndexOptions, ReferenceOptions, ReflectionKind, ReflectionVisibility, TagsReflection, Type, TypeClass, TypeFunction, TypeMethod, TypeMethodSignature, TypeObjectLiteral, TypeParameter, TypeProperty, TypePropertySignature, TypeTemplateLiteral } from "./type.js";
 /**
  * Receives the runtime type of template argument.
  *
@@ -45,6 +45,7 @@ export declare class ReflectionParameter {
     hasDefault(): boolean;
     isValueRequired(): boolean;
     getDefaultValue(): any;
+    setDefaultValue(value: any): void;
     hasDefaultFunctionExpression(): boolean;
     applyDecorator(t: TData): void;
     getVisibility(): ReflectionVisibility | undefined;
@@ -52,6 +53,15 @@ export declare class ReflectionParameter {
     isProtected(): boolean;
     isPrivate(): boolean;
     isReadonly(): boolean;
+    setTags(tags: TagsReflection): void;
+    getTags(): TagsReflection;
+    isHidden(): boolean;
+    isIgnored(): boolean;
+    isInternal(): boolean;
+    getAlias(): string[];
+    getTitle(): string | undefined;
+    getPermission(): string[];
+    getDomain(): string | undefined;
     /**
      * True if the parameter becomes a property in the class.
      * This is the case for parameters in constructors with visibility or readonly.
@@ -69,10 +79,11 @@ export declare class ReflectionParameter {
 export declare class ReflectionFunction {
     readonly type: TypeMethod | TypeMethodSignature | TypeFunction;
     parameters: ReflectionParameter[];
+    parameterAliases: Map<string, string>;
     description: string;
     constructor(type: TypeMethod | TypeMethodSignature | TypeFunction);
     static from(fn: Function): ReflectionFunction;
-    getParameterNames(): (string)[];
+    getParameterNames(): string[];
     hasParameter(name: string | number | symbol): boolean;
     getParameterOrUndefined(name: string | number | symbol): ReflectionParameter | undefined;
     getParameter(name: string | number | symbol): ReflectionParameter;
@@ -82,6 +93,16 @@ export declare class ReflectionFunction {
     getName(): number | string | symbol;
     getDescription(): string;
     get name(): string;
+    setTags(tags: TagsReflection): void;
+    getTags(): TagsReflection;
+    isHidden(): boolean;
+    isReadonly(): boolean;
+    isIgnored(): boolean;
+    isInternal(): boolean;
+    getAlias(): string[];
+    getTitle(): string | undefined;
+    getPermission(): string[];
+    getDomain(): string | undefined;
 }
 /**
  * @reflection never
@@ -98,6 +119,16 @@ export declare class ReflectionMethod extends ReflectionFunction {
     applyDecorator(data: TData): void;
     clone(reflectionClass?: ReflectionClass<any>, method?: TypeMethod | TypeMethodSignature): ReflectionMethod;
     isOptional(): boolean;
+    setTags(tags: TagsReflection): void;
+    getTags(): TagsReflection;
+    isHidden(): boolean;
+    isIgnored(): boolean;
+    isReadonly(): boolean;
+    isInternal(): boolean;
+    getAlias(): string[];
+    getTitle(): string | undefined;
+    getPermission(): string[];
+    getDomain(): string | undefined;
 }
 export declare function resolveForeignReflectionClass(property: ReflectionProperty): ReflectionClass<any>;
 /**
@@ -215,12 +246,22 @@ export declare class ReflectionProperty {
     isAbstract(): boolean;
     hasDefault(): boolean;
     getDefaultValue(): any;
+    setDefaultValue(value: any): void;
     hasDefaultFunctionExpression(): boolean;
     getDefaultValueFunction(): (() => any) | undefined;
     getVisibility(): ReflectionVisibility | undefined;
     isPublic(): boolean;
     isProtected(): boolean;
     isPrivate(): boolean;
+    setTags(tags: TagsReflection): void;
+    getTags(): TagsReflection;
+    isHidden(): boolean;
+    isIgnored(): boolean;
+    isInternal(): boolean;
+    getAlias(): string[];
+    getTitle(): string | undefined;
+    getPermission(): string[];
+    getDomain(): string | undefined;
 }
 export declare const reflectionClassSymbol: unique symbol;
 export interface SerializerFn {
@@ -260,6 +301,10 @@ export declare class ReflectionClass<T> {
      * The description, extracted from the class JSDoc @description.
      */
     description: string;
+    /**
+     * The tags, extracted from the class JSDoc @tag.
+     */
+    tags?: TagsReflection;
     /**
      * A place where arbitrary data is stored, usually set via decorator t.data.
      */
@@ -318,7 +363,9 @@ export declare class ReflectionClass<T> {
     protected propertyNames: string[];
     protected methodNames: string[];
     protected properties: ReflectionProperty[];
+    protected propertyAliases: Map<string, string>;
     protected methods: ReflectionMethod[];
+    protected methodAliases: Map<string, string>;
     /**
      * References and back references.
      */
@@ -365,6 +412,8 @@ export declare class ReflectionClass<T> {
         description?: string;
         visibility?: ReflectionVisibility;
         type: Type;
+        default?: any;
+        tags?: TagsReflection;
     }): ReflectionProperty;
     registerMethod(method: ReflectionMethod): void;
     add(member: Type): void;
@@ -396,6 +445,16 @@ export declare class ReflectionClass<T> {
     getMethod(name: string | number | symbol): ReflectionMethod;
     hasCircularReference(): boolean;
     serializeType(): SerializedTypes;
+    setTags(tags: TagsReflection): void;
+    getTags(): TagsReflection;
+    isHidden(): boolean;
+    isIgnored(): boolean;
+    isInternal(): boolean;
+    isReadonly(): boolean;
+    getAlias(): string[];
+    getTitle(): string | undefined;
+    getPermission(): string[];
+    getDomain(): string | undefined;
     /**
      * All references have a counter-part. This methods finds it and errors if not possible.
      *
diff --git a/dist/cjs/src/reflection/reflection.js b/dist/cjs/src/reflection/reflection.js
index ed62c96328641f775ed2e0c5138640c30207a22d..6c65b961c8e31dba72ae2c725de35af2b48bcb53 100644
--- a/dist/cjs/src/reflection/reflection.js
+++ b/dist/cjs/src/reflection/reflection.js
@@ -17,27 +17,27 @@ exports.visit = visit;
 exports.resolveForeignReflectionClass = resolveForeignReflectionClass;
 exports.resolveClassType = resolveClassType;
 /*@ts-ignore*/
-const { __ΩPacked } = require('./processor.js');
+const { __ΩPacked } = require("./processor.js");
 /*@ts-ignore*/
-const { __ΩClassType } = require('@deepkit/core');
+const { __ΩClassType } = require("@deepkit/core");
 /*@ts-ignore*/
-const { __ΩAbstractClassType } = require('@deepkit/core');
+const { __ΩAbstractClassType } = require("@deepkit/core");
 /*@ts-ignore*/
-const { __ΩTypeObjectLiteral } = require('./type.js');
+const { __ΩTypeObjectLiteral } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩTypeClass } = require('./type.js');
+const { __ΩTypeClass } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩTypeProperty } = require('./type.js');
+const { __ΩTypeProperty } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩTypePropertySignature } = require('./type.js');
+const { __ΩTypePropertySignature } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩTypeMethod } = require('./type.js');
+const { __ΩTypeMethod } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩTypeMethodSignature } = require('./type.js');
+const { __ΩTypeMethodSignature } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩIndexOptions } = require('./type.js');
+const { __ΩIndexOptions } = require("./type.js");
 /*@ts-ignore*/
-const { __ΩEntityOptions } = require('./type.js');
+const { __ΩEntityOptions } = require("./type.js");
 function __assignType(fn, args) {
     fn.__type = args;
     return fn;
@@ -51,13 +51,13 @@ function __assignType(fn, args) {
  *
  * You should have received a copy of the MIT License along with this program.
  */
-const type_js_1 = require("./type.js");
 const core_1 = require("@deepkit/core");
-const processor_js_1 = require("./processor.js");
-const utils_js_1 = require("../utils.js");
-const inheritance_js_1 = require("../inheritance.js");
 const decorator_js_1 = require("../decorator.js");
+const inheritance_js_1 = require("../inheritance.js");
 const type_serialization_js_1 = require("../type-serialization.js");
+const utils_js_1 = require("../utils.js");
+const processor_js_1 = require("./processor.js");
+const type_js_1 = require("./type.js");
 const __ΩReceiveType = ['T', () => __ΩPacked, 'Type', () => __ΩClassType, 'ReceiveType', 'b!Pn""w#e"!o$"Jw%y'];
 exports.__ΩReceiveType = __ΩReceiveType;
 function resolveReceiveType(type) {
@@ -69,7 +69,7 @@ function resolveReceiveType(type) {
             return type.__type;
         // this is fast path for simple references to a type, e.g. cast<User>(), so that User is directly handled
         // instead of running the VM to resolve to User first.
-        if (type[type.length - 1] === 'n!' || type[type.length - 1] === 'P7!') {
+        if (type[type.length - 1] === "n!" || type[type.length - 1] === "P7!") {
             //n! represents a simple inline: [Op.inline, 0]
             //P7! represents a class reference: [Op.Frame, Op.classReference, 0] (Op.Frame seems unnecessary)
             typeFn = type[0];
@@ -86,15 +86,15 @@ function resolveReceiveType(type) {
     if ((0, type_js_1.isType)(type))
         return type;
     if ((0, core_1.isClass)(type) || (0, core_1.isGlobalClass)(type)) {
-        if (!('__type' in type)) {
+        if (!("__type" in type)) {
             if (type.__cached_type)
                 return type.__cached_type;
             // disabled reflection for this class, so we return shallow TypeClass
-            return type.__cached_type = {
+            return (type.__cached_type = {
                 kind: type_js_1.ReflectionKind.class,
                 classType: type,
-                types: [],
-            };
+                types: []
+            });
         }
         return (0, processor_js_1.resolveRuntimeType)(type);
     }
@@ -124,7 +124,8 @@ function valuesOf(args = [], p = valuesOf.Ω?.[0]) {
             return v;
         }, ['v', '', 'P"2!"/"']));
     }
-    if (type.kind === type_js_1.ReflectionKind.objectLiteral || type.kind === type_js_1.ReflectionKind.class) {
+    if (type.kind === type_js_1.ReflectionKind.objectLiteral ||
+        type.kind === type_js_1.ReflectionKind.class) {
         return type.types.map(__assignType(v => {
             if (v.kind === type_js_1.ReflectionKind.method)
                 return v;
@@ -143,7 +144,8 @@ valuesOf.__type = ['args', () => [], () => __ΩReceiveType, 'p', 'Type', 'values
 function propertiesOf(args = [], p = propertiesOf.Ω?.[0]) {
     propertiesOf.Ω = undefined;
     const type = typeOf(args, p);
-    if (type.kind === type_js_1.ReflectionKind.objectLiteral || type.kind === type_js_1.ReflectionKind.class) {
+    if (type.kind === type_js_1.ReflectionKind.objectLiteral ||
+        type.kind === type_js_1.ReflectionKind.class) {
         return type.types.map(__assignType(v => {
             if (v.kind === type_js_1.ReflectionKind.method)
                 return v.name;
@@ -162,7 +164,8 @@ propertiesOf.__type = ['args', () => [], () => __ΩReceiveType, 'p', 'Type', 'pr
 function getNominalId(args = [], p = getNominalId.Ω?.[0]) {
     getNominalId.Ω = undefined;
     const t = typeOf(args, p);
-    if (t.kind === type_js_1.ReflectionKind.class || t.kind === type_js_1.ReflectionKind.objectLiteral)
+    if (t.kind === type_js_1.ReflectionKind.class ||
+        t.kind === type_js_1.ReflectionKind.objectLiteral)
         return t.id;
     return;
 }
@@ -170,9 +173,11 @@ getNominalId.__type = ['args', () => [], () => __ΩReceiveType, 'p', 'getNominal
 function typeOf(args = [], p = typeOf.Ω?.[0]) {
     typeOf.Ω = undefined;
     if (p) {
-        return args.length > 0 ? (0, processor_js_1.resolveRuntimeType)(p, args) : resolveReceiveType(p);
+        return args.length > 0
+            ? (0, processor_js_1.resolveRuntimeType)(p, args)
+            : resolveReceiveType(p);
     }
-    throw new Error('No type given');
+    throw new Error("No type given");
 }
 typeOf.__type = ['args', () => [], () => __ΩReceiveType, 'p', 'Type', 'typeOf', 'P"F2!>""o#"2$8"w%/&'];
 function removeTypeName(type) {
@@ -190,7 +195,8 @@ function removeNominal(type) {
         return type.map(__assignType(v => removeNominal(v), ['v', '', 'P"2!"/"']));
     }
     else {
-        if (type.kind === type_js_1.ReflectionKind.class || type.kind === type_js_1.ReflectionKind.objectLiteral) {
+        if (type.kind === type_js_1.ReflectionKind.class ||
+            type.kind === type_js_1.ReflectionKind.objectLiteral) {
             return { ...type, id: undefined };
         }
     }
@@ -199,19 +205,30 @@ function removeNominal(type) {
 removeNominal.__type = ['type', 'removeNominal', 'P"2!"/"'];
 function getProperty(type, memberName) {
     for (const t of type.types) {
-        if ((t.kind === type_js_1.ReflectionKind.property || t.kind === type_js_1.ReflectionKind.propertySignature) && t.name === memberName)
+        if ((t.kind === type_js_1.ReflectionKind.property ||
+            t.kind === type_js_1.ReflectionKind.propertySignature) &&
+            t.name === memberName)
             return t;
     }
     return;
 }
 getProperty.__type = [() => __ΩTypeObjectLiteral, () => __ΩTypeClass, 'type', 'memberName', () => __ΩTypeProperty, () => __ΩTypePropertySignature, 'getProperty', 'PPn!n"J2#P\'&+J2$Pn%n&-J/\''];
 function toSignature(type) {
-    if (type.kind === type_js_1.ReflectionKind.propertySignature || type.kind === type_js_1.ReflectionKind.methodSignature)
+    if (type.kind === type_js_1.ReflectionKind.propertySignature ||
+        type.kind === type_js_1.ReflectionKind.methodSignature)
         return type;
     if (type.kind === type_js_1.ReflectionKind.property) {
-        return { ...type, parent: type.parent, kind: type_js_1.ReflectionKind.propertySignature };
+        return {
+            ...type,
+            parent: type.parent,
+            kind: type_js_1.ReflectionKind.propertySignature
+        };
     }
-    return { ...type, parent: type.parent, kind: type_js_1.ReflectionKind.methodSignature };
+    return {
+        ...type,
+        parent: type.parent,
+        kind: type_js_1.ReflectionKind.methodSignature
+    };
 }
 toSignature.__type = [() => __ΩTypeProperty, () => __ΩTypeMethod, () => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, 'type', () => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, 'toSignature', 'PPn!n"n#n$J2%Pn&n\'J/('];
 function hasCircularReference(type) {
@@ -222,25 +239,25 @@ function hasCircularReference(type) {
     visit(type, () => undefined, () => {
         hasCircular = true;
     });
-    return jit.hasCircularReference = hasCircular;
+    return (jit.hasCircularReference = hasCircular);
 }
 hasCircularReference.__type = ['Type', 'type', 'hasCircularReference', 'P"w!2""/#'];
 let visitStackId = 0;
 function extendPath(path, member) {
-    let name = '';
-    if ('name' in member) {
+    let name = "";
+    if ("name" in member) {
         name = member.name;
     }
-    if (name === '' || name === undefined)
+    if (name === "" || name === undefined)
         return path;
     if (path)
-        return path + '.' + String(name);
+        return path + "." + String(name);
     return String(name);
 }
 extendPath.__type = ['path', 'Type', 'member', 'extendPath', 'P&2!"w"2#&/$'];
 function visit(type, visitor, onCircular) {
     const stack = [];
-    stack.push({ type, depth: 0, path: '' });
+    stack.push({ type, depth: 0, path: "" });
     const stackId = visitStackId++;
     while (stack.length) {
         const entry = stack.shift();
@@ -248,7 +265,9 @@ function visit(type, visitor, onCircular) {
             break;
         const type = entry.type;
         const jit = (0, type_js_1.getTypeJitContainer)(type);
-        if (jit.visitStack && jit.visitStack.id === stackId && jit.visitStack.depth < entry.depth) {
+        if (jit.visitStack &&
+            jit.visitStack.id === stackId &&
+            jit.visitStack.depth < entry.depth) {
             if (onCircular)
                 onCircular();
             return;
@@ -267,7 +286,7 @@ function visit(type, visitor, onCircular) {
                     stack.push({
                         type: member,
                         depth: entry.depth + 1,
-                        path: extendPath(entry.path, member),
+                        path: extendPath(entry.path, member)
                     });
                 break;
             case type_js_1.ReflectionKind.string:
@@ -277,17 +296,25 @@ function visit(type, visitor, onCircular) {
             case type_js_1.ReflectionKind.regexp:
             case type_js_1.ReflectionKind.boolean:
                 if (type.origin)
-                    stack.push({ type: type.origin, depth: entry.depth + 1, path: entry.path });
+                    stack.push({
+                        type: type.origin,
+                        depth: entry.depth + 1,
+                        path: entry.path
+                    });
                 break;
             case type_js_1.ReflectionKind.function:
             case type_js_1.ReflectionKind.method:
             case type_js_1.ReflectionKind.methodSignature:
-                stack.push({ type: type.return, depth: entry.depth + 1, path: entry.path });
+                stack.push({
+                    type: type.return,
+                    depth: entry.depth + 1,
+                    path: entry.path
+                });
                 for (const member of type.parameters)
                     stack.push({
                         type: member,
                         depth: entry.depth + 1,
-                        path: extendPath(entry.path, member),
+                        path: extendPath(entry.path, member)
                     });
                 break;
             case type_js_1.ReflectionKind.propertySignature:
@@ -297,11 +324,23 @@ function visit(type, visitor, onCircular) {
             case type_js_1.ReflectionKind.parameter:
             case type_js_1.ReflectionKind.tupleMember:
             case type_js_1.ReflectionKind.rest:
-                stack.push({ type: type.type, depth: entry.depth + 1, path: entry.path });
+                stack.push({
+                    type: type.type,
+                    depth: entry.depth + 1,
+                    path: entry.path
+                });
                 break;
             case type_js_1.ReflectionKind.indexSignature:
-                stack.push({ type: type.index, depth: entry.depth + 1, path: entry.path });
-                stack.push({ type: type.type, depth: entry.depth + 1, path: entry.path });
+                stack.push({
+                    type: type.index,
+                    depth: entry.depth + 1,
+                    path: entry.path
+                });
+                stack.push({
+                    type: type.type,
+                    depth: entry.depth + 1,
+                    path: entry.path
+                });
                 break;
         }
     }
@@ -309,25 +348,25 @@ function visit(type, visitor, onCircular) {
 visit.__type = ['Type', 'type', 'path', false, '', 'visitor', 'onCircular', 'visit', 'P"w!2"P"w!2"&2#P.$$J/%2&P$/%2\'8$/('];
 function hasFunctionExpression(fn) {
     let code = fn.toString();
-    if (code.startsWith('() => '))
-        code = code.slice('() => '.length);
-    if (code.startsWith('function () { return ')) {
-        code = code.slice('function () { return '.length);
-        if (code.endsWith('; }'))
+    if (code.startsWith("() => "))
+        code = code.slice("() => ".length);
+    if (code.startsWith("function () { return ")) {
+        code = code.slice("function () { return ".length);
+        if (code.endsWith("; }"))
             code = code.slice(0, -3);
     }
-    if (code.startsWith('function() { return ')) {
-        code = code.slice('function() { return '.length);
-        if (code.endsWith('; }'))
+    if (code.startsWith("function() { return ")) {
+        code = code.slice("function() { return ".length);
+        if (code.endsWith("; }"))
             code = code.slice(0, -3);
     }
-    if (code[0] === '\'' && code[code.length - 1] === '\'')
+    if (code[0] === "'" && code[code.length - 1] === "'")
         return false;
     if (code[0] === '"' && code[code.length - 1] === '"')
         return false;
-    if (code[0] === '`' && code[code.length - 1] === '`')
+    if (code[0] === "`" && code[code.length - 1] === "`")
         return false;
-    return code.includes('(');
+    return code.includes("(");
 }
 hasFunctionExpression.__type = [() => Function, 'fn', 'hasFunctionExpression', 'PPu!2")/#'];
 /**
@@ -355,23 +394,33 @@ class ReflectionParameter {
         return this.parameter.default !== undefined;
     }
     isValueRequired() {
-        if (this.hasDefault())
+        if (this.hasDefault()) {
             return false;
+        }
         return !this.isOptional();
     }
     getDefaultValue() {
         if (this.parameter.default !== undefined) {
-            return this.parameter.default();
+            if (typeof this.parameter.default === "function") {
+                return this.parameter.default();
+            }
+            return this.parameter.default;
         }
     }
+    setDefaultValue(value) {
+        this.parameter.default = value;
+    }
     hasDefaultFunctionExpression() {
         return !!(this.parameter.default && hasFunctionExpression(this.parameter.default));
     }
     applyDecorator(t) {
         if (t.type) {
             this.type = resolveReceiveType(t.type);
-            if (this.getVisibility() !== undefined && this.reflectionFunction instanceof ReflectionMethod) {
-                this.reflectionFunction.reflectionClass.getProperty(this.getName()).setType(this.type);
+            if (this.getVisibility() !== undefined &&
+                this.reflectionFunction instanceof ReflectionMethod) {
+                this.reflectionFunction.reflectionClass
+                    .getProperty(this.getName())
+                    .setType(this.type);
             }
         }
     }
@@ -388,7 +437,36 @@ class ReflectionParameter {
         return this.parameter.visibility === type_js_1.ReflectionVisibility.private;
     }
     isReadonly() {
-        return this.parameter.readonly === true;
+        return (this.parameter.readonly === true ||
+            this.getTags().readonly === true ||
+            this.reflectionFunction.isReadonly());
+    }
+    setTags(tags) {
+        this.parameter.tags = tags;
+    }
+    getTags() {
+        return this.parameter.tags ?? {};
+    }
+    isHidden() {
+        return this.getTags().hidden === true || this.reflectionFunction.isHidden();
+    }
+    isIgnored() {
+        return (this.getTags().ignore === true || this.reflectionFunction.isIgnored());
+    }
+    isInternal() {
+        return (this.getTags().internal === true || this.reflectionFunction.isInternal());
+    }
+    getAlias() {
+        return this.getTags().alias ?? [];
+    }
+    getTitle() {
+        return this.getTags().title;
+    }
+    getPermission() {
+        return (this.getTags().permission ?? []).concat(this.reflectionFunction.getPermission());
+    }
+    getDomain() {
+        return this.getTags().domain || this.reflectionFunction.getDomain();
     }
     /**
      * True if the parameter becomes a property in the class.
@@ -400,7 +478,9 @@ class ReflectionParameter {
      * }
      */
     isProperty() {
-        return this.parameter.readonly === true || this.parameter.visibility !== undefined;
+        return (this.parameter.readonly === true ||
+            this.parameter.tags?.readonly === true ||
+            this.parameter.visibility !== undefined);
     }
 }
 exports.ReflectionParameter = ReflectionParameter;
@@ -411,7 +491,8 @@ class ReflectionFunction {
     constructor(type) {
         this.type = type;
         this.parameters = [];
-        this.description = '';
+        this.parameterAliases = new Map();
+        this.description = "";
         for (const p of this.type.parameters) {
             this.parameters.push(new ReflectionParameter(p, this));
         }
@@ -420,13 +501,13 @@ class ReflectionFunction {
     }
     static from(fn) {
         //todo: cache it
-        if (!('__type' in fn)) {
+        if (!("__type" in fn)) {
             //functions without any types have no __type attached
             return new ReflectionFunction({
                 kind: type_js_1.ReflectionKind.function,
                 function: fn,
                 return: { kind: type_js_1.ReflectionKind.any },
-                parameters: [],
+                parameters: []
             });
         }
         const type = reflect(fn);
@@ -446,6 +527,10 @@ class ReflectionFunction {
             if (property.getName() === name)
                 return property;
         }
+        if (this.parameterAliases.has(name.toString())) {
+            const alias = this.parameterAliases.get(name.toString());
+            return this.getParameterOrUndefined(alias);
+        }
         return;
     }
     getParameter(name) {
@@ -467,7 +552,7 @@ class ReflectionFunction {
         return this.type.return;
     }
     getName() {
-        return this.type.name || 'anonymous';
+        return this.type.name || "anonymous";
     }
     getDescription() {
         return this.description;
@@ -475,6 +560,36 @@ class ReflectionFunction {
     get name() {
         return (0, type_js_1.memberNameToString)(this.getName());
     }
+    setTags(tags) {
+        this.type.tags = tags;
+    }
+    getTags() {
+        return this.type.tags ?? {};
+    }
+    isHidden() {
+        return this.getTags().hidden === true;
+    }
+    isReadonly() {
+        return this.getTags().readonly === true;
+    }
+    isIgnored() {
+        return this.getTags().ignore === true;
+    }
+    isInternal() {
+        return this.getTags().internal === true;
+    }
+    getAlias() {
+        return this.getTags().alias ?? [];
+    }
+    getTitle() {
+        return this.getTags().title;
+    }
+    getPermission() {
+        return this.getTags().permission ?? [];
+    }
+    getDomain() {
+        return this.getTags().domain;
+    }
 }
 exports.ReflectionFunction = ReflectionFunction;
 /**
@@ -511,6 +626,36 @@ class ReflectionMethod extends ReflectionFunction {
     isOptional() {
         return this.type.optional === true;
     }
+    setTags(tags) {
+        this.type.tags = tags;
+    }
+    getTags() {
+        return this.type.tags ?? {};
+    }
+    isHidden() {
+        return this.getTags().hidden === true || this.reflectionClass.isHidden();
+    }
+    isIgnored() {
+        return this.getTags().ignore === true || this.reflectionClass.isIgnored();
+    }
+    isReadonly() {
+        return (this.getTags().readonly === true || this.reflectionClass.isReadonly());
+    }
+    isInternal() {
+        return (this.getTags().internal === true || this.reflectionClass.isInternal());
+    }
+    getAlias() {
+        return this.getTags().alias ?? [];
+    }
+    getTitle() {
+        return this.getTags().title;
+    }
+    getPermission() {
+        return (this.getTags().permission ?? []).concat(this.reflectionClass.getPermission());
+    }
+    getDomain() {
+        return this.getTags().domain || this.reflectionClass.getDomain();
+    }
 }
 exports.ReflectionMethod = ReflectionMethod;
 function resolveForeignReflectionClass(property) {
@@ -529,7 +674,8 @@ resolveForeignReflectionClass.__type = ['ReflectionProperty', 'property', 'Refle
  * Resolved the class/object ReflectionClass of the given TypeClass|TypeObjectLiteral
  */
 function resolveClassType(type) {
-    if (type.kind !== type_js_1.ReflectionKind.class && type.kind !== type_js_1.ReflectionKind.objectLiteral) {
+    if (type.kind !== type_js_1.ReflectionKind.class &&
+        type.kind !== type_js_1.ReflectionKind.objectLiteral) {
         throw new Error(`Cant resolve ReflectionClass of type ${type.kind} since its not a class or object literal`);
     }
     return ReflectionClass.from(type);
@@ -576,10 +722,12 @@ class ReflectionProperty {
         return (0, type_js_1.isBackReferenceType)(this.getType());
     }
     isDatabaseSkipped(database) {
-        return type_js_1.databaseAnnotation.getDatabase(this.getType(), database)?.skip === true;
+        return (type_js_1.databaseAnnotation.getDatabase(this.getType(), database)?.skip === true);
     }
     isDatabaseMigrationSkipped(database) {
-        return this.isDatabaseSkipped(database) || type_js_1.databaseAnnotation.getDatabase(this.getType(), database)?.skipMigration === true;
+        return (this.isDatabaseSkipped(database) ||
+            type_js_1.databaseAnnotation.getDatabase(this.getType(), database)
+                ?.skipMigration === true);
     }
     getBackReference() {
         return (0, type_js_1.getBackReferenceType)(this.getType());
@@ -594,10 +742,11 @@ class ReflectionProperty {
         return this.type.kind === type_js_1.ReflectionKind.array;
     }
     isDate() {
-        return this.type.kind === type_js_1.ReflectionKind.class && this.type.classType === Date;
+        return (this.type.kind === type_js_1.ReflectionKind.class && this.type.classType === Date);
     }
     isNumber() {
-        return this.type.kind === type_js_1.ReflectionKind.number || this.type.kind === type_js_1.ReflectionKind.bigint;
+        return (this.type.kind === type_js_1.ReflectionKind.number ||
+            this.type.kind === type_js_1.ReflectionKind.bigint);
     }
     getForeignKeyName() {
         return this.getNameAsString();
@@ -626,10 +775,11 @@ class ReflectionProperty {
      * @throws Error if the property is not from type TypeClass or TypeObjectLiteral
      */
     getResolvedReflectionClass() {
-        if (this.type.kind !== type_js_1.ReflectionKind.class && this.type.kind !== type_js_1.ReflectionKind.objectLiteral) {
+        if (this.type.kind !== type_js_1.ReflectionKind.class &&
+            this.type.kind !== type_js_1.ReflectionKind.objectLiteral) {
             throw new Error(`Could not resolve reflection class since ${this.name} is not a class|object but of type ${(0, type_js_1.stringifyType)(this.type)}`);
         }
-        return this.cachedResolvedReflectionClass || (this.cachedResolvedReflectionClass = resolveClassType(this.getType()));
+        return (this.cachedResolvedReflectionClass || (this.cachedResolvedReflectionClass = resolveClassType(this.getType())));
     }
     /**
      * If undefined the property is not an index.
@@ -683,7 +833,7 @@ class ReflectionProperty {
         return this.type;
     }
     getDescription() {
-        return this.property.description || '';
+        return this.property.description || "";
     }
     /**
      * Whether a value is required from serialization point of view.
@@ -691,8 +841,9 @@ class ReflectionProperty {
      * then the value is not required to instantiate the property value.
      */
     isValueRequired() {
-        if (this.hasDefault())
+        if (this.hasDefault()) {
             return false;
+        }
         return !this.isOptional();
     }
     /**
@@ -706,57 +857,127 @@ class ReflectionProperty {
      * If the property is actual optional or is an union with undefined in it.
      */
     isOptional() {
-        return this.property.optional === true || (this.type.kind === type_js_1.ReflectionKind.union && this.type.types.some(v => v.kind === type_js_1.ReflectionKind.undefined));
+        return (this.property.optional === true ||
+            (this.type.kind === type_js_1.ReflectionKind.union &&
+                this.type.types.some(v => v.kind === type_js_1.ReflectionKind.undefined)));
     }
     setOptional(v) {
         this.property.optional = v ? true : undefined;
     }
     isNullable() {
-        return (this.type.kind === type_js_1.ReflectionKind.union && this.type.types.some(v => v.kind === type_js_1.ReflectionKind.null));
+        return (this.type.kind === type_js_1.ReflectionKind.union &&
+            this.type.types.some(v => v.kind === type_js_1.ReflectionKind.null));
     }
     isReadonly() {
-        return this.property.readonly === true;
+        return (this.property.readonly === true ||
+            this.getTags().readonly === true ||
+            this.reflectionClass.isReadonly());
     }
     isAbstract() {
-        return this.property.kind === type_js_1.ReflectionKind.property && this.property.abstract === true;
+        return (this.property.kind === type_js_1.ReflectionKind.property &&
+            this.property.abstract === true);
     }
     hasDefault() {
-        return this.property.kind === type_js_1.ReflectionKind.property && this.property.default !== undefined;
+        return this.property.default === undefined
+            ? !this.isOptional() &&
+                (this.getKind() === type_js_1.ReflectionKind.boolean ||
+                    (this.type.kind === type_js_1.ReflectionKind.union &&
+                        this.type.types.some(t => t.kind === type_js_1.ReflectionKind.boolean)) ||
+                    this.getKind() === type_js_1.ReflectionKind.number ||
+                    (this.type.kind === type_js_1.ReflectionKind.union &&
+                        this.type.types.some(t => t.kind === type_js_1.ReflectionKind.number)))
+            : true;
     }
     getDefaultValue() {
-        if (this.property.kind === type_js_1.ReflectionKind.property && this.property.default !== undefined) {
+        if (this.property.default !== undefined) {
             try {
-                return this.property.default();
+                if (typeof this.property.default === "function") {
+                    return this.property.default();
+                }
+                return this.property.default;
             }
             catch {
-                return;
+                return undefined;
             }
         }
+        else if (!this.isOptional()) {
+            if (this.getKind() === type_js_1.ReflectionKind.boolean ||
+                (this.type.kind === type_js_1.ReflectionKind.union &&
+                    this.type.types.some(t => t.kind === type_js_1.ReflectionKind.boolean))) {
+                return false;
+            }
+            else if (this.getKind() === type_js_1.ReflectionKind.number ||
+                (this.type.kind === type_js_1.ReflectionKind.union &&
+                    this.type.types.some(t => t.kind === type_js_1.ReflectionKind.number))) {
+                return 0;
+            }
+        }
+    }
+    setDefaultValue(value) {
+        this.property.default = value;
     }
     hasDefaultFunctionExpression() {
-        return this.property.kind === type_js_1.ReflectionKind.property && !!this.property.default && hasFunctionExpression(this.property.default);
+        return (this.property.kind === type_js_1.ReflectionKind.property &&
+            !!this.property.default &&
+            hasFunctionExpression(this.property.default));
     }
     getDefaultValueFunction() {
-        if (this.property.kind === type_js_1.ReflectionKind.property && this.property.default !== undefined) {
+        if (this.property.kind === type_js_1.ReflectionKind.property &&
+            this.property.default !== undefined) {
             return this.property.default;
         }
-        return;
+        return undefined;
     }
     getVisibility() {
-        return this.property.kind === type_js_1.ReflectionKind.property ? this.property.visibility : undefined;
+        return this.property.kind === type_js_1.ReflectionKind.property
+            ? this.property.visibility
+            : undefined;
     }
     isPublic() {
-        return this.property.kind === type_js_1.ReflectionKind.property ? this.property.visibility === type_js_1.ReflectionVisibility.public : true;
+        return this.property.kind === type_js_1.ReflectionKind.property
+            ? this.property.visibility === type_js_1.ReflectionVisibility.public
+            : true;
     }
     isProtected() {
-        return this.property.kind === type_js_1.ReflectionKind.property ? this.property.visibility === type_js_1.ReflectionVisibility.protected : false;
+        return this.property.kind === type_js_1.ReflectionKind.property
+            ? this.property.visibility === type_js_1.ReflectionVisibility.protected
+            : false;
     }
     isPrivate() {
-        return this.property.kind === type_js_1.ReflectionKind.property ? this.property.visibility === type_js_1.ReflectionVisibility.private : false;
+        return this.property.kind === type_js_1.ReflectionKind.property
+            ? this.property.visibility === type_js_1.ReflectionVisibility.private
+            : false;
+    }
+    setTags(tags) {
+        this.property.tags = tags;
+    }
+    getTags() {
+        return this.property.tags ?? {};
+    }
+    isHidden() {
+        return this.getTags().hidden === true || this.reflectionClass.isHidden();
+    }
+    isIgnored() {
+        return this.getTags().ignore === true || this.reflectionClass.isIgnored();
+    }
+    isInternal() {
+        return (this.getTags().internal === true || this.reflectionClass.isInternal());
+    }
+    getAlias() {
+        return this.getTags().alias ?? [];
+    }
+    getTitle() {
+        return this.getTags().title;
+    }
+    getPermission() {
+        return (this.getTags().permission ?? []).concat(this.reflectionClass.getPermission());
+    }
+    getDomain() {
+        return this.getTags().domain || this.reflectionClass.getDomain();
     }
 }
 exports.ReflectionProperty = ReflectionProperty;
-exports.reflectionClassSymbol = Symbol('reflectionClass');
+exports.reflectionClassSymbol = Symbol("reflectionClass");
 const __ΩSerializerFn = ['value', 'ReflectionProperty', 'property', '', 'SerializerFn', 'PP"2!"w"2#"v$Mw%y'];
 exports.__ΩSerializerFn = __ΩSerializerFn;
 class TData {
@@ -802,7 +1023,7 @@ class ReflectionClass {
         /**
          * The description, extracted from the class JSDoc @description.
          */
-        this.description = '';
+        this.description = "";
         /**
          * A place where arbitrary data is stored, usually set via decorator t.data.
          */
@@ -831,7 +1052,9 @@ class ReflectionClass {
         this.propertyNames = [];
         this.methodNames = [];
         this.properties = [];
+        this.propertyAliases = new Map();
         this.methods = [];
+        this.methodAliases = new Map();
         /**
          * References and back references.
          */
@@ -842,13 +1065,15 @@ class ReflectionClass {
          * A class using @t.singleTableInheritance registers itself in this array in its super class.
          */
         this.subClasses = [];
-        if (type.kind !== type_js_1.ReflectionKind.class && type.kind !== type_js_1.ReflectionKind.objectLiteral)
-            throw new Error('Only class, interface, or object literal type possible');
+        if (type.kind !== type_js_1.ReflectionKind.class &&
+            type.kind !== type_js_1.ReflectionKind.objectLiteral)
+            throw new Error("Only class, interface, or object literal type possible");
         if (parent) {
             this.name = parent.name;
             this.collectionName = parent.collectionName;
             this.databaseSchemaName = parent.databaseSchemaName;
             this.description = parent.description;
+            this.tags = parent.tags;
             for (const member of parent.getProperties()) {
                 this.registerProperty(member.clone(this));
             }
@@ -864,16 +1089,20 @@ class ReflectionClass {
             applyEntityOptions(this, entityOptions);
         }
         this.description = this.type.description || this.description;
+        this.tags = this.type.tags || this.tags;
         //apply decorators
-        if (type.kind === type_js_1.ReflectionKind.class && (0, decorator_js_1.isWithDeferredDecorators)(type.classType)) {
+        if (type.kind === type_js_1.ReflectionKind.class &&
+            (0, decorator_js_1.isWithDeferredDecorators)(type.classType)) {
             for (const decorator of type.classType.__decorators) {
                 if (decorator.target !== type.classType)
                     continue;
                 const { data, property, parameterIndexOrDescriptor } = decorator;
-                if (property === undefined && parameterIndexOrDescriptor === undefined) {
+                if (property === undefined &&
+                    parameterIndexOrDescriptor === undefined) {
                     this.applyDecorator(data);
                 }
-                else if (property !== undefined && parameterIndexOrDescriptor === undefined) {
+                else if (property !== undefined &&
+                    parameterIndexOrDescriptor === undefined) {
                     const reflectionProperty = this.getPropertyOrUndefined(property);
                     if (reflectionProperty)
                         reflectionProperty.applyDecorator(data);
@@ -882,7 +1111,7 @@ class ReflectionClass {
                         reflectionMethod.applyDecorator(data);
                 }
                 else if (parameterIndexOrDescriptor !== undefined) {
-                    const reflectionMethod = this.getMethodOrUndefined(property || 'constructor');
+                    const reflectionMethod = this.getMethodOrUndefined(property || "constructor");
                     if (reflectionMethod) {
                         const params = reflectionMethod.getParameters();
                         const param = params[parameterIndexOrDescriptor];
@@ -903,16 +1132,19 @@ class ReflectionClass {
         reflection.subClasses = this.subClasses.slice();
         reflection.data = { ...this.data };
         reflection.description = this.description;
+        reflection.tags = this.tags;
         return reflection;
     }
     toString() {
         return (0, type_js_1.stringifyResolvedType)(this.type);
     }
     getPropertiesDeclaredInConstructor() {
-        const constructor = this.getMethod('constructor');
+        const constructor = this.getMethod("constructor");
         if (!constructor)
             return [];
-        const propertyNames = constructor.parameters.filter(v => v.getVisibility() !== undefined).map(v => v.getName());
+        const propertyNames = constructor.parameters
+            .filter(v => v.getVisibility() !== undefined)
+            .map(v => v.getName());
         return this.properties.filter(v => propertyNames.includes((0, type_js_1.memberNameToString)(v.getName())));
     }
     clearJitContainer() {
@@ -922,14 +1154,18 @@ class ReflectionClass {
         return (0, type_js_1.getTypeJitContainer)(this.type);
     }
     getClassType() {
-        return this.type.kind === type_js_1.ReflectionKind.class ? this.type.classType : Object;
+        return this.type.kind === type_js_1.ReflectionKind.class
+            ? this.type.classType
+            : Object;
     }
     getClassName() {
-        return this.type.kind === type_js_1.ReflectionKind.class ? this.type.typeName || (0, core_1.getClassName)(this.getClassType()) : this.type.typeName || 'Object';
+        return this.type.kind === type_js_1.ReflectionKind.class
+            ? this.type.typeName || (0, core_1.getClassName)(this.getClassType())
+            : this.type.typeName || "Object";
     }
     createDefaultObject() {
         try {
-            return new (this.getClassType());
+            return new (this.getClassType())();
         }
         catch {
             return {};
@@ -945,10 +1181,16 @@ class ReflectionClass {
         return this.collectionName || this.getName();
     }
     hasProperty(name) {
-        return this.propertyNames.includes((0, type_js_1.memberNameToString)(name));
+        const memberName = (0, type_js_1.memberNameToString)(name);
+        return (this.propertyNames.includes(memberName) ||
+            (this.propertyAliases.has(memberName) &&
+                this.propertyNames.includes(this.propertyAliases.get(memberName))));
     }
     hasMethod(name) {
-        return this.methodNames.includes((0, type_js_1.memberNameToString)(name));
+        const memberName = (0, type_js_1.memberNameToString)(name);
+        return (this.methodNames.includes(memberName) ||
+            (this.methodAliases.has(memberName) &&
+                this.methodNames.includes(this.methodAliases.get(memberName))));
     }
     getPrimary() {
         if (!this.primaries.length) {
@@ -980,7 +1222,9 @@ class ReflectionClass {
             throw new Error(`Property ${String(name)} not known in ${this.getClassName()}`);
         const stringName = (0, type_js_1.memberNameToString)(name);
         (0, core_1.arrayRemoveItem)(this.propertyNames, stringName);
-        const indexType = this.type.types.findIndex(v => (v.kind === type_js_1.ReflectionKind.property || v.kind === type_js_1.ReflectionKind.propertySignature) && v.name === name);
+        const indexType = this.type.types.findIndex(v => (v.kind === type_js_1.ReflectionKind.property ||
+            v.kind === type_js_1.ReflectionKind.propertySignature) &&
+            v.name === name);
         if (indexType !== -1)
             this.type.types.splice(indexType, 1);
         (0, core_1.arrayRemoveItem)(this.properties, property);
@@ -1019,13 +1263,20 @@ class ReflectionClass {
         if (index) {
             this.indexes.push({ names: [property.name], options: index });
         }
+        if (property.getAlias().length > 0) {
+            for (const alias of property.getAlias()) {
+                this.propertyAliases.set(alias, property.name);
+            }
+        }
         this.getJitContainer();
     }
     addProperty(prop) {
         const type = {
-            kind: this.type.kind === type_js_1.ReflectionKind.class ? type_js_1.ReflectionKind.property : type_js_1.ReflectionKind.propertySignature,
+            kind: this.type.kind === type_js_1.ReflectionKind.class
+                ? type_js_1.ReflectionKind.property
+                : type_js_1.ReflectionKind.propertySignature,
             parent: this.type,
-            ...prop,
+            ...prop
         };
         if (type.kind === type_js_1.ReflectionKind.property) {
             type.visibility = prop.visibility ?? type_js_1.ReflectionVisibility.public;
@@ -1039,9 +1290,15 @@ class ReflectionClass {
             return;
         this.methods.push(method);
         this.methodNames.push(method.name);
+        if (method.getAlias().length > 0) {
+            for (const alias of method.getAlias()) {
+                this.methodAliases.set(alias, method.name);
+            }
+        }
     }
     add(member) {
-        if (member.kind === type_js_1.ReflectionKind.property || member.kind === type_js_1.ReflectionKind.propertySignature) {
+        if (member.kind === type_js_1.ReflectionKind.property ||
+            member.kind === type_js_1.ReflectionKind.propertySignature) {
             const existing = this.getPropertyOrUndefined(member.name);
             if (existing) {
                 existing.setType(member.type);
@@ -1050,7 +1307,8 @@ class ReflectionClass {
                 this.registerProperty(new ReflectionProperty(member, this));
             }
         }
-        if (member.kind === type_js_1.ReflectionKind.method || member.kind === type_js_1.ReflectionKind.methodSignature) {
+        if (member.kind === type_js_1.ReflectionKind.method ||
+            member.kind === type_js_1.ReflectionKind.methodSignature) {
             const existing = this.getMethodOrUndefined(member.name);
             if (existing) {
                 existing.setType(member);
@@ -1087,7 +1345,8 @@ class ReflectionClass {
         return this.assignedSingleTableInheritanceSubClassesByIdentifier;
     }
     hasSingleTableInheritanceSubClasses() {
-        return this.getAssignedSingleTableInheritanceSubClassesByIdentifier() !== undefined;
+        return (this.getAssignedSingleTableInheritanceSubClassesByIdentifier() !==
+            undefined);
     }
     getSingleTableInheritanceDiscriminantName() {
         if (!this.data.singleTableInheritanceProperty) {
@@ -1099,7 +1358,8 @@ class ReflectionClass {
             }
             this.data.singleTableInheritanceProperty = this.getProperty(discriminant);
         }
-        return this.data.singleTableInheritanceProperty.name;
+        return this.data.singleTableInheritanceProperty
+            .name;
     }
     applyDecorator(data) {
         Object.assign(this.data, data.data);
@@ -1129,34 +1389,48 @@ class ReflectionClass {
         if (classTypeIn instanceof ReflectionClass)
             return classTypeIn;
         if ((0, type_js_1.isType)(classTypeIn)) {
-            if (classTypeIn.kind === type_js_1.ReflectionKind.objectLiteral || (classTypeIn.kind === type_js_1.ReflectionKind.class && classTypeIn.typeArguments)) {
+            if (classTypeIn.kind === type_js_1.ReflectionKind.objectLiteral ||
+                (classTypeIn.kind === type_js_1.ReflectionKind.class && classTypeIn.typeArguments)) {
                 const jit = (0, type_js_1.getTypeJitContainer)(classTypeIn);
                 if (jit.reflectionClass)
                     return jit.reflectionClass;
-                return jit.reflectionClass = (ReflectionClass.Ω = [undefined], new ReflectionClass(classTypeIn));
+                return (jit.reflectionClass = (ReflectionClass.Ω = [undefined], new ReflectionClass(classTypeIn)));
             }
             if (classTypeIn.kind !== type_js_1.ReflectionKind.class)
                 throw new Error(`TypeClass or TypeObjectLiteral expected, not ${type_js_1.ReflectionKind[classTypeIn.kind]}`);
         }
-        const classType = (0, type_js_1.isType)(classTypeIn) ? classTypeIn.classType : classTypeIn['prototype'] ? classTypeIn : classTypeIn.constructor;
+        const classType = (0, type_js_1.isType)(classTypeIn)
+            ? classTypeIn.classType
+            : classTypeIn["prototype"]
+                ? classTypeIn
+                : classTypeIn.constructor;
         if (!classType.prototype.hasOwnProperty(exports.reflectionClassSymbol)) {
-            Object.defineProperty(classType.prototype, exports.reflectionClassSymbol, { writable: true, enumerable: false });
+            Object.defineProperty(classType.prototype, exports.reflectionClassSymbol, {
+                writable: true,
+                enumerable: false
+            });
         }
         if (classType.prototype[exports.reflectionClassSymbol] && args.length === 0) {
             return classType.prototype[exports.reflectionClassSymbol];
         }
-        const type = (0, type_js_1.isType)(classTypeIn) ? classTypeIn : ('__type' in classType ?
-            args.length ? (0, processor_js_1.resolveRuntimeType)(classType, args) : (0, processor_js_1.resolveRuntimeType)(classType)
-            : {
-                kind: type_js_1.ReflectionKind.class,
-                classType,
-                types: [],
-            });
+        const type = (0, type_js_1.isType)(classTypeIn)
+            ? classTypeIn
+            : "__type" in classType
+                ? args.length
+                    ? (0, processor_js_1.resolveRuntimeType)(classType, args)
+                    : (0, processor_js_1.resolveRuntimeType)(classType)
+                : {
+                    kind: type_js_1.ReflectionKind.class,
+                    classType,
+                    types: []
+                };
         if (type.kind !== type_js_1.ReflectionKind.class) {
             throw new Error(`Given class is not a class but kind ${type_js_1.ReflectionKind[type.kind]}. classType: ${(0, core_1.stringifyValueWithType)(classType)}`);
         }
         const parentProto = Object.getPrototypeOf(classType.prototype);
-        const parentReflectionClass = parentProto && parentProto.constructor !== Object ? ReflectionClass.from(parentProto, type.extendsArguments) : undefined;
+        const parentReflectionClass = parentProto && parentProto.constructor !== Object
+            ? ReflectionClass.from(parentProto, type.extendsArguments)
+            : undefined;
         const reflectionClass = new ReflectionClass(type, parentReflectionClass);
         if (args.length === 0) {
             classType.prototype[exports.reflectionClassSymbol] = reflectionClass;
@@ -1167,7 +1441,7 @@ class ReflectionClass {
         }
     }
     getIndexSignatures() {
-        throw new Error('todo');
+        throw new Error("todo");
     }
     getPropertyNames() {
         return this.propertyNames;
@@ -1191,13 +1465,17 @@ class ReflectionClass {
         return this.references;
     }
     getConstructorOrUndefined() {
-        return this.getMethodOrUndefined('constructor');
+        return this.getMethodOrUndefined("constructor");
     }
     getPropertyOrUndefined(name) {
         for (const property of this.getProperties()) {
             if (property.getName() === name)
                 return property;
         }
+        if (this.propertyAliases.has(name.toString())) {
+            const alias = this.propertyAliases.get(name.toString());
+            return this.getPropertyOrUndefined(alias);
+        }
         return;
     }
     getProperty(name) {
@@ -1215,6 +1493,10 @@ class ReflectionClass {
             if (method.getName() === name)
                 return method;
         }
+        if (this.methodAliases.has(name.toString())) {
+            const alias = this.methodAliases.get(name.toString());
+            return this.getMethodOrUndefined(alias);
+        }
         return;
     }
     getMethod(name) {
@@ -1229,6 +1511,36 @@ class ReflectionClass {
     serializeType() {
         return (0, type_serialization_js_1.serializeType)(this.type);
     }
+    setTags(tags) {
+        this.type.tags = tags;
+    }
+    getTags() {
+        return this.type.tags ?? {};
+    }
+    isHidden() {
+        return this.getTags().hidden === true;
+    }
+    isIgnored() {
+        return this.getTags().ignore === true;
+    }
+    isInternal() {
+        return this.getTags().internal === true;
+    }
+    isReadonly() {
+        return this.getTags().readonly === true;
+    }
+    getAlias() {
+        return this.getTags().alias ?? [];
+    }
+    getTitle() {
+        return this.getTags().title;
+    }
+    getPermission() {
+        return this.getTags().permission ?? [];
+    }
+    getDomain() {
+        return this.getTags().domain;
+    }
     /**
      * All references have a counter-part. This methods finds it and errors if not possible.
      *
@@ -1243,8 +1555,10 @@ class ReflectionClass {
      * should make its relation mapping not ambiguous.
      */
     findReverseReference(toClassType, fromReference) {
-        if (fromReference.isBackReference() && fromReference.getBackReference().mappedBy) {
-            if (resolveForeignReflectionClass(fromReference).getClassType() === this.getClassType()) {
+        if (fromReference.isBackReference() &&
+            fromReference.getBackReference().mappedBy) {
+            if (resolveForeignReflectionClass(fromReference).getClassType() ===
+                this.getClassType()) {
                 return this.getProperty(fromReference.getBackReference().mappedBy);
             }
         }
@@ -1253,9 +1567,11 @@ class ReflectionClass {
             if (backRef === fromReference)
                 continue;
             //backRef points to something completely different
-            if (!backRef.isArray() && resolveForeignReflectionClass(backRef).getClassType() !== toClassType)
+            if (!backRef.isArray() &&
+                resolveForeignReflectionClass(backRef).getClassType() !== toClassType)
                 continue;
-            if (backRef.isArray() && (0, type_js_1.getClassType)(backRef.getSubType()) !== toClassType)
+            if (backRef.isArray() &&
+                (0, type_js_1.getClassType)(backRef.getSubType()) !== toClassType)
                 continue;
             //we found the perfect match, manually annotated
             if (backRef.isBackReference() && backRef.getBackReference().mappedBy) {
@@ -1264,7 +1580,9 @@ class ReflectionClass {
                 }
                 continue;
             }
-            if (fromReference.isBackReference() && fromReference.getBackReference().mappedBy && !fromReference.getBackReference().via) {
+            if (fromReference.isBackReference() &&
+                fromReference.getBackReference().mappedBy &&
+                !fromReference.getBackReference().via) {
                 if (fromReference.getBackReference().mappedBy === backRef.name) {
                     //perfect match
                     return backRef;
@@ -1272,13 +1590,19 @@ class ReflectionClass {
                 continue;
             }
             //add to candidates if possible
-            if (fromReference.isBackReference() && fromReference.getBackReference().via && backRef.isBackReference() && backRef.getBackReference().via) {
-                if (fromReference.getBackReference().via === backRef.getBackReference().via) {
+            if (fromReference.isBackReference() &&
+                fromReference.getBackReference().via &&
+                backRef.isBackReference() &&
+                backRef.getBackReference().via) {
+                if (fromReference.getBackReference().via ===
+                    backRef.getBackReference().via) {
                     candidates.push(backRef);
                 }
                 continue;
             }
-            if (fromReference.isBackReference() && fromReference.isArray() && !fromReference.getBackReference().via) {
+            if (fromReference.isBackReference() &&
+                fromReference.isArray() &&
+                !fromReference.getBackReference().via) {
                 //other side must be non-array
                 if (backRef.isArray())
                     continue;
@@ -1286,7 +1610,7 @@ class ReflectionClass {
             candidates.push(backRef);
         }
         if (candidates.length > 1) {
-            throw new Error(`Class ${this.getClassName()} has multiple potential reverse references [${candidates.map(v => v.name).join(', ')}] for ${fromReference.name} to class ${(0, core_1.getClassName)(toClassType)}. ` +
+            throw new Error(`Class ${this.getClassName()} has multiple potential reverse references [${candidates.map(v => v.name).join(", ")}] for ${fromReference.name} to class ${(0, core_1.getClassName)(toClassType)}. ` +
                 `Please specify each back reference by using 'mappedBy', e.g. @t.backReference({mappedBy: 'fieldNameOnTheOtherSide'} so its not ambiguous anymore.`);
         }
         if (candidates.length === 1)
diff --git a/dist/cjs/src/reflection/reflection.js.map b/dist/cjs/src/reflection/reflection.js.map
index 444014a5457fb5122b02a217404fa84c47ab1c12..07e97b493fe98106dc8dececc4192cfc1bd7b8e9 100644
--- a/dist/cjs/src/reflection/reflection.js.map
+++ b/dist/cjs/src/reflection/reflection.js.map
@@ -1 +1 @@
-{"version":3,"file":"reflection.js","sourceRoot":"","sources":["../../../../src/reflection/reflection.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"reflection.js","sourceRoot":"","sources":["../../../../src/reflection/reflection.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/src/reflection/type.d.ts b/dist/cjs/src/reflection/type.d.ts
index a0f511e61710bc4b952d6d0573530fc73f565c1f..6b708576c81fee9e36d4991e759f057299b86408 100644
--- a/dist/cjs/src/reflection/type.d.ts
+++ b/dist/cjs/src/reflection/type.d.ts
@@ -1,6 +1,6 @@
-import { AbstractClassType, ClassType, TypeAnnotation } from '@deepkit/core';
-import { TypeNumberBrand } from '@deepkit/type-spec';
-import { ReceiveType, ReflectionClass } from './reflection.js';
+import { AbstractClassType, ClassType, TypeAnnotation } from "@deepkit/core";
+import { TypeNumberBrand } from "@deepkit/type-spec";
+import { ReceiveType, ReflectionClass } from "./reflection.js";
 export declare enum ReflectionVisibility {
     public = 0,
     protected = 1,
@@ -105,6 +105,16 @@ export declare function hasTypeInformation(object: ClassType | Function): boolea
 export type JitContainer = any;
 export declare function getTypeJitContainer(type: Type): JitContainer;
 export declare function clearTypeJitContainer(type: Type): void;
+export interface TagsReflection {
+    hidden?: boolean;
+    ignore?: boolean;
+    internal?: boolean;
+    alias?: string[];
+    title?: string;
+    readonly?: boolean;
+    permission?: string[];
+    domain?: string;
+}
 export interface TypeNever extends TypeAnnotations {
     kind: ReflectionKind.never;
     parent?: Type;
@@ -175,6 +185,7 @@ export interface TypeBaseMember extends TypeAnnotations {
     static?: true;
     optional?: true;
     readonly?: true;
+    tags?: TagsReflection;
 }
 export interface TypeParameter extends TypeAnnotations {
     kind: ReflectionKind.parameter;
@@ -188,7 +199,8 @@ export interface TypeParameter extends TypeAnnotations {
     /**
      * Set when the parameter has a default value aka initializer.
      */
-    default?: () => any;
+    default?: (() => any) | any;
+    tags?: TagsReflection;
 }
 export interface TypeMethod extends TypeBaseMember {
     kind: ReflectionKind.method;
@@ -208,7 +220,7 @@ export interface TypeProperty extends TypeBaseMember {
     /**
      * Set when the property has a default value aka initializer.
      */
-    default?: () => any;
+    default?: (() => any) | any;
 }
 export interface TypeFunction extends TypeAnnotations {
     kind: ReflectionKind.function;
@@ -218,12 +230,14 @@ export interface TypeFunction extends TypeAnnotations {
     function?: Function;
     parameters: TypeParameter[];
     return: Type;
+    tags?: TagsReflection;
 }
 export interface TypeCallSignature extends TypeAnnotations {
     kind: ReflectionKind.callSignature;
     parent?: Type;
     parameters: TypeParameter[];
     return: Type;
+    tags?: TagsReflection;
 }
 export interface TypePromise extends TypeAnnotations {
     kind: ReflectionKind.promise;
@@ -258,6 +272,7 @@ export interface TypeClass extends TypeAnnotations {
      * properties/methods.
      */
     types: (TypeIndexSignature | TypeProperty | TypeMethod)[];
+    tags?: TagsReflection;
 }
 export interface TypeEnum extends TypeAnnotations {
     kind: ReflectionKind.enum;
@@ -268,17 +283,21 @@ export interface TypeEnum extends TypeAnnotations {
     values: (string | number | undefined | null)[];
     indexType: Type;
     description?: string;
+    tags?: TagsReflection;
 }
 export interface TypeEnumMember extends TypeAnnotations {
     kind: ReflectionKind.enumMember;
     parent: TypeEnum;
     name: string;
-    default?: () => string | number;
+    description?: string;
+    default?: (() => string | number) | string | number;
+    tags?: TagsReflection;
 }
 export interface TypeTypeParameter extends TypeAnnotations {
     kind: ReflectionKind.typeParameter;
     parent?: Type;
     name: string;
+    tags?: TagsReflection;
 }
 export interface TypeUnion extends TypeAnnotations {
     kind: ReflectionKind.union;
@@ -294,6 +313,7 @@ export interface TypeArray extends TypeAnnotations {
     kind: ReflectionKind.array;
     parent?: Type;
     type: Type;
+    tags?: TagsReflection;
 }
 export interface TypePropertySignature extends TypeAnnotations {
     kind: ReflectionKind.propertySignature;
@@ -303,6 +323,11 @@ export interface TypePropertySignature extends TypeAnnotations {
     readonly?: true;
     description?: string;
     type: Type;
+    /**
+     * Set when the property has a default value aka initializer.
+     */
+    default?: (() => any) | any;
+    tags?: TagsReflection;
 }
 export interface TypeMethodSignature extends TypeAnnotations {
     kind: ReflectionKind.methodSignature;
@@ -312,6 +337,7 @@ export interface TypeMethodSignature extends TypeAnnotations {
     description?: string;
     parameters: TypeParameter[];
     return: Type;
+    tags?: TagsReflection;
 }
 /**
  * Object literals or interfaces.
@@ -327,12 +353,18 @@ export interface TypeObjectLiteral extends TypeAnnotations {
      * For example `interface A extends B<string, boolean> {}` then implements = [B<string, boolean>].
      */
     implements?: Type[];
+    tags?: TagsReflection;
 }
 export interface TypeIndexSignature extends TypeAnnotations {
     kind: ReflectionKind.indexSignature;
     parent: TypeClass | TypeObjectLiteral;
     index: Type;
     type: Type;
+    /**
+     * Set when the property has a default value aka initializer.
+     */
+    default?: (() => any) | any;
+    tags?: TagsReflection;
 }
 export interface TypeInfer extends TypeAnnotations {
     kind: ReflectionKind.infer;
@@ -452,14 +484,14 @@ type GetArrayElement<T extends any[]> = [T] extends [Array<infer K>] ? K : never
 type RemoveParent<T, K extends keyof T> = {
     [P in K]: T[P] extends Type[] ? RemoveParentHomomorphic<GetArrayElement<T[P]>>[] : T[P] extends Type ? RemoveParentHomomorphic<T[P]> : T[P];
 };
-type RemoveParentHomomorphic<T> = RemoveParent<T, Exclude<keyof T, 'parent'>>;
+type RemoveParentHomomorphic<T> = RemoveParent<T, Exclude<keyof T, "parent">>;
 type RemoveDeepParent<T extends Type> = T extends infer K ? RemoveParentHomomorphic<K> : never;
 export type ParentLessType = RemoveDeepParent<Type>;
 /**
  * This function does not do a deep copy, only shallow. A deep copy makes it way to inefficient, so much that router.spec.ts takes up to 20-30seconds
  * to complete instead of barely 30ms.
  */
-export declare function copyAndSetParent<T extends ParentLessType>(inc: T, parent?: Type): FindType<Type, T['kind']>;
+export declare function copyAndSetParent<T extends ParentLessType>(inc: T, parent?: Type): FindType<Type, T["kind"]>;
 export declare function widenLiteral(type: Type): Type;
 export declare function assertType<K extends ReflectionKind, T>(t: Type | undefined, kind: K): asserts t is FindType<Type, K>;
 export declare function getClassType(type: Type): ClassType;
@@ -479,6 +511,42 @@ export declare function hasDefaultValue(type: Type): boolean;
  * Checks whether `null` is allowed as type.
  */
 export declare function isNullable(type: Type): boolean;
+/**
+ * Get tags from type.
+ */
+export declare function getTags(type: Type): TagsReflection;
+/**
+ * Checks whether the \`hidden\` tag was specified for the type.
+ */
+export declare function isHidden(type: Type): boolean;
+/**
+ * Checks whether the \`ignore\` tag was specified for the type.
+ */
+export declare function isIgnore(type: Type): boolean;
+/**
+ * Checks whether the \`internal\` tag was specified for the type.
+ */
+export declare function isInternal(type: Type): boolean;
+/**
+ * Returns the values specified by the type's \`alias\` tag(s).
+ */
+export declare function getAlias(type: Type): string[];
+/**
+ * Checks whether the \`readonly\` tag was specified for the type.
+ */
+export declare function isReadonly(type: Type): boolean;
+/**
+ * Returns the values specified by the type's \`title\` tag.
+ */
+export declare function getTitle(type: Type): string | undefined;
+/**
+ * Returns the values specified by the type's \`permission\` tag(s).
+ */
+export declare function getPermission(type: Type): string[];
+/**
+ * Returns the values specified by the type's \`domain\` tag.
+ */
+export declare function getDomain(type: Type): string | undefined;
 /**
  * Integer
  */
@@ -539,7 +607,7 @@ export declare class AnnotationDefinition<T = true> {
     hasAnnotations(type: Type): boolean;
 }
 export type AnnotationType<T extends AnnotationDefinition<any>> = T extends AnnotationDefinition<infer K> ? K : never;
-export type ReferenceActions = 'RESTRICT' | 'NO ACTION' | 'CASCADE' | 'SET NULL' | 'SET DEFAULT';
+export type ReferenceActions = "RESTRICT" | "NO ACTION" | "CASCADE" | "SET NULL" | "SET DEFAULT";
 export interface ReferenceOptions {
     /**
      * Default is CASCADE.
@@ -574,7 +642,7 @@ export interface EntityOptions {
  * }
  * ```
  */
-export type Entity<T extends EntityOptions> = {} & TypeAnnotation<'entity', T>;
+export type Entity<T extends EntityOptions> = {} & TypeAnnotation<"entity", T>;
 /**
  * Marks a property as primary key.
  * ```typescript
@@ -583,7 +651,7 @@ export type Entity<T extends EntityOptions> = {} & TypeAnnotation<'entity', T>;
  * }
  * ```
  */
-export type PrimaryKey = TypeAnnotation<'primaryKey'>;
+export type PrimaryKey = TypeAnnotation<"primaryKey">;
 type TypeKeyOf<T> = T[keyof T];
 export type PrimaryKeyFields<T> = any extends T ? any : {
     [P in keyof T]: Required<T[P]> extends Required<PrimaryKey> ? T[P] : never;
@@ -601,7 +669,7 @@ export type ReferenceFields<T> = {
  * }
  * ```
  */
-export type AutoIncrement = TypeAnnotation<'autoIncrement'>;
+export type AutoIncrement = TypeAnnotation<"autoIncrement">;
 /**
  * UUID v4, as string, serialized as string in JSON, and binary in database.
  * Use `uuid()` as handy initializer.
@@ -612,11 +680,11 @@ export type AutoIncrement = TypeAnnotation<'autoIncrement'>;
  * }
  * ```
  */
-export type UUID = string & TypeAnnotation<'UUIDv4'>;
+export type UUID = string & TypeAnnotation<"UUIDv4">;
 /**
  * MongoDB's ObjectID type. serialized as string in JSON, ObjectID in database.
  */
-export type MongoId = string & TypeAnnotation<'mongoId'>;
+export type MongoId = string & TypeAnnotation<"mongoId">;
 /**
  * Same as `bigint` but serializes to unsigned binary with unlimited size (instead of 8 bytes in most databases).
  * Negative values will be converted to positive (abs(x)).
@@ -627,7 +695,7 @@ export type MongoId = string & TypeAnnotation<'mongoId'>;
  * }
  * ```
  */
-export type BinaryBigInt = bigint & TypeAnnotation<'binaryBigInt'>;
+export type BinaryBigInt = bigint & TypeAnnotation<"binaryBigInt">;
 /**
  * Same as `bigint` but serializes to signed binary with unlimited size (instead of 8 bytes in most databases).
  * The binary has an additional leading sign byte and is represented as an uint: 255 for negative, 0 for zero, or 1 for positive.
@@ -638,7 +706,7 @@ export type BinaryBigInt = bigint & TypeAnnotation<'binaryBigInt'>;
  * }
  * ```
  */
-export type SignedBinaryBigInt = bigint & TypeAnnotation<'signedBinaryBigInt'>;
+export type SignedBinaryBigInt = bigint & TypeAnnotation<"signedBinaryBigInt">;
 export interface BackReferenceOptions {
     /**
      * Necessary for normalised many-to-many relations. This defines the class of the pivot table/collection.
@@ -651,13 +719,13 @@ export interface BackReferenceOptions {
      */
     mappedBy?: string;
 }
-export type Reference<Options extends ReferenceOptions = {}> = TypeAnnotation<'reference', Options>;
-export type BackReference<Options extends BackReferenceOptions = {}> = TypeAnnotation<'backReference', Options>;
-export type EmbeddedMeta<Options> = TypeAnnotation<'embedded', Options>;
+export type Reference<Options extends ReferenceOptions = {}> = TypeAnnotation<"reference", Options>;
+export type BackReference<Options extends BackReferenceOptions = {}> = TypeAnnotation<"backReference", Options>;
+export type EmbeddedMeta<Options> = TypeAnnotation<"embedded", Options>;
 export type Embedded<T, Options extends {
     prefix?: string;
 } = {}> = T & EmbeddedMeta<Options>;
-export type MapName<Alias extends string, ForSerializer extends string = ''> = TypeAnnotation<'mapName', [Alias, ForSerializer]>;
+export type MapName<Alias extends string, ForSerializer extends string = ""> = TypeAnnotation<"mapName", [Alias, ForSerializer]>;
 export declare const referenceAnnotation: AnnotationDefinition<ReferenceOptions>;
 export declare const entityAnnotation: {
     set<K extends keyof EntityOptions>(type: Type, name: K, value: EntityOptions[K]): void;
@@ -749,7 +817,7 @@ export declare function hasEmbedded(type: Type): boolean;
  * }
  * ```
  */
-export type Group<Name extends string> = TypeAnnotation<'group', Name>;
+export type Group<Name extends string> = TypeAnnotation<"group", Name>;
 /**
  * Excludes the type from serialization of all kind.
  *
@@ -761,7 +829,7 @@ export type Group<Name extends string> = TypeAnnotation<'group', Name>;
  *  }
  *  ```
  */
-export type Excluded<Name extends string = '*'> = TypeAnnotation<'excluded', Name>;
+export type Excluded<Name extends string = "*"> = TypeAnnotation<"excluded", Name>;
 /**
  * Assigns arbitrary data to a type that can be read in runtime.
  *
@@ -773,7 +841,10 @@ export type Excluded<Name extends string = '*'> = TypeAnnotation<'excluded', Nam
  * }
  * ```
  */
-export type Data<Name extends string, Value> = TypeAnnotation<'data', [Name, Value]>;
+export type Data<Name extends string, Value> = TypeAnnotation<"data", [
+    Name,
+    Value
+]>;
 /**
  * Resets an already set decorator to undefined.
  *
@@ -787,7 +858,7 @@ export type Data<Name extends string, Value> = TypeAnnotation<'data', [Name, Val
  * }
  * ```
  */
-export type ResetAnnotation<Name extends string> = TypeAnnotation<'reset', Name>;
+export type ResetAnnotation<Name extends string> = TypeAnnotation<"reset", Name>;
 export type IndexOptions = {
     name?: string;
     size?: number;
@@ -798,10 +869,10 @@ export type IndexOptions = {
     where?: string;
     expireAfterSeconds?: number;
 };
-export type Unique<Options extends IndexOptions = {}> = TypeAnnotation<'index', Options & {
+export type Unique<Options extends IndexOptions = {}> = TypeAnnotation<"index", Options & {
     unique: true;
 }>;
-export type Index<Options extends IndexOptions = {}> = TypeAnnotation<'index', Options>;
+export type Index<Options extends IndexOptions = {}> = TypeAnnotation<"index", Options>;
 export interface DatabaseFieldOptions {
     /**
      * The name of the column in the database.
@@ -848,11 +919,11 @@ export interface SqliteOptions extends DatabaseFieldOptions {
 }
 type Database<Name extends string, Options extends {
     [name: string]: any;
-}> = TypeAnnotation<'database', [Name, Options]>;
-export type MySQL<Options extends MySQLOptions> = Database<'mysql', Options>;
-export type Postgres<Options extends PostgresOptions> = Database<'postgres', Options>;
-export type SQLite<Options extends SqliteOptions> = Database<'sqlite', Options>;
-export type DatabaseField<Options extends DatabaseFieldOptions, Name extends string = '*'> = Database<Name, Options>;
+}> = TypeAnnotation<"database", [Name, Options]>;
+export type MySQL<Options extends MySQLOptions> = Database<"mysql", Options>;
+export type Postgres<Options extends PostgresOptions> = Database<"postgres", Options>;
+export type SQLite<Options extends SqliteOptions> = Database<"sqlite", Options>;
+export type DatabaseField<Options extends DatabaseFieldOptions, Name extends string = "*"> = Database<Name, Options>;
 export declare const enum BinaryBigIntType {
     unsigned = 0,
     signed = 1
@@ -1047,6 +1118,7 @@ interface StringifyTypeOptions {
     defaultIsOptional: boolean;
     showHeritage: boolean;
     showDefaults: boolean;
+    showTags: boolean;
     defaultValues: any;
     stringify?: (type: Type) => string | undefined;
 }
@@ -1058,6 +1130,7 @@ export declare type __ΩReflectionKind = any[];
 export declare type __ΩTypeDecorator = any[];
 export declare type __ΩAnnotations = any[];
 export declare type __ΩJitContainer = any[];
+export declare type __ΩTagsReflection = any[];
 export declare type __ΩTypeNever = any[];
 export declare type __ΩTypeAny = any[];
 export declare type __ΩTypeUnknown = any[];
diff --git a/dist/cjs/src/reflection/type.js b/dist/cjs/src/reflection/type.js
index 50faab8dcc3f5667c17a833461e5ba7b60a763de..e66a0ac0f780df260e1c8005e4be50af0fce7a15 100644
--- a/dist/cjs/src/reflection/type.js
+++ b/dist/cjs/src/reflection/type.js
@@ -1,9 +1,9 @@
 "use strict";
 var _a, _b, _c, _d, _e, _f;
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.__ΩParentLessType = exports.CartesianProduct = exports.__ΩWithAnnotations = exports.__ΩInlineRuntimeType = exports.__ΩFindType = exports.__ΩWiden = exports.__ΩTypeRest = exports.__ΩTypeTuple = exports.__ΩTypeTupleMember = exports.__ΩTypeInfer = exports.__ΩTypeIndexSignature = exports.__ΩTypeObjectLiteral = exports.__ΩTypeMethodSignature = exports.__ΩTypePropertySignature = exports.__ΩTypeArray = exports.__ΩTypeIntersection = exports.__ΩTypeUnion = exports.__ΩTypeTypeParameter = exports.__ΩTypeEnumMember = exports.__ΩTypeEnum = exports.__ΩTypeClass = exports.__ΩTypePromise = exports.__ΩTypeCallSignature = exports.__ΩTypeFunction = exports.__ΩTypeProperty = exports.__ΩTypeMethod = exports.__ΩTypeParameter = exports.__ΩTypeBaseMember = exports.__ΩTypeRegexp = exports.__ΩTypeTemplateLiteral = exports.__ΩTypeLiteral = exports.__ΩTypeUndefined = exports.__ΩTypeNull = exports.__ΩTypeSymbol = exports.__ΩTypeBigInt = exports.__ΩTypeBoolean = exports.__ΩTypeNumber = exports.__ΩTypeString = exports.__ΩTypeObject = exports.__ΩTypeVoid = exports.__ΩTypeUnknown = exports.__ΩTypeAny = exports.__ΩTypeNever = exports.__ΩJitContainer = exports.__ΩAnnotations = exports.__ΩTypeDecorator = exports.ReflectionKind = exports.__ΩReflectionKind = exports.ReflectionVisibility = exports.__ΩReflectionVisibility = void 0;
-exports.__ΩIndexOptions = exports.__ΩResetAnnotation = exports.__ΩData = exports.__ΩExcluded = exports.__ΩGroup = exports.embeddedAnnotation = exports.__ΩEmbeddedOptions = exports.defaultAnnotation = exports.uuidAnnotation = exports.mongoIdAnnotation = exports.UUIDAnnotation = exports.validationAnnotation = exports.backReferenceAnnotation = exports.__ΩBackReferenceOptionsResolved = exports.primaryKeyAnnotation = exports.autoIncrementAnnotation = exports.mapNameAnnotation = exports.entityAnnotation = exports.referenceAnnotation = exports.__ΩMapName = exports.__ΩEmbedded = exports.__ΩEmbeddedMeta = exports.__ΩBackReference = exports.__ΩReference = exports.__ΩBackReferenceOptions = exports.__ΩSignedBinaryBigInt = exports.__ΩBinaryBigInt = exports.__ΩMongoId = exports.__ΩUUID = exports.__ΩAutoIncrement = exports.__ΩReferenceFields = exports.__ΩPrimaryKeyType = exports.__ΩPrimaryKeyFields = exports.__ΩPrimaryKey = exports.__ΩEntity = exports.__ΩEntityOptions = exports.__ΩReferenceOptions = exports.__ΩReferenceActions = exports.__ΩAnnotationType = exports.AnnotationDefinition = exports.__Ωfloat64 = exports.__Ωfloat32 = exports.__Ωfloat = exports.__Ωuint32 = exports.__Ωint32 = exports.__Ωuint16 = exports.__Ωint16 = exports.__Ωuint8 = exports.__Ωint8 = exports.__Ωinteger = void 0;
-exports.binaryTypes = exports.typeDecorators = exports.databaseAnnotation = exports.indexAnnotation = exports.typeAnnotation = exports.dataAnnotation = exports.excludedAnnotation = exports.groupAnnotation = exports.binaryBigIntAnnotation = exports.__ΩBinaryBigIntType = exports.__ΩDatabaseField = exports.__ΩSQLite = exports.__ΩPostgres = exports.__ΩMySQL = exports.__ΩSqliteOptions = exports.__ΩPostgresOptions = exports.__ΩMySQLOptions = exports.__ΩDatabaseFieldOptions = exports.__ΩIndex = exports.__ΩUnique = void 0;
+exports.CartesianProduct = exports.__ΩWithAnnotations = exports.__ΩInlineRuntimeType = exports.__ΩFindType = exports.__ΩWiden = exports.__ΩTypeRest = exports.__ΩTypeTuple = exports.__ΩTypeTupleMember = exports.__ΩTypeInfer = exports.__ΩTypeIndexSignature = exports.__ΩTypeObjectLiteral = exports.__ΩTypeMethodSignature = exports.__ΩTypePropertySignature = exports.__ΩTypeArray = exports.__ΩTypeIntersection = exports.__ΩTypeUnion = exports.__ΩTypeTypeParameter = exports.__ΩTypeEnumMember = exports.__ΩTypeEnum = exports.__ΩTypeClass = exports.__ΩTypePromise = exports.__ΩTypeCallSignature = exports.__ΩTypeFunction = exports.__ΩTypeProperty = exports.__ΩTypeMethod = exports.__ΩTypeParameter = exports.__ΩTypeBaseMember = exports.__ΩTypeRegexp = exports.__ΩTypeTemplateLiteral = exports.__ΩTypeLiteral = exports.__ΩTypeUndefined = exports.__ΩTypeNull = exports.__ΩTypeSymbol = exports.__ΩTypeBigInt = exports.__ΩTypeBoolean = exports.__ΩTypeNumber = exports.__ΩTypeString = exports.__ΩTypeObject = exports.__ΩTypeVoid = exports.__ΩTypeUnknown = exports.__ΩTypeAny = exports.__ΩTypeNever = exports.__ΩTagsReflection = exports.__ΩJitContainer = exports.__ΩAnnotations = exports.__ΩTypeDecorator = exports.ReflectionKind = exports.__ΩReflectionKind = exports.ReflectionVisibility = exports.__ΩReflectionVisibility = void 0;
+exports.__ΩResetAnnotation = exports.__ΩData = exports.__ΩExcluded = exports.__ΩGroup = exports.embeddedAnnotation = exports.__ΩEmbeddedOptions = exports.defaultAnnotation = exports.uuidAnnotation = exports.mongoIdAnnotation = exports.UUIDAnnotation = exports.validationAnnotation = exports.backReferenceAnnotation = exports.__ΩBackReferenceOptionsResolved = exports.primaryKeyAnnotation = exports.autoIncrementAnnotation = exports.mapNameAnnotation = exports.entityAnnotation = exports.referenceAnnotation = exports.__ΩMapName = exports.__ΩEmbedded = exports.__ΩEmbeddedMeta = exports.__ΩBackReference = exports.__ΩReference = exports.__ΩBackReferenceOptions = exports.__ΩSignedBinaryBigInt = exports.__ΩBinaryBigInt = exports.__ΩMongoId = exports.__ΩUUID = exports.__ΩAutoIncrement = exports.__ΩReferenceFields = exports.__ΩPrimaryKeyType = exports.__ΩPrimaryKeyFields = exports.__ΩPrimaryKey = exports.__ΩEntity = exports.__ΩEntityOptions = exports.__ΩReferenceOptions = exports.__ΩReferenceActions = exports.__ΩAnnotationType = exports.AnnotationDefinition = exports.__Ωfloat64 = exports.__Ωfloat32 = exports.__Ωfloat = exports.__Ωuint32 = exports.__Ωint32 = exports.__Ωuint16 = exports.__Ωint16 = exports.__Ωuint8 = exports.__Ωint8 = exports.__Ωinteger = exports.__ΩParentLessType = void 0;
+exports.binaryTypes = exports.typeDecorators = exports.databaseAnnotation = exports.indexAnnotation = exports.typeAnnotation = exports.dataAnnotation = exports.excludedAnnotation = exports.groupAnnotation = exports.binaryBigIntAnnotation = exports.__ΩBinaryBigIntType = exports.__ΩDatabaseField = exports.__ΩSQLite = exports.__ΩPostgres = exports.__ΩMySQL = exports.__ΩSqliteOptions = exports.__ΩPostgresOptions = exports.__ΩMySQLOptions = exports.__ΩDatabaseFieldOptions = exports.__ΩIndex = exports.__ΩUnique = exports.__ΩIndexOptions = void 0;
 exports.applyScheduledAnnotations = applyScheduledAnnotations;
 exports.hasTypeInformation = hasTypeInformation;
 exports.getTypeJitContainer = getTypeJitContainer;
@@ -39,6 +39,15 @@ exports.getTypeObjectLiteralFromTypeClass = getTypeObjectLiteralFromTypeClass;
 exports.isOptional = isOptional;
 exports.hasDefaultValue = hasDefaultValue;
 exports.isNullable = isNullable;
+exports.getTags = getTags;
+exports.isHidden = isHidden;
+exports.isIgnore = isIgnore;
+exports.isInternal = isInternal;
+exports.getAlias = getAlias;
+exports.isReadonly = isReadonly;
+exports.getTitle = getTitle;
+exports.getPermission = getPermission;
+exports.getDomain = getDomain;
 exports.isUUIDType = isUUIDType;
 exports.isPrimaryKeyType = isPrimaryKeyType;
 exports.isAutoIncrementType = isAutoIncrementType;
@@ -74,13 +83,13 @@ const __ΩReturnType = ['T', 'args', '', 'ReturnType', 'l>e"!R"RPde#!P"@2"h"!/#q
 const __ΩExclude = ['T', 'U', 'Exclude', 'l6!Re$!RPe#!e$"qk#%QRb!b"Pde"!p)w#y'];
 const __ΩRequired = ['T', 'Required', 'l+e#!e"!fRb!Pde"!gN##w"y'];
 /*@ts-ignore*/
-const { __ΩClassType } = require('@deepkit/core');
+const { __ΩClassType } = require("@deepkit/core");
 /*@ts-ignore*/
-const { __ΩAbstractClassType } = require('@deepkit/core');
+const { __ΩAbstractClassType } = require("@deepkit/core");
 /*@ts-ignore*/
-const { __ΩReceiveType } = require('./reflection.js');
+const { __ΩReceiveType } = require("./reflection.js");
 /*@ts-ignore*/
-const { __ΩTypeAnnotation } = require('@deepkit/core');
+const { __ΩTypeAnnotation } = require("@deepkit/core");
 function __assignType(fn, args) {
     fn.__type = args;
     return fn;
@@ -96,10 +105,10 @@ function __assignType(fn, args) {
  */
 const core_1 = require("@deepkit/core");
 const type_spec_1 = require("@deepkit/type-spec");
-const reflection_js_1 = require("./reflection.js");
 const extends_js_1 = require("./extends.js");
-const state_js_1 = require("./state.js");
 const processor_js_1 = require("./processor.js");
+const reflection_js_1 = require("./reflection.js");
+const state_js_1 = require("./state.js");
 const __ΩReflectionVisibility = ['public', 'protected', 'private', 'ReflectionVisibility', 'PC!C"C#Bw$'];
 exports.__ΩReflectionVisibility = __ΩReflectionVisibility;
 var ReflectionVisibility;
@@ -171,7 +180,7 @@ function applyScheduledAnnotations(type) {
 }
 applyScheduledAnnotations.__type = ['Type', 'type', 'applyScheduledAnnotations', 'P"w!2""/#'];
 function hasTypeInformation(object) {
-    return '__type' in object && (0, core_1.isArray)(object.__type);
+    return "__type" in object && (0, core_1.isArray)(object.__type);
 }
 hasTypeInformation.__type = [() => __ΩClassType, () => Function, 'object', 'hasTypeInformation', 'PPn!Pu"J2#)/$'];
 const __ΩJitContainer = ['JitContainer', '"w!y'];
@@ -186,6 +195,8 @@ function clearTypeJitContainer(type) {
     type.jit = {};
 }
 clearTypeJitContainer.__type = ['Type', 'type', 'clearTypeJitContainer', 'P"w!2"$/#'];
+const __ΩTagsReflection = ['hidden', 'ignore', 'internal', 'alias', 'title', 'readonly', 'permission', 'domain', 'TagsReflection', 'P)4!8)4"8)4#8&F4$8&4%8)4&8&F4\'8&4(8Mw)y'];
+exports.__ΩTagsReflection = __ΩTagsReflection;
 const __ΩTypeNever = ['TypeAnnotations', 0, 'kind', 'Type', 'parent', 'TypeNever', 'P"w!a"4#"w$4%8Mw&y'];
 exports.__ΩTypeNever = __ΩTypeNever;
 const __ΩTypeAny = ['TypeAnnotations', 1, 'kind', 'Type', 'parent', 'TypeAny', 'P"w!a"4#"w$4%8Mw&y'];
@@ -199,7 +210,10 @@ exports.__ΩTypeObject = __ΩTypeObject;
 const __ΩTypeString = ['TypeAnnotations', 5, 'kind', 'Type', 'parent', 'TypeString', 'P"w!a"4#"w$4%8Mw&y'];
 exports.__ΩTypeString = __ΩTypeString;
 function isIntegerType(type) {
-    return type.kind === ReflectionKind.number && type.brand !== undefined && type.brand >= type_spec_1.TypeNumberBrand.integer && type.brand <= type_spec_1.TypeNumberBrand.uint32;
+    return (type.kind === ReflectionKind.number &&
+        type.brand !== undefined &&
+        type.brand >= type_spec_1.TypeNumberBrand.integer &&
+        type.brand <= type_spec_1.TypeNumberBrand.uint32);
 }
 isIntegerType.__type = ['Type', 'type', 'isIntegerType', 'P"w!2"!/#'];
 const __ΩTypeNumber = ['TypeAnnotations', 6, 'kind', 'TypeNumberBrand', 'brand', 'Type', 'parent', 'TypeNumber', 'P"w!a"4#"w$4%8"w&4\'8Mw(y'];
@@ -222,47 +236,47 @@ const __ΩTypeRegexp = ['TypeAnnotations', 12, 'kind', 'Type', 'parent', 'TypeRe
 exports.__ΩTypeRegexp = __ΩTypeRegexp;
 class User {
     getUserName() {
-        return '';
+        return "";
     }
 }
 User.__type = ['username', "username", 'getUserName', 'User', '&3!P!."f0#5w$'];
 const __Ωa = [() => User, 'username', 'a', 'PP7!P)4"MKw#y'];
 const __Ωb = [() => __ΩReturnType, () => __Ωa, "getUserName", 'b', 'n".#fo!"w$y'];
-const __ΩTypeBaseMember = ['TypeAnnotations', () => __ΩReflectionVisibility, 'visibility', true, 'abstract', true, 'static', true, 'optional', true, 'readonly', 'TypeBaseMember', 'P"w!n"4#.$4%8.&4\'8.(4)8.*4+8Mw,y'];
+const __ΩTypeBaseMember = ['TypeAnnotations', () => __ΩReflectionVisibility, 'visibility', true, 'abstract', true, 'static', true, 'optional', true, 'readonly', () => __ΩTagsReflection, 'tags', 'TypeBaseMember', 'P"w!n"4#.$4%8.&4\'8.(4)8.*4+8n,4-8Mw.y'];
 exports.__ΩTypeBaseMember = __ΩTypeBaseMember;
-const __ΩTypeParameter = ['TypeAnnotations', 18, 'kind', 'name', 'Type', 'type', () => __ΩTypeFunction, () => __ΩTypeMethod, () => __ΩTypeMethodSignature, () => __ΩTypeCallSignature, 'parent', () => __ΩReflectionVisibility, 'visibility', true, 'readonly', true, 'optional', 'description', '', 'default', 'TypeParameter', 'P"w!a"4#&4$"w%4&Pn\'n(n)n*J4+n,4-8..4/8.0418&428P"/3448Mw5y'];
+const __ΩTypeParameter = ['TypeAnnotations', 18, 'kind', 'name', 'Type', 'type', () => __ΩTypeFunction, () => __ΩTypeMethod, () => __ΩTypeMethodSignature, () => __ΩTypeCallSignature, 'parent', () => __ΩReflectionVisibility, 'visibility', true, 'readonly', true, 'optional', 'description', '', 'default', () => __ΩTagsReflection, 'tags', 'TypeParameter', 'P"w!a"4#&4$"w%4&Pn\'n(n)n*J4+n,4-8..4/8.0418&428PP"/3"J448n5468Mw7y'];
 exports.__ΩTypeParameter = __ΩTypeParameter;
 const __ΩTypeMethod = [() => __ΩTypeBaseMember, 16, 'kind', () => __ΩTypeClass, 'parent', 'name', 'description', () => __ΩTypeParameter, 'parameters', 'Type', 'return', 'TypeMethod', 'Pn!a"4#n$4%P\'&+J4&&4\'8n(F4)"w*4+Mw,y'];
 exports.__ΩTypeMethod = __ΩTypeMethod;
-const __ΩTypeProperty = [() => __ΩTypeBaseMember, 15, 'kind', () => __ΩTypeClass, 'parent', () => __ΩReflectionVisibility, 'visibility', 'name', 'description', 'Type', 'type', '', 'default', 'TypeProperty', 'Pn!a"4#n$4%n&4\'P\'&+J4(&4)8"w*4+P"/,4-8Mw.y'];
+const __ΩTypeProperty = [() => __ΩTypeBaseMember, 15, 'kind', () => __ΩTypeClass, 'parent', () => __ΩReflectionVisibility, 'visibility', 'name', 'description', 'Type', 'type', '', 'default', 'TypeProperty', 'Pn!a"4#n$4%n&4\'P\'&+J4(&4)8"w*4+PP"/,"J4-8Mw.y'];
 exports.__ΩTypeProperty = __ΩTypeProperty;
-const __ΩTypeFunction = ['TypeAnnotations', 17, 'kind', 'Type', 'parent', 'name', 'description', () => Function, 'function', () => __ΩTypeParameter, 'parameters', 'return', 'TypeFunction', 'P"w!a"4#"w$4%8P\'&+J4&8&4\'8Pu(4)8n*F4+"w$4,Mw-y'];
+const __ΩTypeFunction = ['TypeAnnotations', 17, 'kind', 'Type', 'parent', 'name', 'description', () => Function, 'function', () => __ΩTypeParameter, 'parameters', 'return', () => __ΩTagsReflection, 'tags', 'TypeFunction', 'P"w!a"4#"w$4%8P\'&+J4&8&4\'8Pu(4)8n*F4+"w$4,n-4.8Mw/y'];
 exports.__ΩTypeFunction = __ΩTypeFunction;
-const __ΩTypeCallSignature = ['TypeAnnotations', 35, 'kind', 'Type', 'parent', () => __ΩTypeParameter, 'parameters', 'return', 'TypeCallSignature', 'P"w!a"4#"w$4%8n&F4\'"w$4(Mw)y'];
+const __ΩTypeCallSignature = ['TypeAnnotations', 35, 'kind', 'Type', 'parent', () => __ΩTypeParameter, 'parameters', 'return', () => __ΩTagsReflection, 'tags', 'TypeCallSignature', 'P"w!a"4#"w$4%8n&F4\'"w$4(n)4*8Mw+y'];
 exports.__ΩTypeCallSignature = __ΩTypeCallSignature;
 const __ΩTypePromise = ['TypeAnnotations', 19, 'kind', 'Type', 'parent', 'type', 'TypePromise', 'P"w!a"4#"w$4%8"w$4&Mw\'y'];
 exports.__ΩTypePromise = __ΩTypePromise;
-const __ΩTypeClass = ['TypeAnnotations', 20, 'kind', 'Type', 'parent', () => __ΩClassType, 'classType', 'description', 'extendsArguments', 'implements', 'arguments', () => __ΩTypeIndexSignature, () => __ΩTypeProperty, () => __ΩTypeMethod, 'types', 'TypeClass', 'P"w!a"4#"w$4%8n&4\'&4(8"w$F4)8"w$F4*8"w$F4+8Pn,n-n.JF4/Mw0y'];
+const __ΩTypeClass = ['TypeAnnotations', 20, 'kind', 'Type', 'parent', () => __ΩClassType, 'classType', 'description', 'extendsArguments', 'implements', 'arguments', () => __ΩTypeIndexSignature, () => __ΩTypeProperty, () => __ΩTypeMethod, 'types', () => __ΩTagsReflection, 'tags', 'TypeClass', 'P"w!a"4#"w$4%8n&4\'&4(8"w$F4)8"w$F4*8"w$F4+8Pn,n-n.JF4/n0418Mw2y'];
 exports.__ΩTypeClass = __ΩTypeClass;
-const __ΩTypeEnum = ['TypeAnnotations', 22, 'kind', 'Type', 'parent', 'enum', 'values', 'indexType', 'description', 'TypeEnum', 'P"w!a"4#"w$4%8P&P&\'-,JLM4&P&\'-,JF4\'"w$4(&4)8Mw*y'];
+const __ΩTypeEnum = ['TypeAnnotations', 22, 'kind', 'Type', 'parent', 'enum', 'values', 'indexType', 'description', () => __ΩTagsReflection, 'tags', 'TypeEnum', 'P"w!a"4#"w$4%8P&P&\'-,JLM4&P&\'-,JF4\'"w$4(&4)8n*4+8Mw,y'];
 exports.__ΩTypeEnum = __ΩTypeEnum;
-const __ΩTypeEnumMember = ['TypeAnnotations', 28, 'kind', () => __ΩTypeEnum, 'parent', 'name', '', 'default', 'TypeEnumMember', 'P"w!a"4#n$4%&4&PP&\'J/\'4(8Mw)y'];
+const __ΩTypeEnumMember = ['TypeAnnotations', 28, 'kind', () => __ΩTypeEnum, 'parent', 'name', 'description', '', 'default', () => __ΩTagsReflection, 'tags', 'TypeEnumMember', 'P"w!a"4#n$4%&4&&4\'8PPP&\'J/(&\'J4)8n*4+8Mw,y'];
 exports.__ΩTypeEnumMember = __ΩTypeEnumMember;
-const __ΩTypeTypeParameter = ['TypeAnnotations', 21, 'kind', 'Type', 'parent', 'name', 'TypeTypeParameter', 'P"w!a"4#"w$4%8&4&Mw\'y'];
+const __ΩTypeTypeParameter = ['TypeAnnotations', 21, 'kind', 'Type', 'parent', 'name', () => __ΩTagsReflection, 'tags', 'TypeTypeParameter', 'P"w!a"4#"w$4%8&4&n\'4(8Mw)y'];
 exports.__ΩTypeTypeParameter = __ΩTypeTypeParameter;
 const __ΩTypeUnion = ['TypeAnnotations', 23, 'kind', 'Type', 'parent', 'types', 'TypeUnion', 'P"w!a"4#"w$4%8"w$F4&Mw\'y'];
 exports.__ΩTypeUnion = __ΩTypeUnion;
 const __ΩTypeIntersection = ['TypeAnnotations', 24, 'kind', 'Type', 'parent', 'types', 'TypeIntersection', 'P"w!a"4#"w$4%8"w$F4&Mw\'y'];
 exports.__ΩTypeIntersection = __ΩTypeIntersection;
-const __ΩTypeArray = ['TypeAnnotations', 25, 'kind', 'Type', 'parent', 'type', 'TypeArray', 'P"w!a"4#"w$4%8"w$4&Mw\'y'];
+const __ΩTypeArray = ['TypeAnnotations', 25, 'kind', 'Type', 'parent', 'type', () => __ΩTagsReflection, 'tags', 'TypeArray', 'P"w!a"4#"w$4%8"w$4&n\'4(8Mw)y'];
 exports.__ΩTypeArray = __ΩTypeArray;
-const __ΩTypePropertySignature = ['TypeAnnotations', 32, 'kind', () => __ΩTypeObjectLiteral, 'parent', 'name', true, 'optional', true, 'readonly', 'description', 'Type', 'type', 'TypePropertySignature', 'P"w!a"4#n$4%P\'&+J4&.\'4(8.)4*8&4+8"w,4-Mw.y'];
+const __ΩTypePropertySignature = ['TypeAnnotations', 32, 'kind', () => __ΩTypeObjectLiteral, 'parent', 'name', true, 'optional', true, 'readonly', 'description', 'Type', 'type', '', 'default', () => __ΩTagsReflection, 'tags', 'TypePropertySignature', 'P"w!a"4#n$4%P\'&+J4&.\'4(8.)4*8&4+8"w,4-PP"/."J4/8n0418Mw2y'];
 exports.__ΩTypePropertySignature = __ΩTypePropertySignature;
-const __ΩTypeMethodSignature = ['TypeAnnotations', 33, 'kind', () => __ΩTypeObjectLiteral, 'parent', 'name', true, 'optional', 'description', () => __ΩTypeParameter, 'parameters', 'Type', 'return', 'TypeMethodSignature', 'P"w!a"4#n$4%P\'&+J4&.\'4(8&4)8n*F4+"w,4-Mw.y'];
+const __ΩTypeMethodSignature = ['TypeAnnotations', 33, 'kind', () => __ΩTypeObjectLiteral, 'parent', 'name', true, 'optional', 'description', () => __ΩTypeParameter, 'parameters', 'Type', 'return', () => __ΩTagsReflection, 'tags', 'TypeMethodSignature', 'P"w!a"4#n$4%P\'&+J4&.\'4(8&4)8n*F4+"w,4-n.4/8Mw0y'];
 exports.__ΩTypeMethodSignature = __ΩTypeMethodSignature;
-const __ΩTypeObjectLiteral = ['TypeAnnotations', 30, 'kind', 'Type', 'parent', 'description', () => __ΩTypeIndexSignature, () => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, () => __ΩTypeCallSignature, 'types', 'implements', 'TypeObjectLiteral', 'P"w!a"4#"w$4%8&4&8Pn\'n(n)n*JF4+"w$F4,8Mw-y'];
+const __ΩTypeObjectLiteral = ['TypeAnnotations', 30, 'kind', 'Type', 'parent', 'description', () => __ΩTypeIndexSignature, () => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, () => __ΩTypeCallSignature, 'types', 'implements', () => __ΩTagsReflection, 'tags', 'TypeObjectLiteral', 'P"w!a"4#"w$4%8&4&8Pn\'n(n)n*JF4+"w$F4,8n-4.8Mw/y'];
 exports.__ΩTypeObjectLiteral = __ΩTypeObjectLiteral;
-const __ΩTypeIndexSignature = ['TypeAnnotations', 31, 'kind', () => __ΩTypeClass, () => __ΩTypeObjectLiteral, 'parent', 'Type', 'index', 'type', 'TypeIndexSignature', 'P"w!a"4#Pn$n%J4&"w\'4("w\'4)Mw*y'];
+const __ΩTypeIndexSignature = ['TypeAnnotations', 31, 'kind', () => __ΩTypeClass, () => __ΩTypeObjectLiteral, 'parent', 'Type', 'index', 'type', '', 'default', () => __ΩTagsReflection, 'tags', 'TypeIndexSignature', 'P"w!a"4#Pn$n%J4&"w\'4("w\'4)PP"/*"J4+8n,4-8Mw.y'];
 exports.__ΩTypeIndexSignature = __ΩTypeIndexSignature;
 const __ΩTypeInfer = ['TypeAnnotations', 34, 'kind', 'Type', 'parent', 'type', 'set', 'TypeInfer', 'P"w!a"4#"w$4%8P"w$2&$1\'Mw(y'];
 exports.__ΩTypeInfer = __ΩTypeInfer;
@@ -279,20 +293,26 @@ exports.__ΩFindType = __ΩFindType;
 const __ΩInlineRuntimeType = ['T', () => reflection_js_1.ReflectionClass, 'InlineRuntimeType', 'l:e"!R"RPde#!Ph"!7"qk#\'QRb!Pde"!p)w#y'];
 exports.__ΩInlineRuntimeType = __ΩInlineRuntimeType;
 function isType(entry) {
-    return entry && 'object' === typeof entry && 'number' === typeof entry.kind;
+    return entry && "object" === typeof entry && "number" === typeof entry.kind;
 }
 isType.__type = ['entry', 'isType', 'P"2!!/"'];
 function isBinary(type) {
-    return type.kind === ReflectionKind.class && exports.binaryTypes.includes(type.classType);
+    return (type.kind === ReflectionKind.class && exports.binaryTypes.includes(type.classType));
 }
 isBinary.__type = ['Type', 'type', 'isBinary', 'P"w!2")/#'];
 function isPrimitive(type) {
-    return type.kind === ReflectionKind.string || type.kind === ReflectionKind.number || type.kind === ReflectionKind.bigint || type.kind === ReflectionKind.boolean
-        || type.kind === ReflectionKind.literal || type.kind === ReflectionKind.null || type.kind === ReflectionKind.undefined;
+    return (type.kind === ReflectionKind.string ||
+        type.kind === ReflectionKind.number ||
+        type.kind === ReflectionKind.bigint ||
+        type.kind === ReflectionKind.boolean ||
+        type.kind === ReflectionKind.literal ||
+        type.kind === ReflectionKind.null ||
+        type.kind === ReflectionKind.undefined);
 }
 isPrimitive.__type = ['type', 'isPrimitive', 'P"2!)/"'];
 function isPropertyType(type) {
-    return type.kind === ReflectionKind.property || type.kind === ReflectionKind.propertySignature;
+    return (type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.propertySignature);
 }
 isPropertyType.__type = ['Type', 'type', 'isPropertyType', 'P"w!2"!/#'];
 /**
@@ -312,11 +332,11 @@ isPropertyMemberType.__type = ['Type', 'type', 'isPropertyMemberType', 'P"w!2"!/
 function getConstructorProperties(type) {
     const result = {
         parameters: [],
-        properties: [],
+        properties: []
     };
     if (type.kind === ReflectionKind.objectLiteral)
         return result;
-    const constructor = findMember('constructor', resolveTypeMembers(type));
+    const constructor = findMember("constructor", resolveTypeMembers(type));
     if (!constructor)
         return result;
     for (const parameter of constructor.parameters) {
@@ -335,14 +355,28 @@ getConstructorProperties.__type = [() => __ΩTypeClass, () => __ΩTypeObjectLite
 const __ΩWithAnnotations = [() => __ΩTypeAny, () => __ΩTypeUnknown, () => __ΩTypeString, () => __ΩTypeNumber, () => __ΩTypeBigInt, () => __ΩTypeBoolean, () => __ΩTypeArray, () => __ΩTypeTuple, () => __ΩTypeLiteral, () => __ΩTypeNull, () => __ΩTypeUndefined, () => __ΩTypeClass, () => __ΩTypeObjectLiteral, () => __ΩTypeObject, () => __ΩTypeTemplateLiteral, () => __ΩTypeRegexp, () => __ΩTypeSymbol, 'WithAnnotations', 'Pn!n"n#n$n%n&n\'n(n)n*n+n,n-n.n/n0n1Jw2y'];
 exports.__ΩWithAnnotations = __ΩWithAnnotations;
 function isWithAnnotations(type) {
-    return type.kind === ReflectionKind.any || type.kind === ReflectionKind.unknown || type.kind === ReflectionKind.string || type.kind === ReflectionKind.number || type.kind === ReflectionKind.bigint || type.kind === ReflectionKind.boolean
-        || type.kind === ReflectionKind.union || type.kind === ReflectionKind.array || type.kind === ReflectionKind.tuple || type.kind === ReflectionKind.literal || type.kind === ReflectionKind.null || type.kind === ReflectionKind.undefined
-        || type.kind === ReflectionKind.class || type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.object || type.kind === ReflectionKind.templateLiteral
-        || type.kind === ReflectionKind.regexp || type.kind === ReflectionKind.symbol;
+    return (type.kind === ReflectionKind.any ||
+        type.kind === ReflectionKind.unknown ||
+        type.kind === ReflectionKind.string ||
+        type.kind === ReflectionKind.number ||
+        type.kind === ReflectionKind.bigint ||
+        type.kind === ReflectionKind.boolean ||
+        type.kind === ReflectionKind.union ||
+        type.kind === ReflectionKind.array ||
+        type.kind === ReflectionKind.tuple ||
+        type.kind === ReflectionKind.literal ||
+        type.kind === ReflectionKind.null ||
+        type.kind === ReflectionKind.undefined ||
+        type.kind === ReflectionKind.class ||
+        type.kind === ReflectionKind.objectLiteral ||
+        type.kind === ReflectionKind.object ||
+        type.kind === ReflectionKind.templateLiteral ||
+        type.kind === ReflectionKind.regexp ||
+        type.kind === ReflectionKind.symbol);
 }
 isWithAnnotations.__type = [() => __ΩParentLessType, 'type', 'isWithAnnotations', 'Pn!2"!/#'];
 function getAnnotations(type) {
-    return type.annotations || (type.annotations = {});
+    return (type.annotations || (type.annotations = {}));
 }
 getAnnotations.__type = [() => __ΩWithAnnotations, 'type', () => __ΩAnnotations, 'getAnnotations', 'Pn!2"n#/$'];
 const __ΩStackEntry = ['Type', 'left', 'right', 'StackEntry', 'P"w!4""w!4#Mw$y'];
@@ -374,7 +408,8 @@ function isSameType(a, b, stack = []) {
             return isSameType(a.type, b.type, stack);
         if (a.kind === ReflectionKind.literal)
             return a.literal === b.literal;
-        if (a.kind === ReflectionKind.templateLiteral && b.kind === ReflectionKind.templateLiteral) {
+        if (a.kind === ReflectionKind.templateLiteral &&
+            b.kind === ReflectionKind.templateLiteral) {
             if (a.types.length !== b.types.length)
                 return false;
             for (let i = 0; a.types.length; i++) {
@@ -415,7 +450,8 @@ function isSameType(a, b, stack = []) {
             // }
             // return true;
         }
-        if (a.kind === ReflectionKind.objectLiteral && b.kind === ReflectionKind.objectLiteral) {
+        if (a.kind === ReflectionKind.objectLiteral &&
+            b.kind === ReflectionKind.objectLiteral) {
             if (a.types.length !== b.types.length)
                 return false;
             for (const aMember of a.types) {
@@ -431,7 +467,8 @@ function isSameType(a, b, stack = []) {
                     if (!valid)
                         return false;
                 }
-                else if (aMember.kind === ReflectionKind.propertySignature || aMember.kind === ReflectionKind.methodSignature) {
+                else if (aMember.kind === ReflectionKind.propertySignature ||
+                    aMember.kind === ReflectionKind.methodSignature) {
                     const bMember = findMember(aMember.name, b.types);
                     if (!bMember)
                         return false;
@@ -465,7 +502,9 @@ function isSameType(a, b, stack = []) {
         if (a.kind === ReflectionKind.tupleMember) {
             if (b.kind !== ReflectionKind.tupleMember)
                 return false;
-            return a.optional === b.optional && a.name === b.name && isSameType(a.type, b.type, stack);
+            return (a.optional === b.optional &&
+                a.name === b.name &&
+                isSameType(a.type, b.type, stack));
         }
         if (a.kind === ReflectionKind.array) {
             if (b.kind !== ReflectionKind.array)
@@ -486,16 +525,25 @@ function isSameType(a, b, stack = []) {
         if (a.kind === ReflectionKind.parameter) {
             if (b.kind !== ReflectionKind.parameter)
                 return false;
-            return a.name === b.name && a.optional === b.optional && isSameType(a.type, b.type, stack);
-        }
-        if (a.kind === ReflectionKind.function || a.kind === ReflectionKind.method || a.kind === ReflectionKind.methodSignature) {
-            if (b.kind !== ReflectionKind.function && b.kind !== ReflectionKind.method && b.kind !== ReflectionKind.methodSignature)
+            return (a.name === b.name &&
+                a.optional === b.optional &&
+                isSameType(a.type, b.type, stack));
+        }
+        if (a.kind === ReflectionKind.function ||
+            a.kind === ReflectionKind.method ||
+            a.kind === ReflectionKind.methodSignature) {
+            if (b.kind !== ReflectionKind.function &&
+                b.kind !== ReflectionKind.method &&
+                b.kind !== ReflectionKind.methodSignature)
                 return false;
             if (a.parameters.length !== b.parameters.length)
                 return false;
-            if (a.kind === ReflectionKind.function && b.kind === ReflectionKind.function && a.function !== b.function)
+            if (a.kind === ReflectionKind.function &&
+                b.kind === ReflectionKind.function &&
+                a.function !== b.function)
                 return false;
-            if (a.kind === ReflectionKind.method && b.kind === ReflectionKind.method) {
+            if (a.kind === ReflectionKind.method &&
+                b.kind === ReflectionKind.method) {
                 if (a.visibility !== b.visibility)
                     return false;
             }
@@ -548,7 +596,11 @@ function addType(container, type) {
             container.types.push({ ...type, parent: container });
         }
         else {
-            container.types.push({ kind: ReflectionKind.tupleMember, parent: container, type: type });
+            container.types.push({
+                kind: ReflectionKind.tupleMember,
+                parent: container,
+                type: type
+            });
         }
     }
     else if (container.kind === ReflectionKind.union) {
@@ -558,8 +610,12 @@ function addType(container, type) {
             }
         }
         else if (type.kind === ReflectionKind.tupleMember) {
-            if (type.optional && !isTypeIncluded(container.types, { kind: ReflectionKind.undefined })) {
-                container.types.push({ kind: ReflectionKind.undefined, parent: container });
+            if (type.optional &&
+                !isTypeIncluded(container.types, { kind: ReflectionKind.undefined })) {
+                container.types.push({
+                    kind: ReflectionKind.undefined,
+                    parent: container
+                });
             }
             addType(container, type.type);
         }
@@ -663,7 +719,8 @@ unboxUnion.__type = [() => __ΩTypeUnion, 'union', 'Type', 'unboxUnion', 'Pn!2""
 function findMember(index, types) {
     const indexType = typeof index;
     for (const member of types) {
-        if (member.kind === ReflectionKind.propertySignature && member.name === index)
+        if (member.kind === ReflectionKind.propertySignature &&
+            member.name === index)
             return member;
         if (member.kind === ReflectionKind.methodSignature && member.name === index)
             return member;
@@ -672,11 +729,11 @@ function findMember(index, types) {
         if (member.kind === ReflectionKind.method && member.name === index)
             return member;
         if (member.kind === ReflectionKind.indexSignature) {
-            if (member.index.kind === ReflectionKind.string && 'string' === indexType)
+            if (member.index.kind === ReflectionKind.string && "string" === indexType)
                 return member;
-            if (member.index.kind === ReflectionKind.number && 'number' === indexType)
+            if (member.index.kind === ReflectionKind.number && "number" === indexType)
                 return member;
-            if (member.index.kind === ReflectionKind.symbol && 'symbol' === indexType)
+            if (member.index.kind === ReflectionKind.symbol && "symbol" === indexType)
                 return member;
             //todo: union needs to match depending on union and indexType
         }
@@ -685,17 +742,22 @@ function findMember(index, types) {
 }
 findMember.__type = [() => __ΩTypeTemplateLiteral, 'index', 'Type', 'types', () => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, () => __ΩTypeMethod, () => __ΩTypeProperty, () => __ΩTypeIndexSignature, 'findMember', 'PP&\'+n!J2""w#F2$Pn%n&n\'n(n)-J/*'];
 function resolveObjectIndexType(type, index) {
-    if (index.kind === ReflectionKind.literal && ('string' === typeof index.literal || 'number' === typeof index.literal || 'symbol' === typeof index.literal)) {
+    if (index.kind === ReflectionKind.literal &&
+        ("string" === typeof index.literal ||
+            "number" === typeof index.literal ||
+            "symbol" === typeof index.literal)) {
         const member = findMember(index.literal, resolveTypeMembers(type));
         if (member) {
             if (member.kind === ReflectionKind.indexSignature) {
                 //todo: check if index type matches literal type
                 return member.type;
             }
-            else if (member.kind === ReflectionKind.method || member.kind === ReflectionKind.methodSignature) {
+            else if (member.kind === ReflectionKind.method ||
+                member.kind === ReflectionKind.methodSignature) {
                 return member;
             }
-            else if (member.kind === ReflectionKind.property || member.kind === ReflectionKind.propertySignature) {
+            else if (member.kind === ReflectionKind.property ||
+                member.kind === ReflectionKind.propertySignature) {
                 return member.type;
             }
             else {
@@ -706,7 +768,9 @@ function resolveObjectIndexType(type, index) {
             return { kind: ReflectionKind.never };
         }
     }
-    else if (index.kind === ReflectionKind.string || index.kind === ReflectionKind.number || index.kind === ReflectionKind.symbol) {
+    else if (index.kind === ReflectionKind.string ||
+        index.kind === ReflectionKind.number ||
+        index.kind === ReflectionKind.symbol) {
         //check if index signature match
         for (const member of resolveTypeMembers(type)) {
             if (member.kind === ReflectionKind.indexSignature) {
@@ -720,7 +784,9 @@ function resolveObjectIndexType(type, index) {
 resolveObjectIndexType.__type = [() => __ΩTypeObjectLiteral, () => __ΩTypeClass, 'type', 'Type', 'index', 'resolveObjectIndexType', 'PPn!n"J2#"w$2%"w$/&'];
 const __ΩCStack = ['Type', 'iterator', 'i', 'round', 'CStack', 'P"w!F4"\'4#\'4$Mw%y'];
 function emptyObject(type) {
-    return (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) && type.types.length === 0;
+    return ((type.kind === ReflectionKind.objectLiteral ||
+        type.kind === ReflectionKind.class) &&
+        type.types.length === 0);
 }
 emptyObject.__type = ['Type', 'type', 'emptyObject', 'P"w!2")/#'];
 class CartesianProduct {
@@ -731,20 +797,23 @@ class CartesianProduct {
         return s.iterator[s.i];
     }
     next(s) {
-        return (++s.i === s.iterator.length) ? (s.i = 0, false) : true;
+        return ++s.i === s.iterator.length ? ((s.i = 0), false) : true;
     }
     toGroup(type) {
         if (type.kind === ReflectionKind.boolean) {
-            return [{ kind: ReflectionKind.literal, literal: 'false' }, {
+            return [
+                { kind: ReflectionKind.literal, literal: "false" },
+                {
                     kind: ReflectionKind.literal,
-                    literal: 'true',
-                }];
+                    literal: "true"
+                }
+            ];
         }
         else if (type.kind === ReflectionKind.null) {
-            return [{ kind: ReflectionKind.literal, literal: 'null' }];
+            return [{ kind: ReflectionKind.literal, literal: "null" }];
         }
         else if (type.kind === ReflectionKind.undefined) {
-            return [{ kind: ReflectionKind.literal, literal: 'undefined' }];
+            return [{ kind: ReflectionKind.literal, literal: "undefined" }];
             // } else if (type.kind === ReflectionKind.templateLiteral) {
             // //     //todo: this is wrong
             // //     return type.types;
@@ -813,19 +882,24 @@ CartesianProduct.__type = [() => __ΩCStack, 'stack', function () { return []; }
  */
 function indexAccess(container, index) {
     if (container.kind === ReflectionKind.array) {
-        if ((index.kind === ReflectionKind.literal && 'number' === typeof index.literal) || index.kind === ReflectionKind.number)
+        if ((index.kind === ReflectionKind.literal &&
+            "number" === typeof index.literal) ||
+            index.kind === ReflectionKind.number)
             return container.type;
-        if (index.kind === ReflectionKind.literal && index.literal === 'length')
+        if (index.kind === ReflectionKind.literal && index.literal === "length")
             return { kind: ReflectionKind.number };
     }
     else if (container.kind === ReflectionKind.tuple) {
-        if (index.kind === ReflectionKind.literal && index.literal === 'length') {
+        if (index.kind === ReflectionKind.literal && index.literal === "length") {
             return { kind: ReflectionKind.literal, literal: container.types.length };
         }
-        if (index.kind === ReflectionKind.literal && 'number' === typeof index.literal && index.literal < 0) {
+        if (index.kind === ReflectionKind.literal &&
+            "number" === typeof index.literal &&
+            index.literal < 0) {
             index = { kind: ReflectionKind.number };
         }
-        if (index.kind === ReflectionKind.literal && 'number' === typeof index.literal) {
+        if (index.kind === ReflectionKind.literal &&
+            "number" === typeof index.literal) {
             const __Ωb0 = [0, 'b0', 'P&)H8G.!fw"y'];
             const __Ωb1 = [1, 'b1', 'P&)H8G.!fw"y'];
             const __Ωa0 = [0, 'a0', 'P&\'@)G.!fw"y'];
@@ -849,7 +923,7 @@ function indexAccess(container, index) {
                 if (sub.optional)
                     return {
                         kind: ReflectionKind.union,
-                        types: [sub.type, { kind: ReflectionKind.undefined }],
+                        types: [sub.type, { kind: ReflectionKind.undefined }]
                     };
                 return sub.type;
             }
@@ -857,10 +931,13 @@ function indexAccess(container, index) {
             const result = { kind: ReflectionKind.union, types: [] };
             for (let i = restPosition; i < container.types.length; i++) {
                 const member = container.types[i];
-                const type = member.type.kind === ReflectionKind.rest ? member.type.type : member.type;
+                const type = member.type.kind === ReflectionKind.rest
+                    ? member.type.type
+                    : member.type;
                 if (!isTypeIncluded(result.types, type))
                     result.types.push(type);
-                if (member.optional && !isTypeIncluded(result.types, { kind: ReflectionKind.undefined }))
+                if (member.optional &&
+                    !isTypeIncluded(result.types, { kind: ReflectionKind.undefined }))
                     result.types.push({ kind: ReflectionKind.undefined });
             }
             return unboxUnion(result);
@@ -885,7 +962,8 @@ function indexAccess(container, index) {
             return { kind: ReflectionKind.never };
         }
     }
-    else if (container.kind === ReflectionKind.objectLiteral || container.kind === ReflectionKind.class) {
+    else if (container.kind === ReflectionKind.objectLiteral ||
+        container.kind === ReflectionKind.class) {
         if (index.kind === ReflectionKind.literal) {
             return resolveObjectIndexType(container, index);
         }
@@ -924,7 +1002,7 @@ function indexAccess(container, index) {
             // and you index it with 'foo', you get 'bar' | 'baz'. This should
             // accordingly print ['bar', 'baz'] when valueOf<...>() is called
             // on the union.
-            if (['string', 'number', 'symbol'].includes(typeof index.literal)) {
+            if (["string", "number", "symbol"].includes(typeof index.literal)) {
                 const union = { kind: ReflectionKind.union, types: [] };
                 // For each type in the union, t, resolve the type at index.
                 for (const t of container.types) {
@@ -984,7 +1062,11 @@ function indexAccess(container, index) {
 }
 indexAccess.__type = ['Type', 'container', 'index', 'indexAccess', 'P"w!2""w!2#"w!/$'];
 function merge(types) {
-    const type = { kind: ReflectionKind.objectLiteral, id: state_js_1.state.nominalId++, types: [] };
+    const type = {
+        kind: ReflectionKind.objectLiteral,
+        id: state_js_1.state.nominalId++,
+        types: []
+    };
     for (const subType of types) {
         for (const member of subType.types) {
             if (member.kind === ReflectionKind.indexSignature) {
@@ -1009,7 +1091,11 @@ function merge(types) {
 }
 merge.__type = [() => __ΩTypeObjectLiteral, () => __ΩTypeClass, 'types', () => __ΩTypeObjectLiteral, 'merge', 'PPn!n"JF2#n$/%'];
 function narrowOriginalLiteral(type) {
-    if ((type.kind === ReflectionKind.string || type.kind === ReflectionKind.number || type.kind === ReflectionKind.boolean || type.kind === ReflectionKind.bigint) && type.origin) {
+    if ((type.kind === ReflectionKind.string ||
+        type.kind === ReflectionKind.number ||
+        type.kind === ReflectionKind.boolean ||
+        type.kind === ReflectionKind.bigint) &&
+        type.origin) {
         return type.origin;
     }
     return type;
@@ -1026,7 +1112,9 @@ exports.__ΩParentLessType = __ΩParentLessType;
  * to complete instead of barely 30ms.
  */
 function copyAndSetParent(inc, parent) {
-    const type = parent ? { ...inc, parent: parent } : { ...inc };
+    const type = parent
+        ? { ...inc, parent: parent }
+        : { ...inc };
     if (isWithAnnotations(type) && isWithAnnotations(inc)) {
         if (inc.annotations) {
             type.annotations = {};
@@ -1086,15 +1174,15 @@ function copyAndSetParent(inc, parent) {
 copyAndSetParent.__type = ['inc', 'Type', 'parent', () => __ΩFindType, "kind", 'copyAndSetParent', 'P"2!"w"2#8"w"".%fo$#/&'];
 function widenLiteral(type) {
     if (type.kind === ReflectionKind.literal) {
-        if ('number' === typeof type.literal)
+        if ("number" === typeof type.literal)
             return copyAndSetParent({ kind: ReflectionKind.number, origin: type });
-        if ('boolean' === typeof type.literal)
+        if ("boolean" === typeof type.literal)
             return copyAndSetParent({ kind: ReflectionKind.boolean, origin: type });
-        if ('bigint' === typeof type.literal)
+        if ("bigint" === typeof type.literal)
             return copyAndSetParent({ kind: ReflectionKind.bigint, origin: type });
-        if ('symbol' === typeof type.literal)
+        if ("symbol" === typeof type.literal)
             return copyAndSetParent({ kind: ReflectionKind.symbol, origin: type });
-        if ('string' === typeof type.literal)
+        if ("string" === typeof type.literal)
             return copyAndSetParent({ kind: ReflectionKind.string, origin: type });
         if (type.literal instanceof RegExp)
             return copyAndSetParent({ kind: ReflectionKind.regexp, origin: type });
@@ -1114,12 +1202,20 @@ function getClassType(type) {
 }
 getClassType.__type = ['Type', 'type', () => __ΩClassType, 'getClassType', 'P"w!2"n#/$'];
 function isMember(type) {
-    return type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property
-        || type.kind === ReflectionKind.methodSignature || type.kind === ReflectionKind.method;
+    return (type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.methodSignature ||
+        type.kind === ReflectionKind.method);
 }
 isMember.__type = ['Type', 'type', 'isMember', 'P"w!2"!/#'];
 function hasMember(type, memberName, memberType) {
-    return type.types.some(__assignType(v => isMember(v) && v.name === memberName && (!memberType || (0, extends_js_1.isExtendable)(v.kind === ReflectionKind.propertySignature || v.kind === ReflectionKind.property ? v.type : v, memberType)), ['v', '', 'P"2!"/"']));
+    return type.types.some(__assignType(v => isMember(v) &&
+        v.name === memberName &&
+        (!memberType ||
+            (0, extends_js_1.isExtendable)(v.kind === ReflectionKind.propertySignature ||
+                v.kind === ReflectionKind.property
+                ? v.type
+                : v, memberType)), ['v', '', 'P"2!"/"']));
 }
 hasMember.__type = [() => __ΩTypeObjectLiteral, () => __ΩTypeClass, 'type', 'memberName', 'Type', 'memberType', 'hasMember', 'PPn!n"J2#P\'&+J2$"w%2&8)/\''];
 function getMember(type, memberName) {
@@ -1131,7 +1227,7 @@ function getTypeObjectLiteralFromTypeClass(type) {
         const objectLiteral = {
             kind: ReflectionKind.objectLiteral,
             id: state_js_1.state.nominalId++,
-            types: [],
+            types: []
         };
         for (const member of type.types) {
             if (member.kind === ReflectionKind.indexSignature) {
@@ -1139,12 +1235,18 @@ function getTypeObjectLiteralFromTypeClass(type) {
                 member.parent = objectLiteral;
             }
             else if (member.kind === ReflectionKind.property) {
-                const m = { ...member, kind: ReflectionKind.propertySignature };
+                const m = {
+                    ...member,
+                    kind: ReflectionKind.propertySignature
+                };
                 m.parent = objectLiteral;
                 objectLiteral.types.push(m);
             }
             else if (member.kind === ReflectionKind.method) {
-                const m = { ...member, kind: ReflectionKind.methodSignature };
+                const m = {
+                    ...member,
+                    kind: ReflectionKind.methodSignature
+                };
                 m.parent = objectLiteral;
                 objectLiteral.types.push(m);
             }
@@ -1164,27 +1266,134 @@ function isOptional(type) {
         return type.optional || isOptional(type.type);
     if (type.kind === ReflectionKind.tupleMember)
         return type.optional || isOptional(type.type);
-    if (type.kind === ReflectionKind.property || type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.indexSignature)
+    if (type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.indexSignature)
         return isOptional(type.type);
-    return type.kind === ReflectionKind.any || type.kind === ReflectionKind.undefined || (type.kind === ReflectionKind.union && type.types.some(isOptional));
+    return (type.kind === ReflectionKind.any ||
+        type.kind === ReflectionKind.undefined ||
+        (type.kind === ReflectionKind.union && type.types.some(isOptional)));
 }
 isOptional.__type = ['Type', 'type', 'isOptional', 'P"w!2")/#'];
 /**
  * Whether a property has an initializer/default value.
  */
 function hasDefaultValue(type) {
-    return (type.kind === ReflectionKind.property || type.kind === ReflectionKind.parameter) && type.default !== undefined;
+    return ((type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.parameter) &&
+        type.default !== undefined);
 }
 hasDefaultValue.__type = ['Type', 'type', 'hasDefaultValue', 'P"w!2")/#'];
 /**
  * Checks whether `null` is allowed as type.
  */
 function isNullable(type) {
-    if (type.kind === ReflectionKind.property || type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.indexSignature)
+    if (type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.indexSignature)
         return isNullable(type.type);
-    return type.kind === ReflectionKind.null || (type.kind === ReflectionKind.union && type.types.some(isNullable));
+    return (type.kind === ReflectionKind.null ||
+        (type.kind === ReflectionKind.union && type.types.some(isNullable)));
 }
 isNullable.__type = ['Type', 'type', 'isNullable', 'P"w!2")/#'];
+/**
+ * Get tags from type.
+ */
+function getTags(type) {
+    if (type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.indexSignature) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.method ||
+        type.kind === ReflectionKind.methodSignature) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.class ||
+        type.kind === ReflectionKind.objectLiteral) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.function) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.enum ||
+        type.kind === ReflectionKind.enumMember) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.parameter ||
+        type.kind === ReflectionKind.typeParameter) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.array) {
+        return type.tags ?? {};
+    }
+    return {};
+}
+getTags.__type = ['Type', 'type', () => __ΩTagsReflection, 'getTags', 'P"w!2"n#/$'];
+/**
+ * Checks whether the \`hidden\` tag was specified for the type.
+ */
+function isHidden(type) {
+    const tags = getTags(type);
+    return Boolean(tags.hidden);
+}
+isHidden.__type = ['Type', 'type', 'isHidden', 'P"w!2")/#'];
+/**
+ * Checks whether the \`ignore\` tag was specified for the type.
+ */
+function isIgnore(type) {
+    const tags = getTags(type);
+    return Boolean(tags.ignore);
+}
+isIgnore.__type = ['Type', 'type', 'isIgnore', 'P"w!2")/#'];
+/**
+ * Checks whether the \`internal\` tag was specified for the type.
+ */
+function isInternal(type) {
+    const tags = getTags(type);
+    return Boolean(tags.internal);
+}
+isInternal.__type = ['Type', 'type', 'isInternal', 'P"w!2")/#'];
+/**
+ * Returns the values specified by the type's \`alias\` tag(s).
+ */
+function getAlias(type) {
+    const tags = getTags(type);
+    return tags.alias ?? [];
+}
+getAlias.__type = ['Type', 'type', 'getAlias', 'P"w!2"&F/#'];
+/**
+ * Checks whether the \`readonly\` tag was specified for the type.
+ */
+function isReadonly(type) {
+    const tags = getTags(type);
+    return Boolean(tags.readonly);
+}
+isReadonly.__type = ['Type', 'type', 'isReadonly', 'P"w!2")/#'];
+/**
+ * Returns the values specified by the type's \`title\` tag.
+ */
+function getTitle(type) {
+    const tags = getTags(type);
+    return tags.title;
+}
+getTitle.__type = ['Type', 'type', 'getTitle', 'P"w!2"P&-J/#'];
+/**
+ * Returns the values specified by the type's \`permission\` tag(s).
+ */
+function getPermission(type) {
+    const tags = getTags(type);
+    return tags.permission ?? [];
+}
+getPermission.__type = ['Type', 'type', 'getPermission', 'P"w!2"&F/#'];
+/**
+ * Returns the values specified by the type's \`domain\` tag.
+ */
+function getDomain(type) {
+    const tags = getTags(type);
+    return tags.domain;
+}
+getDomain.__type = ['Type', 'type', 'getDomain', 'P"w!2"P&-J/#'];
 const __Ωinteger = ['integer', '\'w!y'];
 exports.__Ωinteger = __Ωinteger;
 const __Ωint8 = ['int8', '\'w!y'];
@@ -1286,7 +1495,7 @@ const __ΩEmbedded = ['T', 'Options', () => __ΩEmbeddedMeta, 'Embedded', 'b!PMc
 exports.__ΩEmbedded = __ΩEmbedded;
 const __ΩMapName = ['Alias', "", 'ForSerializer', () => __ΩTypeAnnotation, "mapName", 'MapName', 'b!."c#.%Pe"!e""Go$#w&y'];
 exports.__ΩMapName = __ΩMapName;
-exports.referenceAnnotation = (AnnotationDefinition.Ω = [[() => __ΩReferenceOptions, 'n!']], new AnnotationDefinition('reference'));
+exports.referenceAnnotation = (AnnotationDefinition.Ω = [[() => __ΩReferenceOptions, 'n!']], new AnnotationDefinition("reference"));
 exports.entityAnnotation = new (_a = class extends AnnotationDefinition {
         set(type, name, value) {
             const data = this.getFirst(type) || {};
@@ -1303,24 +1512,24 @@ exports.entityAnnotation = new (_a = class extends AnnotationDefinition {
         }
     },
     _a.__type = [() => __ΩEntityOptions, () => AnnotationDefinition, 'Type', 'type', 'name', () => __ΩEntityOptions, 'value', 'set', () => __ΩEntityOptions, 'get', () => __ΩEntityOptions, 'Pn!7"P"w#2$"2%n&"f2\'"0(P"w#2$n)0*5n+6"'],
-    _a)('entity');
-exports.mapNameAnnotation = (AnnotationDefinition.Ω = [['name', 'serializer', 'P&4!&4"8M']], new AnnotationDefinition('mapName'));
-exports.autoIncrementAnnotation = new AnnotationDefinition('autoIncrement');
+    _a)("entity");
+exports.mapNameAnnotation = (AnnotationDefinition.Ω = [['name', 'serializer', 'P&4!&4"8M']], new AnnotationDefinition("mapName"));
+exports.autoIncrementAnnotation = new AnnotationDefinition("autoIncrement");
 exports.primaryKeyAnnotation = new (_b = class extends AnnotationDefinition {
         isPrimaryKey(type) {
             return this.getAnnotations(type).length > 0;
         }
     },
     _b.__type = [() => AnnotationDefinition, 'Type', 'type', 'isPrimaryKey', 'P7!P"w"2#)0$5'],
-    _b)('primaryKey');
+    _b)("primaryKey");
 const __ΩBackReferenceOptionsResolved = [() => __ΩTypeClass, () => __ΩTypeObjectLiteral, 'via', 'mappedBy', 'BackReferenceOptionsResolved', 'PPn!n"J4#8&4$8Mw%y'];
 exports.__ΩBackReferenceOptionsResolved = __ΩBackReferenceOptionsResolved;
-exports.backReferenceAnnotation = (AnnotationDefinition.Ω = [[() => __ΩBackReferenceOptionsResolved, 'n!']], new AnnotationDefinition('backReference'));
-exports.validationAnnotation = (AnnotationDefinition.Ω = [['name', 'Type', 'args', 'P&4!"w"F4#M']], new AnnotationDefinition('validation'));
-exports.UUIDAnnotation = new AnnotationDefinition('UUID');
-exports.mongoIdAnnotation = new AnnotationDefinition('mongoID');
-exports.uuidAnnotation = new AnnotationDefinition('uuid');
-exports.defaultAnnotation = (AnnotationDefinition.Ω = [['Type', '"w!']], new AnnotationDefinition('default'));
+exports.backReferenceAnnotation = (AnnotationDefinition.Ω = [[() => __ΩBackReferenceOptionsResolved, 'n!']], new AnnotationDefinition("backReference"));
+exports.validationAnnotation = (AnnotationDefinition.Ω = [['name', 'Type', 'args', 'P&4!"w"F4#M']], new AnnotationDefinition("validation"));
+exports.UUIDAnnotation = new AnnotationDefinition("UUID");
+exports.mongoIdAnnotation = new AnnotationDefinition("mongoID");
+exports.uuidAnnotation = new AnnotationDefinition("uuid");
+exports.defaultAnnotation = (AnnotationDefinition.Ω = [['Type', '"w!']], new AnnotationDefinition("default"));
 function isUUIDType(type) {
     return exports.uuidAnnotation.getFirst(type) !== undefined;
 }
@@ -1354,7 +1563,8 @@ function isBackReferenceType(type) {
 }
 isBackReferenceType.__type = ['Type', 'type', 'isBackReferenceType', 'P"w!2")/#'];
 function resolveProperty(type) {
-    if (type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property) {
+    if (type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.property) {
         type = type.type;
     }
     return type;
@@ -1363,7 +1573,7 @@ resolveProperty.__type = ['Type', 'type', 'resolveProperty', 'P"w!2""w!/#'];
 function getBackReferenceType(type) {
     const options = exports.backReferenceAnnotation.getFirst(type);
     if (!options)
-        throw new Error('No back reference');
+        throw new Error("No back reference");
     return options;
 }
 getBackReferenceType.__type = ['Type', 'type', () => __ΩBackReferenceOptionsResolved, 'getBackReferenceType', 'P"w!2"n#/$'];
@@ -1383,7 +1593,9 @@ isMapType.__type = ['Type', 'type', 'isMapType', 'P"w!2")/#'];
  * Get the key type of a Map or object literal with index signatures.
  */
 function getKeyType(type) {
-    if (type.kind === ReflectionKind.class && type.classType === Map && type.typeArguments)
+    if (type.kind === ReflectionKind.class &&
+        type.classType === Map &&
+        type.typeArguments)
         return type.typeArguments[0] || { kind: ReflectionKind.any };
     if (type.kind === ReflectionKind.objectLiteral) {
         const type = { kind: ReflectionKind.union, types: [] };
@@ -1404,7 +1616,9 @@ getKeyType.__type = ['Type', 'type', 'getKeyType', 'P"w!2""w!/#'];
  * Get the value type of a Map or object literal with index signatures.
  */
 function getValueType(type) {
-    if (type.kind === ReflectionKind.class && type.classType === Map && type.typeArguments)
+    if (type.kind === ReflectionKind.class &&
+        type.classType === Map &&
+        type.typeArguments)
         return type.typeArguments[1] || { kind: ReflectionKind.any };
     if (type.kind === ReflectionKind.objectLiteral) {
         const type = { kind: ReflectionKind.union, types: [] };
@@ -1423,9 +1637,10 @@ function getValueType(type) {
 getValueType.__type = ['Type', 'type', 'getValueType', 'P"w!2""w!/#'];
 const __ΩEmbeddedOptions = ['prefix', 'EmbeddedOptions', 'P&4!8Mw"y'];
 exports.__ΩEmbeddedOptions = __ΩEmbeddedOptions;
-exports.embeddedAnnotation = (AnnotationDefinition.Ω = [[() => __ΩEmbeddedOptions, 'n!']], new AnnotationDefinition('embedded'));
+exports.embeddedAnnotation = (AnnotationDefinition.Ω = [[() => __ΩEmbeddedOptions, 'n!']], new AnnotationDefinition("embedded"));
 function hasEmbedded(type) {
-    if (type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property)
+    if (type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.property)
         return hasEmbedded(type.type);
     if (type.kind === ReflectionKind.union)
         return type.types.some(hasEmbedded);
@@ -1465,16 +1680,16 @@ const __ΩDatabaseField = ['Options', "*", 'Name', () => __ΩDatabase, 'Database
 exports.__ΩDatabaseField = __ΩDatabaseField;
 const __ΩBinaryBigIntType = ['unsigned', 'signed', 'BinaryBigIntType', 'PC!C"Bw#'];
 exports.__ΩBinaryBigIntType = __ΩBinaryBigIntType;
-exports.binaryBigIntAnnotation = (AnnotationDefinition.Ω = [[() => __ΩBinaryBigIntType, 'n!']], new AnnotationDefinition('binaryBigInt'));
-exports.groupAnnotation = (AnnotationDefinition.Ω = [['&']], new AnnotationDefinition('group'));
+exports.binaryBigIntAnnotation = (AnnotationDefinition.Ω = [[() => __ΩBinaryBigIntType, 'n!']], new AnnotationDefinition("binaryBigInt"));
+exports.groupAnnotation = (AnnotationDefinition.Ω = [['&']], new AnnotationDefinition("group"));
 exports.excludedAnnotation = new (_c = class extends AnnotationDefinition {
         isExcluded(type, name) {
             const excluded = this.getAnnotations(type);
-            return excluded.includes('*') || excluded.includes(name);
+            return excluded.includes("*") || excluded.includes(name);
         }
     },
     _c.__type = [() => AnnotationDefinition, 'Type', 'type', 'name', 'isExcluded', 'P&7!P"w"2#&2$)0%5&6"'],
-    _c)('excluded');
+    _c)("excluded");
 exports.dataAnnotation = new (_d = class extends AnnotationDefinition {
         set(type, key, value) {
             const data = this.getFirst(type) || {};
@@ -1488,7 +1703,7 @@ exports.dataAnnotation = new (_d = class extends AnnotationDefinition {
         }
     },
     _d.__type = [() => AnnotationDefinition, 'type', 'key', 'value', 'set', 'Type', 'get', 'PP&"LM7!P"2"&2#"2$"0%P"w&2"&2#"0\'5P&"LM6"'],
-    _d)('data');
+    _d)("data");
 /**
  * All raw data from `TypeAnnotation<Name, Options>` types.
  */
@@ -1512,13 +1727,13 @@ exports.typeAnnotation = new (_e = class extends AnnotationDefinition {
         }
     },
     _e.__type = ['name', 'Type', 'options', () => AnnotationDefinition, 'type', 'getOption', 'getType', 'PP&4!"w"4#M7$P"w"2%&2!"0&P"w"2%&2!P"w"-J0\'5P&4!"w"4#M6"'],
-    _e)('meta');
-exports.indexAnnotation = (AnnotationDefinition.Ω = [[() => __ΩIndexOptions, 'n!']], new AnnotationDefinition('index'));
+    _e)("meta");
+exports.indexAnnotation = (AnnotationDefinition.Ω = [[() => __ΩIndexOptions, 'n!']], new AnnotationDefinition("index"));
 exports.databaseAnnotation = new (_f = class extends AnnotationDefinition {
         getDatabase(type, name) {
             let options = undefined;
             for (const annotation of this.getAnnotations(type)) {
-                if (annotation.name === '*' || annotation.name === name) {
+                if (annotation.name === "*" || annotation.name === name) {
                     if (!options)
                         options = {};
                     Object.assign(options, annotation.options);
@@ -1526,10 +1741,9 @@ exports.databaseAnnotation = new (_f = class extends AnnotationDefinition {
             }
             return options;
         }
-        ;
     },
-    _f.__type = ['name', 'options', () => AnnotationDefinition, 'Type', 'type', 'getDatabase', 'PP&4!P&"LM4"M7#P"w$2%&2!P"-J0&!5P&4!P&"LM4"M6"'],
-    _f)('database');
+    _f.__type = ['name', 'options', () => AnnotationDefinition, 'Type', 'type', 'getDatabase', 'PP&4!P&"LM4"M7#P"w$2%&2!P"-J0&5P&4!P&"LM4"M6"'],
+    _f)("database");
 function registerTypeDecorator(decorator) {
     exports.typeDecorators.push(decorator);
 }
@@ -1553,17 +1767,19 @@ registerTypeDecorator.__type = [() => __ΩTypeDecorator, 'decorator', 'registerT
  * ```
  */
 function getAnnotationMeta(type) {
-    const meta = (0, reflection_js_1.getProperty)(type, '__meta');
+    const meta = (0, reflection_js_1.getProperty)(type, "__meta");
     if (!meta || !meta.optional)
         return;
     let tuple = undefined;
     if (meta.type.kind === ReflectionKind.intersection) {
-        if (meta.type.types.length === 1 && meta.type.types[0].kind === ReflectionKind.tuple) {
+        if (meta.type.types.length === 1 &&
+            meta.type.types[0].kind === ReflectionKind.tuple) {
             tuple = meta.type.types[0];
         }
         if (!tuple && meta.type.types.length === 2) {
             tuple = meta.type.types.find(__assignType(v => v.kind === ReflectionKind.tuple, ['v', '', 'P"2!"/"']));
-            if (tuple && !meta.type.types.find(__assignType(v => v.kind === ReflectionKind.never, ['v', '', 'P"2!"/"']))) {
+            if (tuple &&
+                !meta.type.types.find(__assignType(v => v.kind === ReflectionKind.never, ['v', '', 'P"2!"/"']))) {
                 tuple = undefined;
             }
         }
@@ -1574,7 +1790,9 @@ function getAnnotationMeta(type) {
     if (!tuple)
         return;
     const id = tuple.types[0];
-    if (!id || id.type.kind !== ReflectionKind.literal || 'string' !== typeof id.type.literal)
+    if (!id ||
+        id.type.kind !== ReflectionKind.literal ||
+        "string" !== typeof id.type.literal)
         return;
     const optionsMember = tuple.types[1];
     return { id: id.type.literal, options: optionsMember?.type };
@@ -1587,7 +1805,7 @@ exports.typeDecorators = [
         if (!meta)
             return false;
         switch (meta.id) {
-            case 'reference': {
+            case "reference": {
                 const optionsType = meta.options;
                 if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
                     return false;
@@ -1595,7 +1813,7 @@ exports.typeDecorators = [
                 exports.referenceAnnotation.replace(annotations, [options]);
                 return true;
             }
-            case 'entity': {
+            case "entity": {
                 const optionsType = meta.options;
                 if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
                     return false;
@@ -1603,34 +1821,37 @@ exports.typeDecorators = [
                 exports.entityAnnotation.replace(annotations, [options]);
                 return true;
             }
-            case 'mapName': {
+            case "mapName": {
                 if (!meta.options)
                     return false;
                 const [name, serializer] = typeToObject(meta.options);
-                if ('string' === typeof name && (!serializer || 'string' === typeof serializer)) {
+                if ("string" === typeof name &&
+                    (!serializer || "string" === typeof serializer)) {
                     exports.mapNameAnnotation.replace(annotations, [{ name, serializer }]);
                 }
                 return true;
             }
-            case 'autoIncrement':
+            case "autoIncrement":
                 exports.autoIncrementAnnotation.register(annotations, true);
                 return true;
-            case 'binaryBigInt':
-                exports.binaryBigIntAnnotation.replace(annotations, [0 /* BinaryBigIntType.unsigned */]);
+            case "binaryBigInt":
+                exports.binaryBigIntAnnotation.replace(annotations, [
+                    0 /* BinaryBigIntType.unsigned */
+                ]);
                 return true;
-            case 'signedBinaryBigInt':
+            case "signedBinaryBigInt":
                 exports.binaryBigIntAnnotation.replace(annotations, [1 /* BinaryBigIntType.signed */]);
                 return true;
-            case 'primaryKey':
+            case "primaryKey":
                 exports.primaryKeyAnnotation.register(annotations, true);
                 return true;
-            case 'mongoId':
+            case "mongoId":
                 exports.mongoIdAnnotation.register(annotations, true);
                 return true;
-            case 'UUIDv4':
+            case "UUIDv4":
                 exports.uuidAnnotation.register(annotations, true);
                 return true;
-            case 'embedded': {
+            case "embedded": {
                 const optionsType = meta.options;
                 if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
                     return false;
@@ -1638,14 +1859,16 @@ exports.typeDecorators = [
                 exports.embeddedAnnotation.replace(annotations, [options]);
                 return true;
             }
-            case 'group': {
+            case "group": {
                 const nameType = meta.options;
-                if (!nameType || nameType.kind !== ReflectionKind.literal || 'string' !== typeof nameType.literal)
+                if (!nameType ||
+                    nameType.kind !== ReflectionKind.literal ||
+                    "string" !== typeof nameType.literal)
                     return false;
                 exports.groupAnnotation.register(annotations, nameType.literal);
                 return true;
             }
-            case 'index': {
+            case "index": {
                 const optionsType = meta.options;
                 if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
                     return false;
@@ -1653,19 +1876,19 @@ exports.typeDecorators = [
                 exports.indexAnnotation.replace(annotations, [options]);
                 return true;
             }
-            case 'database': {
+            case "database": {
                 const [name, options] = typeToObject(meta.options);
                 exports.databaseAnnotation.register(annotations, { name: name, options });
                 return true;
             }
-            case 'excluded': {
+            case "excluded": {
                 const name = typeToObject(meta.options);
                 exports.excludedAnnotation.register(annotations, name);
                 return true;
             }
-            case 'reset': {
+            case "reset": {
                 const name = typeToObject(meta.options);
-                if ('string' !== typeof name)
+                if ("string" !== typeof name)
                     return false;
                 const map = {
                     primaryKey: exports.primaryKeyAnnotation,
@@ -1679,18 +1902,20 @@ exports.typeDecorators = [
                     mapName: exports.mapNameAnnotation,
                     reference: exports.referenceAnnotation,
                     backReference: exports.backReferenceAnnotation,
-                    validator: exports.validationAnnotation,
+                    validator: exports.validationAnnotation
                 };
                 const annotation = map[name] || exports.typeAnnotation;
                 annotation.reset(annotations);
                 return true;
             }
-            case 'data': {
+            case "data": {
                 const tuple = meta.options;
                 if (!tuple || tuple.kind !== ReflectionKind.tuple)
                     return false;
                 const nameType = tuple.types[0].type;
-                if (!nameType || nameType.kind !== ReflectionKind.literal || 'string' !== typeof nameType.literal)
+                if (!nameType ||
+                    nameType.kind !== ReflectionKind.literal ||
+                    "string" !== typeof nameType.literal)
                     return false;
                 const dataType = tuple.types[1].type;
                 if (!dataType)
@@ -1703,43 +1928,59 @@ exports.typeDecorators = [
                 else {
                     annotations[exports.dataAnnotation.symbol].push(data);
                 }
-                data[nameType.literal] = dataType.kind === ReflectionKind.literal ? dataType.literal : dataType;
+                data[nameType.literal] =
+                    dataType.kind === ReflectionKind.literal
+                        ? dataType.literal
+                        : dataType;
                 return true;
             }
-            case 'backReference': {
+            case "backReference": {
                 const optionsType = meta.options;
                 if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
                     return false;
                 const options = typeToObject(optionsType);
-                const member = findMember('via', resolveTypeMembers(optionsType));
+                const member = findMember("via", resolveTypeMembers(optionsType));
                 exports.backReferenceAnnotation.register(annotations, {
                     mappedBy: options.mappedBy,
-                    via: member && member.kind === ReflectionKind.propertySignature && (member.type.kind === ReflectionKind.objectLiteral || member.type.kind === ReflectionKind.class) ? member.type : undefined,
+                    via: member &&
+                        member.kind === ReflectionKind.propertySignature &&
+                        (member.type.kind === ReflectionKind.objectLiteral ||
+                            member.type.kind === ReflectionKind.class)
+                        ? member.type
+                        : undefined
                 });
                 return true;
             }
-            case 'validator': {
+            case "validator": {
                 const tuple = meta.options;
                 if (!tuple || tuple.kind !== ReflectionKind.tuple)
                     return false;
                 const nameType = tuple.types[0].type;
-                if (!nameType || nameType.kind !== ReflectionKind.literal || 'string' !== typeof nameType.literal)
+                if (!nameType ||
+                    nameType.kind !== ReflectionKind.literal ||
+                    "string" !== typeof nameType.literal)
                     return false;
                 const name = nameType.literal;
                 const argsType = tuple.types[1].type;
                 if (!argsType || argsType.kind !== ReflectionKind.tuple)
                     return false;
                 const args = argsType.types.map(__assignType(v => v.type, ['v', '', 'P"2!"/"']));
-                const options = { name, args };
+                const options = {
+                    name,
+                    args
+                };
                 exports.validationAnnotation.register(annotations, options);
                 return true;
             }
             default: {
-                exports.typeAnnotation.register(annotations, { name: meta.id, options: meta.options });
+                exports.typeAnnotation.register(annotations, {
+                    name: meta.id,
+                    options: meta.options
+                });
                 return true;
             }
         }
-    }, [() => __ΩAnnotations, 'annotations', () => __ΩTypeObjectLiteral, 'decorator', '', 'Pn!2"n#2$"/%']),
+    }, [() => __ΩAnnotations, 'annotations', () => __ΩTypeObjectLiteral, 'decorator', '', 'Pn!2"n#2$"/%'])
 ];
 function typeToObject(type, state = { stack: [] }) {
     if (!type)
@@ -1757,7 +1998,7 @@ function typeToObject(type, state = { stack: [] }) {
             case ReflectionKind.null:
                 return null;
             case ReflectionKind.string:
-                return '';
+                return "";
             case ReflectionKind.number:
                 return 0;
             case ReflectionKind.bigint:
@@ -1771,7 +2012,7 @@ function typeToObject(type, state = { stack: [] }) {
             case ReflectionKind.promise:
                 return typeToObject(type.type);
             case ReflectionKind.templateLiteral:
-                return '';
+                return "";
             case ReflectionKind.class: {
                 return type.classType;
             }
@@ -1820,7 +2061,7 @@ exports.binaryTypes = [
     Uint32Array,
     Float32Array,
     Float64Array,
-    ArrayBuffer,
+    ArrayBuffer
 ];
 /**
  * Returns true if the given type is Date, ArrayBuffer, Uint8Array, etc.
@@ -1865,7 +2106,11 @@ function stringifyResolvedType(type) {
 }
 stringifyResolvedType.__type = ['Type', 'type', 'stringifyResolvedType', 'P"w!2"&/#'];
 function stringifyShortResolvedType(type, stateIn = {}) {
-    return stringifyType(type, { ...stateIn, showNames: false, showFullDefinition: false });
+    return stringifyType(type, {
+        ...stateIn,
+        showNames: false,
+        showFullDefinition: false
+    });
 }
 stringifyShortResolvedType.__type = ['Type', 'type', () => __ΩPartial, () => __ΩStringifyTypeOptions, 'stateIn', () => ({}), 'stringifyShortResolvedType', 'P"w!2"n$o#"2%>&&/\''];
 /**
@@ -1878,7 +2123,7 @@ function getDeepConstructorProperties(type) {
         const type = (0, reflection_js_1.resolveReceiveType)(classType);
         if (type.kind !== ReflectionKind.class)
             continue;
-        const constructor = findMember('constructor', type.types);
+        const constructor = findMember("constructor", type.types);
         if (!constructor || constructor.kind !== ReflectionKind.method)
             continue;
         for (const param of constructor.parameters) {
@@ -1909,7 +2154,7 @@ function getEnumValueIndexMatcher(type) {
     }, ['value', '', 'P"2!\'/"']);
 }
 getEnumValueIndexMatcher.__type = [() => __ΩTypeEnum, 'type', 'value', '', 'getEnumValueIndexMatcher', 'Pn!2"PP&\'-,J2#\'/$/%'];
-const __ΩStringifyTypeOptions = ['showNames', 'showFullDefinition', 'showDescription', 'defaultIsOptional', 'showHeritage', 'showDefaults', 'defaultValues', 'Type', 'type', '', 'stringify', 'StringifyTypeOptions', 'P)4!)4")4#)4$)4%)4&"4\'P"w(2)P&-J/*4+8Mw,y'];
+const __ΩStringifyTypeOptions = ['showNames', 'showFullDefinition', 'showDescription', 'defaultIsOptional', 'showHeritage', 'showDefaults', 'showTags', 'defaultValues', 'Type', 'type', '', 'stringify', 'StringifyTypeOptions', 'P)4!)4")4#)4$)4%)4&)4\'"4(P"w)2*P&-J/+4,8Mw-y'];
 let stringifyTypeId = 1;
 function stringifyType(type, stateIn = {}) {
     const state = {
@@ -1920,7 +2165,8 @@ function stringifyType(type, stateIn = {}) {
         showDescription: false,
         showHeritage: false,
         showFullDefinition: false,
-        ...stateIn,
+        showTags: true,
+        ...stateIn
     };
     const stack = [];
     stack.push({ type, defaultValue: state.defaultValues, depth: 1 });
@@ -1934,8 +2180,8 @@ function stringifyType(type, stateIn = {}) {
         const depth = entry.depth || 1;
         if (type && stateIn.stringify) {
             const manual = stateIn.stringify(type);
-            if ('string' === typeof manual) {
-                if (manual !== '') {
+            if ("string" === typeof manual) {
+                if (manual !== "") {
                     if (entry.before) {
                         result.push(entry.before);
                     }
@@ -1952,33 +2198,45 @@ function stringifyType(type, stateIn = {}) {
         }
         if (type) {
             const jit = getTypeJitContainer(type);
-            if (entry.depth !== undefined && jit.visitStack && jit.visitStack.id === stackId && jit.visitStack.depth < entry.depth) {
-                result.push((type.typeName ? type.typeName : '* Recursion *'));
+            if (entry.depth !== undefined &&
+                jit.visitStack &&
+                jit.visitStack.id === stackId &&
+                jit.visitStack.depth < entry.depth) {
+                result.push(type.typeName ? type.typeName : "* Recursion *");
                 continue;
             }
             // objectLiteral and class types usually get their own reference, but their types are shared.
             // thus we have to check for their member types identity to check for recursions.
-            if (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) {
+            if (type.kind === ReflectionKind.objectLiteral ||
+                type.kind === ReflectionKind.class) {
                 const first = type.types[0];
                 const jit = first ? getTypeJitContainer(first) : undefined;
-                if (jit && entry.depth !== undefined && jit.visitStack && jit.visitStack.id === stackId && jit.visitStack.depth < entry.depth + 1) {
-                    result.push((type.typeName ? type.typeName : '* Recursion *'));
+                if (jit &&
+                    entry.depth !== undefined &&
+                    jit.visitStack &&
+                    jit.visitStack.id === stackId &&
+                    jit.visitStack.depth < entry.depth + 1) {
+                    result.push(type.typeName ? type.typeName : "* Recursion *");
                     continue;
                 }
             }
             jit.visitStack = { id: stackId, depth };
             const manual = stateIn.stringify ? stateIn.stringify(type) : undefined;
-            if ('string' === typeof manual) {
-                result.push(jit.stringifyTypeResult = manual);
+            if ("string" === typeof manual) {
+                result.push((jit.stringifyTypeResult = manual));
                 continue;
             }
             if (state.showNames && type.typeName && !state.showFullDefinition) {
                 if (type.typeArguments && type.typeArguments.length) {
-                    stack.push({ before: '>' });
+                    stack.push({ before: ">" });
                     for (let i = type.typeArguments.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.typeArguments[i], before: i === 0 ? undefined : ', ', depth });
+                        stack.push({
+                            type: type.typeArguments[i],
+                            before: i === 0 ? undefined : ", ",
+                            depth
+                        });
                     }
-                    stack.push({ before: '<' });
+                    stack.push({ before: "<" });
                 }
                 result.push(type.typeName);
                 continue;
@@ -2006,54 +2264,59 @@ function stringifyType(type, stateIn = {}) {
                     result.push(`object`);
                     break;
                 case ReflectionKind.string:
-                    result.push('string');
+                    result.push("string");
                     break;
                 case ReflectionKind.infer:
-                    result.push('infer');
+                    result.push("infer");
                     break;
                 case ReflectionKind.number:
-                    result.push('number');
+                    result.push("number");
                     break;
                 case ReflectionKind.bigint:
-                    result.push('bigint');
+                    result.push("bigint");
                     break;
                 case ReflectionKind.regexp:
-                    result.push('RegExp');
+                    result.push("RegExp");
                     break;
                 case ReflectionKind.boolean:
-                    result.push('boolean');
+                    result.push("boolean");
                     break;
                 case ReflectionKind.symbol:
-                    result.push('symbol');
+                    result.push("symbol");
                     break;
                 case ReflectionKind.literal:
-                    if ('number' === typeof type.literal) {
-                        result.push(type.literal + '');
+                    if ("number" === typeof type.literal) {
+                        result.push(type.literal + "");
                     }
-                    else if ('boolean' === typeof type.literal) {
-                        result.push(type.literal + '');
+                    else if ("boolean" === typeof type.literal) {
+                        result.push(type.literal + "");
                     }
                     else {
-                        result.push(`'${String(type.literal).replace(/'/g, '\\\'')}'`);
+                        result.push(`'${String(type.literal).replace(/'/g, "\\'")}'`);
                     }
                     break;
                 case ReflectionKind.promise:
-                    result.push('Promise<');
-                    stack.push({ before: '>' });
+                    result.push("Promise<");
+                    stack.push({ before: ">" });
                     stack.push({ type: type.type, depth: depth + 1 });
                     break;
                 case ReflectionKind.templateLiteral:
-                    stack.push({ before: '`' });
+                    stack.push({ before: "`" });
                     for (let i = type.types.length - 1; i >= 0; i--) {
                         const sub = type.types[i];
                         if (sub.kind === ReflectionKind.literal) {
                             stack.push({ before: String(sub.literal) });
                         }
                         else {
-                            stack.push({ type: sub, before: '${', after: '}', depth: depth + 1 });
+                            stack.push({
+                                type: sub,
+                                before: "${",
+                                after: "}",
+                                depth: depth + 1
+                            });
                         }
                     }
-                    stack.push({ before: '`' });
+                    stack.push({ before: "`" });
                     break;
                 case ReflectionKind.class: {
                     if (type.classType === Date) {
@@ -2061,16 +2324,16 @@ function stringifyType(type, stateIn = {}) {
                         break;
                     }
                     if (type.classType === Set) {
-                        result.push('Set<');
-                        stack.push({ before: '>' });
+                        result.push("Set<");
+                        stack.push({ before: ">" });
                         stack.push({ type: type.arguments[0], depth: depth + 1 });
                         break;
                     }
                     if (type.classType === Map) {
-                        result.push('Map<');
-                        stack.push({ before: '>' });
+                        result.push("Map<");
+                        stack.push({ before: ">" });
                         stack.push({ type: type.arguments[1], depth: depth + 1 });
-                        stack.push({ before: ', ' });
+                        stack.push({ before: ", " });
                         stack.push({ type: type.arguments[0], depth: depth + 1 });
                         break;
                     }
@@ -2081,137 +2344,166 @@ function stringifyType(type, stateIn = {}) {
                     const typeName = type.typeName || (0, core_1.getClassName)(type.classType);
                     const superClass = (0, core_1.getParentClass)(type.classType);
                     if (state.showFullDefinition) {
-                        const types = state.showHeritage ? type.types : resolveTypeMembers(type);
-                        stack.push({ before: '}' });
+                        const types = state.showHeritage
+                            ? type.types
+                            : resolveTypeMembers(type);
+                        stack.push({ before: "}" });
                         for (let i = types.length - 1; i >= 0; i--) {
                             const sub = types[i];
-                            const showDescription = stateIn.showDescription && sub.kind === ReflectionKind.property && sub.description;
+                            const showDescription = stateIn.showDescription &&
+                                sub.kind === ReflectionKind.property &&
+                                sub.description;
                             const withIndentation = types.length > 1 || showDescription;
                             if (withIndentation && i === types.length - 1) {
-                                stack.push({ before: '\n' + (' '.repeat((depth - 1) * 2)) });
+                                stack.push({ before: "\n" + " ".repeat((depth - 1) * 2) });
                             }
                             if (state.stringify) {
                                 const manual = state.stringify(sub);
-                                if ('string' === typeof manual) {
-                                    if (manual !== '') {
+                                if ("string" === typeof manual) {
+                                    if (manual !== "") {
                                         stack.push({ before: manual });
                                     }
                                     continue;
                                 }
                             }
-                            if (showDescription || (types.length > 1 && (withIndentation || i !== types.length - 1))) {
-                                stack.push({ before: withIndentation ? ';' : '; ' });
+                            if (showDescription ||
+                                (types.length > 1 &&
+                                    (withIndentation || i !== types.length - 1))) {
+                                stack.push({ before: withIndentation ? ";" : "; " });
                             }
-                            const defaultValue = entry.defaultValue && (sub.kind === ReflectionKind.property) ? entry.defaultValue[sub.name] : undefined;
-                            const showDefault = sub.kind === ReflectionKind.property && sub.type.kind !== ReflectionKind.class && sub.type.kind !== ReflectionKind.objectLiteral;
+                            const defaultValue = entry.defaultValue && sub.kind === ReflectionKind.property
+                                ? entry.defaultValue[sub.name]
+                                : undefined;
+                            const showDefault = sub.kind === ReflectionKind.property &&
+                                sub.type.kind !== ReflectionKind.class &&
+                                sub.type.kind !== ReflectionKind.objectLiteral;
                             if (state.showDefaults && showDefault) {
                                 if (defaultValue !== undefined) {
-                                    stack.push({ before: ' = ' + JSON.stringify(defaultValue) });
+                                    stack.push({ before: " = " + JSON.stringify(defaultValue) });
                                 }
-                                else if (sub.kind === ReflectionKind.property && sub.default) {
+                                else if (sub.kind === ReflectionKind.property &&
+                                    sub.default) {
                                     try {
-                                        stack.push({ before: ' = ' + JSON.stringify(sub.default()) });
-                                    }
-                                    catch {
+                                        stack.push({
+                                            before: " = " + JSON.stringify(sub.default())
+                                        });
                                     }
+                                    catch { }
                                 }
                             }
                             stack.push({ type: sub, defaultValue, depth: depth + 1 });
                             if (withIndentation) {
-                                stack.push({ before: '\n' + (' '.repeat(depth * 2)) });
+                                stack.push({ before: "\n" + " ".repeat(depth * 2) });
                             }
                             if (showDescription) {
-                                const indentation = (0, core_1.indent)(depth * 2, ' * ');
-                                stack.push({ before: '\n' + indentation('/* ' + sub.description + ' */') });
+                                const indentation = (0, core_1.indent)(depth * 2, " * ");
+                                stack.push({
+                                    before: "\n" + indentation("/** " + sub.description + " */")
+                                });
                             }
                         }
-                        stack.push({ before: ' {' });
+                        stack.push({ before: " {" });
                     }
                     if (superClass && state.showHeritage) {
                         try {
                             const superClassType = (0, reflection_js_1.reflect)(superClass);
                             if (superClassType.kind === ReflectionKind.class) {
                                 if (type.extendsArguments && type.extendsArguments.length) {
-                                    stack.push({ before: '>' });
+                                    stack.push({ before: ">" });
                                     for (let i = type.extendsArguments.length - 1; i >= 0; i--) {
                                         stack.push({
                                             type: type.extendsArguments[i],
-                                            before: i === 0 ? undefined : ', ',
-                                            depth: depth + 1,
+                                            before: i === 0 ? undefined : ", ",
+                                            depth: depth + 1
                                         });
                                     }
-                                    stack.push({ before: '<' });
+                                    stack.push({ before: "<" });
                                 }
-                                stack.push({ before: ' extends ' + (superClassType.typeName || superClass.name) });
+                                stack.push({
+                                    before: " extends " + (superClassType.typeName || superClass.name)
+                                });
                             }
                         }
                         catch {
-                            stack.push({ before: ' extends ' + (superClass.name) });
+                            stack.push({ before: " extends " + superClass.name });
                         }
                     }
                     const typeArguments = type.arguments || type.typeArguments;
-                    if ((!state.showFullDefinition || type.types.length === 0) && typeArguments && typeArguments.length) {
-                        stack.push({ before: '>' });
+                    if ((!state.showFullDefinition || type.types.length === 0) &&
+                        typeArguments &&
+                        typeArguments.length) {
+                        stack.push({ before: ">" });
                         for (let i = typeArguments.length - 1; i >= 0; i--) {
                             stack.push({
                                 type: typeArguments[i],
-                                before: i === 0 ? undefined : ', ',
-                                depth: depth + 1,
+                                before: i === 0 ? undefined : ", ",
+                                depth: depth + 1
                             });
                         }
-                        stack.push({ before: '<' });
+                        stack.push({ before: "<" });
                     }
                     stack.push({ before: typeName });
                     break;
                 }
                 case ReflectionKind.objectLiteral: {
-                    const typeName = type.typeName || '';
+                    const typeName = type.typeName || "";
                     result.push(typeName);
                     if (!typeName || state.showFullDefinition) {
-                        result.push(typeName ? ' {' : '{');
-                        stack.push({ before: '}' });
+                        result.push(typeName ? " {" : "{");
+                        stack.push({ before: "}" });
                         for (let i = type.types.length - 1; i >= 0; i--) {
                             const sub = type.types[i];
-                            const showDescription = stateIn.showDescription && sub.kind === ReflectionKind.propertySignature && sub.description;
+                            const showDescription = stateIn.showDescription &&
+                                sub.kind === ReflectionKind.propertySignature &&
+                                sub.description;
                             const withIndentation = type.types.length > 1 || showDescription;
                             if (state.stringify) {
                                 const manual = state.stringify(sub);
-                                if ('string' === typeof manual) {
-                                    if (manual !== '') {
+                                if ("string" === typeof manual) {
+                                    if (manual !== "") {
                                         stack.push({ before: manual });
                                     }
                                     continue;
                                 }
                             }
                             if (withIndentation && i === type.types.length - 1) {
-                                stack.push({ before: '\n' + (' '.repeat((depth - 1) * 2)) });
+                                stack.push({ before: "\n" + " ".repeat((depth - 1) * 2) });
                             }
                             if (state.stringify) {
                                 const manual = state.stringify(sub);
-                                if ('string' === typeof manual) {
-                                    if (manual !== '') {
+                                if ("string" === typeof manual) {
+                                    if (manual !== "") {
                                         stack.push({ before: manual });
                                     }
                                     continue;
                                 }
                             }
-                            if (showDescription || (type.types.length > 1 && (withIndentation || i !== type.types.length - 1))) {
-                                stack.push({ before: withIndentation ? ';' : '; ' });
+                            if (showDescription ||
+                                (type.types.length > 1 &&
+                                    (withIndentation || i !== type.types.length - 1))) {
+                                stack.push({ before: withIndentation ? ";" : "; " });
                             }
-                            const defaultValue = entry.defaultValue && (sub.kind === ReflectionKind.propertySignature) ? entry.defaultValue[sub.name] : undefined;
-                            const showDefault = sub.kind === ReflectionKind.propertySignature && sub.type.kind !== ReflectionKind.class && sub.type.kind !== ReflectionKind.objectLiteral;
+                            const defaultValue = entry.defaultValue &&
+                                sub.kind === ReflectionKind.propertySignature
+                                ? entry.defaultValue[sub.name]
+                                : undefined;
+                            const showDefault = sub.kind === ReflectionKind.propertySignature &&
+                                sub.type.kind !== ReflectionKind.class &&
+                                sub.type.kind !== ReflectionKind.objectLiteral;
                             if (state.showDefaults && showDefault) {
                                 if (defaultValue !== undefined) {
-                                    stack.push({ before: ' = ' + JSON.stringify(defaultValue) });
+                                    stack.push({ before: " = " + JSON.stringify(defaultValue) });
                                 }
                             }
                             stack.push({ type: sub, defaultValue, depth: depth + 1 });
                             if (withIndentation) {
-                                stack.push({ before: '\n' + (' '.repeat(depth * 2)) });
+                                stack.push({ before: "\n" + " ".repeat(depth * 2) });
                             }
                             if (showDescription) {
-                                const indentation = (0, core_1.indent)(depth * 2, ' * ');
-                                stack.push({ before: '\n' + indentation('/* ' + sub.description + ' */') });
+                                const indentation = (0, core_1.indent)(depth * 2, " * ");
+                                stack.push({
+                                    before: "\n" + indentation("/* " + sub.description + " */")
+                                });
                             }
                         }
                     }
@@ -2219,108 +2511,157 @@ function stringifyType(type, stateIn = {}) {
                 }
                 case ReflectionKind.union:
                     for (let i = type.types.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.types[i], before: i === 0 ? undefined : ' | ', depth: depth + 1 });
+                        stack.push({
+                            type: type.types[i],
+                            before: i === 0 ? undefined : " | ",
+                            depth: depth + 1
+                        });
                     }
                     break;
                 case ReflectionKind.intersection:
                     for (let i = type.types.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.types[i], before: i === 0 ? undefined : ' & ', depth: depth + 1 });
+                        stack.push({
+                            type: type.types[i],
+                            before: i === 0 ? undefined : " & ",
+                            depth: depth + 1
+                        });
                     }
                     break;
                 case ReflectionKind.parameter: {
-                    const visibility = type.visibility ? ReflectionVisibility[type.visibility] + ' ' : '';
-                    const dotdotdot = type.type.kind === ReflectionKind.rest ? '...' : '';
-                    result.push(`${type.readonly ? 'readonly ' : ''}${visibility}${dotdotdot}${type.name}${type.optional ? '?' : ''}: `);
+                    const visibility = type.visibility
+                        ? ReflectionVisibility[type.visibility] + " "
+                        : "";
+                    const dotdotdot = type.type.kind === ReflectionKind.rest ? "..." : "";
+                    result.push(`${type.readonly ? "readonly " : ""}${visibility}${dotdotdot}${type.name}${type.optional ? "?" : ""}: `);
                     stack.push({ type: type.type, depth: depth + 1 });
                     break;
                 }
                 case ReflectionKind.callSignature:
                 case ReflectionKind.function:
                     stack.push({ type: type.return, depth: depth + 1 });
-                    stack.push({ before: ') => ' });
+                    stack.push({ before: ") => " });
                     for (let i = type.parameters.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.parameters[i], before: i === 0 ? undefined : ', ', depth: depth + 1 });
+                        stack.push({
+                            type: type.parameters[i],
+                            before: i === 0 ? undefined : ", ",
+                            depth: depth + 1
+                        });
                     }
-                    stack.push({ before: '(' });
+                    stack.push({ before: "(" });
                     break;
                 case ReflectionKind.enum:
-                    const members = Object.entries(type.enum).map(__assignType(([label, value]) => `${label}: ${value}`, ['param0', '', 'P"2!"/"'])).join(', ');
-                    stack.push({ before: `${type.typeName ? type.typeName : 'Enum'} {` + (members) + '}' });
+                    const members = Object.entries(type.enum)
+                        .map(__assignType(([label, value]) => `${label}: ${value}`, ['param0', '', 'P"2!"/"']))
+                        .join(", ");
+                    stack.push({
+                        before: `${type.typeName ? type.typeName : "Enum"} {` + members + "}"
+                    });
                     break;
                 case ReflectionKind.array:
-                    stack.push({ before: '>' });
-                    stack.push({ type: type.type, before: 'Array<', depth: depth + 1 });
+                    stack.push({ before: ">" });
+                    stack.push({ type: type.type, before: "Array<", depth: depth + 1 });
                     break;
                 case ReflectionKind.typeParameter:
                     stack.push({ before: type.name });
                     break;
                 case ReflectionKind.rest:
-                    stack.push({ before: '[]' });
+                    stack.push({ before: "[]" });
                     stack.push({ type: type.type, depth: depth + 1 });
-                    if (type.parent && type.parent.kind === ReflectionKind.tupleMember && !type.parent.name) {
-                        stack.push({ before: '...' });
+                    if (type.parent &&
+                        type.parent.kind === ReflectionKind.tupleMember &&
+                        !type.parent.name) {
+                        stack.push({ before: "..." });
                     }
                     break;
                 case ReflectionKind.tupleMember:
                     if (type.name) {
-                        const dotdotdot = type.type.kind === ReflectionKind.rest ? '...' : '';
-                        result.push(`${dotdotdot}${type.name}${type.optional ? '?' : ''}: `);
+                        const dotdotdot = type.type.kind === ReflectionKind.rest ? "..." : "";
+                        result.push(`${dotdotdot}${type.name}${type.optional ? "?" : ""}: `);
                         stack.push({ type: type.type, depth: depth + 1 });
                         break;
                     }
                     if (type.optional) {
-                        stack.push({ before: '?' });
+                        stack.push({ before: "?" });
                     }
                     stack.push({ type: type.type, depth: depth + 1 });
                     break;
                 case ReflectionKind.tuple:
-                    stack.push({ before: ']' });
+                    stack.push({ before: "]" });
                     for (let i = type.types.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.types[i], before: i === 0 ? undefined : ', ', depth: depth + 1 });
+                        stack.push({
+                            type: type.types[i],
+                            before: i === 0 ? undefined : ", ",
+                            depth: depth + 1
+                        });
                     }
-                    stack.push({ before: '[' });
+                    stack.push({ before: "[" });
                     break;
                 case ReflectionKind.indexSignature:
                     stack.push({ type: type.type, depth: depth + 1 });
-                    stack.push({ before: ']: ' });
+                    stack.push({ before: "]: " });
                     stack.push({ type: type.index, depth: depth + 1 });
-                    stack.push({ before: '[index: ' });
+                    stack.push({ before: "[index: " });
                     // name = `{[index: ${stringifyType(type.index, state)}]: ${stringifyType(type.type, state)}`;
                     break;
                 case ReflectionKind.propertySignature:
-                    result.push(`${type.readonly ? 'readonly ' : ''}${memberNameToString(type.name)}${type.optional ? '?' : ''}: `);
-                    stack.push({ type: type.type, defaultValue: entry.defaultValue, depth });
+                    result.push(`${type.readonly ? "readonly " : ""}${memberNameToString(type.name)}${type.optional ? "?" : ""}: `);
+                    stack.push({
+                        type: type.type,
+                        defaultValue: entry.defaultValue,
+                        depth
+                    });
                     break;
                 case ReflectionKind.property: {
-                    const visibility = type.visibility ? ReflectionVisibility[type.visibility] + ' ' : '';
-                    const optional = type.optional || (stateIn.defaultIsOptional && type.default !== undefined);
-                    result.push(`${type.static ? 'static ' : ''}${type.readonly ? 'readonly ' : ''}${visibility}${memberNameToString(type.name)}${optional ? '?' : ''}: `);
-                    stack.push({ type: type.type, defaultValue: entry.defaultValue, depth });
+                    const visibility = type.visibility
+                        ? ReflectionVisibility[type.visibility] + " "
+                        : "";
+                    const optional = type.optional ||
+                        (stateIn.defaultIsOptional && type.default !== undefined);
+                    result.push(`${type.static ? "static " : ""}${type.readonly ? "readonly " : ""}${visibility}${memberNameToString(type.name)}${optional ? "?" : ""}: `);
+                    stack.push({
+                        type: type.type,
+                        defaultValue: entry.defaultValue,
+                        depth
+                    });
                     break;
                 }
                 case ReflectionKind.methodSignature:
                     stack.push({ type: type.return, depth });
-                    stack.push({ before: '): ' });
+                    stack.push({ before: "): " });
                     for (let i = type.parameters.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.parameters[i], before: i === 0 ? undefined : ', ', depth });
+                        stack.push({
+                            type: type.parameters[i],
+                            before: i === 0 ? undefined : ", ",
+                            depth
+                        });
                     }
-                    stack.push({ before: `${memberNameToString(type.name)}${type.optional ? '?' : ''}(` });
+                    stack.push({
+                        before: `${memberNameToString(type.name)}${type.optional ? "?" : ""}(`
+                    });
                     break;
                 case ReflectionKind.method: {
-                    const visibility = type.visibility ? ReflectionVisibility[type.visibility] + ' ' : '';
-                    const abstract = type.abstract ? 'abstract ' : '';
-                    const staticPrefix = type.static ? 'static ' : '';
-                    if (type.name === 'constructor') {
-                        stack.push({ before: ')' });
+                    const visibility = type.visibility
+                        ? ReflectionVisibility[type.visibility] + " "
+                        : "";
+                    const abstract = type.abstract ? "abstract " : "";
+                    const staticPrefix = type.static ? "static " : "";
+                    if (type.name === "constructor") {
+                        stack.push({ before: ")" });
                     }
                     else {
                         stack.push({ type: type.return, depth });
-                        stack.push({ before: '): ' });
+                        stack.push({ before: "): " });
                     }
                     for (let i = type.parameters.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.parameters[i], before: i === 0 ? undefined : ', ', depth });
+                        stack.push({
+                            type: type.parameters[i],
+                            before: i === 0 ? undefined : ", ",
+                            depth
+                        });
                     }
-                    stack.push({ before: `${staticPrefix}${abstract}${visibility}${memberNameToString(type.name)}${type.optional ? '?' : ''}(` });
+                    stack.push({
+                        before: `${staticPrefix}${abstract}${visibility}${memberNameToString(type.name)}${type.optional ? "?" : ""}(`
+                    });
                     break;
                 }
             }
@@ -2329,7 +2670,7 @@ function stringifyType(type, stateIn = {}) {
             result.push(entry.after);
         }
     }
-    return result.join('');
+    return result.join("");
 }
 stringifyType.__type = ['Type', 'type', () => __ΩPartial, () => __ΩStringifyTypeOptions, 'stateIn', () => ({}), 'stringifyType', 'P"w!2"n$o#"2%>&&/\''];
 function annotateClass(clazz, type = annotateClass.Ω?.[0]) {
diff --git a/dist/cjs/src/reflection/type.js.map b/dist/cjs/src/reflection/type.js.map
index 8c3f68911e048cfcbccda730c1b0c85a0fea62c9..eb54beb2f0956b8fe714756c13e6b762b0fe45f0 100644
--- a/dist/cjs/src/reflection/type.js.map
+++ b/dist/cjs/src/reflection/type.js.map
@@ -1 +1 @@
-{"version":3,"file":"type.js","sourceRoot":"","sources":["../../../../src/reflection/type.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"type.js","sourceRoot":"","sources":["../../../../src/reflection/type.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/src/registry.d.ts b/dist/cjs/src/registry.d.ts
index aa1687f2d35536f74e7a83b5813c66bec73f94f6..4aa12ebfbca3c975415e8373f43325764f75443e 100644
--- a/dist/cjs/src/registry.d.ts
+++ b/dist/cjs/src/registry.d.ts
@@ -1,5 +1,5 @@
-import { ClassType } from '@deepkit/core';
-import { ReflectionKind, Type } from './reflection/type.js';
+import { ClassType } from "@deepkit/core";
+import { ReflectionKind, Type } from "./reflection/type.js";
 interface RegistryDecorator<T> {
     predicate: (type: Type) => boolean;
     v: T;
diff --git a/dist/cjs/src/registry.js b/dist/cjs/src/registry.js
index df15a6e052eaf4ee9afa5de1e6e3da0a1b88cf65..d86bdc7cd4da3de2b578dc756db9f9ba57502fbb 100644
--- a/dist/cjs/src/registry.js
+++ b/dist/cjs/src/registry.js
@@ -2,9 +2,9 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.TypeRegistry = void 0;
 /*@ts-ignore*/
-const { __ΩClassType } = require('@deepkit/core');
+const { __ΩClassType } = require("@deepkit/core");
 /*@ts-ignore*/
-const { __ΩReflectionKind } = require('./reflection/type.js');
+const { __ΩReflectionKind } = require("./reflection/type.js");
 const core_1 = require("@deepkit/core");
 const type_js_1 = require("./reflection/type.js");
 const __ΩRegistryDecorator = ['T', 'Type', 'type', '', 'predicate', 'v', 'RegistryDecorator', 'b!PP"w"2#)/$4%e"!4&Mw\'y'];
@@ -27,7 +27,9 @@ class TypeRegistry {
             const classResult = this.classes.get(type.classType);
             if (classResult)
                 return classResult;
-            if (type.classType === Set || type.classType === Map || type_js_1.binaryTypes.includes(type.classType))
+            if (type.classType === Set ||
+                type.classType === Map ||
+                type_js_1.binaryTypes.includes(type.classType))
                 return undefined;
         }
         return this.results[type.kind];
diff --git a/dist/cjs/src/registry.js.map b/dist/cjs/src/registry.js.map
index 5588b5233b80bdf9f4775dc64a6c48e3a7c04314..b9bf211127a75a75cc3ad8bba676ce749ede683a 100644
--- a/dist/cjs/src/registry.js.map
+++ b/dist/cjs/src/registry.js.map
@@ -1 +1 @@
-{"version":3,"file":"registry.js","sourceRoot":"","sources":["../../../src/registry.ts"],"names":[],"mappings":";;;;iCAA+C,eAAe;;sCACZ,sBAAsB;AADxE,wCAA+D;AAC/D,kDAAyE;;AAOzE,MAAa,YAAY;IAAzB;QACc,YAAO,GAAqC,EAAE,CAAC;QAClD,YAAO,IAAO,GAAG,0CAAP,IAAI,GAAG,EAAgB,EAAC;QAC/B,eAAU,GAA2B,EAAE,CAAC;KA4DrD;IA1DG,KAAK;QACD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,GAAG,CAAC,IAAU;QACV,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YAC9B,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;YACrC,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,WAAW;gBAAE,OAAO,WAAW,CAAC;YACpC,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,IAAI,qBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;gBAAE,OAAO,SAAS,CAAC;QACnH,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,SAAS,CAAC,SAAkC,EAAE,CAAI;QAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,CAAI;QACV,KAAK,MAAM,SAAS,IAAI,qBAAW;YAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,UAAU,CAAC,CAAI;QACX,IAAI,CAAC,GAAG,CAAC,CAAC,wBAAc,CAAC,MAAM,EAAE,wBAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IAChE,CAAC;IAED;;;;;OAKG;IACH,QAAQ,CAAC,SAAoB,EAAE,CAAI;QAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAoB;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,GAAG,CAAC,IAAmE,EAAE,CAAI;QACzE,IAAI,IAAA,iBAAU,EAAC,IAAI,CAAC;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACrD,IAAI,GAAG,IAAA,cAAO,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACrC,KAAK,MAAM,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC;;AA9DL,oCA+DC;qFA9DyD,EAAE,sCACnC,GAAG,0CAAP,IAAI,GAAG,EAAgB,qEACO,EAAE"}
\ No newline at end of file
+{"version":3,"file":"registry.js","sourceRoot":"","sources":["../../../src/registry.ts"],"names":[],"mappings":";;;;iCAA+C,eAAe;;sCACZ,sBAAsB;AADxE,wCAA+D;AAC/D,kDAAyE;;AAOzE,MAAa,YAAY;IAAzB;QACY,YAAO,GAAqC,EAAE,CAAC;QAClD,YAAO,IAAO,GAAG,0CAAP,IAAI,GAAG,EAAgB,EAAC;QAC/B,eAAU,GAA2B,EAAE,CAAC;KAoEnD;IAlEC,KAAK;QACH,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,GAAG,CAAC,IAAU;QACZ,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,EAAE,CAAC;YACvC,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,WAAW;gBAAE,OAAO,WAAW,CAAC;YACpC,IACE,IAAI,CAAC,SAAS,KAAK,GAAG;gBACtB,IAAI,CAAC,SAAS,KAAK,GAAG;gBACtB,qBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;gBAEpC,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,SAAS,CAAC,SAAkC,EAAE,CAAI;QAChD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,CAAI;QACZ,KAAK,MAAM,SAAS,IAAI,qBAAW;YAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,UAAU,CAAC,CAAI;QACb,IAAI,CAAC,GAAG,CAAC,CAAC,wBAAc,CAAC,MAAM,EAAE,wBAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED;;;;;OAKG;IACH,QAAQ,CAAC,SAAoB,EAAE,CAAI;QACjC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAoB;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,GAAG,CACD,IAAmE,EACnE,CAAI;QAEJ,IAAI,IAAA,iBAAU,EAAC,IAAI,CAAC;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACrD,IAAI,GAAG,IAAA,cAAO,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACrC,KAAK,MAAM,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;;AAtEH,oCAuEC;qFAtEuD,EAAE,sCACnC,GAAG,0CAAP,IAAI,GAAG,EAAgB,qEACO,EAAE"}
\ No newline at end of file
diff --git a/dist/cjs/src/serializer.d.ts b/dist/cjs/src/serializer.d.ts
index 52c4d460cfa8f37af3c5502f8e13eddb66dfe6cb..e3b1c502a3fe173c715b196ae76a2fcd47617c53 100644
--- a/dist/cjs/src/serializer.d.ts
+++ b/dist/cjs/src/serializer.d.ts
@@ -1,7 +1,7 @@
-import { ClassType, CompilerContext, CustomError } from '@deepkit/core';
-import { AnnotationDefinition, EmbeddedOptions, FindType, ReflectionKind, Type, TypeArray, TypeClass, TypeIndexSignature, TypeObjectLiteral, TypeParameter, TypeProperty, TypePropertySignature, TypeUnion } from './reflection/type.js';
-import { ReflectionProperty } from './reflection/reflection.js';
-import { ValidationErrorItem } from './validator.js';
+import { ClassType, CompilerContext, CustomError } from "@deepkit/core";
+import { ReflectionProperty } from "./reflection/reflection.js";
+import { AnnotationDefinition, EmbeddedOptions, FindType, ReflectionKind, Type, TypeArray, TypeClass, TypeIndexSignature, TypeObjectLiteral, TypeParameter, TypeProperty, TypePropertySignature, TypeUnion } from "./reflection/type.js";
+import { ValidationErrorItem } from "./validator.js";
 /**
  * Make sure to change the id when a custom naming strategy is implemented, since caches are based on it.
  */
@@ -130,7 +130,7 @@ export declare class TemplateState {
      * Strict means only use type guards of specificality of 1 (used for is()/validation()).
      * For deserialization loose is used.
      */
-    validation?: 'strict' | 'loose';
+    validation?: "strict" | "loose";
     /**
      * When this is set all specificalities are used (used in union type guards to detect which member to pick).
      */
@@ -138,11 +138,11 @@ export declare class TemplateState {
     propertyName?: string | RuntimeCode;
     setterDisabled: boolean;
     parentTypes: Type[];
-    target: 'serialize' | 'deserialize';
+    target: "serialize" | "deserialize";
     protected handledAnnotations: AnnotationDefinition[];
     constructor(originalSetter: string | ContainerAccessor, originalAccessor: string | ContainerAccessor, compilerContext: CompilerContext, registry: TemplateRegistry, namingStrategy?: NamingStrategy, jitStack?: JitStack, path?: (string | RuntimeCode)[]);
     isValidation(): boolean;
-    withValidation(validation: this['validation']): this;
+    withValidation(validation: this["validation"]): this;
     includeAllSpecificalities(guardRegistry: TypeGuardRegistry): this;
     replaceTemplate(template: string): void;
     /**
diff --git a/dist/cjs/src/serializer.js b/dist/cjs/src/serializer.js
index 60f993ea43ddb0921f45b3389ee2d39e21815408..2c4763767167bfebb5b89ac9a8781e91eb4bebd3 100644
--- a/dist/cjs/src/serializer.js
+++ b/dist/cjs/src/serializer.js
@@ -38,31 +38,31 @@ exports.handleUnion = handleUnion;
 exports.getNameExpression = getNameExpression;
 const __ΩPartial = ['T', 'Partial', 'l+e#!e"!fRb!Pde"!gN#"w"y'];
 /*@ts-ignore*/
-const { __ΩTypeProperty } = require('./reflection/type.js');
+const { __ΩTypeProperty } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩTypePropertySignature } = require('./reflection/type.js');
+const { __ΩTypePropertySignature } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩTypeClass } = require('./reflection/type.js');
+const { __ΩTypeClass } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩTypeObjectLiteral } = require('./reflection/type.js');
+const { __ΩTypeObjectLiteral } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩClassType } = require('@deepkit/core');
+const { __ΩClassType } = require("@deepkit/core");
 /*@ts-ignore*/
-const { __ΩReflectionKind } = require('./reflection/type.js');
+const { __ΩReflectionKind } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩFindType } = require('./reflection/type.js');
+const { __ΩFindType } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩTypeIndexSignature } = require('./reflection/type.js');
+const { __ΩTypeIndexSignature } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩEmbeddedOptions } = require('./reflection/type.js');
+const { __ΩEmbeddedOptions } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩTypeArray } = require('./reflection/type.js');
+const { __ΩTypeArray } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩTypeTuple } = require('./reflection/type.js');
+const { __ΩTypeTuple } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩTypeParameter } = require('./reflection/type.js');
+const { __ΩTypeParameter } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩTypeUnion } = require('./reflection/type.js');
+const { __ΩTypeUnion } = require("./reflection/type.js");
 function __assignType(fn, args) {
     fn.__type = args;
     return fn;
@@ -77,20 +77,20 @@ function __assignType(fn, args) {
  * You should have received a copy of the MIT License along with this program.
  */
 const core_1 = require("@deepkit/core");
-const type_js_1 = require("./reflection/type.js");
 const type_spec_1 = require("@deepkit/type-spec");
-const reflection_js_1 = require("./reflection/reflection.js");
+const core_js_1 = require("./core.js");
+const reference_js_1 = require("./reference.js");
 const extends_js_1 = require("./reflection/extends.js");
 const processor_js_1 = require("./reflection/processor.js");
-const reference_js_1 = require("./reference.js");
+const reflection_js_1 = require("./reflection/reflection.js");
+const type_js_1 = require("./reflection/type.js");
 const validator_js_1 = require("./validator.js");
 const validators_js_1 = require("./validators.js");
-const core_js_1 = require("./core.js");
 /**
  * Make sure to change the id when a custom naming strategy is implemented, since caches are based on it.
  */
 class NamingStrategy {
-    constructor(id = 'default') {
+    constructor(id = "default") {
         this.id = id;
     }
     getPropertyName(type, forSerializer) {
@@ -105,17 +105,17 @@ exports.NamingStrategy = NamingStrategy;
 NamingStrategy.__type = ['id', () => "default", 'constructor', () => __ΩTypeProperty, () => __ΩTypePropertySignature, 'type', 'forSerializer', 'getPropertyName', 'NamingStrategy', 'P&2!:>""0#PPn$n%J2&&2\'P&-J0(5w)'];
 exports.underscoreNamingStrategy = new (_a = class extends NamingStrategy {
         constructor() {
-            super('underscore');
+            super("underscore");
         }
         getPropertyName(type, forSerializer) {
             const name = super.getPropertyName(type, forSerializer);
             if (!name)
                 return name;
-            return name.replace(/([A-Z])/g, '_$1').toLowerCase();
+            return name.replace(/([A-Z])/g, "_$1").toLowerCase();
         }
     },
     _a.__type = [() => NamingStrategy, 'constructor', () => __ΩTypeProperty, () => __ΩTypePropertySignature, 'type', 'forSerializer', 'getPropertyName', 'P7!P"0"PPn#n$J2%&2&P&-J0\'5'],
-    _a);
+    _a)();
 const __ΩSerializationOptions = ['groups', 'groupsExclude', 'loosely', 'SerializationOptions', 'P&F4!8&F4"8)4#8Mw$y'];
 exports.__ΩSerializationOptions = __ΩSerializationOptions;
 function isGroupAllowed(options, groupNames) {
@@ -155,11 +155,12 @@ function getPartialType(type) {
     // we have to copy members manually, since we want to modify them
     type.types = type.types.map(__assignType(v => ({ ...v }), ['v', '', 'P"2!"/"']));
     for (const member of type.types) {
-        if (member.kind === type_js_1.ReflectionKind.propertySignature || member.kind === type_js_1.ReflectionKind.property) {
+        if (member.kind === type_js_1.ReflectionKind.propertySignature ||
+            member.kind === type_js_1.ReflectionKind.property) {
             member.optional = true;
         }
     }
-    return jitContainer.partialType = (0, type_js_1.getTypeObjectLiteralFromTypeClass)(type);
+    return (jitContainer.partialType = (0, type_js_1.getTypeObjectLiteralFromTypeClass)(type));
 }
 getPartialType.__type = [() => __ΩTypeClass, () => __ΩTypeObjectLiteral, 'type', 'getPartialType', 'PPn!n"J2#"/$'];
 /**
@@ -172,9 +173,9 @@ getPartialSerializeFunction.__type = [() => __ΩTypeClass, () => __ΩTypeObjectL
 /**
  * Returns a (cached) serializer function for the given registry (serialize or deserialize).
  */
-function getSerializeFunction(type, registry, namingStrategy = new NamingStrategy(), path = '', jitStack = new JitStack()) {
+function getSerializeFunction(type, registry, namingStrategy = new NamingStrategy(), path = "", jitStack = new JitStack()) {
     const jit = (0, type_js_1.getTypeJitContainer)(type);
-    const id = registry.id + '_' + namingStrategy.id + '_' + path;
+    const id = registry.id + "_" + namingStrategy.id + "_" + path;
     if (jit[id])
         return jit[id];
     jit[id] = createSerializeFunction(type, registry, namingStrategy, path, jitStack);
@@ -182,18 +183,18 @@ function getSerializeFunction(type, registry, namingStrategy = new NamingStrateg
     return jit[id];
 }
 getSerializeFunction.__type = ['Type', 'type', () => TemplateRegistry, 'registry', () => NamingStrategy, 'namingStrategy', () => new NamingStrategy(), 'path', () => "", 'jitStack', () => __ΩSerializeFunction, 'getSerializeFunction', 'P"w!2"P7#2$P7%2&>\'&2(>)"2*n+/,'];
-function createSerializeFunction(type, registry, namingStrategy = new NamingStrategy(), path = '', jitStack = new JitStack()) {
+function createSerializeFunction(type, registry, namingStrategy = new NamingStrategy(), path = "", jitStack = new JitStack()) {
     const compiler = new core_1.CompilerContext();
-    const state = new TemplateState('result', 'data', compiler, registry, namingStrategy, jitStack, (0, core_1.isArray)(path) ? path : path ? [path] : []);
+    const state = new TemplateState("result", "data", compiler, registry, namingStrategy, jitStack, (0, core_1.isArray)(path) ? path : path ? [path] : []);
     if (state.registry === state.registry.serializer.deserializeRegistry) {
-        state.target = 'deserialize';
+        state.target = "deserialize";
     }
     //set unpopulatedCheck to ReturnSymbol to jump over those properties
-    compiler.context.set('typeSettings', core_js_1.typeSettings);
-    compiler.context.set('UnpopulatedCheck', core_js_1.UnpopulatedCheck);
-    compiler.context.set('UnpopulatedCheckReturnSymbol', core_js_1.UnpopulatedCheck.ReturnSymbol);
-    compiler.context.set('SerializationError', SerializationError);
-    compiler.context.set('ValidationErrorItem', validator_js_1.ValidationErrorItem);
+    compiler.context.set("typeSettings", core_js_1.typeSettings);
+    compiler.context.set("UnpopulatedCheck", core_js_1.UnpopulatedCheck);
+    compiler.context.set("UnpopulatedCheckReturnSymbol", core_js_1.UnpopulatedCheck.ReturnSymbol);
+    compiler.context.set("SerializationError", SerializationError);
+    compiler.context.set("ValidationErrorItem", validator_js_1.ValidationErrorItem);
     const code = `
         var result;
         state = state ? state : {};
@@ -203,7 +204,7 @@ function createSerializeFunction(type, registry, namingStrategy = new NamingStra
         typeSettings.unpopulatedCheck = oldUnpopulatedCheck;
         return result;
     `;
-    return compiler.build(code, 'data', 'state');
+    return compiler.build(code, "data", "state");
 }
 createSerializeFunction.__type = ['Type', 'type', () => TemplateRegistry, 'registry', () => NamingStrategy, 'namingStrategy', () => new NamingStrategy(), () => RuntimeCode, () => RuntimeCode, 'path', () => "", 'jitStack', () => __ΩSerializeFunction, 'createSerializeFunction', 'P"w!2"P7#2$P7%2&>\'P&P7(P&P7)JFJ2*>+"2,n-/.'];
 const __ΩGuard = ['T', 'data', () => validator_js_1.ValidationErrorItem, 'errors', 'state', '', 'Guard', 'b!P"2"PP7#F4$8M2%8!/&w\'y'];
@@ -212,23 +213,23 @@ function createTypeGuardFunction(type, stateIn, serializerToUse, withLoose = tru
     const compiler = new core_1.CompilerContext();
     let state;
     if (stateIn instanceof TemplateState) {
-        state = stateIn.fork('result');
+        state = stateIn.fork("result");
         state.compilerContext = compiler;
     }
     else {
-        state = new TemplateState('result', 'data', compiler, (serializerToUse || exports.serializer).typeGuards.getRegistry(1));
+        state = new TemplateState("result", "data", compiler, (serializerToUse || exports.serializer).typeGuards.getRegistry(1));
         if (stateIn)
             Object.assign(state, stateIn);
     }
-    state.path = [new RuntimeCode('_path')];
+    state.path = [new RuntimeCode("_path")];
     state.setterDisabled = false;
     const templates = state.registry.get(type);
     if (!templates.length)
         return undefined;
     executeTemplates(state, type, withLoose);
-    compiler.context.set('typeSettings', core_js_1.typeSettings);
+    compiler.context.set("typeSettings", core_js_1.typeSettings);
     //set unpopulatedCheck to ReturnSymbol to jump over those properties
-    compiler.context.set('UnpopulatedCheckReturnSymbol', core_js_1.UnpopulatedCheck.ReturnSymbol);
+    compiler.context.set("UnpopulatedCheckReturnSymbol", core_js_1.UnpopulatedCheck.ReturnSymbol);
     const code = `
         var result;
         if (_path === undefined) _path = '';
@@ -239,12 +240,13 @@ function createTypeGuardFunction(type, stateIn, serializerToUse, withLoose = tru
         typeSettings.unpopulatedCheck = oldUnpopulatedCheck;
         return result === true;
     `;
-    return compiler.build(code, 'data', 'state', '_path', 'property');
+    return compiler.build(code, "data", "state", "_path", "property");
 }
 createTypeGuardFunction.__type = ['Type', 'type', () => __ΩPartial, () => TemplateState, 'stateIn', () => Serializer, 'serializerToUse', 'withLoose', () => __ΩGuard, 'createTypeGuardFunction', 'P"w!2"P7$o#"2%8P7&2\'8"2(P-"o)"J/*'];
 class SerializationError extends core_1.CustomError {
-    constructor(originalMessage, code = '', path = '') {
-        super(`Serialization failed. ${!path ? '' : (path && path.startsWith('.') ? path.slice(1) : path) + ': '}` + originalMessage);
+    constructor(originalMessage, code = "", path = "") {
+        super(`Serialization failed. ${!path ? "" : (path && path.startsWith(".") ? path.slice(1) : path) + ": "}` +
+            originalMessage);
         this.originalMessage = originalMessage;
         this.code = code;
         this.path = path;
@@ -260,11 +262,14 @@ class RuntimeCode {
 exports.RuntimeCode = RuntimeCode;
 RuntimeCode.__type = ['code', 'constructor', 'RuntimeCode', 'P&2!:"0"5w#'];
 function collapsePath(path, prefix) {
-    return path.filter(__assignType(v => !!v, ['v', '', 'P"2!"/"'])).map(__assignType(v => v instanceof RuntimeCode ? v.code : JSON.stringify(v), ['v', '', 'P"2!"/"'])).join(`+'.'+`) || `''`;
+    return (path
+        .filter(__assignType(v => !!v, ['v', '', 'P"2!"/"']))
+        .map(__assignType(v => (v instanceof RuntimeCode ? v.code : JSON.stringify(v)), ['v', '', 'P"2!"/"']))
+        .join(`+'.'+`) || `''`);
 }
 collapsePath.__type = [() => RuntimeCode, 'path', 'prefix', 'collapsePath', 'PP&P7!JF2"&2#8&/$'];
 function getPropertyNameString(propertyName) {
-    return propertyName ? collapsePath([propertyName]) : '';
+    return propertyName ? collapsePath([propertyName]) : "";
 }
 getPropertyNameString.__type = [() => RuntimeCode, 'propertyName', 'getPropertyNameString', 'PP&P7!J2"8"/#'];
 /**
@@ -292,15 +297,19 @@ class JitStack {
     }
     prepare(registry, type) {
         if (this.getStack(registry).has(type)) {
-            throw new Error('Circular jit building detected: ' + (0, type_js_1.stringifyType)(type));
+            throw new Error("Circular jit building detected: " + (0, type_js_1.stringifyType)(type));
         }
-        const entry = { fn: undefined, id: this.id++ };
+        const entry = {
+            fn: undefined,
+            id: this.id++
+        };
         this.getStack(registry).set(type, entry);
         return {
-            id: entry.id, prepare: __assignType((fn) => {
+            id: entry.id,
+            prepare: __assignType((fn) => {
                 entry.fn = fn;
                 return entry;
-            }, [() => Function, 'fn', '', 'PPu!2""/#']),
+            }, [() => Function, 'fn', '', 'PPu!2""/#'])
         };
     }
     getOrCreate(registry, type, create) {
@@ -308,7 +317,10 @@ class JitStack {
         const existing = stack.get(type);
         if (existing)
             return existing;
-        const entry = { fn: undefined, id: this.id++ };
+        const entry = {
+            fn: undefined,
+            id: this.id++
+        };
         stack.set(type, entry);
         entry.fn = create();
         return entry;
@@ -328,7 +340,7 @@ class ContainerAccessor {
 exports.ContainerAccessor = ContainerAccessor;
 ContainerAccessor.__type = [() => ContainerAccessor, 'container', 'property', 'constructor', 'toString', 'ContainerAccessor', 'PP&P7!J2":&2#:"0$P"0%5w&'];
 class TemplateState {
-    constructor(originalSetter, originalAccessor, compilerContext, registry, namingStrategy = new NamingStrategy, jitStack = new JitStack(), path = []) {
+    constructor(originalSetter, originalAccessor, compilerContext, registry, namingStrategy = new NamingStrategy(), jitStack = new JitStack(), path = []) {
         this.originalSetter = originalSetter;
         this.originalAccessor = originalAccessor;
         this.compilerContext = compilerContext;
@@ -340,13 +352,13 @@ class TemplateState {
          * Before and after template content is rendered before/after all other templates.
          * When a template is put into its own function, before/after templates are run outside of this function.
          */
-        this.template = '';
+        this.template = "";
         this.ended = false;
-        this.setter = '';
-        this.accessor = '';
+        this.setter = "";
+        this.accessor = "";
         this.setterDisabled = false;
         this.parentTypes = [];
-        this.target = 'serialize';
+        this.target = "serialize";
         this.handledAnnotations = [];
         this.setter = originalSetter;
         this.accessor = originalAccessor;
@@ -410,10 +422,10 @@ class TemplateState {
         return this.handledAnnotations.includes(annotation);
     }
     get isSerialization() {
-        return this.target === 'serialize';
+        return this.target === "serialize";
     }
     get isDeserialization() {
-        return this.target === 'deserialize';
+        return this.target === "deserialize";
     }
     extendPath(path) {
         this.path.push(path instanceof RuntimeCode ? path : String(path));
@@ -425,8 +437,11 @@ class TemplateState {
     }
     throwCode(type, error, accessor = this.originalAccessor) {
         this.setContext({ ValidationError: validator_js_1.ValidationError, stringifyValueWithType: core_1.stringifyValueWithType });
-        const to = JSON.stringify(('string' === typeof type ? type : (0, type_js_1.stringifyType)(type)).replace(/\n/g, '').replace(/\s+/g, ' ').trim());
-        return `throw ValidationError.from([{code: 'type', path: ${collapsePath(this.path)}, message: 'Cannot convert ' + ${accessor} + ' to ' + ${to} ${error ? ` + '. ' + ${error}` : ''} }])`;
+        const to = JSON.stringify(("string" === typeof type ? type : (0, type_js_1.stringifyType)(type))
+            .replace(/\n/g, "")
+            .replace(/\s+/g, " ")
+            .trim());
+        return `throw ValidationError.from([{code: 'type', path: ${collapsePath(this.path)}, message: 'Cannot convert ' + ${accessor} + ' to ' + ${to} ${error ? ` + '. ' + ${error}` : ""} }])`;
     }
     /**
      * Adds template code for setting the `this.setter` variable. The expression evaluated in `code` is assigned to `this.setter`.
@@ -462,7 +477,7 @@ class TemplateState {
      * ```
      */
     convert(callback) {
-        const converter = this.setVariable('convert', callback);
+        const converter = this.setVariable("convert", callback);
         this.addCodeForSetter(`
         try {
             ${this.setter} = ${converter}(${this.accessor});
@@ -470,7 +485,7 @@ class TemplateState {
             if (error instanceof SerializationError) {
                 error.path = ${collapsePath(this.path)} + (error.path ? '.' + error.path : '');
             }
-            ${this.throwCode('any', 'error.message', this.accessor)};
+            ${this.throwCode("any", "error.message", this.accessor)};
         }
         `);
     }
@@ -490,7 +505,7 @@ class TemplateState {
      * ```
      */
     touch(callback) {
-        const touch = this.setVariable('touch', callback);
+        const touch = this.setVariable("touch", callback);
         this.addCode(`${touch}(${this.setter});`);
     }
     /**
@@ -506,14 +521,14 @@ class TemplateState {
         this.compilerContext.set(values);
     }
     addCode(code) {
-        this.template += '\n' + code;
+        this.template += "\n" + code;
     }
     /**
      * Adds template code for setting the `this.setter` variable manually, so use `${state.setter} = value`.
      * `this.accessor` will point now to `this.setter`.
      */
     addCodeForSetter(code) {
-        this.template += '\n' + code;
+        this.template += "\n" + code;
         this.accessor = String(this.setter);
     }
     hasSetterCode() {
@@ -522,7 +537,7 @@ class TemplateState {
 }
 exports.TemplateState = TemplateState;
 _b = TemplateState;
-TemplateState.__type = ['template', function () { return ''; }, 'ended', function () { return false; }, () => ContainerAccessor, 'setter', function () { return ''; }, () => ContainerAccessor, 'accessor', function () { return ''; }, "strict", "loose", 'validation', () => TypeGuardRegistry, 'allSpecificalities', () => RuntimeCode, 'propertyName', 'setterDisabled', function () { return false; }, 'Type', 'parentTypes', function () { return []; }, "serialize", "deserialize", 'target', function () { return 'serialize'; }, () => type_js_1.AnnotationDefinition, 'handledAnnotations', function () { return []; }, () => ContainerAccessor, 'originalSetter', () => ContainerAccessor, 'originalAccessor', () => core_1.CompilerContext, 'compilerContext', () => TemplateRegistry, 'registry', () => NamingStrategy, 'namingStrategy', () => new NamingStrategy, () => JitStack, 'jitStack', () => new JitStack(), () => RuntimeCode, 'path', () => [], 'constructor', 'isValidation', "validation", 'withValidation', () => TypeGuardRegistry, 'guardRegistry', 'includeAllSpecificalities', 'replaceTemplate', () => ContainerAccessor, () => ContainerAccessor, () => RuntimeCode, () => TemplateState, 'fork', 'fullFork', () => TemplateRegistry, 'forRegistry', () => RuntimeCode, 'name', 'forPropertyName', 'disableSetter', 'enableSetter', () => type_js_1.AnnotationDefinition, 'annotation', 'annotationHandled', () => type_js_1.AnnotationDefinition, 'isAnnotationHandled', () => RuntimeCode, 'extendPath', 'code', 'message', 'assignValidationError', 'type', 'error', () => ContainerAccessor, () => _b.originalAccessor, 'throwCode', 'toString', 'addSetter', 'errorCode', 'addSetterAndReportErrorIfInvalid', 'value', '', 'callback', 'convert', 'touch', 'stop', 'setVariable', 'values', 'setContext', 'addCode', 'addCodeForSetter', 'hasSetterCode', 'TemplateState', '&3!>")3#>$P&P7%J3&>\'P&P7(J3)>*P.+.,J3-8P7.3/8P&P70J318)32>3"w4F35>6P.7.8J39>:P7;F3<<>=PP&P7>J2?:P&P7@J2A:P7B2C:P7D2E:P7F2G:>HP7I2J:>KP&P7LJF2M:>N"0OP)0PP!.Qf2-!0RPP7S2T!0UP&2!"0VPP&P7WJ2&8P&P7XJ2)8P&P7YJF2M8P7Z0[P"0\\PP7]2E"0^PP&\'+P7_J2`8!0aP!0bP!0cPP"7d2e$0fPP"7g2e)0h!!PP&P7i\'+J2M!0jP&2k&2l"0mPP"w4&J2n&2o8P&P7pJ2)>q"0rPP&PP&1sMJ2k"0tP&2u&2l&2k"0vPP"2w"/x2y"0zPP"2w$/x2y"0{P"0|P&2`"2w8&0}PP&"LM2~"0P&2k"0\u0080P&2k"0\u0081P)0\u00825w\u0083'];
+TemplateState.__type = ['template', function () { return ""; }, 'ended', function () { return false; }, () => ContainerAccessor, 'setter', function () { return ""; }, () => ContainerAccessor, 'accessor', function () { return ""; }, "strict", "loose", 'validation', () => TypeGuardRegistry, 'allSpecificalities', () => RuntimeCode, 'propertyName', 'setterDisabled', function () { return false; }, 'Type', 'parentTypes', function () { return []; }, "serialize", "deserialize", 'target', function () { return "serialize"; }, () => type_js_1.AnnotationDefinition, 'handledAnnotations', function () { return []; }, () => ContainerAccessor, 'originalSetter', () => ContainerAccessor, 'originalAccessor', () => core_1.CompilerContext, 'compilerContext', () => TemplateRegistry, 'registry', () => NamingStrategy, 'namingStrategy', () => new NamingStrategy(), () => JitStack, 'jitStack', () => new JitStack(), () => RuntimeCode, 'path', () => [], 'constructor', 'isValidation', "validation", 'withValidation', () => TypeGuardRegistry, 'guardRegistry', 'includeAllSpecificalities', 'replaceTemplate', () => ContainerAccessor, () => ContainerAccessor, () => RuntimeCode, () => TemplateState, 'fork', 'fullFork', () => TemplateRegistry, 'forRegistry', () => RuntimeCode, 'name', 'forPropertyName', 'disableSetter', 'enableSetter', () => type_js_1.AnnotationDefinition, 'annotation', 'annotationHandled', () => type_js_1.AnnotationDefinition, 'isAnnotationHandled', () => RuntimeCode, 'extendPath', 'code', 'message', 'assignValidationError', 'type', 'error', () => ContainerAccessor, () => _b.originalAccessor, 'throwCode', 'toString', 'addSetter', 'errorCode', 'addSetterAndReportErrorIfInvalid', 'value', '', 'callback', 'convert', 'touch', 'stop', 'setVariable', 'values', 'setContext', 'addCode', 'addCodeForSetter', 'hasSetterCode', 'TemplateState', '&3!>")3#>$P&P7%J3&>\'P&P7(J3)>*P.+.,J3-8P7.3/8P&P70J318)32>3"w4F35>6P.7.8J39>:P7;F3<<>=PP&P7>J2?:P&P7@J2A:P7B2C:P7D2E:P7F2G:>HP7I2J:>KP&P7LJF2M:>N"0OP)0PP!.Qf2-!0RPP7S2T!0UP&2!"0VPP&P7WJ2&8P&P7XJ2)8P&P7YJF2M8P7Z0[P"0\\PP7]2E"0^PP&\'+P7_J2`8!0aP!0bP!0cPP"7d2e$0fPP"7g2e)0h!!PP&P7i\'+J2M!0jP&2k&2l"0mPP"w4&J2n&2o8P&P7pJ2)>q"0rPP&PP&1sMJ2k"0tP&2u&2l&2k"0vPP"2w"/x2y"0zPP"2w$/x2y"0{P"0|P&2`"2w8&0}PP&"LM2~"0P&2k"0\u0080P&2k"0\u0081P)0\u00825w\u0083'];
 const __ΩTemplate = ['T', 'type', () => TemplateState, 'state', '', 'Template', 'b!Pe"!2"P7#2$$/%w&y'];
 exports.__ΩTemplate = __ΩTemplate;
 const __ΩTemplateHook = ['Type', 'type', () => TemplateState, 'state', '', 'TemplateHook', 'P"w!2"P7#2$$/%w&y'];
@@ -557,10 +572,12 @@ class TemplateRegistry {
             const classTemplates = this.classTemplates.get(type.classType);
             if (classTemplates && classTemplates.length)
                 return classTemplates;
-            if (type.classType === Set || type.classType === Map || type_js_1.binaryTypes.includes(type.classType))
+            if (type.classType === Set ||
+                type.classType === Map ||
+                type_js_1.binaryTypes.includes(type.classType))
                 return [];
         }
-        return (_c = this.templates)[_d = type.kind] || (_c[_d] = []);
+        return ((_c = this.templates)[_d = type.kind] || (_c[_d] = []));
     }
     getDecorator(type) {
         return this.decorator.filter(__assignType(v => v.predicate(type), ['v', '', 'P"2!"/"'])).map(__assignType(v => v.template, ['v', '', 'P"2!"/"']));
@@ -656,8 +673,8 @@ function callExtractedFunctionIfAvailable(state, type) {
         return false;
     const withSetter = !state.setterDisabled && state.setter;
     state.addCode(`
-    //call jit=${jit.id} for setter="${state.setter}" via propertyName ${state.propertyName ? collapsePath([state.propertyName]) : ''}
-    ${withSetter ? `${state.setter} = ` : ''}${state.setVariable('jit', jit)}.fn(${state.accessor || 'undefined'}, state, ${collapsePath(state.path)});
+    //call jit=${jit.id} for setter="${state.setter}" via propertyName ${state.propertyName ? collapsePath([state.propertyName]) : ""}
+    ${withSetter ? `${state.setter} = ` : ""}${state.setVariable("jit", jit)}.fn(${state.accessor || "undefined"}, state, ${collapsePath(state.path)});
     `);
     if (withSetter)
         state.accessor = state.setter;
@@ -667,12 +684,18 @@ callExtractedFunctionIfAvailable.__type = [() => TemplateState, 'state', 'Type',
 function extractStateToFunctionAndCallIt(state, type) {
     const prepare = state.jitStack.prepare(state.registry, type);
     callExtractedFunctionIfAvailable(state, type);
-    return { setFunction: prepare.prepare, id: prepare.id, state: state.fork('result', 'data', [new RuntimeCode('_path')]).forPropertyName(state.propertyName) };
+    return {
+        setFunction: prepare.prepare,
+        id: prepare.id,
+        state: state
+            .fork("result", "data", [new RuntimeCode("_path")])
+            .forPropertyName(state.propertyName)
+    };
 }
 extractStateToFunctionAndCallIt.__type = [() => TemplateState, 'state', 'Type', 'type', 'extractStateToFunctionAndCallIt', 'PP7!2""w#2$"/%'];
 function buildFunction(state, type) {
-    let circularCheckBeginning = '';
-    let circularCheckEnd = '';
+    let circularCheckBeginning = "";
+    let circularCheckEnd = "";
     if ((0, reflection_js_1.hasCircularReference)(type)) {
         circularCheckBeginning = `
         if (data) {
@@ -697,13 +720,13 @@ function buildFunction(state, type) {
 
         return result;
     `;
-    return state.compilerContext.build(code, 'data', 'state', '_path');
+    return state.compilerContext.build(code, "data", "state", "_path");
 }
 buildFunction.__type = [() => TemplateState, 'state', 'Type', 'type', () => Function, 'buildFunction', 'PP7!2""w#2$Pu%/&'];
 function executeTemplates(state, type, withLoose = true, withCache = true) {
     state.parentTypes.push(type);
     let originalState = state;
-    if (withLoose && state.validation === 'loose' && state.allSpecificalities) {
+    if (withLoose && state.validation === "loose" && state.allSpecificalities) {
         // check if the particular type has multiple specificalities
         // if so, we need to generate a type guard that checks all specificalities.
         // e.g. string supports `'string' === typeof' but as last resort also anything else.
@@ -712,12 +735,12 @@ function executeTemplates(state, type, withLoose = true, withCache = true) {
         const typeGuards = state.allSpecificalities.getSortedTemplateRegistries();
         const lines = [];
         for (const [specificality, typeGuard] of typeGuards) {
-            const next = state.fork(undefined, 'data').forRegistry(typeGuard);
+            const next = state.fork(undefined, "data").forRegistry(typeGuard);
             const fn = createTypeGuardFunction(type, next, undefined, false);
             if (!fn)
                 continue;
-            const guard = state.setVariable('guard_' + type_js_1.ReflectionKind[type.kind], fn);
-            const looseCheck = specificality <= 0 ? `state.loosely !== false && ` : '';
+            const guard = state.setVariable("guard_" + type_js_1.ReflectionKind[type.kind], fn);
+            const looseCheck = specificality <= 0 ? `state.loosely !== false && ` : "";
             lines.push(`else if (${looseCheck}${guard}(${state.accessor})) {
                 //type = ${type_js_1.ReflectionKind[type.kind]}, specificality=${specificality}
                 ${state.setter} = true;
@@ -725,7 +748,7 @@ function executeTemplates(state, type, withLoose = true, withCache = true) {
         }
         state.template = `
             //type guard with multiple specificalities
-            if (false) {} ${lines.join(' ')}
+            if (false) {} ${lines.join(" ")}
             else {
                 ${state.setter} = false;
             }
@@ -733,10 +756,14 @@ function executeTemplates(state, type, withLoose = true, withCache = true) {
     }
     else {
         let setFunction;
-        if (withCache && (type.kind === type_js_1.ReflectionKind.objectLiteral
-            || type.kind === type_js_1.ReflectionKind.array || type.kind === type_js_1.ReflectionKind.tuple
-            || (type.kind === type_js_1.ReflectionKind.class && (type.classType === Set || type.classType === Map))
-            || (0, type_js_1.isCustomTypeClass)(type)) && !type_js_1.embeddedAnnotation.getFirst(type)) {
+        if (withCache &&
+            (type.kind === type_js_1.ReflectionKind.objectLiteral ||
+                type.kind === type_js_1.ReflectionKind.array ||
+                type.kind === type_js_1.ReflectionKind.tuple ||
+                (type.kind === type_js_1.ReflectionKind.class &&
+                    (type.classType === Set || type.classType === Map)) ||
+                (0, type_js_1.isCustomTypeClass)(type)) &&
+            !type_js_1.embeddedAnnotation.getFirst(type)) {
             //wrap circular check if necessary
             if (callExtractedFunctionIfAvailable(state, type)) {
                 state.parentTypes.pop();
@@ -774,33 +801,38 @@ function executeTemplates(state, type, withLoose = true, withCache = true) {
     return originalState.template;
 }
 executeTemplates.__type = [() => TemplateState, 'state', 'Type', 'type', 'withLoose', () => true, 'withCache', () => true, 'executeTemplates', 'PP7!2""w#2$)2%>&)2\'>(&/)'];
-function createConverterJSForMember(property, state, undefinedSetterCode = '', nullSetterCode = '') {
+function createConverterJSForMember(property, state, undefinedSetterCode = "", nullSetterCode = "") {
     const { registry, compilerContext, namingStrategy } = state;
     const type = property instanceof reflection_js_1.ReflectionProperty ? property.type : property.type;
     const p = property instanceof reflection_js_1.ReflectionProperty ? property.property : property;
     state.parentTypes.push(p);
-    undefinedSetterCode = undefinedSetterCode || executeTemplates(state.fork(), { kind: type_js_1.ReflectionKind.undefined });
-    nullSetterCode = nullSetterCode || executeTemplates(state.fork(), { kind: type_js_1.ReflectionKind.null });
+    undefinedSetterCode =
+        undefinedSetterCode ||
+            executeTemplates(state.fork(), { kind: type_js_1.ReflectionKind.undefined });
+    nullSetterCode =
+        nullSetterCode ||
+            executeTemplates(state.fork(), { kind: type_js_1.ReflectionKind.null });
     let convert = executeTemplates(state.fork(), type);
     state.parentTypes.pop();
-    let postTransform = '';
+    let postTransform = "";
     const isSerialization = registry.serializer.serializeRegistry === registry;
     const isDeserialization = registry.serializer.deserializeRegistry === registry;
     if (property instanceof reflection_js_1.ReflectionProperty) {
         if (isSerialization) {
             if (property.serializer) {
-                const fnVar = compilerContext.reserveVariable('transformer', property.serializer);
+                const fnVar = compilerContext.reserveVariable("transformer", property.serializer);
                 postTransform = `${state.setter} = ${fnVar}(${state.setter}, ${compilerContext.reserveConst(property)})`;
             }
         }
         if (isDeserialization) {
             if (property.deserializer) {
-                const fnVar = compilerContext.reserveVariable('transformer', property.deserializer);
+                const fnVar = compilerContext.reserveVariable("transformer", property.deserializer);
                 postTransform = `${state.setter} = ${fnVar}(${state.setter}, ${compilerContext.reserveConst(property)})`;
             }
         }
     }
-    const setExplicitUndefined = registry.serializer.setExplicitUndefined(type, state) && (0, type_js_1.isOptional)(property instanceof reflection_js_1.ReflectionProperty ? property.property : property);
+    const setExplicitUndefined = registry.serializer.setExplicitUndefined(type, state) &&
+        (0, type_js_1.isOptional)(property instanceof reflection_js_1.ReflectionProperty ? property.property : property);
     const nullable = (0, type_js_1.isNullable)(type);
     // // since JSON does not support undefined, we emulate it via using null for serialization, and convert that back to undefined when deserialization happens.
     // // note: When the value is not defined (property.name in object === false), then this code will never run.
@@ -820,9 +852,9 @@ function createConverterJSForMember(property, state, undefinedSetterCode = '', n
                 ${undefinedSetterCode}
             }
         } else if (${state.accessor} === null) {
-            //null acts on transport layer as telling an explicitly set undefined
-            //this is to support actual undefined as value across a transport layer. Otherwise it
-            //would be impossible to set a already set value to undefined back or override default value (since JSON.stringify() omits that information)
+            // null acts on transport layer as telling an explicitly set undefined
+            // this is to support actual undefined as value across a transport layer. Otherwise it
+            // would be impossible to set a already set value to undefined back or override default value (since JSON.stringify() omits that information)
             if (${nullable}) {
                 ${nullSetterCode}
             } else {
@@ -838,7 +870,7 @@ function createConverterJSForMember(property, state, undefinedSetterCode = '', n
 }
 createConverterJSForMember.__type = [() => reflection_js_1.ReflectionProperty, () => __ΩTypeProperty, () => __ΩTypePropertySignature, () => __ΩTypeIndexSignature, 'property', () => TemplateState, 'state', 'undefinedSetterCode', () => "", 'nullSetterCode', () => "", 'createConverterJSForMember', 'PPP7!n"n#n$J2%P7&2\'&2(>)&2*>+&/,'];
 function inAccessor(accessor) {
-    if ('string' === typeof accessor)
+    if ("string" === typeof accessor)
         return `${accessor} !== undefined`;
     return `'object' === typeof ${accessor.container} && ${accessor.property} in ${accessor.container}`;
 }
@@ -846,14 +878,14 @@ inAccessor.__type = [() => ContainerAccessor, 'accessor', 'inAccessor', 'PPP7!&J
 function deserializeEmbedded(type, state, container) {
     const embedded = type_js_1.embeddedAnnotation.getFirst(type);
     if (!embedded)
-        return '';
+        return "";
     const properties = (0, type_js_1.resolveTypeMembers)(type).filter(type_js_1.isPropertyMemberType);
     const args = [];
     const assign = [];
     const loadArgs = [];
-    const setToUndefined = state.compilerContext.reserveName('setToUndefined');
-    const params = state.compilerContext.reserveName('params');
-    const requiredSet = ['true'];
+    const setToUndefined = state.compilerContext.reserveName("setToUndefined");
+    const params = state.compilerContext.reserveName("params");
+    const requiredSet = ["true"];
     function loadProperty(setter, property) {
         if (!(0, type_js_1.isOptional)(property) && !(0, type_js_1.hasDefaultValue)(property)) {
             if ((0, type_js_1.isNullable)(property)) {
@@ -864,14 +896,22 @@ function deserializeEmbedded(type, state, container) {
             }
         }
         const accessor = getEmbeddedAccessor(type, properties.length !== 1, state.accessor, state.registry.serializer, state.namingStrategy, property, embedded, container);
-        const propertyState = state.fork(setter, accessor).extendPath(String(property.name));
+        const propertyState = state
+            .fork(setter, accessor)
+            .extendPath(String(property.name));
         if ((0, type_js_1.hasEmbedded)(property.type)) {
             loadArgs.push(executeTemplates(propertyState, property.type));
         }
         else {
             if (accessor instanceof ContainerAccessor) {
-                const check = !containerProperty ? 'true' : (0, type_js_1.isNullable)(containerProperty) ? `${accessor} === undefined` : `(${accessor} === undefined || ${accessor} === null)`;
-                const setUndefined = containerProperty ? `if (${check}) { ${setToUndefined}++; }` : 'if (false) {} ';
+                const check = !containerProperty
+                    ? "true"
+                    : (0, type_js_1.isNullable)(containerProperty)
+                        ? `${accessor} === undefined`
+                        : `(${accessor} === undefined || ${accessor} === null)`;
+                const setUndefined = containerProperty
+                    ? `if (${check}) { ${setToUndefined}++; }`
+                    : "if (false) {} ";
                 loadArgs.push(`
                     if (${inAccessor(accessor)}) {
                         ${setUndefined} else {
@@ -888,33 +928,40 @@ function deserializeEmbedded(type, state, container) {
     const containerProperty = getEmbeddedProperty(type);
     const constructorAssigned = [];
     for (const property of (0, type_js_1.getConstructorProperties)(type).parameters) {
-        if ((property.kind == type_js_1.ReflectionKind.property || property.kind === type_js_1.ReflectionKind.propertySignature) && !type_js_1.excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
+        if ((property.kind == type_js_1.ReflectionKind.property ||
+            property.kind === type_js_1.ReflectionKind.propertySignature) &&
+            !type_js_1.excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
             constructorAssigned.push((0, type_js_1.memberNameToString)(property.name));
             const setter = new ContainerAccessor(params, JSON.stringify(property.name));
             loadProperty(setter, property);
             args.push(setter);
         }
         else {
-            args.push('undefined');
+            args.push("undefined");
         }
     }
     for (const property of properties) {
-        if ((property.kind == type_js_1.ReflectionKind.property || property.kind === type_js_1.ReflectionKind.propertySignature) && !type_js_1.excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
+        if ((property.kind == type_js_1.ReflectionKind.property ||
+            property.kind === type_js_1.ReflectionKind.propertySignature) &&
+            !type_js_1.excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
             if (constructorAssigned.includes((0, type_js_1.memberNameToString)(property.name)))
                 continue;
             const setter = new ContainerAccessor(params, JSON.stringify(property.name));
             loadProperty(setter, property);
-            assign.push(`${new ContainerAccessor(state.setter, JSON.stringify(property.name))} = ` + setter);
+            assign.push(`${new ContainerAccessor(state.setter, JSON.stringify(property.name))} = ` +
+                setter);
         }
     }
-    const createObject = type.kind === type_js_1.ReflectionKind.objectLiteral ? `{}` : `new ${state.compilerContext.reserveConst(type.classType)}(${args.join(',')})`;
+    const createObject = type.kind === type_js_1.ReflectionKind.objectLiteral
+        ? `{}`
+        : `new ${state.compilerContext.reserveConst(type.classType)}(${args.join(",")})`;
     return `
         const ${params} = {};
         let ${setToUndefined} = 0;
-        ${loadArgs.join('\n')}
-        if (${requiredSet.join(' && ')}) {
+        ${loadArgs.join("\n")}
+        if (${requiredSet.join(" && ")}) {
             ${state.setter} = ${createObject};
-            ${assign.join(';\n')}
+            ${assign.join(";\n")}
         } else if (${setToUndefined} === ${properties.length}) {
             ${state.setter} = undefined;
         }
@@ -926,7 +973,8 @@ function getIndexCheck(context, i, type) {
         context.set({ isNumeric: core_1.isNumeric });
         return `isNumeric(${i})`;
     }
-    else if (type.kind === type_js_1.ReflectionKind.string || type.kind === type_js_1.ReflectionKind.any) {
+    else if (type.kind === type_js_1.ReflectionKind.string ||
+        type.kind === type_js_1.ReflectionKind.any) {
         return `'string' === typeof ${i}`;
     }
     else if (type.kind === type_js_1.ReflectionKind.symbol) {
@@ -934,21 +982,25 @@ function getIndexCheck(context, i, type) {
     }
     else if (type.kind === type_js_1.ReflectionKind.templateLiteral) {
         context.set({ extendTemplateLiteral: extends_js_1.extendTemplateLiteral });
-        const typeVar = context.reserveVariable('type', type);
+        const typeVar = context.reserveVariable("type", type);
         return `'string' === typeof ${i} && extendTemplateLiteral({kind: ${type_js_1.ReflectionKind.literal}, literal: ${i}}, ${typeVar})`;
     }
     else if (type.kind === type_js_1.ReflectionKind.union) {
-        return '(' + type.types.map(__assignType(v => getIndexCheck(context, i, v), ['v', '', 'P"2!"/"'])).join(' || ') + ')';
+        return ("(" + type.types.map(__assignType(v => getIndexCheck(context, i, v), ['v', '', 'P"2!"/"'])).join(" || ") + ")");
     }
-    return '';
+    return "";
 }
 getIndexCheck.__type = [() => core_1.CompilerContext, 'context', 'i', 'Type', 'type', 'getIndexCheck', 'PP7!2"&2#"w$2%&/&'];
 function isLiteralType(t) {
-    return t.index.kind === type_js_1.ReflectionKind.literal || (t.index.kind === type_js_1.ReflectionKind.union && t.index.types.some(__assignType(v => v.kind === type_js_1.ReflectionKind.literal, ['v', '', 'P"2!"/"'])));
+    return (t.index.kind === type_js_1.ReflectionKind.literal ||
+        (t.index.kind === type_js_1.ReflectionKind.union &&
+            t.index.types.some(__assignType(v => v.kind === type_js_1.ReflectionKind.literal, ['v', '', 'P"2!"/"']))));
 }
 isLiteralType.__type = [() => __ΩTypeIndexSignature, 't', 'isLiteralType', 'Pn!2")/#'];
 function isNumberType(t) {
-    return t.index.kind === type_js_1.ReflectionKind.number || (t.index.kind === type_js_1.ReflectionKind.union && t.index.types.some(__assignType(v => v.kind === type_js_1.ReflectionKind.number, ['v', '', 'P"2!"/"'])));
+    return (t.index.kind === type_js_1.ReflectionKind.number ||
+        (t.index.kind === type_js_1.ReflectionKind.union &&
+            t.index.types.some(__assignType(v => v.kind === type_js_1.ReflectionKind.number, ['v', '', 'P"2!"/"']))));
 }
 isNumberType.__type = [() => __ΩTypeIndexSignature, 't', 'isNumberType', 'Pn!2")/#'];
 /**
@@ -957,10 +1009,12 @@ isNumberType.__type = [() => __ΩTypeIndexSignature, 't', 'isNumberType', 'Pn!2"
  */
 function sortSignatures(signatures) {
     signatures.sort(__assignType((a, b) => {
-        if (isLiteralType(a))
+        if (isLiteralType(a)) {
             return -1;
-        if (isNumberType(a) && !isLiteralType(b))
+        }
+        if (isNumberType(a) && !isLiteralType(b)) {
             return -1;
+        }
         return +1;
     }, ['a', 'b', '', 'P"2!"2""/#']));
 }
@@ -984,7 +1038,8 @@ function getEmbeddedProperty(type) {
     let resolved = type.parent;
     if (resolved.kind === type_js_1.ReflectionKind.union && resolved.parent)
         resolved = resolved.parent;
-    if (resolved.kind === type_js_1.ReflectionKind.propertySignature || resolved.kind === type_js_1.ReflectionKind.property)
+    if (resolved.kind === type_js_1.ReflectionKind.propertySignature ||
+        resolved.kind === type_js_1.ReflectionKind.property)
         return resolved;
     return;
 }
@@ -993,14 +1048,19 @@ function getEmbeddedAccessor(type, autoPrefix, accessor, serializer, namingStrat
     const containerProperty = getEmbeddedProperty(type);
     let embeddedPropertyName = JSON.stringify(namingStrategy.getPropertyName(property, serializer.name));
     if (embedded.prefix !== undefined) {
-        embeddedPropertyName = embedded.prefix ? JSON.stringify(embedded.prefix) + ' + ' + embeddedPropertyName : embeddedPropertyName;
+        embeddedPropertyName = embedded.prefix
+            ? JSON.stringify(embedded.prefix) + " + " + embeddedPropertyName
+            : embeddedPropertyName;
     }
     else if (!container && containerProperty) {
-        embeddedPropertyName = JSON.stringify(containerProperty.name) + ` + '_' + ` + embeddedPropertyName;
+        embeddedPropertyName =
+            JSON.stringify(containerProperty.name) +
+                ` + '_' + ` +
+                embeddedPropertyName;
     }
     if (container)
         return new ContainerAccessor(container, embeddedPropertyName);
-    if ((autoPrefix || embedded.prefix !== undefined)) {
+    if (autoPrefix || embedded.prefix !== undefined) {
         //if autoPrefix or a prefix is set the embeddedPropertyName is emitted in a container, either manually provided or from accessor.
         if (accessor instanceof ContainerAccessor)
             return new ContainerAccessor(accessor.container, embeddedPropertyName);
@@ -1040,12 +1100,12 @@ function serializeObjectLiteral(type, state) {
             }
             else {
                 const lines = [];
-                let pre = '';
-                let post = '';
-                let container = '';
+                let pre = "";
+                let post = "";
+                let container = "";
                 if (!(state.setter instanceof ContainerAccessor)) {
                     //create own container
-                    container = state.compilerContext.reserveName('container');
+                    container = state.compilerContext.reserveName("container");
                     pre = `let ${container} = {}`;
                     post = `${state.setter} = ${container}`;
                 }
@@ -1056,7 +1116,7 @@ function serializeObjectLiteral(type, state) {
                 state.addCode(`
                 if (${inAccessor(state.accessor)}) {
                     ${pre}
-                    ${lines.join('\n')}
+                    ${lines.join("\n")}
                     ${post}
                 }
             `);
@@ -1065,7 +1125,7 @@ function serializeObjectLiteral(type, state) {
         return;
     }
     state.setContext({ isGroupAllowed });
-    const v = state.compilerContext.reserveName('v');
+    const v = state.compilerContext.reserveName("v");
     const lines = [];
     const signatures = [];
     const existing = [];
@@ -1080,7 +1140,7 @@ function serializeObjectLiteral(type, state) {
             const parameters = constructor.getParameters();
             for (const parameter of parameters) {
                 if (!parameter.isProperty()) {
-                    constructorArguments.push('undefined');
+                    constructorArguments.push("undefined");
                     continue;
                 }
                 const property = clazz.getProperty(parameter.getName());
@@ -1089,10 +1149,15 @@ function serializeObjectLiteral(type, state) {
                 if (property.isSerializerExcluded(state.registry.serializer.name)) {
                     continue;
                 }
-                const argumentName = state.compilerContext.reserveVariable('c_' + parameter.getName());
+                const argumentName = state.compilerContext.reserveVariable("c_" + parameter.getName());
                 const readName = getNameExpression(state.namingStrategy.getPropertyName(property.property, state.registry.serializer.name), state);
-                const propertyState = state.fork(argumentName, new ContainerAccessor(state.accessor, readName)).extendPath(String(property.getName()));
-                const staticDefault = property.type.kind === type_js_1.ReflectionKind.literal && !property.isOptional() ? `${argumentName} = ${state.compilerContext.reserveConst(property.type.literal)};` : '';
+                const propertyState = state
+                    .fork(argumentName, new ContainerAccessor(state.accessor, readName))
+                    .extendPath(String(property.getName()));
+                const staticDefault = property.type.kind === type_js_1.ReflectionKind.literal &&
+                    !property.isOptional()
+                    ? `${argumentName} = ${state.compilerContext.reserveConst(property.type.literal)};`
+                    : "";
                 const embedded = property.getEmbedded();
                 if (embedded) {
                     preLines.push(executeTemplates(propertyState, property.type));
@@ -1117,7 +1182,8 @@ function serializeObjectLiteral(type, state) {
                 continue;
             signatures.push(member);
         }
-        else if (member.kind === type_js_1.ReflectionKind.propertySignature || member.kind === type_js_1.ReflectionKind.property) {
+        else if (member.kind === type_js_1.ReflectionKind.propertySignature ||
+            member.kind === type_js_1.ReflectionKind.property) {
             if (!(0, type_js_1.isPropertyMemberType)(member))
                 continue;
             if (type_js_1.excludedAnnotation.isExcluded(member.type, state.registry.serializer.name))
@@ -1129,7 +1195,9 @@ function serializeObjectLiteral(type, state) {
             existing.push(readName);
             const writeName = getNameExpression(state.isDeserialization ? (0, type_js_1.memberNameToString)(member.name) : name, state);
             const setter = new ContainerAccessor(v, writeName);
-            const propertyState = state.fork(setter, new ContainerAccessor(state.accessor, readName)).extendPath(String(member.name));
+            const propertyState = state
+                .fork(setter, new ContainerAccessor(state.accessor, readName))
+                .extendPath(String(member.name));
             const staticDefault = getStaticDefaultCodeForProperty(member, setter, state);
             if ((0, type_js_1.hasEmbedded)(member.type)) {
                 lines.push(executeTemplates(propertyState, member.type));
@@ -1144,8 +1212,8 @@ function serializeObjectLiteral(type, state) {
         }
     }
     if (signatures.length) {
-        const i = state.compilerContext.reserveName('i');
-        const existingCheck = existing.map(__assignType(v => `${i} === ${v}`, ['v', '', 'P"2!"/"'])).join(' || ') || 'false';
+        const i = state.compilerContext.reserveName("i");
+        const existingCheck = existing.map(__assignType(v => `${i} === ${v}`, ['v', '', 'P"2!"/"'])).join(" || ") || "false";
         const signatureLines = [];
         sortSignatures(signatures);
         for (const signature of signatures) {
@@ -1160,11 +1228,11 @@ function serializeObjectLiteral(type, state) {
         for (const ${i} in ${state.accessor}) {
             if (!hasProperty(${state.accessor}, ${i})) continue;
             if (${existingCheck}) continue;
-            if (false) {} ${signatureLines.join(' ')}
+            if (false) {} ${signatureLines.join(" ")}
         }
         `);
     }
-    let createObject = '{}';
+    let createObject = "{}";
     const postLines = [];
     if (state.isDeserialization && type.kind === type_js_1.ReflectionKind.class) {
         const classType = state.compilerContext.reserveConst(type.classType);
@@ -1172,33 +1240,38 @@ function serializeObjectLiteral(type, state) {
         if (clazz.disableConstructor) {
             createObject = `Object.create(${classType}.prototype);`;
             for (const property of clazz.getProperties()) {
-                if (property.property.kind !== type_js_1.ReflectionKind.property || property.property.default === undefined)
+                if (property.property.kind !== type_js_1.ReflectionKind.property ||
+                    property.property.default === undefined) {
                     continue;
+                }
                 const defaultFn = state.compilerContext.reserveConst(property.property.default);
                 createObject += `\n${v}.${(0, type_js_1.memberNameToString)(property.name)} = ${defaultFn}.apply(${v});`;
             }
         }
         else {
-            createObject = `new ${classType}(${constructorArguments.join(', ')})`;
+            createObject = `new ${classType}(${constructorArguments.join(", ")})`;
             preLines.push(`const oldCheck = typeSettings.unpopulatedCheck; typeSettings.unpopulatedCheck = UnpopulatedCheck.None;`);
             postLines.push(`typeSettings.unpopulatedCheck = oldCheck;`);
         }
     }
     state.addCode(`
         if ('object' !== typeof ${state.accessor}) ${state.throwCode(type)}
-        ${preLines.join('\n')}
+        ${preLines.join("\n")}
         let ${v} = ${createObject};
-        ${postLines.join('\n')}
-        ${lines.join('\n')}
+        ${postLines.join("\n")}
+        ${lines.join("\n")}
         ${state.setter} = ${v};
     `);
-    if (type_js_1.referenceAnnotation.hasAnnotations(type) && !state.isAnnotationHandled(type_js_1.referenceAnnotation)) {
+    if (type_js_1.referenceAnnotation.hasAnnotations(type) &&
+        !state.isAnnotationHandled(type_js_1.referenceAnnotation)) {
         state.annotationHandled(type_js_1.referenceAnnotation);
         state.setContext({ isObject: core_1.isObject, isReferenceInstance: reference_js_1.isReferenceInstance, isReferenceHydrated: reference_js_1.isReferenceHydrated });
         const reflection = reflection_js_1.ReflectionClass.from(type);
         //the primary key is serialised for unhydrated references
         //when in deserialization a referenced is passed as is
-        const keepReference = state.isDeserialization ? `if (isReferenceInstance(${state.accessor})) {${state.setter} = ${state.accessor};} else ` : '';
+        const keepReference = state.isDeserialization
+            ? `if (isReferenceInstance(${state.accessor})) {${state.setter} = ${state.accessor};} else `
+            : "";
         state.replaceTemplate(`
         ${keepReference} if (isReferenceInstance(${state.accessor}) && !isReferenceHydrated(${state.accessor})) {
             ${executeTemplates(state.fork(state.setter, new ContainerAccessor(state.accessor, JSON.stringify(reflection.getPrimary().getName()))), reflection.getPrimary().getType())}
@@ -1213,11 +1286,16 @@ function typeGuardEmbedded(type, state, embedded) {
     const properties = (0, type_js_1.resolveTypeMembers)(type).filter(type_js_1.isPropertyMemberType);
     if (properties.length) {
         for (const property of properties) {
-            if ((property.kind == type_js_1.ReflectionKind.property || property.kind === type_js_1.ReflectionKind.propertySignature) && !type_js_1.excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
+            if ((property.kind == type_js_1.ReflectionKind.property ||
+                property.kind === type_js_1.ReflectionKind.propertySignature) &&
+                !type_js_1.excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
                 //we pass 'data' as container, since type guards for TypeClass get their own function always and operate on `data` accessor.
                 const accessor = getEmbeddedAccessor(type, properties.length !== 1, state.accessor, state.registry.serializer, state.namingStrategy, property, embedded);
                 //note: withValidation('strict') fixes the test with current changes, but limits the use of Embedded (no new limitation added, but this made it obvious).
-                const propertyState = state.fork(state.setter, accessor).withValidation('strict').extendPath(String(property.name));
+                const propertyState = state
+                    .fork(state.setter, accessor)
+                    .withValidation("strict")
+                    .extendPath(String(property.name));
                 if ((0, type_js_1.hasEmbedded)(property.type)) {
                     state.addCode(executeTemplates(propertyState, property.type));
                 }
@@ -1237,10 +1315,10 @@ typeGuardEmbedded.__type = [() => __ΩTypeClass, () => __ΩTypeObjectLiteral, 't
 function typeGuardObjectLiteral(type, state) {
     //this function is used for both, serialize and deserialization. When serializing the type of `type` is strictly correct, so checking embedded fields would lead to wrong results.
     //this embedded check is only necessary when checking types in deserializing.
-    if (state.target === 'deserialize') {
+    if (state.target === "deserialize") {
         const embedded = type_js_1.embeddedAnnotation.getFirst(type);
         if (embedded) {
-            state.addCode('//typeguard for embedded');
+            state.addCode("//typeguard for embedded");
             typeGuardEmbedded(type, state, embedded);
             return;
         }
@@ -1254,26 +1332,41 @@ function typeGuardObjectLiteral(type, state) {
         if (member.kind === type_js_1.ReflectionKind.indexSignature) {
             signatures.push(member);
         }
-        else if (member.kind === type_js_1.ReflectionKind.propertySignature || member.kind === type_js_1.ReflectionKind.property || member.kind === type_js_1.ReflectionKind.methodSignature || member.kind === type_js_1.ReflectionKind.method) {
-            if (member.kind === type_js_1.ReflectionKind.property || member.kind === type_js_1.ReflectionKind.method) {
+        else if (member.kind === type_js_1.ReflectionKind.propertySignature ||
+            member.kind === type_js_1.ReflectionKind.property ||
+            member.kind === type_js_1.ReflectionKind.methodSignature ||
+            member.kind === type_js_1.ReflectionKind.method) {
+            if (member.kind === type_js_1.ReflectionKind.property ||
+                member.kind === type_js_1.ReflectionKind.method) {
                 if (member.abstract || member.static)
                     continue;
             }
-            if (member.name === 'constructor')
+            if (member.name === "constructor")
                 continue;
-            if (state.target === 'deserialize' && (member.kind === type_js_1.ReflectionKind.method || member.kind === type_js_1.ReflectionKind.methodSignature)) {
+            if (state.target === "deserialize" &&
+                (member.kind === type_js_1.ReflectionKind.method ||
+                    member.kind === type_js_1.ReflectionKind.methodSignature)) {
                 // methods can not be part of serialized data, so we skip them.
                 continue;
             }
-            const readName = member.kind === type_js_1.ReflectionKind.methodSignature || member.kind === type_js_1.ReflectionKind.method
+            const readName = member.kind === type_js_1.ReflectionKind.methodSignature ||
+                member.kind === type_js_1.ReflectionKind.method
                 ? getNameExpression(member.name, state)
-                : getNameExpression(state.isDeserialization ? state.namingStrategy.getPropertyName(member, state.registry.serializer.name) : (0, type_js_1.memberNameToString)(member.name), state);
-            const checkValid = state.compilerContext.reserveName('check');
+                : getNameExpression(state.isDeserialization
+                    ? state.namingStrategy.getPropertyName(member, state.registry.serializer.name)
+                    : (0, type_js_1.memberNameToString)(member.name), state);
+            const checkValid = state.compilerContext.reserveName("check");
             const propertyAccessor = new ContainerAccessor(state.accessor, readName);
-            const propertyState = state.fork(checkValid, propertyAccessor).extendPath(String(member.name));
-            const isEmbedded = member.kind === type_js_1.ReflectionKind.property || member.kind === type_js_1.ReflectionKind.propertySignature
-                ? (0, type_js_1.hasEmbedded)(member.type) : undefined;
-            if (isEmbedded && (member.kind === type_js_1.ReflectionKind.property || member.kind === type_js_1.ReflectionKind.propertySignature)) {
+            const propertyState = state
+                .fork(checkValid, propertyAccessor)
+                .extendPath(String(member.name));
+            const isEmbedded = member.kind === type_js_1.ReflectionKind.property ||
+                member.kind === type_js_1.ReflectionKind.propertySignature
+                ? (0, type_js_1.hasEmbedded)(member.type)
+                : undefined;
+            if (isEmbedded &&
+                (member.kind === type_js_1.ReflectionKind.property ||
+                    member.kind === type_js_1.ReflectionKind.propertySignature)) {
                 const template = executeTemplates(propertyState, member.type);
                 if (!template)
                     throw new Error(`No template found for ${member.type.kind}`);
@@ -1281,16 +1374,25 @@ function typeGuardObjectLiteral(type, state) {
             }
             else {
                 let optional = (0, type_js_1.isOptional)(member);
-                if (state.validation === 'loose' && member.kind === type_js_1.ReflectionKind.property && member.default) {
+                if (state.validation === "loose" &&
+                    member.kind === type_js_1.ReflectionKind.property &&
+                    member.default) {
                     optional = true;
                 }
                 let optionalCheck = optional
-                    ? `${propertyAccessor} !== undefined && ` + (!(0, type_js_1.isNullable)(member) ? `${propertyAccessor} !== null && ` : '')
-                    : '';
+                    ? `${propertyAccessor} !== undefined && ` +
+                        (!(0, type_js_1.isNullable)(member) ? `${propertyAccessor} !== null && ` : "")
+                    : "";
                 existing.push(readName);
                 state.setContext({ unpopulatedSymbol: core_js_1.unpopulatedSymbol });
-                const forType = member.kind === type_js_1.ReflectionKind.methodSignature || member.kind === type_js_1.ReflectionKind.method
-                    ? { kind: type_js_1.ReflectionKind.function, name: (0, type_js_1.memberNameToString)(member.name), return: member.return, parameters: member.parameters }
+                const forType = member.kind === type_js_1.ReflectionKind.methodSignature ||
+                    member.kind === type_js_1.ReflectionKind.method
+                    ? {
+                        kind: type_js_1.ReflectionKind.function,
+                        name: (0, type_js_1.memberNameToString)(member.name),
+                        return: member.return,
+                        parameters: member.parameters
+                    }
                     : member.type;
                 const checkTemplate = executeTemplates(propertyState, forType).trim();
                 lines.push(`
@@ -1303,13 +1405,15 @@ function typeGuardObjectLiteral(type, state) {
         }
     }
     if (signatures.length) {
-        const i = state.compilerContext.reserveName('i');
-        const existingCheck = existing.map(__assignType(v => `${i} === ${v}`, ['v', '', 'P"2!"/"'])).join(' || ') || 'false';
+        const i = state.compilerContext.reserveName("i");
+        const existingCheck = existing.map(__assignType(v => `${i} === ${v}`, ['v', '', 'P"2!"/"'])).join(" || ") || "false";
         const signatureLines = [];
         sortSignatures(signatures);
         for (const signature of signatures) {
-            const checkValid = state.compilerContext.reserveName('check');
-            const checkTemplate = executeTemplates(state.fork(checkValid, new ContainerAccessor(state.accessor, i)).extendPath(new RuntimeCode(i)), signature.type).trim();
+            const checkValid = state.compilerContext.reserveName("check");
+            const checkTemplate = executeTemplates(state
+                .fork(checkValid, new ContainerAccessor(state.accessor, i))
+                .extendPath(new RuntimeCode(i)), signature.type).trim();
             signatureLines.push(`else if (${getIndexCheck(state.compilerContext, i, signature.index)}) {
                 let ${checkValid} = false;
                 ${checkTemplate || `// no template found for signature.type.kind=${signature.type.kind}`}
@@ -1325,7 +1429,7 @@ function typeGuardObjectLiteral(type, state) {
             if (${existingCheck}) continue;
             if (!${state.setter}) {
                 break;
-            } ${signatureLines.join(' ')}
+            } ${signatureLines.join(" ")}
             else {
                 ${state.setter} = false;
                 break;
@@ -1333,12 +1437,12 @@ function typeGuardObjectLiteral(type, state) {
         }
         `);
     }
-    let customValidatorCall = '';
+    let customValidatorCall = "";
     if (type.kind === type_js_1.ReflectionKind.class) {
         const reflection = reflection_js_1.ReflectionClass.from(type.classType);
         if (reflection.validationMethod) {
-            const resVar = state.setVariable('validationResult');
-            const method = state.setVariable('method', reflection.validationMethod);
+            const resVar = state.setVariable("validationResult");
+            const method = state.setVariable("method", reflection.validationMethod);
             customValidatorCall = `
             if (${state.setter}) {
                 ${resVar} = ${state.accessor}[${method}]();
@@ -1351,10 +1455,10 @@ function typeGuardObjectLiteral(type, state) {
     state.addCodeForSetter(`
         ${state.setter} = true;
         if (${state.accessor} && isObjectLiteral(${state.accessor})) {
-            ${lines.join('\n')}
+            ${lines.join("\n")}
             ${customValidatorCall}
         } else {
-            if (${state.isValidation()}) ${state.assignValidationError('type', 'Not an object')}
+            if (${state.isValidation()}) ${state.assignValidationError("type", "Not an object")}
             ${state.setter} = false;
         }
     `);
@@ -1362,10 +1466,10 @@ function typeGuardObjectLiteral(type, state) {
 typeGuardObjectLiteral.__type = [() => __ΩTypeObjectLiteral, () => __ΩTypeClass, 'type', () => TemplateState, 'state', 'typeGuardObjectLiteral', 'PPn!n"J2#P7$2%"/&'];
 function serializeArray(type, state) {
     state.setContext({ isIterable: core_1.isIterable });
-    const v = state.compilerContext.reserveName('v');
-    const tempIterable = state.compilerContext.reserveName('tempIterable');
-    const i = state.compilerContext.reserveName('i');
-    const item = state.compilerContext.reserveName('item');
+    const v = state.compilerContext.reserveName("v");
+    const tempIterable = state.compilerContext.reserveName("tempIterable");
+    const i = state.compilerContext.reserveName("i");
+    const item = state.compilerContext.reserveName("item");
     //we just use `a.length` to check whether its array-like, because Array.isArray() is way too slow.
     state.addCodeForSetter(`
          if (isIterable(${state.accessor})) {
@@ -1384,9 +1488,9 @@ function serializeArray(type, state) {
 serializeArray.__type = [() => __ΩTypeArray, 'type', () => TemplateState, 'state', 'serializeArray', 'Pn!2"P7#2$"/%'];
 function typeGuardArray(elementType, state) {
     state.setContext({ isIterable: core_1.isIterable, iterableSize: core_1.iterableSize });
-    const v = state.compilerContext.reserveName('v');
-    const i = state.compilerContext.reserveName('i');
-    const item = state.compilerContext.reserveName('item');
+    const v = state.compilerContext.reserveName("v");
+    const i = state.compilerContext.reserveName("i");
+    const item = state.compilerContext.reserveName("item");
     //we just use `a.length` to check whether its array-like, because Array.isArray() is way too slow.
     state.addCodeForSetter(`
          let ${v} = false;
@@ -1398,7 +1502,7 @@ function typeGuardArray(elementType, state) {
                 ${i}++;
             }
          } else if (${state.isValidation()}) {
-            ${state.assignValidationError('type', 'Not an array')}
+            ${state.assignValidationError("type", "Not an array")}
          }
          ${state.setter} = ${v};
     `);
@@ -1411,8 +1515,8 @@ function serializeTuple(type, state) {
     //[number, ...string, number, string], medium
     const lines = [];
     let restEndOffset = 0;
-    const _ = state.compilerContext.reserveName('_');
-    const i = state.compilerContext.reserveName('i');
+    const _ = state.compilerContext.reserveName("_");
+    const i = state.compilerContext.reserveName("i");
     for (let i = 0; i < type.types.length; i++) {
         if (type.types[i].type.kind === type_js_1.ReflectionKind.rest) {
             restEndOffset = type.types.length - (i + 1);
@@ -1450,7 +1554,7 @@ function serializeTuple(type, state) {
         let ${_};
         let ${i} = 0;
         ${state.setter} = [];
-        ${lines.join('\n')}
+        ${lines.join("\n")}
     `);
 }
 serializeTuple.__type = [() => __ΩTypeTuple, 'type', () => TemplateState, 'state', 'serializeTuple', 'Pn!2"P7#2$"/%'];
@@ -1461,8 +1565,8 @@ function typeGuardTuple(type, state) {
     //[number, ...string, number, string], medium
     const lines = [];
     let restEndOffset = 0;
-    const v = state.compilerContext.reserveName('v');
-    const i = state.compilerContext.reserveName('i');
+    const v = state.compilerContext.reserveName("v");
+    const i = state.compilerContext.reserveName("i");
     for (let i = 0; i < type.types.length; i++) {
         if (type.types[i].type.kind === type_js_1.ReflectionKind.rest) {
             restEndOffset = type.types.length - (i + 1);
@@ -1481,7 +1585,9 @@ function typeGuardTuple(type, state) {
             `);
         }
         else {
-            const optionalCheck = member.optional ? `${state.accessor}[${i}] !== undefined` : 'true';
+            const optionalCheck = member.optional
+                ? `${state.accessor}[${i}] !== undefined`
+                : "true";
             lines.push(`
             if (${v} && ${optionalCheck}) {
                 ${executeTemplates(state.fork(v, new ContainerAccessor(state.accessor, i)).extendPath(member.name || new RuntimeCode(i)), member.type)}
@@ -1495,10 +1601,10 @@ function typeGuardTuple(type, state) {
         if (isArray(${state.accessor})) {
             let ${v} = true;
             let ${i} = 0;
-            ${lines.join('\n')}
+            ${lines.join("\n")}
             ${state.setter} = ${v};
         } else {
-            if (${state.isValidation()}) ${state.assignValidationError('type', 'Not an array')}
+            if (${state.isValidation()}) ${state.assignValidationError("type", "Not an array")}
             ${state.setter} = false;
         }
     `);
@@ -1509,9 +1615,10 @@ function getSetTypeToArray(type) {
     if (jit.forwardSetToArray)
         return jit.forwardSetToArray;
     const value = type.arguments?.[0] || { kind: type_js_1.ReflectionKind.any };
-    return jit.forwardSetToArray = {
-        kind: type_js_1.ReflectionKind.array, type: value,
-    };
+    return (jit.forwardSetToArray = {
+        kind: type_js_1.ReflectionKind.array,
+        type: value
+    });
 }
 getSetTypeToArray.__type = [() => __ΩTypeClass, 'type', () => __ΩTypeArray, 'getSetTypeToArray', 'Pn!2"n#/$'];
 function getMapTypeToArray(type) {
@@ -1521,12 +1628,14 @@ function getMapTypeToArray(type) {
     const index = type.arguments?.[0] || { kind: type_js_1.ReflectionKind.any };
     const value = type.arguments?.[1] || { kind: type_js_1.ReflectionKind.any };
     jit.forwardMapToArray = {
-        kind: type_js_1.ReflectionKind.array, type: (0, type_js_1.copyAndSetParent)({
-            kind: type_js_1.ReflectionKind.tuple, types: [
-                { kind: type_js_1.ReflectionKind.tupleMember, name: 'key', type: index },
-                { kind: type_js_1.ReflectionKind.tupleMember, name: 'value', type: value },
-            ],
-        }),
+        kind: type_js_1.ReflectionKind.array,
+        type: (0, type_js_1.copyAndSetParent)({
+            kind: type_js_1.ReflectionKind.tuple,
+            types: [
+                { kind: type_js_1.ReflectionKind.tupleMember, name: "key", type: index },
+                { kind: type_js_1.ReflectionKind.tupleMember, name: "value", type: value }
+            ]
+        })
     };
     return jit.forwardMapToArray;
 }
@@ -1537,9 +1646,10 @@ function getNTypeToArray(type, n) {
     if (jit[name])
         return jit[name];
     const value = type.arguments?.[n] || { kind: type_js_1.ReflectionKind.any };
-    return jit[name] = {
-        kind: type_js_1.ReflectionKind.array, type: value,
-    };
+    return (jit[name] = {
+        kind: type_js_1.ReflectionKind.array,
+        type: value
+    });
 }
 getNTypeToArray.__type = [() => __ΩTypeClass, 'type', 'n', () => __ΩTypeArray, 'getNTypeToArray', 'Pn!2"\'2#n$/%'];
 function executeTypeArgumentAsArray(type, typeIndex, state) {
@@ -1556,9 +1666,11 @@ function forwardMapToArray(type, state) {
 forwardMapToArray.__type = [() => __ΩTypeClass, 'type', () => TemplateState, 'state', 'forwardMapToArray', 'Pn!2"P7#2$"/%'];
 function serializePropertyOrParameter(type, state) {
     if ((0, type_js_1.isOptional)(type)) {
-        const nullCheck = (0, type_js_1.isNullable)(type) ? `if (${state.accessor} === null) {
+        const nullCheck = (0, type_js_1.isNullable)(type)
+            ? `if (${state.accessor} === null) {
                 ${executeTemplates(state.fork(), { kind: type_js_1.ReflectionKind.null })}
-            } else ` : '';
+            } else `
+            : "";
         state.addCode(`
             ${nullCheck}
             if (${state.accessor} === undefined || ${state.accessor} === null) {
@@ -1577,7 +1689,7 @@ function validatePropertyOrParameter(type, state) {
     const hasDefault = (0, type_js_1.hasDefaultValue)(type);
     state.addCode(`
         if (${state.accessor} === undefined) {
-            if (${!optional && !hasDefault && state.isValidation()}) ${state.assignValidationError('type', 'No value given')}
+            if (${!optional && !hasDefault && state.isValidation()}) ${state.assignValidationError("type", "No value given")}
         } else {
             ${executeTemplates(state.fork(), type.type)}
         }
@@ -1618,20 +1730,25 @@ function handleUnion(type, state) {
     const lines = [];
     //since there are type guards that require to access the container (for example Embedded), its necessary to pass the container (if available) to the type guard function
     //and change accessor to point to `data` (argument of the type guard) + index name.
-    const property = state.accessor instanceof ContainerAccessor ? `${state.accessor.property}` : 'undefined';
+    const property = state.accessor instanceof ContainerAccessor
+        ? `${state.accessor.property}`
+        : "undefined";
     const args = `${state.accessor instanceof ContainerAccessor ? state.accessor.container : state.accessor}, state, ${collapsePath(state.path)}, ${property}`;
-    const accessor = state.accessor instanceof ContainerAccessor ? new ContainerAccessor('data', 'property') : 'data';
+    const accessor = state.accessor instanceof ContainerAccessor
+        ? new ContainerAccessor("data", "property")
+        : "data";
     const typeGuards = state.registry.serializer.typeGuards.getSortedTemplateRegistries();
     for (const [specificality, typeGuard] of typeGuards) {
         //loosely type guards are only used for deserialization
-        if (state.target === 'serialize' && specificality < 1)
+        if (state.target === "serialize" && specificality < 1)
             continue;
         //when validation=true and not all specificalities are included, we only use 1, which is used for strict validation()/is().
-        if (state.validation === 'strict' && specificality !== 1)
+        if (state.validation === "strict" && specificality !== 1)
             continue;
-        const validation = !state.validation ? 'loose' : state.validation;
+        const validation = !state.validation ? "loose" : state.validation;
         for (const t of type.types) {
-            const fn = createTypeGuardFunction(t, state.fork(undefined, accessor)
+            const fn = createTypeGuardFunction(t, state
+                .fork(undefined, accessor)
                 .forRegistry(typeGuard)
                 //if validation is not set, we are in deserialize mode, so we need to activate validation
                 //for this state.
@@ -1639,31 +1756,35 @@ function handleUnion(type, state) {
                 .includeAllSpecificalities(state.registry.serializer.typeGuards), undefined, false);
             if (!fn)
                 continue;
-            const guard = state.setVariable('guard_' + type_js_1.ReflectionKind[t.kind], fn);
-            const looseCheck = specificality <= 0 ? `state.loosely !== false && ` : '';
-            const action = state.isValidation() ? `${state.setter} = true;` : executeTemplates(state.fullFork(), t);
+            const guard = state.setVariable("guard_" + type_js_1.ReflectionKind[t.kind], fn);
+            const looseCheck = specificality <= 0 ? `state.loosely !== false && ` : "";
+            const action = state.isValidation()
+                ? `${state.setter} = true;`
+                : executeTemplates(state.fullFork(), t);
             lines.push(`else if (${looseCheck}${guard}(${args})) {
                 //type = ${type_js_1.ReflectionKind[t.kind]}, specificality=${specificality}
                 ${action}
             }`);
         }
     }
-    const handleErrors = state.setter ? `
+    const handleErrors = state.setter
+        ? `
         if (state.errors) {
             ${state.setter} = false;
             state.errors = oldErrors;
         }
-    ` : '';
+    `
+        : "";
     state.addCodeForSetter(`
         {
             const oldErrors = state.errors;
             if (state.errors) state.errors = [];
 
             //type guard for union
-            if (false) {} ${lines.join(' ')}
+            if (false) {} ${lines.join(" ")}
             else {
                 ${handleErrors}
-                ${state.assignValidationError('type', 'No valid union member found. Valid: ' + (0, type_js_1.stringifyResolvedType)(type))}
+                ${state.assignValidationError("type", "No valid union member found. Valid: " + (0, type_js_1.stringifyResolvedType)(type))}
             }
             state.errors = oldErrors;
         }
@@ -1672,12 +1793,12 @@ function handleUnion(type, state) {
 handleUnion.__type = [() => __ΩTypeUnion, 'type', () => TemplateState, 'state', 'handleUnion', 'Pn!2"P7#2$"/%'];
 function getNameExpression(name, state) {
     if (undefined === name)
-        return 'undefined';
-    if ('string' === typeof name || 'number' === typeof name)
+        return "undefined";
+    if ("string" === typeof name || "number" === typeof name)
         return JSON.stringify(name);
     if ((0, type_js_1.isType)(name))
         return JSON.stringify((0, type_js_1.memberNameToString)(name));
-    return state.compilerContext.reserveConst(name, 'symbolName');
+    return state.compilerContext.reserveConst(name, "symbolName");
 }
 getNameExpression.__type = ['name', () => TemplateState, 'state', 'getNameExpression', 'PP&\'+-J2!P7"2#&/$'];
 class TypeGuardRegistry {
@@ -1712,7 +1833,7 @@ class TypeGuardRegistry {
     getRegistry(specificality) {
         var _c;
         this.sorted = undefined;
-        return (_c = this.registry)[specificality] || (_c[specificality] = new TemplateRegistry(this.serializer));
+        return ((_c = this.registry)[specificality] || (_c[specificality] = new TemplateRegistry(this.serializer)));
     }
     /**
      * Registers a new template and replaces all existing (added via register,prepend,append).
@@ -1755,7 +1876,7 @@ TypeGuardRegistry.__type = [() => TemplateRegistry, 'registry', function () { re
  * JSONSerializer has the same but for JSON data structures.
  */
 class Serializer {
-    constructor(name = 'json') {
+    constructor(name = "json") {
         this.name = name;
         this.serializeRegistry = new TemplateRegistry(this);
         this.deserializeRegistry = new TemplateRegistry(this);
@@ -1768,8 +1889,7 @@ class Serializer {
     setExplicitUndefined(type, state) {
         return true;
     }
-    registerValidators() {
-    }
+    registerValidators() { }
     clear() {
         this.serializeRegistry.clear();
         this.deserializeRegistry.clear();
@@ -1794,8 +1914,8 @@ class Serializer {
         this.serializeRegistry.register(type_js_1.ReflectionKind.tuple, serializeTuple);
         this.deserializeRegistry.register(type_js_1.ReflectionKind.union, handleUnion);
         this.serializeRegistry.register(type_js_1.ReflectionKind.union, handleUnion);
-        this.deserializeRegistry.register(type_js_1.ReflectionKind.literal, __assignType((type, state) => state.addSetter(state.setVariable('v', type.literal)), ['type', 'state', '', 'P"2!"2""/#']));
-        this.serializeRegistry.register(type_js_1.ReflectionKind.literal, __assignType((type, state) => state.addSetter(state.setVariable('v', type.literal)), ['type', 'state', '', 'P"2!"2""/#']));
+        this.deserializeRegistry.register(type_js_1.ReflectionKind.literal, __assignType((type, state) => state.addSetter(state.setVariable("v", type.literal)), ['type', 'state', '', 'P"2!"2""/#']));
+        this.serializeRegistry.register(type_js_1.ReflectionKind.literal, __assignType((type, state) => state.addSetter(state.setVariable("v", type.literal)), ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.register(type_js_1.ReflectionKind.undefined, __assignType((type, state) => state.addSetter(`null`), ['type', 'state', '', 'P"2!"2""/#']));
         this.deserializeRegistry.register(type_js_1.ReflectionKind.undefined, __assignType((type, state) => state.addSetter(`undefined`), ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.register(type_js_1.ReflectionKind.null, __assignType((type, state) => state.addSetter(`null`), ['type', 'state', '', 'P"2!"2""/#']));
@@ -1818,13 +1938,13 @@ class Serializer {
             const v = state.accessor;
             const check = `${v}.length === 36 && ${v}[23] === '-' && ${v}[18] === '-' && ${v}[13] === '-' && ${v}[8] === '-'`;
             state.addCode(`
-                if (!(${check})) ${state.throwCode(type, JSON.stringify('Not a UUID'))}
+                if (!(${check})) ${state.throwCode(type, JSON.stringify("Not a UUID"))}
             `);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.deserializeRegistry.addDecorator(type_js_1.isMongoIdType, __assignType((type, state) => {
             const check = `${state.accessor}.length === 24 || ${state.accessor}.length === 0`;
             state.addCode(`
-                if (!(${check})) ${state.throwCode(type, JSON.stringify('Not a MongoId (ObjectId)'))}
+                if (!(${check})) ${state.throwCode(type, JSON.stringify("Not a MongoId (ObjectId)"))}
             `);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.register(type_js_1.ReflectionKind.templateLiteral, __assignType((type, state) => state.addSetter(state.accessor), ['type', 'state', '', 'P"2!"2""/#']));
@@ -1857,11 +1977,11 @@ class Serializer {
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.register(type_js_1.ReflectionKind.enum, __assignType((type, state) => state.addSetter(state.accessor), ['type', 'state', '', 'P"2!"2""/#']));
         this.deserializeRegistry.register(type_js_1.ReflectionKind.enum, __assignType((type, state) => {
-            const valuesVar = state.setVariable('values', type.values);
-            const matcher = state.setVariable('enumMatcher', (0, type_js_1.getEnumValueIndexMatcher)(type));
+            const valuesVar = state.setVariable("values", type.values);
+            const matcher = state.setVariable("enumMatcher", (0, type_js_1.getEnumValueIndexMatcher)(type));
             state.addCodeForSetter(`
                 ${state.setter} = ${valuesVar}[${matcher}(${state.accessor})];
-                if (${valuesVar}.indexOf(${state.setter}) === -1) ${state.throwCode('enum', `'No valid value of ' + ${valuesVar}.join(', ')`)}
+                if (${valuesVar}.indexOf(${state.setter}) === -1) ${state.throwCode("enum", `'No valid value of ' + ${valuesVar}.join(', ')`)}
             `);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.register(type_js_1.ReflectionKind.regexp, __assignType((type, state) => state.addSetter(`${state.accessor}.toString()`), ['type', 'state', '', 'P"2!"2""/#']));
@@ -1876,7 +1996,7 @@ class Serializer {
                     : new RegExp(${state.accessor})
                 : ${state.accessor}
             } catch (error) {
-                ${state.throwCode('regexp', 'error')}
+                ${state.throwCode("regexp", "error")}
             }
             `);
         }, ['type', 'state', '', 'P"2!"2""/#']));
@@ -1929,7 +2049,7 @@ class Serializer {
                 return;
             }
             state.setContext({ base64ToTypedArray: core_js_1.base64ToTypedArray });
-            const typedArrayVar = state.setVariable('classType', type.classType);
+            const typedArrayVar = state.setVariable("classType", type.classType);
             state.addSetter(`${state.accessor} instanceof ${typedArrayVar} ? ${state.accessor} : base64ToTypedArray(${state.accessor}, ${typedArrayVar})`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.registerClass(Set, forwardSetToArray);
@@ -1942,20 +2062,31 @@ class Serializer {
             forwardMapToArray(type, state);
             state.addSetter(`new Map(${state.accessor})`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.deserializeRegistry.addDecorator(__assignType(type => (0, type_js_1.isReferenceType)(type) || (0, type_js_1.isBackReferenceType)(type) || (type.parent !== undefined && (0, type_js_1.isBackReferenceType)(type.parent)), ['type', '', 'P"2!"/"']), __assignType((type, state) => {
-            if (type.kind !== type_js_1.ReflectionKind.class && type.kind !== type_js_1.ReflectionKind.objectLiteral)
+        this.deserializeRegistry.addDecorator(__assignType(type => (0, type_js_1.isReferenceType)(type) ||
+            (0, type_js_1.isBackReferenceType)(type) ||
+            (type.parent !== undefined && (0, type_js_1.isBackReferenceType)(type.parent)), ['type', '', 'P"2!"/"']), __assignType((type, state) => {
+            if (type.kind !== type_js_1.ReflectionKind.class &&
+                type.kind !== type_js_1.ReflectionKind.objectLiteral)
                 return;
             state.annotationHandled(type_js_1.referenceAnnotation);
-            state.setContext({ isObject: core_1.isObject, createReference: reference_js_1.createReference, isReferenceHydrated: reference_js_1.isReferenceHydrated, isReferenceInstance: reference_js_1.isReferenceInstance, getObjectKeysSize: core_1.getObjectKeysSize });
+            state.setContext({
+                isObject: core_1.isObject,
+                createReference: reference_js_1.createReference,
+                isReferenceHydrated: reference_js_1.isReferenceHydrated,
+                isReferenceInstance: reference_js_1.isReferenceInstance,
+                getObjectKeysSize: core_1.getObjectKeysSize
+            });
             const reflection = reflection_js_1.ReflectionClass.from(type);
-            const referenceClassTypeVar = state.setVariable('referenceClassType', type.kind === type_js_1.ReflectionKind.class ? type.classType : Object);
+            const referenceClassTypeVar = state.setVariable("referenceClassType", type.kind === type_js_1.ReflectionKind.class ? type.classType : Object);
             // when an object with primary key is given e.g. {id: 1} we treat it as
             // reference and assign an instance of Reference to the property.
-            const l = [`${reflection.getPrimaries().length} > 0 && getObjectKeysSize(${state.accessor}) === ${reflection.getPrimaries().length}`];
+            const l = [
+                `${reflection.getPrimaries().length} > 0 && getObjectKeysSize(${state.accessor}) === ${reflection.getPrimaries().length}`
+            ];
             for (const pk of reflection.getPrimaries()) {
                 l.push(`${JSON.stringify(pk.name)} in ${state.accessor}`);
             }
-            const checkIsPrimaryKeyOnly = l.join(' && ');
+            const checkIsPrimaryKeyOnly = l.join(" && ");
             // in deserialization a reference is created when only the primary key is provided (no object given)
             state.replaceTemplate(`
                     if (isReferenceInstance(${state.accessor})) {
@@ -1966,7 +2097,7 @@ class Serializer {
                         ${state.template}
                     } else {
                         let pk;
-                        ${executeTemplates(state.fork('pk').extendPath(String(reflection.getPrimary().getName())), reflection.getPrimary().getType())}
+                        ${executeTemplates(state.fork("pk").extendPath(String(reflection.getPrimary().getName())), reflection.getPrimary().getType())}
                         ${state.setter} = createReference(${referenceClassTypeVar}, {${JSON.stringify(reflection.getPrimary().getName())}: pk});
                     }
                 `);
@@ -1978,10 +2109,10 @@ class Serializer {
             if (type.parent && type.parent.kind === type_js_1.ReflectionKind.union) {
                 return;
             }
-            state.addSetter('true');
+            state.addSetter("true");
         }, ['type', 'state', '', 'P"2!"2""/#']));
         //if nothing else matches in a union, any matches anything
-        this.typeGuards.register(20, type_js_1.ReflectionKind.any, __assignType((type, state) => state.addSetter('true'), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(20, type_js_1.ReflectionKind.any, __assignType((type, state) => state.addSetter("true"), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, type_js_1.ReflectionKind.object, __assignType((type, state) => {
             state.setContext({ isObject: core_1.isObject });
             state.addSetter(`isObject(${state.accessor})`);
@@ -1992,25 +2123,27 @@ class Serializer {
         // //and only if the property (where the embedded is placed) has no strict type guard do we look for other fields as well.
         // this.typeGuards.register(2, ReflectionKind.class, (type, state) => typeCheckClassOrObjectLiteral(type, state, true));
         this.typeGuards.register(1, type_js_1.ReflectionKind.string, __assignType((type, state) => {
-            state.addSetterAndReportErrorIfInvalid('type', 'Not a string', `'string' === typeof ${state.accessor}`);
+            state.addSetterAndReportErrorIfInvalid("type", "Not a string", `'string' === typeof ${state.accessor}`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.getRegistry(1).addDecorator(type_js_1.isUUIDType, __assignType((type, state) => {
             const v = state.originalAccessor;
             const check = `${state.setter} && ${v}.length === 36 && ${v}[23] === '-' && ${v}[18] === '-' && ${v}[13] === '-' && ${v}[8] === '-'`;
-            state.addSetterAndReportErrorIfInvalid('type', 'Not a UUID', check);
+            state.addSetterAndReportErrorIfInvalid("type", "Not a UUID", check);
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.getRegistry(1).addDecorator(type_js_1.isMongoIdType, __assignType((type, state) => {
-            state.addSetterAndReportErrorIfInvalid('type', 'Not a MongoId (ObjectId)', `${state.setter} && (${state.originalAccessor}.length === 24 || ${state.originalAccessor}.length === 0)`);
+        this.typeGuards
+            .getRegistry(1)
+            .addDecorator(type_js_1.isMongoIdType, __assignType((type, state) => {
+            state.addSetterAndReportErrorIfInvalid("type", "Not a MongoId (ObjectId)", `${state.setter} && (${state.originalAccessor}.length === 24 || ${state.originalAccessor}.length === 0)`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(50, type_js_1.ReflectionKind.string, __assignType((type, state) => state.addSetter(`${state.accessor} !== undefined && ${state.accessor} !== null`), ['type', 'state', '', 'P"2!"2""/#'])); //at the end, everything can be converted to string
         this.typeGuards.register(1, type_js_1.ReflectionKind.templateLiteral, __assignType((type, state) => {
             state.setContext({ extendTemplateLiteral: extends_js_1.extendTemplateLiteral });
-            const typeVar = state.setVariable('type', type);
-            state.addSetterAndReportErrorIfInvalid('type', 'Invalid literal', `'string' === typeof ${state.accessor} && extendTemplateLiteral({kind: ${type_js_1.ReflectionKind.literal}, literal: ${state.accessor}}, ${typeVar})`);
+            const typeVar = state.setVariable("type", type);
+            state.addSetterAndReportErrorIfInvalid("type", "Invalid literal", `'string' === typeof ${state.accessor} && extendTemplateLiteral({kind: ${type_js_1.ReflectionKind.literal}, literal: ${state.accessor}}, ${typeVar})`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, type_js_1.ReflectionKind.undefined, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not undefined', `'undefined' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(1, type_js_1.ReflectionKind.undefined, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not undefined", `'undefined' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(2, type_js_1.ReflectionKind.undefined, __assignType((type, state) => state.addSetter(`null === ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, type_js_1.ReflectionKind.null, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not null', `null === ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(1, type_js_1.ReflectionKind.null, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not null", `null === ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(2, type_js_1.ReflectionKind.null, __assignType((type, state) => state.addSetter(`'undefined' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, type_js_1.ReflectionKind.propertySignature, validatePropertyOrParameter);
         this.typeGuards.register(1, type_js_1.ReflectionKind.property, validatePropertyOrParameter);
@@ -2024,7 +2157,9 @@ class Serializer {
             state.addSetter(`'string' === typeof ${state.accessor} && isNumeric(${state.accessor})`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, type_js_1.ReflectionKind.number, __assignType((type, state) => {
-            if (type.brand !== undefined && type.brand >= type_spec_1.TypeNumberBrand.integer && type.brand <= type_spec_1.TypeNumberBrand.uint32) {
+            if (type.brand !== undefined &&
+                type.brand >= type_spec_1.TypeNumberBrand.integer &&
+                type.brand <= type_spec_1.TypeNumberBrand.uint32) {
                 state.setContext({ isInteger: core_1.isInteger });
                 let check = `'number' === typeof ${state.accessor} && isInteger(${state.accessor})`;
                 if (type.brand === type_spec_1.TypeNumberBrand.uint8) {
@@ -2045,14 +2180,14 @@ class Serializer {
                 else if (type.brand === type_spec_1.TypeNumberBrand.int32) {
                     check += `&& ${state.accessor} <= 2147483647 && ${state.accessor} >= -2147483648`;
                 }
-                state.addSetterAndReportErrorIfInvalid('type', `Not a ${type.brand === undefined ? 'number' : type_spec_1.TypeNumberBrand[type.brand]}`, check);
+                state.addSetterAndReportErrorIfInvalid("type", `Not a ${type.brand === undefined ? "number" : type_spec_1.TypeNumberBrand[type.brand]}`, check);
             }
             else {
                 let check = `'number' === typeof ${state.accessor}`;
                 if (type.brand === type_spec_1.TypeNumberBrand.float32) {
                     check += `&& ${state.accessor} <= 3.40282347e+38 && ${state.accessor} >= -3.40282347e+38`;
                 }
-                state.addSetterAndReportErrorIfInvalid('type', `Not a ${type.brand === undefined ? 'number' : type_spec_1.TypeNumberBrand[type.brand]}`, check);
+                state.addSetterAndReportErrorIfInvalid("type", `Not a ${type.brand === undefined ? "number" : type_spec_1.TypeNumberBrand[type.brand]}`, check);
             }
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(2, type_js_1.ReflectionKind.bigint, __assignType((type, state) => {
@@ -2063,11 +2198,13 @@ class Serializer {
             state.setContext({ isNumeric: core_1.isNumeric });
             state.addSetter(`'string' === typeof ${state.accessor} && isNumeric(${state.accessor})`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, type_js_1.ReflectionKind.bigint, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a bigint', `'bigint' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, type_js_1.ReflectionKind.boolean, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a boolean', `'boolean' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(1, type_js_1.ReflectionKind.bigint, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not a bigint", `'bigint' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(1, type_js_1.ReflectionKind.boolean, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not a boolean", `'boolean' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(-0.9, type_js_1.ReflectionKind.boolean, __assignType((type, state) => {
             let handleNumeric = true;
-            if (type.parent && type.parent.kind === type_js_1.ReflectionKind.union && (type.parent.types.some(__assignType(v => v.kind === type_js_1.ReflectionKind.number || v.kind === type_js_1.ReflectionKind.bigint, ['v', '', 'P"2!"/"'])))) {
+            if (type.parent &&
+                type.parent.kind === type_js_1.ReflectionKind.union &&
+                type.parent.types.some(__assignType(v => v.kind === type_js_1.ReflectionKind.number || v.kind === type_js_1.ReflectionKind.bigint, ['v', '', 'P"2!"/"']))) {
                 handleNumeric = false;
             }
             if (handleNumeric) {
@@ -2079,26 +2216,32 @@ class Serializer {
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, type_js_1.ReflectionKind.promise, __assignType((type, state) => executeTemplates(state, type.type), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, type_js_1.ReflectionKind.enum, __assignType((type, state) => {
-            const matcher = state.setVariable('enumMatcher', (0, type_js_1.getEnumValueIndexMatcher)(type));
-            state.addSetterAndReportErrorIfInvalid('type', 'Invalid enum member', `${matcher}(${state.accessor}) >= 0`);
+            const matcher = state.setVariable("enumMatcher", (0, type_js_1.getEnumValueIndexMatcher)(type));
+            state.addSetterAndReportErrorIfInvalid("type", "Invalid enum member", `${matcher}(${state.accessor}) >= 0`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, type_js_1.ReflectionKind.array, __assignType((type, state) => typeGuardArray(type.type, state), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, type_js_1.ReflectionKind.tuple, typeGuardTuple);
         this.typeGuards.register(1, type_js_1.ReflectionKind.literal, __assignType((type, state) => {
-            state.addSetterAndReportErrorIfInvalid('type', 'Invalid literal', `${state.setVariable('v', type.literal)} === ${state.accessor}`);
+            state.addSetterAndReportErrorIfInvalid("type", "Invalid literal", `${state.setVariable("v", type.literal)} === ${state.accessor}`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(-0.5, type_js_1.ReflectionKind.literal, __assignType((type, state) => {
             //loosely only works for number/bigint/boolean, not for symbols/regexp/string
-            if (type.literal === null || type.literal === undefined || typeof type.literal === 'number' || typeof type.literal === 'bigint' || typeof type.literal === 'boolean') {
-                state.addSetter(`'string' === typeof ${state.accessor} && ${state.setVariable('v', String(type.literal))} === ${state.accessor}`);
+            if (type.literal === null ||
+                type.literal === undefined ||
+                typeof type.literal === "number" ||
+                typeof type.literal === "bigint" ||
+                typeof type.literal === "boolean") {
+                state.addSetter(`'string' === typeof ${state.accessor} && ${state.setVariable("v", String(type.literal))} === ${state.accessor}`);
             }
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, type_js_1.ReflectionKind.regexp, (__assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a RegExp', `${state.accessor} instanceof RegExp`), ['type', 'state', '', 'P"2!"2""/#'])));
-        this.typeGuards.register(2, type_js_1.ReflectionKind.regexp, (__assignType((type, state) => state.addSetter(`'string' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#'])));
-        this.typeGuards.register(0.5, type_js_1.ReflectionKind.regexp, (__assignType((type, state) => state.addSetter(`'string' === typeof ${state.accessor} && ${state.accessor}[0] === '/'`), ['type', 'state', '', 'P"2!"2""/#'])));
+        this.typeGuards.register(1, type_js_1.ReflectionKind.regexp, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not a RegExp", `${state.accessor} instanceof RegExp`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(2, type_js_1.ReflectionKind.regexp, __assignType((type, state) => state.addSetter(`'string' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(0.5, type_js_1.ReflectionKind.regexp, __assignType((type, state) => state.addSetter(`'string' === typeof ${state.accessor} && ${state.accessor}[0] === '/'`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.getRegistry(1).registerClass(Set, forwardSetToArray);
         this.typeGuards.getRegistry(1).registerClass(Map, forwardMapToArray);
-        this.typeGuards.getRegistry(1).registerClass(Date, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a Date', `${state.accessor} instanceof Date`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards
+            .getRegistry(1)
+            .registerClass(Date, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not a Date", `${state.accessor} instanceof Date`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.getRegistry(0.5).registerClass(Date, __assignType((type, state) => {
             state.addSetter(`'string' === typeof ${state.accessor} && new Date(${state.accessor}).toString() !== 'Invalid Date'`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
@@ -2106,9 +2249,9 @@ class Serializer {
         this.typeGuards.getRegistry(1.5).registerClass(Date, __assignType((type, state) => {
             state.addSetter(`'number' === typeof ${state.accessor}`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, type_js_1.ReflectionKind.function, (__assignType((type, state) => {
+        this.typeGuards.register(1, type_js_1.ReflectionKind.function, __assignType((type, state) => {
             state.setContext({ isFunction: core_1.isFunction, isExtendable: extends_js_1.isExtendable, resolveRuntimeType: processor_js_1.resolveRuntimeType });
-            const t = state.setVariable('type', type);
+            const t = state.setVariable("type", type);
             state.addCodeForSetter(`
                 if (isFunction(${state.accessor})) {
                     if ('__type' in ${state.accessor}) {
@@ -2117,21 +2260,23 @@ class Serializer {
                         ${state.setter} = true;
                     }
                 } else {
-                    if (${state.isValidation()}) ${state.assignValidationError('type', 'Not a function')}
+                    if (${state.isValidation()}) ${state.assignValidationError("type", "Not a function")}
                     ${state.setter} = false;
                 }
             `);
-        }, ['type', 'state', '', 'P"2!"2""/#'])));
+        }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, type_js_1.ReflectionKind.regexp, __assignType((type, state) => state.addSetter(`${state.accessor} instanceof RegExp`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(2, type_js_1.ReflectionKind.regexp, __assignType((type, state) => state.addSetter(`'string' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.getRegistry(1).addPostHook(__assignType((type, state) => {
+        this.typeGuards
+            .getRegistry(1)
+            .addPostHook(__assignType((type, state) => {
             for (const validation of type_js_1.validationAnnotation.getAnnotations(type)) {
                 const name = validation.name;
                 const args = validation.args;
-                if (name === 'function') {
+                if (name === "function") {
                     state.setContext({ ValidationErrorItem: validator_js_1.ValidationErrorItem });
                     (0, type_js_1.assertType)(args[0], type_js_1.ReflectionKind.function);
-                    const validatorVar = state.setVariable('validator', args[0].function);
+                    const validatorVar = state.setVariable("validator", args[0].function);
                     let optionVar = undefined;
                     if (args[1]) {
                         const optionParameter = args[0].parameters[2];
@@ -2150,7 +2295,7 @@ class Serializer {
                     }
                     state.addCode(`
                         {
-                            let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, 'type')}, ${optionVar ? optionVar : 'undefined'});
+                            let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, "type")}, ${optionVar ? optionVar : "undefined"});
                             if (error) {
                                 ${state.setter} = false;
                                 if (state.errors) state.errors.push(new ValidationErrorItem(${collapsePath(state.path)}, error.code, error.message, ${state.originalAccessor}));
@@ -2162,10 +2307,10 @@ class Serializer {
                     const validator = validators_js_1.validators[name];
                     if (validator) {
                         state.setContext({ ValidationErrorItem: validator_js_1.ValidationErrorItem });
-                        const validatorVar = state.setVariable('validator', validator(...args));
+                        const validatorVar = state.setVariable("validator", validator(...args));
                         state.addCode(`
                             {
-                                let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, 'type')});
+                                let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, "type")});
                                 if (error) {
                                     ${state.setter} = false;
                                     if (state.errors) state.errors.push(new ValidationErrorItem(${collapsePath(state.path)}, error.code, error.message, ${state.originalAccessor}));
@@ -2178,7 +2323,7 @@ class Serializer {
         }, ['Type', 'type', () => TemplateState, 'state', '', 'P"w!2"P7#2$"/%']));
         this.typeGuards.register(1, type_js_1.ReflectionKind.union, handleUnion);
         this.typeGuards.registerBinary(1, __assignType((type, state) => {
-            state.addSetter(`${state.accessor} instanceof ${state.setVariable('classType', type.classType)}`);
+            state.addSetter(`${state.accessor} instanceof ${state.setVariable("classType", type.classType)}`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.registerBinary(10, __assignType((type, state) => {
             state.addSetter(`'string' === typeof ${state.accessor}`);
@@ -2214,14 +2359,13 @@ exports.serializableKinds = [
     type_js_1.ReflectionKind.array,
     type_js_1.ReflectionKind.tuple,
     type_js_1.ReflectionKind.regexp,
-    type_js_1.ReflectionKind.objectLiteral,
+    type_js_1.ReflectionKind.objectLiteral
 ];
 class EmptySerializer extends Serializer {
-    constructor(name = 'empty') {
+    constructor(name = "empty") {
         super(name);
     }
-    registerValidators() {
-    }
+    registerValidators() { }
     registerSerializers() {
         for (const kind of exports.serializableKinds)
             this.serializeRegistry.register(kind, assignAccessorTemplate);
diff --git a/dist/cjs/src/serializer.js.map b/dist/cjs/src/serializer.js.map
index 8256212aec30903d2497e898da226d52dc4bddc2..f0b494d328c393d91935f0a4f281032a2c0b9c77 100644
--- a/dist/cjs/src/serializer.js.map
+++ b/dist/cjs/src/serializer.js.map
@@ -1 +1 @@
-{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../src/serializer.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../src/serializer.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/src/type-serialization.d.ts b/dist/cjs/src/type-serialization.d.ts
index 2a793ae891fbae1f452fc2ae58c7957eca2ff863..4a0f54795589fbec07c67f3d8617ce2d2a07a9fb 100644
--- a/dist/cjs/src/type-serialization.d.ts
+++ b/dist/cjs/src/type-serialization.d.ts
@@ -1,4 +1,4 @@
-import { EntityOptions, ReflectionKind, ReflectionVisibility, Type } from './reflection/type.js';
+import { EntityOptions, ReflectionKind, ReflectionVisibility, TagsReflection, Type } from "./reflection/type.js";
 export interface SerializedTypeAnnotations {
     entityOptions?: EntityOptions;
     typeName?: string;
@@ -9,11 +9,12 @@ export interface SerializedTypeAnnotations {
     };
     decorators?: SerializedTypeReference[];
 }
-interface SerializedTypeObjectLiteral extends SerializedTypeAnnotations {
+export interface SerializedTypeObjectLiteral extends SerializedTypeAnnotations {
     kind: ReflectionKind.objectLiteral;
     types: SerializedTypeReference[];
+    tags?: TagsReflection;
 }
-interface SerializedTypeClassType extends SerializedTypeAnnotations {
+export interface SerializedTypeClassType extends SerializedTypeAnnotations {
     kind: ReflectionKind.class;
     name?: string;
     globalObject?: true;
@@ -22,36 +23,38 @@ interface SerializedTypeClassType extends SerializedTypeAnnotations {
     arguments?: SerializedTypeReference[];
     superClass?: SerializedTypeReference;
     types: SerializedTypeReference[];
+    tags?: TagsReflection;
 }
-interface SerializedTypeFunction extends SerializedTypeAnnotations {
+export interface SerializedTypeFunction extends SerializedTypeAnnotations {
     kind: ReflectionKind.function;
     name?: number | string | symbol;
     parameters: SerializedTypeParameter[];
     return: SerializedTypeReference;
+    tags?: TagsReflection;
 }
-type SerializedTypeReference = number;
-interface SimpleSerializedType extends SerializedTypeAnnotations {
+export type SerializedTypeReference = number;
+export interface SimpleSerializedType extends SerializedTypeAnnotations {
     kind: ReflectionKind.never | ReflectionKind.any | ReflectionKind.unknown | ReflectionKind.void | ReflectionKind.object | ReflectionKind.string | ReflectionKind.number | ReflectionKind.boolean | ReflectionKind.symbol | ReflectionKind.bigint | ReflectionKind.null | ReflectionKind.undefined | ReflectionKind.regexp;
     origin?: SerializedTypeReference;
 }
-interface SerializedTypeLiteral extends SerializedTypeAnnotations {
+export interface SerializedTypeLiteral extends SerializedTypeAnnotations {
     kind: ReflectionKind.literal;
     literal: {
-        type: 'symbol';
+        type: "symbol";
         name: string;
     } | string | number | boolean | {
-        type: 'bigint';
+        type: "bigint";
         value: string;
     } | {
-        type: 'regex';
+        type: "regex";
         regex: string;
     };
 }
-interface SerializedTypeTemplateLiteral extends SerializedTypeAnnotations {
+export interface SerializedTypeTemplateLiteral extends SerializedTypeAnnotations {
     kind: ReflectionKind.templateLiteral;
     types: SerializedTypeReference[];
 }
-interface SerializedTypeParameter extends SerializedTypeAnnotations {
+export interface SerializedTypeParameter extends SerializedTypeAnnotations {
     kind: ReflectionKind.parameter;
     name: string;
     type: SerializedTypeReference;
@@ -61,13 +64,15 @@ interface SerializedTypeParameter extends SerializedTypeAnnotations {
     /**
      * Set when the parameter has a default value aka initializer.
      */
-    default?: true;
+    default?: any;
+    tags?: TagsReflection;
 }
 export interface SerializedTypeBaseMember extends SerializedTypeAnnotations {
     visibility: ReflectionVisibility;
     abstract?: true;
     optional?: true;
     readonly?: true;
+    tags?: TagsReflection;
 }
 export interface SerializedTypeMethod extends SerializedTypeBaseMember {
     kind: ReflectionKind.method;
@@ -78,7 +83,7 @@ export interface SerializedTypeMethod extends SerializedTypeBaseMember {
     abstract?: true;
     return: SerializedTypeReference;
 }
-interface SerializedTypeProperty extends SerializedTypeBaseMember {
+export interface SerializedTypeProperty extends SerializedTypeBaseMember {
     kind: ReflectionKind.property;
     visibility: ReflectionVisibility;
     name: number | string | symbol;
@@ -90,19 +95,20 @@ interface SerializedTypeProperty extends SerializedTypeBaseMember {
     /**
      * Set when the property has a default value aka initializer.
      */
-    default?: true;
+    default?: any;
 }
-interface SerializedTypePromise extends SerializedTypeAnnotations {
+export interface SerializedTypePromise extends SerializedTypeAnnotations {
     kind: ReflectionKind.promise;
     type: SerializedTypeReference;
 }
-interface SerializedTypeEnum extends SerializedTypeAnnotations {
+export interface SerializedTypeEnum extends SerializedTypeAnnotations {
     kind: ReflectionKind.enum;
     enum: {
         [name: string]: string | number | undefined | null;
     };
     values: (string | number | undefined | null)[];
     indexType: SerializedTypeReference;
+    tags?: TagsReflection;
 }
 export interface SerializedTypeUnion extends SerializedTypeAnnotations {
     kind: ReflectionKind.union;
@@ -112,48 +118,59 @@ export interface SerializedTypeIntersection extends SerializedTypeAnnotations {
     kind: ReflectionKind.intersection;
     types: SerializedTypeReference[];
 }
-interface SerializedTypeArray extends SerializedTypeAnnotations {
+export interface SerializedTypeArray extends SerializedTypeAnnotations {
     kind: ReflectionKind.array;
     type: SerializedTypeReference;
+    tags?: TagsReflection;
 }
-interface SerializedTypeIndexSignature extends SerializedTypeAnnotations {
+export interface SerializedTypeIndexSignature extends SerializedTypeAnnotations {
     kind: ReflectionKind.indexSignature;
     index: SerializedTypeReference;
     type: SerializedTypeReference;
+    /**
+     * Set when the parameter has a default value aka initializer.
+     */
+    default?: any;
 }
-interface SerializedTypePropertySignature extends SerializedTypeAnnotations {
+export interface SerializedTypePropertySignature extends SerializedTypeAnnotations {
     kind: ReflectionKind.propertySignature;
     name: number | string | symbol;
     optional?: true;
     readonly?: true;
     description?: string;
     type: SerializedTypeReference;
+    /**
+     * Set when the parameter has a default value aka initializer.
+     */
+    default?: any;
+    tags?: TagsReflection;
 }
-interface SerializedTypeMethodSignature extends SerializedTypeAnnotations {
+export interface SerializedTypeMethodSignature extends SerializedTypeAnnotations {
     kind: ReflectionKind.methodSignature;
     name: number | string | symbol;
     optional?: true;
     parameters: SerializedTypeParameter[];
     return: SerializedTypeReference;
+    tags?: TagsReflection;
 }
 export interface SerializedTypeTypeParameter extends SerializedTypeAnnotations {
     kind: ReflectionKind.typeParameter;
     name: string;
 }
-interface SerializedTypeInfer extends SerializedTypeAnnotations {
+export interface SerializedTypeInfer extends SerializedTypeAnnotations {
     kind: ReflectionKind.infer;
 }
-interface SerializedTypeTupleMember extends SerializedTypeAnnotations {
+export interface SerializedTypeTupleMember extends SerializedTypeAnnotations {
     kind: ReflectionKind.tupleMember;
     type: SerializedTypeReference;
     optional?: true;
     name?: string;
 }
-interface SerializedTypeTuple extends SerializedTypeAnnotations {
+export interface SerializedTypeTuple extends SerializedTypeAnnotations {
     kind: ReflectionKind.tuple;
     types: SerializedTypeTupleMember[];
 }
-interface SerializedTypeRest extends SerializedTypeAnnotations {
+export interface SerializedTypeRest extends SerializedTypeAnnotations {
     kind: ReflectionKind.rest;
     type: SerializedTypeReference;
 }
@@ -182,11 +199,30 @@ interface DeserializeState {
 export declare function deserializeType(types?: SerializedTypes, state?: Partial<DeserializeState>): Type;
 export {};
 export declare type __ΩSerializedTypeAnnotations = any[];
+export declare type __ΩSerializedTypeObjectLiteral = any[];
+export declare type __ΩSerializedTypeClassType = any[];
+export declare type __ΩSerializedTypeFunction = any[];
+export declare type __ΩSerializedTypeReference = any[];
+export declare type __ΩSimpleSerializedType = any[];
+export declare type __ΩSerializedTypeLiteral = any[];
+export declare type __ΩSerializedTypeTemplateLiteral = any[];
+export declare type __ΩSerializedTypeParameter = any[];
 export declare type __ΩSerializedTypeBaseMember = any[];
 export declare type __ΩSerializedTypeMethod = any[];
+export declare type __ΩSerializedTypeProperty = any[];
+export declare type __ΩSerializedTypePromise = any[];
+export declare type __ΩSerializedTypeEnum = any[];
 export declare type __ΩSerializedTypeUnion = any[];
 export declare type __ΩSerializedTypeIntersection = any[];
+export declare type __ΩSerializedTypeArray = any[];
+export declare type __ΩSerializedTypeIndexSignature = any[];
+export declare type __ΩSerializedTypePropertySignature = any[];
+export declare type __ΩSerializedTypeMethodSignature = any[];
 export declare type __ΩSerializedTypeTypeParameter = any[];
+export declare type __ΩSerializedTypeInfer = any[];
+export declare type __ΩSerializedTypeTupleMember = any[];
+export declare type __ΩSerializedTypeTuple = any[];
+export declare type __ΩSerializedTypeRest = any[];
 export declare type __ΩSerializedType = any[];
 export declare type __ΩSerializedTypes = any[];
 export declare type __ΩSerializerState = any[];
diff --git a/dist/cjs/src/type-serialization.js b/dist/cjs/src/type-serialization.js
index 63a1d60166d14b5afaddf7ea73e889ea331b834f..6ea3f053410da43c888b22461ad852bb5d10c567 100644
--- a/dist/cjs/src/type-serialization.js
+++ b/dist/cjs/src/type-serialization.js
@@ -1,57 +1,78 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.__ΩSerializerState = exports.__ΩSerializedTypes = exports.__ΩSerializedType = exports.__ΩSerializedTypeTypeParameter = exports.__ΩSerializedTypeIntersection = exports.__ΩSerializedTypeUnion = exports.__ΩSerializedTypeMethod = exports.__ΩSerializedTypeBaseMember = exports.__ΩSerializedTypeAnnotations = void 0;
+exports.__ΩSerializerState = exports.__ΩSerializedTypes = exports.__ΩSerializedType = exports.__ΩSerializedTypeRest = exports.__ΩSerializedTypeTuple = exports.__ΩSerializedTypeTupleMember = exports.__ΩSerializedTypeInfer = exports.__ΩSerializedTypeTypeParameter = exports.__ΩSerializedTypeMethodSignature = exports.__ΩSerializedTypePropertySignature = exports.__ΩSerializedTypeIndexSignature = exports.__ΩSerializedTypeArray = exports.__ΩSerializedTypeIntersection = exports.__ΩSerializedTypeUnion = exports.__ΩSerializedTypeEnum = exports.__ΩSerializedTypePromise = exports.__ΩSerializedTypeProperty = exports.__ΩSerializedTypeMethod = exports.__ΩSerializedTypeBaseMember = exports.__ΩSerializedTypeParameter = exports.__ΩSerializedTypeTemplateLiteral = exports.__ΩSerializedTypeLiteral = exports.__ΩSimpleSerializedType = exports.__ΩSerializedTypeReference = exports.__ΩSerializedTypeFunction = exports.__ΩSerializedTypeClassType = exports.__ΩSerializedTypeObjectLiteral = exports.__ΩSerializedTypeAnnotations = void 0;
 exports.serializeType = serializeType;
 exports.deserializeType = deserializeType;
 const __ΩPartial = ['T', 'Partial', 'l+e#!e"!fRb!Pde"!gN#"w"y'];
 /*@ts-ignore*/
-const { __ΩTypeClass } = require('./reflection/type.js');
+const { __ΩTypeClass } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩTypeObjectLiteral } = require('./reflection/type.js');
+const { __ΩTypeObjectLiteral } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩEntityOptions } = require('./reflection/type.js');
+const { __ΩEntityOptions } = require("./reflection/type.js");
 /*@ts-ignore*/
-const { __ΩReflectionVisibility } = require('./reflection/type.js');
+const { __ΩTagsReflection } = require("./reflection/type.js");
+/*@ts-ignore*/
+const { __ΩReflectionVisibility } = require("./reflection/type.js");
 function __assignType(fn, args) {
     fn.__type = args;
     return fn;
 }
-const type_js_1 = require("./reflection/type.js");
 const core_1 = require("@deepkit/core");
-const reflection_js_1 = require("./reflection/reflection.js");
 const core_js_1 = require("./core.js");
+const reflection_js_1 = require("./reflection/reflection.js");
+const type_js_1 = require("./reflection/type.js");
 const utils_js_1 = require("./utils.js");
 const __ΩSerializedTypeAnnotations = [() => __ΩEntityOptions, 'entityOptions', 'typeName', () => __ΩSerializedTypeReference, 'typeArguments', () => __ΩSerializedTypeReference, 'container', () => __ΩSerializedTypeReference, 'index', 'indexAccessOrigin', () => __ΩSerializedTypeReference, 'decorators', 'SerializedTypeAnnotations', 'Pn!4"8&4#8n$F4%8Pn&4\'n(4)M4*8n+F4,8Mw-y'];
 exports.__ΩSerializedTypeAnnotations = __ΩSerializedTypeAnnotations;
-const __ΩSerializedTypeObjectLiteral = [() => __ΩSerializedTypeAnnotations, 30, 'kind', () => __ΩSerializedTypeReference, 'types', 'SerializedTypeObjectLiteral', 'Pn!a"4#n$F4%Mw&y'];
-const __ΩSerializedTypeClassType = [() => __ΩSerializedTypeAnnotations, 20, 'kind', 'name', true, 'globalObject', 'classType', () => __ΩSerializedTypeReference, 'extendsArguments', () => __ΩSerializedTypeReference, 'arguments', () => __ΩSerializedTypeReference, 'superClass', () => __ΩSerializedTypeReference, 'types', 'SerializedTypeClassType', 'Pn!a"4#&4$8.%4&8&4\'n(F4)8n*F4+8n,4-8n.F4/Mw0y'];
-const __ΩSerializedTypeFunction = [() => __ΩSerializedTypeAnnotations, 17, 'kind', 'name', () => __ΩSerializedTypeParameter, 'parameters', () => __ΩSerializedTypeReference, 'return', 'SerializedTypeFunction', 'Pn!a"4#P\'&+J4$8n%F4&n\'4(Mw)y'];
+const __ΩSerializedTypeObjectLiteral = [() => __ΩSerializedTypeAnnotations, 30, 'kind', () => __ΩSerializedTypeReference, 'types', () => __ΩTagsReflection, 'tags', 'SerializedTypeObjectLiteral', 'Pn!a"4#n$F4%n&4\'8Mw(y'];
+exports.__ΩSerializedTypeObjectLiteral = __ΩSerializedTypeObjectLiteral;
+const __ΩSerializedTypeClassType = [() => __ΩSerializedTypeAnnotations, 20, 'kind', 'name', true, 'globalObject', 'classType', () => __ΩSerializedTypeReference, 'extendsArguments', () => __ΩSerializedTypeReference, 'arguments', () => __ΩSerializedTypeReference, 'superClass', () => __ΩSerializedTypeReference, 'types', () => __ΩTagsReflection, 'tags', 'SerializedTypeClassType', 'Pn!a"4#&4$8.%4&8&4\'n(F4)8n*F4+8n,4-8n.F4/n0418Mw2y'];
+exports.__ΩSerializedTypeClassType = __ΩSerializedTypeClassType;
+const __ΩSerializedTypeFunction = [() => __ΩSerializedTypeAnnotations, 17, 'kind', 'name', () => __ΩSerializedTypeParameter, 'parameters', () => __ΩSerializedTypeReference, 'return', () => __ΩTagsReflection, 'tags', 'SerializedTypeFunction', 'Pn!a"4#P\'&+J4$8n%F4&n\'4(n)4*8Mw+y'];
+exports.__ΩSerializedTypeFunction = __ΩSerializedTypeFunction;
 const __ΩSerializedTypeReference = ['SerializedTypeReference', '\'w!y'];
+exports.__ΩSerializedTypeReference = __ΩSerializedTypeReference;
 const __ΩSimpleSerializedType = [() => __ΩSerializedTypeAnnotations, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 'kind', () => __ΩSerializedTypeReference, 'origin', 'SimpleSerializedType', 'Pn!Pa"a#a$a%a&a\'a(a)a*a+a,a-a.J4/n0418Mw2y'];
+exports.__ΩSimpleSerializedType = __ΩSimpleSerializedType;
 const __ΩSerializedTypeLiteral = [() => __ΩSerializedTypeAnnotations, 13, 'kind', "symbol", 'type', 'name', "bigint", 'value', "regex", 'regex', 'literal', 'SerializedTypeLiteral', 'Pn!a"4#PP.$4%&4&M&\')P.\'4%&4(MP.)4%&4*MJ4+Mw,y'];
+exports.__ΩSerializedTypeLiteral = __ΩSerializedTypeLiteral;
 const __ΩSerializedTypeTemplateLiteral = [() => __ΩSerializedTypeAnnotations, 14, 'kind', () => __ΩSerializedTypeReference, 'types', 'SerializedTypeTemplateLiteral', 'Pn!a"4#n$F4%Mw&y'];
-const __ΩSerializedTypeParameter = [() => __ΩSerializedTypeAnnotations, 18, 'kind', 'name', () => __ΩSerializedTypeReference, 'type', () => __ΩReflectionVisibility, 'visibility', true, 'readonly', true, 'optional', true, 'default', 'SerializedTypeParameter', 'Pn!a"4#&4$n%4&n\'4(8.)4*8.+4,8.-4.8Mw/y'];
-const __ΩSerializedTypeBaseMember = [() => __ΩSerializedTypeAnnotations, () => __ΩReflectionVisibility, 'visibility', true, 'abstract', true, 'optional', true, 'readonly', 'SerializedTypeBaseMember', 'Pn!n"4#.$4%8.&4\'8.(4)8Mw*y'];
+exports.__ΩSerializedTypeTemplateLiteral = __ΩSerializedTypeTemplateLiteral;
+const __ΩSerializedTypeParameter = [() => __ΩSerializedTypeAnnotations, 18, 'kind', 'name', () => __ΩSerializedTypeReference, 'type', () => __ΩReflectionVisibility, 'visibility', true, 'readonly', true, 'optional', 'default', () => __ΩTagsReflection, 'tags', 'SerializedTypeParameter', 'Pn!a"4#&4$n%4&n\'4(8.)4*8.+4,8"4-8n.4/8Mw0y'];
+exports.__ΩSerializedTypeParameter = __ΩSerializedTypeParameter;
+const __ΩSerializedTypeBaseMember = [() => __ΩSerializedTypeAnnotations, () => __ΩReflectionVisibility, 'visibility', true, 'abstract', true, 'optional', true, 'readonly', () => __ΩTagsReflection, 'tags', 'SerializedTypeBaseMember', 'Pn!n"4#.$4%8.&4\'8.(4)8n*4+8Mw,y'];
 exports.__ΩSerializedTypeBaseMember = __ΩSerializedTypeBaseMember;
 const __ΩSerializedTypeMethod = [() => __ΩSerializedTypeBaseMember, 16, 'kind', () => __ΩReflectionVisibility, 'visibility', 'name', () => __ΩSerializedTypeParameter, 'parameters', true, 'optional', true, 'abstract', () => __ΩSerializedTypeReference, 'return', 'SerializedTypeMethod', 'Pn!a"4#n$4%P\'&+J4&n\'F4(.)4*8.+4,8n-4.Mw/y'];
 exports.__ΩSerializedTypeMethod = __ΩSerializedTypeMethod;
-const __ΩSerializedTypeProperty = [() => __ΩSerializedTypeBaseMember, 15, 'kind', () => __ΩReflectionVisibility, 'visibility', 'name', true, 'optional', true, 'readonly', true, 'abstract', 'description', () => __ΩSerializedTypeReference, 'type', true, 'default', 'SerializedTypeProperty', 'Pn!a"4#n$4%P\'&+J4&.\'4(8.)4*8.+4,8&4-8n.4/.0418Mw2y'];
+const __ΩSerializedTypeProperty = [() => __ΩSerializedTypeBaseMember, 15, 'kind', () => __ΩReflectionVisibility, 'visibility', 'name', true, 'optional', true, 'readonly', true, 'abstract', 'description', () => __ΩSerializedTypeReference, 'type', 'default', 'SerializedTypeProperty', 'Pn!a"4#n$4%P\'&+J4&.\'4(8.)4*8.+4,8&4-8n.4/"408Mw1y'];
+exports.__ΩSerializedTypeProperty = __ΩSerializedTypeProperty;
 const __ΩSerializedTypePromise = [() => __ΩSerializedTypeAnnotations, 19, 'kind', () => __ΩSerializedTypeReference, 'type', 'SerializedTypePromise', 'Pn!a"4#n$4%Mw&y'];
-const __ΩSerializedTypeEnum = [() => __ΩSerializedTypeAnnotations, 22, 'kind', 'enum', 'values', () => __ΩSerializedTypeReference, 'indexType', 'SerializedTypeEnum', 'Pn!a"4#P&P&\'-,JLM4$P&\'-,JF4%n&4\'Mw(y'];
+exports.__ΩSerializedTypePromise = __ΩSerializedTypePromise;
+const __ΩSerializedTypeEnum = [() => __ΩSerializedTypeAnnotations, 22, 'kind', 'enum', 'values', () => __ΩSerializedTypeReference, 'indexType', () => __ΩTagsReflection, 'tags', 'SerializedTypeEnum', 'Pn!a"4#P&P&\'-,JLM4$P&\'-,JF4%n&4\'n(4)8Mw*y'];
+exports.__ΩSerializedTypeEnum = __ΩSerializedTypeEnum;
 const __ΩSerializedTypeUnion = [() => __ΩSerializedTypeAnnotations, 23, 'kind', () => __ΩSerializedTypeReference, 'types', 'SerializedTypeUnion', 'Pn!a"4#n$F4%Mw&y'];
 exports.__ΩSerializedTypeUnion = __ΩSerializedTypeUnion;
 const __ΩSerializedTypeIntersection = [() => __ΩSerializedTypeAnnotations, 24, 'kind', () => __ΩSerializedTypeReference, 'types', 'SerializedTypeIntersection', 'Pn!a"4#n$F4%Mw&y'];
 exports.__ΩSerializedTypeIntersection = __ΩSerializedTypeIntersection;
-const __ΩSerializedTypeArray = [() => __ΩSerializedTypeAnnotations, 25, 'kind', () => __ΩSerializedTypeReference, 'type', 'SerializedTypeArray', 'Pn!a"4#n$4%Mw&y'];
-const __ΩSerializedTypeIndexSignature = [() => __ΩSerializedTypeAnnotations, 31, 'kind', () => __ΩSerializedTypeReference, 'index', () => __ΩSerializedTypeReference, 'type', 'SerializedTypeIndexSignature', 'Pn!a"4#n$4%n&4\'Mw(y'];
-const __ΩSerializedTypePropertySignature = [() => __ΩSerializedTypeAnnotations, 32, 'kind', 'name', true, 'optional', true, 'readonly', 'description', () => __ΩSerializedTypeReference, 'type', 'SerializedTypePropertySignature', 'Pn!a"4#P\'&+J4$.%4&8.\'4(8&4)8n*4+Mw,y'];
-const __ΩSerializedTypeMethodSignature = [() => __ΩSerializedTypeAnnotations, 33, 'kind', 'name', true, 'optional', () => __ΩSerializedTypeParameter, 'parameters', () => __ΩSerializedTypeReference, 'return', 'SerializedTypeMethodSignature', 'Pn!a"4#P\'&+J4$.%4&8n\'F4(n)4*Mw+y'];
+const __ΩSerializedTypeArray = [() => __ΩSerializedTypeAnnotations, 25, 'kind', () => __ΩSerializedTypeReference, 'type', () => __ΩTagsReflection, 'tags', 'SerializedTypeArray', 'Pn!a"4#n$4%n&4\'8Mw(y'];
+exports.__ΩSerializedTypeArray = __ΩSerializedTypeArray;
+const __ΩSerializedTypeIndexSignature = [() => __ΩSerializedTypeAnnotations, 31, 'kind', () => __ΩSerializedTypeReference, 'index', () => __ΩSerializedTypeReference, 'type', 'default', 'SerializedTypeIndexSignature', 'Pn!a"4#n$4%n&4\'"4(8Mw)y'];
+exports.__ΩSerializedTypeIndexSignature = __ΩSerializedTypeIndexSignature;
+const __ΩSerializedTypePropertySignature = [() => __ΩSerializedTypeAnnotations, 32, 'kind', 'name', true, 'optional', true, 'readonly', 'description', () => __ΩSerializedTypeReference, 'type', 'default', () => __ΩTagsReflection, 'tags', 'SerializedTypePropertySignature', 'Pn!a"4#P\'&+J4$.%4&8.\'4(8&4)8n*4+"4,8n-4.8Mw/y'];
+exports.__ΩSerializedTypePropertySignature = __ΩSerializedTypePropertySignature;
+const __ΩSerializedTypeMethodSignature = [() => __ΩSerializedTypeAnnotations, 33, 'kind', 'name', true, 'optional', () => __ΩSerializedTypeParameter, 'parameters', () => __ΩSerializedTypeReference, 'return', () => __ΩTagsReflection, 'tags', 'SerializedTypeMethodSignature', 'Pn!a"4#P\'&+J4$.%4&8n\'F4(n)4*n+4,8Mw-y'];
+exports.__ΩSerializedTypeMethodSignature = __ΩSerializedTypeMethodSignature;
 const __ΩSerializedTypeTypeParameter = [() => __ΩSerializedTypeAnnotations, 21, 'kind', 'name', 'SerializedTypeTypeParameter', 'Pn!a"4#&4$Mw%y'];
 exports.__ΩSerializedTypeTypeParameter = __ΩSerializedTypeTypeParameter;
 const __ΩSerializedTypeInfer = [() => __ΩSerializedTypeAnnotations, 34, 'kind', 'SerializedTypeInfer', 'Pn!a"4#Mw$y'];
+exports.__ΩSerializedTypeInfer = __ΩSerializedTypeInfer;
 const __ΩSerializedTypeTupleMember = [() => __ΩSerializedTypeAnnotations, 27, 'kind', () => __ΩSerializedTypeReference, 'type', true, 'optional', 'name', 'SerializedTypeTupleMember', 'Pn!a"4#n$4%.&4\'8&4(8Mw)y'];
+exports.__ΩSerializedTypeTupleMember = __ΩSerializedTypeTupleMember;
 const __ΩSerializedTypeTuple = [() => __ΩSerializedTypeAnnotations, 26, 'kind', () => __ΩSerializedTypeTupleMember, 'types', 'SerializedTypeTuple', 'Pn!a"4#n$F4%Mw&y'];
+exports.__ΩSerializedTypeTuple = __ΩSerializedTypeTuple;
 const __ΩSerializedTypeRest = [() => __ΩSerializedTypeAnnotations, 29, 'kind', () => __ΩSerializedTypeReference, 'type', 'SerializedTypeRest', 'Pn!a"4#n$4%Mw&y'];
+exports.__ΩSerializedTypeRest = __ΩSerializedTypeRest;
 const __ΩSerializedType = [() => __ΩSimpleSerializedType, () => __ΩSerializedTypeLiteral, () => __ΩSerializedTypeTemplateLiteral, () => __ΩSerializedTypeParameter, () => __ΩSerializedTypeFunction, () => __ΩSerializedTypeMethod, () => __ΩSerializedTypeProperty, () => __ΩSerializedTypePromise, () => __ΩSerializedTypeClassType, () => __ΩSerializedTypeEnum, () => __ΩSerializedTypeUnion, () => __ΩSerializedTypeIntersection, () => __ΩSerializedTypeArray, () => __ΩSerializedTypeObjectLiteral, () => __ΩSerializedTypeIndexSignature, () => __ΩSerializedTypePropertySignature, () => __ΩSerializedTypeMethodSignature, () => __ΩSerializedTypeTypeParameter, () => __ΩSerializedTypeInfer, () => __ΩSerializedTypeTuple, () => __ΩSerializedTypeTupleMember, () => __ΩSerializedTypeRest, 'SerializedType', 'Pn!n"n#n$n%n&n\'n(n)n*n+n,n-n.n/n0n1n2n3n4n5n6Jw7y'];
 exports.__ΩSerializedType = __ΩSerializedType;
 const __ΩSerializedTypes = [() => __ΩSerializedType, 'SerializedTypes', 'n!Fw"y'];
@@ -68,7 +89,9 @@ isWithSerializedAnnotations.__type = ['type', 'isWithSerializedAnnotations', 'P"
 const __ΩSerializerState = [() => __ΩSerializedTypes, 'types', true, 'disableMethods', 'Type', 'refs', 'SerializerState', 'Pn!4".#4$8"w%\'E4&Mw\'y'];
 exports.__ΩSerializerState = __ΩSerializerState;
 function filterRemoveFunctions(v) {
-    return v.kind !== type_js_1.ReflectionKind.function && v.kind !== type_js_1.ReflectionKind.method && v.kind !== type_js_1.ReflectionKind.methodSignature;
+    return (v.kind !== type_js_1.ReflectionKind.function &&
+        v.kind !== type_js_1.ReflectionKind.method &&
+        v.kind !== type_js_1.ReflectionKind.methodSignature);
 }
 filterRemoveFunctions.__type = ['Type', 'v', 'filterRemoveFunctions', 'P"w!2")/#'];
 function exportEntityOptions(type, result) {
@@ -117,7 +140,8 @@ function assignEntityOptions(type, serialized) {
     if (serialized.entityOptions.collection !== undefined)
         entity.collection = serialized.entityOptions.collection;
     if (serialized.entityOptions.singleTableInheritance !== undefined)
-        entity.singleTableInheritance = serialized.entityOptions.singleTableInheritance;
+        entity.singleTableInheritance =
+            serialized.entityOptions.singleTableInheritance;
     if (serialized.entityOptions.indexes !== undefined)
         entity.indexes = serialized.entityOptions.indexes;
     type_js_1.entityAnnotation.replaceType(type, [entity]);
@@ -136,7 +160,8 @@ function serialize(type, state) {
     if (type.decorators)
         result.decorators = type.decorators.map(__assignType(v => serialize(v, state), ['v', '', 'P"2!"/"']));
     if (type.typeArguments)
-        result.typeArguments = type.typeArguments.map(__assignType(v => serialize(v, state), ['v', '', 'P"2!"/"']));
+        result.typeArguments =
+            type.typeArguments.map(__assignType(v => serialize(v, state), ['v', '', 'P"2!"/"']));
     if (type.indexAccessOrigin)
         result.indexAccessOrigin = {
             index: serialize(type.indexAccessOrigin.index, state),
@@ -144,34 +169,39 @@ function serialize(type, state) {
         };
     switch (type.kind) {
         case type_js_1.ReflectionKind.objectLiteral: {
-            if (type.typeName && type.typeName.startsWith('Type')) {
+            if (type.typeName && type.typeName.startsWith("Type")) {
                 //make sure that Type types are not serialized, as they are way too expensive and
                 //there is no need to actually serialize them.
                 const typeType = (0, reflection_js_1.typeOf)([], ['Type', '"w!']);
-                if (typeType.kind === type_js_1.ReflectionKind.union && (0, type_js_1.isTypeIncluded)(typeType.types, type)) {
+                if (typeType.kind === type_js_1.ReflectionKind.union &&
+                    (0, type_js_1.isTypeIncluded)(typeType.types, type)) {
                     Object.assign(result, {
-                        kind: type_js_1.ReflectionKind.any,
+                        kind: type_js_1.ReflectionKind.any
                     });
                     break;
                 }
             }
-            const types = state.disableMethods ? type.types.filter(filterRemoveFunctions) : type.types;
+            const types = state.disableMethods
+                ? type.types.filter(filterRemoveFunctions)
+                : type.types;
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.objectLiteral,
                 types: types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])),
+                tags: type.tags
             });
             exportEntityOptions(type, result);
             break;
         }
         case type_js_1.ReflectionKind.class: {
-            const types = state.disableMethods ? type.types.filter(filterRemoveFunctions) : type.types;
+            const types = state.disableMethods
+                ? type.types.filter(filterRemoveFunctions)
+                : type.types;
             const parent = (0, core_1.getParentClass)(type.classType);
             let superClass = undefined;
             try {
                 superClass = parent ? serialize((0, reflection_js_1.reflect)(parent), state) : undefined;
             }
-            catch {
-            }
+            catch { }
             const classType = (0, core_1.getClassName)(type.classType);
             const globalObject = envGlobal && envGlobal[classType] === type.classType;
             Object.assign(result, {
@@ -180,9 +210,14 @@ function serialize(type, state) {
                 name: reflection_js_1.ReflectionClass.from(type.classType).name,
                 globalObject: globalObject ? true : undefined,
                 classType,
-                arguments: type.arguments ? type.arguments.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])) : undefined,
-                extendsArguments: type.extendsArguments ? type.extendsArguments.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])) : undefined,
+                arguments: type.arguments
+                    ? type.arguments.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"']))
+                    : undefined,
+                extendsArguments: type.extendsArguments
+                    ? type.extendsArguments.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"']))
+                    : undefined,
                 superClass,
+                tags: type.tags
             });
             exportEntityOptions(type, result);
             break;
@@ -190,50 +225,60 @@ function serialize(type, state) {
         case type_js_1.ReflectionKind.literal: {
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.literal,
-                literal: 'symbol' === typeof type.literal ? { type: 'symbol', name: type.literal.toString().slice(7, -1) } :
-                    'bigint' === typeof type.literal ? { type: 'bigint', value: String(type.literal) } :
-                        type.literal instanceof RegExp ? { type: 'regex', regex: String(type.literal) } :
-                            type.literal
+                literal: "symbol" === typeof type.literal
+                    ? { type: "symbol", name: type.literal.toString().slice(7, -1) }
+                    : "bigint" === typeof type.literal
+                        ? { type: "bigint", value: String(type.literal) }
+                        : type.literal instanceof RegExp
+                            ? { type: "regex", regex: String(type.literal) }
+                            : type.literal
             });
             break;
         }
         case type_js_1.ReflectionKind.tuple: {
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.tuple,
-                types: type.types.map(__assignType(member => ({ ...member, jit: undefined, parent: undefined, type: serialize(member.type, state) }), ['member', '', 'P"2!"/"'])),
+                types: type.types.map(__assignType(member => ({
+                    ...member,
+                    jit: undefined,
+                    parent: undefined,
+                    type: serialize(member.type, state)
+                }), ['member', '', 'P"2!"/"']))
             });
             break;
         }
         case type_js_1.ReflectionKind.union: {
-            if (type.typeName && type.typeName.startsWith('Type')) {
+            if (type.typeName && type.typeName.startsWith("Type")) {
                 //make sure that Type types are not serialized, as they are way too expensive and
                 //there is no need to actually serialize them.
                 const typeType = (0, reflection_js_1.typeOf)([], ['Type', '"w!']);
                 if ((0, type_js_1.isSameType)(typeType, type)) {
                     Object.assign(result, {
-                        kind: type_js_1.ReflectionKind.any,
+                        kind: type_js_1.ReflectionKind.any
                     });
                     break;
                 }
             }
-            const types = state.disableMethods ? type.types.filter(filterRemoveFunctions) : type.types;
+            const types = state.disableMethods
+                ? type.types.filter(filterRemoveFunctions)
+                : type.types;
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.union,
-                types: types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])),
+                types: types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"']))
             });
             break;
         }
         case type_js_1.ReflectionKind.intersection: {
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.intersection,
-                types: type.types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])),
+                types: type.types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"']))
             });
             break;
         }
         case type_js_1.ReflectionKind.templateLiteral: {
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.templateLiteral,
-                types: type.types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])),
+                types: type.types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"']))
             });
             break;
         }
@@ -261,7 +306,8 @@ function serialize(type, state) {
                     type: serialize(v.type, state),
                     default: v.default !== undefined ? true : undefined
                 }), ['v', '', 'P"2!"/"'])),
-                return: serialize(type.return, state)
+                return: serialize(type.return, state),
+                tags: type.tags
             });
             break;
         }
@@ -281,7 +327,8 @@ function serialize(type, state) {
                     type: serialize(v.type, state),
                     default: v.default !== undefined ? true : undefined
                 }), ['v', '', 'P"2!"/"'])),
-                return: serialize(type.return, state)
+                return: serialize(type.return, state),
+                tags: type.tags
             });
             break;
         }
@@ -310,7 +357,7 @@ function serialize(type, state) {
                 ...type,
                 jit: undefined,
                 parent: undefined,
-                type: serialize(type.type, state),
+                type: serialize(type.type, state)
             });
             break;
         }
@@ -319,8 +366,7 @@ function serialize(type, state) {
                 ...type,
                 jit: undefined,
                 parent: undefined,
-                default: type.default !== undefined ? true : undefined,
-                type: serialize(type.type, state),
+                type: serialize(type.type, state)
             });
             break;
         }
@@ -328,20 +374,21 @@ function serialize(type, state) {
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.array,
                 type: serialize(type.type, state),
+                tags: type.tags
             });
             break;
         }
         case type_js_1.ReflectionKind.promise: {
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.promise,
-                type: serialize(type.type, state),
+                type: serialize(type.type, state)
             });
             break;
         }
         case type_js_1.ReflectionKind.rest: {
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.rest,
-                type: serialize(type.type, state),
+                type: serialize(type.type, state)
             });
             break;
         }
@@ -350,6 +397,7 @@ function serialize(type, state) {
                 kind: type_js_1.ReflectionKind.indexSignature,
                 index: serialize(type.index, state),
                 type: serialize(type.type, state),
+                default: type.default
             });
             break;
         }
@@ -359,6 +407,7 @@ function serialize(type, state) {
                 enum: type.enum,
                 values: type.values,
                 indexType: serialize(type.indexType, state),
+                tags: type.tags
             });
             break;
         }
@@ -371,7 +420,7 @@ serialize.__type = ['Type', 'type', () => __ΩSerializerState, 'state', () => __
  */
 function serializeType(type, state = {}) {
     const types = [];
-    const serializedState = { types, refs: new Map, ...state };
+    const serializedState = { types, refs: new Map(), ...state };
     serialize(type, serializedState);
     return types;
 }
@@ -381,7 +430,7 @@ const __ΩDeserializeState = [() => __ΩSerializedTypes, 'types', 'disableReuse'
  * @reflection never
  */
 function deserialize(type, state, parent) {
-    if ('number' === typeof type) {
+    if ("number" === typeof type) {
         if (!state.types[type])
             return { kind: type_js_1.ReflectionKind.unknown };
         const typeState = state.deserialized[type];
@@ -421,7 +470,8 @@ function deserialize(type, state, parent) {
         case type_js_1.ReflectionKind.objectLiteral: {
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.objectLiteral,
-                types: type.types.map(v => deserialize(v, state, result))
+                types: type.types.map(v => deserialize(v, state, result)),
+                tags: type.tags
             });
             assignEntityOptions(result, type);
             break;
@@ -434,11 +484,17 @@ function deserialize(type, state, parent) {
                     break;
                 }
             }
-            const newClass = !type.globalObject && state.disableReuse === true || (!type.name || !core_js_1.typeSettings.registeredEntities[type.name]);
-            const args = type.arguments ? type.arguments.map(v => deserialize(v, state, result)) : undefined;
-            const extendsArguments = type.extendsArguments ? type.extendsArguments.map(v => deserialize(v, state, result)) : undefined;
+            const newClass = (!type.globalObject && state.disableReuse === true) ||
+                !type.name ||
+                !core_js_1.typeSettings.registeredEntities[type.name];
+            const args = type.arguments
+                ? type.arguments.map(v => deserialize(v, state, result))
+                : undefined;
+            const extendsArguments = type.extendsArguments
+                ? type.extendsArguments.map(v => deserialize(v, state, result))
+                : undefined;
             const types = type.types.map(v => deserialize(v, state, result));
-            const constructor = (0, type_js_1.findMember)('constructor', types);
+            const constructor = (0, type_js_1.findMember)("constructor", types);
             const initialize = [];
             if (constructor && constructor.kind === type_js_1.ReflectionKind.method) {
                 for (let i = 0; i < constructor.parameters.length; i++) {
@@ -447,23 +503,33 @@ function deserialize(type, state, parent) {
                     }
                 }
             }
-            const classType = type.globalObject ? envGlobal[type.classType] : newClass
-                ? (type.superClass ? class extends deserialize(type.superClass, state).classType {
-                    constructor(...args) {
-                        super(...args);
-                        for (const init of initialize) {
-                            this[init.name] = args[init.index];
+            const classType = type.globalObject
+                ? envGlobal[type.classType]
+                : newClass
+                    ? type.superClass
+                        ? class extends deserialize(type.superClass, state)
+                            .classType {
+                            constructor(...args) {
+                                super(...args);
+                                for (const init of initialize) {
+                                    this[init.name] = args[init.index];
+                                }
+                            }
                         }
-                    }
-                } : class {
-                    constructor(...args) {
-                        for (const init of initialize) {
-                            this[init.name] = args[init.index];
+                        : class {
+                            constructor(...args) {
+                                for (const init of initialize) {
+                                    this[init.name] = args[init.index];
+                                }
+                            }
                         }
-                    }
-                }) : core_js_1.typeSettings.registeredEntities[type.name];
+                    : core_js_1.typeSettings.registeredEntities[type.name];
             if (newClass && !type.globalObject) {
-                Object.defineProperty(classType, 'name', { value: type.classType, writable: true, enumerable: false });
+                Object.defineProperty(classType, "name", {
+                    value: type.classType,
+                    writable: true,
+                    enumerable: false
+                });
                 if (!classType.__type) {
                     classType.__type = [];
                     classType.__type.__type = result;
@@ -475,6 +541,7 @@ function deserialize(type, state, parent) {
                 arguments: args,
                 extendsArguments,
                 types,
+                tags: type.tags
             });
             assignEntityOptions(result, type);
             break;
@@ -482,8 +549,19 @@ function deserialize(type, state, parent) {
         case type_js_1.ReflectionKind.literal: {
             Object.assign(result, {
                 kind: type_js_1.ReflectionKind.literal,
-                literal: 'string' === typeof type.literal ? type.literal : 'number' === typeof type.literal ? type.literal : 'boolean' === typeof type.literal ? type.literal :
-                    'symbol' === type.literal.type ? Symbol(type.literal.name) : 'bigint' === type.literal.type ? BigInt(type.literal.value) : 'regex' === type.literal.type ? (0, utils_js_1.regExpFromString)(type.literal.regex) : false
+                literal: "string" === typeof type.literal
+                    ? type.literal
+                    : "number" === typeof type.literal
+                        ? type.literal
+                        : "boolean" === typeof type.literal
+                            ? type.literal
+                            : "symbol" === type.literal.type
+                                ? Symbol(type.literal.name)
+                                : "bigint" === type.literal.type
+                                    ? BigInt(type.literal.value)
+                                    : "regex" === type.literal.type
+                                        ? (0, utils_js_1.regExpFromString)(type.literal.regex)
+                                        : false
             });
             break;
         }
@@ -557,7 +635,8 @@ function deserialize(type, state, parent) {
             Object.assign(result, {
                 name: type.name,
                 parameters,
-                return: deserialize(type.return, state, result)
+                return: deserialize(type.return, state, result),
+                tags: type.tags
             });
             break;
         }
@@ -565,8 +644,7 @@ function deserialize(type, state, parent) {
         case type_js_1.ReflectionKind.propertySignature: {
             Object.assign(result, {
                 ...type,
-                default: type.kind === type_js_1.ReflectionKind.property ? type.default ? () => undefined : undefined : undefined,
-                type: deserialize(type.type, state, result),
+                type: deserialize(type.type, state, result)
             });
             break;
         }
@@ -590,11 +668,14 @@ function deserialize(type, state, parent) {
                 enum: type.enum,
                 values: type.values,
                 indexType: deserialize(type.indexType, state, result),
+                tags: type.tags
             });
             break;
         }
     }
-    if (isWithSerializedAnnotations(type) && (0, type_js_1.isWithAnnotations)(result) && type.decorators) {
+    if (isWithSerializedAnnotations(type) &&
+        (0, type_js_1.isWithAnnotations)(result) &&
+        type.decorators) {
         result.annotations || (result.annotations = {});
         for (const scheduledDecorator of type.decorators) {
             for (const decorator of type_js_1.typeDecorators) {
diff --git a/dist/cjs/src/type-serialization.js.map b/dist/cjs/src/type-serialization.js.map
index 5b0ac2ecdffefd596efbfdd5a6a30f3c17060c49..525e722b8b848e58f4ab1bfed419f340526976b4 100644
--- a/dist/cjs/src/type-serialization.js.map
+++ b/dist/cjs/src/type-serialization.js.map
@@ -1 +1 @@
-{"version":3,"file":"type-serialization.js","sourceRoot":"","sources":["../../../src/type-serialization.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"type-serialization.js","sourceRoot":"","sources":["../../../src/type-serialization.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/tsconfig.tsbuildinfo b/dist/cjs/tsconfig.tsbuildinfo
index 1fe283ba44afb9b7887a38f6e60b5792fe62167d..3226bad2abf3750403b1dcfe70f6a9a5150744cb 100644
--- a/dist/cjs/tsconfig.tsbuildinfo
+++ b/dist/cjs/tsconfig.tsbuildinfo
@@ -1 +1 @@
-{"fileNames":["../../../../node_modules/typescript/lib/lib.es5.d.ts","../../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../../node_modules/typescript/lib/lib.dom.d.ts","../../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../../node_modules/typescript/lib/lib.dom.asynciterable.d.ts","../../../../node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../../../node_modules/typescript/lib/lib.scripthost.d.ts","../../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../../node_modules/typescript/lib/lib.es2020.full.d.ts","../../../core/dist/cjs/src/core.d.ts","../../../core/dist/cjs/src/decorators.d.ts","../../../core/dist/cjs/src/enum.d.ts","../../../core/dist/cjs/src/iterators.d.ts","../../../core/dist/cjs/src/timer.d.ts","../../../core/dist/cjs/src/process-locker.d.ts","../../../core/dist/cjs/src/network.d.ts","../../../core/dist/cjs/src/perf.d.ts","../../../core/dist/cjs/src/compiler.d.ts","../../../core/dist/cjs/src/string.d.ts","../../../core/dist/cjs/src/emitter.d.ts","../../../core/dist/cjs/src/reactive.d.ts","../../../core/dist/cjs/src/reflection.d.ts","../../../core/dist/cjs/src/url.d.ts","../../../core/dist/cjs/src/array.d.ts","../../../core/dist/cjs/src/types.d.ts","../../../core/dist/cjs/src/buffer.d.ts","../../../core/dist/cjs/src/path.d.ts","../../../core/dist/cjs/index.d.ts","../../src/changes.ts","../../../../node_modules/buffer/index.d.ts","../../src/core.ts","../../../type-spec/dist/cjs/src/type.d.ts","../../../type-spec/dist/cjs/index.d.ts","../../src/decorator-builder.ts","../../src/reference.ts","../../src/validators.ts","../../src/serializer.ts","../../../../node_modules/@types/uuid/index.d.ts","../../src/utils.ts","../../src/typeguard.ts","../../src/validator.ts","../../src/decorator.ts","../../src/reflection/state.ts","../../src/debug.ts","../../src/reflection/processor.ts","../../src/reflection/extends.ts","../../src/reflection/type.ts","../../src/inheritance.ts","../../src/type-serialization.ts","../../src/reflection/reflection.ts","../../src/snapshot.ts","../../src/change-detector.ts","../../src/default.ts","../../src/mixin.ts","../../src/path.ts","../../src/registry.ts","../../src/serializer-facade.ts","../../src/types.ts","../../index.ts","../../../../node_modules/@types/lz-string/index.d.ts","../../../../node_modules/@types/node/compatibility/disposable.d.ts","../../../../node_modules/@types/node/compatibility/indexable.d.ts","../../../../node_modules/@types/node/compatibility/iterators.d.ts","../../../../node_modules/@types/node/compatibility/index.d.ts","../../../../node_modules/@types/node/globals.typedarray.d.ts","../../../../node_modules/@types/node/buffer.buffer.d.ts","../../../../node_modules/undici-types/header.d.ts","../../../../node_modules/undici-types/readable.d.ts","../../../../node_modules/undici-types/file.d.ts","../../../../node_modules/undici-types/fetch.d.ts","../../../../node_modules/undici-types/formdata.d.ts","../../../../node_modules/undici-types/connector.d.ts","../../../../node_modules/undici-types/client.d.ts","../../../../node_modules/undici-types/errors.d.ts","../../../../node_modules/undici-types/dispatcher.d.ts","../../../../node_modules/undici-types/global-dispatcher.d.ts","../../../../node_modules/undici-types/global-origin.d.ts","../../../../node_modules/undici-types/pool-stats.d.ts","../../../../node_modules/undici-types/pool.d.ts","../../../../node_modules/undici-types/handlers.d.ts","../../../../node_modules/undici-types/balanced-pool.d.ts","../../../../node_modules/undici-types/agent.d.ts","../../../../node_modules/undici-types/mock-interceptor.d.ts","../../../../node_modules/undici-types/mock-agent.d.ts","../../../../node_modules/undici-types/mock-client.d.ts","../../../../node_modules/undici-types/mock-pool.d.ts","../../../../node_modules/undici-types/mock-errors.d.ts","../../../../node_modules/undici-types/proxy-agent.d.ts","../../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../../node_modules/undici-types/retry-handler.d.ts","../../../../node_modules/undici-types/retry-agent.d.ts","../../../../node_modules/undici-types/api.d.ts","../../../../node_modules/undici-types/interceptors.d.ts","../../../../node_modules/undici-types/util.d.ts","../../../../node_modules/undici-types/cookies.d.ts","../../../../node_modules/undici-types/patch.d.ts","../../../../node_modules/undici-types/websocket.d.ts","../../../../node_modules/undici-types/eventsource.d.ts","../../../../node_modules/undici-types/filereader.d.ts","../../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../../node_modules/undici-types/content-type.d.ts","../../../../node_modules/undici-types/cache.d.ts","../../../../node_modules/undici-types/index.d.ts","../../../../node_modules/@types/node/globals.d.ts","../../../../node_modules/@types/node/assert.d.ts","../../../../node_modules/@types/node/assert/strict.d.ts","../../../../node_modules/@types/node/async_hooks.d.ts","../../../../node_modules/@types/node/buffer.d.ts","../../../../node_modules/@types/node/child_process.d.ts","../../../../node_modules/@types/node/cluster.d.ts","../../../../node_modules/@types/node/console.d.ts","../../../../node_modules/@types/node/constants.d.ts","../../../../node_modules/@types/node/crypto.d.ts","../../../../node_modules/@types/node/dgram.d.ts","../../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../../node_modules/@types/node/dns.d.ts","../../../../node_modules/@types/node/dns/promises.d.ts","../../../../node_modules/@types/node/domain.d.ts","../../../../node_modules/@types/node/dom-events.d.ts","../../../../node_modules/@types/node/events.d.ts","../../../../node_modules/@types/node/fs.d.ts","../../../../node_modules/@types/node/fs/promises.d.ts","../../../../node_modules/@types/node/http.d.ts","../../../../node_modules/@types/node/http2.d.ts","../../../../node_modules/@types/node/https.d.ts","../../../../node_modules/@types/node/inspector.d.ts","../../../../node_modules/@types/node/module.d.ts","../../../../node_modules/@types/node/net.d.ts","../../../../node_modules/@types/node/os.d.ts","../../../../node_modules/@types/node/path.d.ts","../../../../node_modules/@types/node/perf_hooks.d.ts","../../../../node_modules/@types/node/process.d.ts","../../../../node_modules/@types/node/punycode.d.ts","../../../../node_modules/@types/node/querystring.d.ts","../../../../node_modules/@types/node/readline.d.ts","../../../../node_modules/@types/node/readline/promises.d.ts","../../../../node_modules/@types/node/repl.d.ts","../../../../node_modules/@types/node/sea.d.ts","../../../../node_modules/@types/node/sqlite.d.ts","../../../../node_modules/@types/node/stream.d.ts","../../../../node_modules/@types/node/stream/promises.d.ts","../../../../node_modules/@types/node/stream/consumers.d.ts","../../../../node_modules/@types/node/stream/web.d.ts","../../../../node_modules/@types/node/string_decoder.d.ts","../../../../node_modules/@types/node/test.d.ts","../../../../node_modules/@types/node/timers.d.ts","../../../../node_modules/@types/node/timers/promises.d.ts","../../../../node_modules/@types/node/tls.d.ts","../../../../node_modules/@types/node/trace_events.d.ts","../../../../node_modules/@types/node/tty.d.ts","../../../../node_modules/@types/node/url.d.ts","../../../../node_modules/@types/node/util.d.ts","../../../../node_modules/@types/node/v8.d.ts","../../../../node_modules/@types/node/vm.d.ts","../../../../node_modules/@types/node/wasi.d.ts","../../../../node_modules/@types/node/worker_threads.d.ts","../../../../node_modules/@types/node/zlib.d.ts","../../../../node_modules/@types/node/index.d.ts"],"fileIdsList":[[108,150],[108,147,150],[108,149,150],[150],[108,150,155,185],[108,150,151,156,162,163,170,182,193],[108,150,151,152,162,170],[103,104,105,108,150],[108,150,153,194],[108,150,154,155,163,171],[108,150,155,182,190],[108,150,156,158,162,170],[108,149,150,157],[108,150,158,159],[108,150,162],[108,150,160,162],[108,149,150,162],[108,150,162,163,164,182,193],[108,150,162,163,164,177,182,185],[108,145,150,198],[108,145,150,158,162,165,170,182,193],[108,150,162,163,165,166,170,182,190,193],[108,150,165,167,182,190,193],[106,107,108,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],[108,150,162,168],[108,150,169,193],[108,150,158,162,170,182],[108,150,171],[108,150,172],[108,149,150,173],[108,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],[108,150,175],[108,150,176],[108,150,162,177,178],[108,150,177,179,194,196],[108,150,162,182,183,184,185],[108,150,182,184],[108,150,182,183],[108,150,185],[108,150,186],[108,147,150,182],[108,150,162,188,189],[108,150,188,189],[108,150,155,170,182,190],[108,150,191],[108,150,170,192],[108,150,165,176,193],[108,150,155,194],[108,150,182,195],[108,150,169,196],[108,150,197],[108,150,155,162,164,173,182,193,196,198],[108,150,182,199],[108,117,121,150,193],[108,117,150,182,193],[108,112,150],[108,114,117,150,190,193],[108,150,170,190],[108,150,200],[108,112,150,200],[108,114,117,150,170,193],[108,109,110,113,116,150,162,182,193],[108,117,124,150],[108,109,115,150],[108,117,138,139,150],[108,113,117,150,185,193,200],[108,138,150,200],[108,111,112,150,200],[108,117,150],[108,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,150],[108,117,132,150],[108,117,124,125,150],[108,115,117,125,126,150],[108,116,150],[108,109,112,117,150],[108,117,121,125,126,150],[108,121,150],[108,115,117,120,150,193],[108,109,114,117,124,150],[108,150,182],[108,112,117,138,150,198,200],[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,108,150],[52,108,150],[74,108,150],[71,73,75,76,77,78,79,81,82,83,84,87,88,89,91,92,93,94,95,96,97,98,99,100,108,150],[70,71,79,89,92,93,108,150],[70,108,150],[70,73,76,83,89,92,108,150],[89,108,150],[89,92,108,150],[70,92,108,150],[70,79,89,92,108,150],[70,73,89,92,108,150],[70,87,89,108,150],[70,75,84,85,86,88,89,92,108,150],[70,81,83,84,87,89,90,91,108,150],[70,75,85,87,88,92,108,150],[70,89,108,150],[70,71,79,81,82,87,89,92,108,150],[70,73,75,77,78,83,87,88,89,92,108,150],[70,73,79,89,92,108,150],[70,73,81,89,92,108,150],[79,81,83,89,92,108,150],[83,89,108,150],[80,108,150],[70,79,82,84,89,92,108,150],[70,83,89,108,150]],"fileInfos":[{"version":"e41c290ef7dd7dab3493e6cbe5909e0148edf4a8dad0271be08edec368a0f7b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"4fd3f3422b2d2a3dfd5cdd0f387b3a8ec45f006c6ea896a4cb41264c2100bb2c","affectsGlobalScope":true,"impliedFormat":1},{"version":"69e65d976bf166ce4a9e6f6c18f94d2424bf116e90837ace179610dbccad9b42","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7a3c8b952931daebdfc7a2897c53c0a1c73624593fa070e46bd537e64dcd20a","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"62bb211266ee48b2d0edf0d8d1b191f0c24fc379a82bd4c1692a082c540bc6b1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"f1e2a172204962276504466a6393426d2ca9c54894b1ad0a6c9dad867a65f876","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1305d1e76ca44e30fb8b2b8075fa522b83f60c0bcf5d4326a9d2cf79b53724f8","impliedFormat":1},"2d2f730d138ade6912bd4fed19e5c75a3e86583b34cedaca803ab6ba92f9e410","9d3032643946a4ef7baf0bb9edf42f30c25ba9228da79feef68228273aee9641","2abbb3d628f1339724c106de13d12ce02288a45d3cb9230493cb63870c529bb9","fac6ddbc83bfa1d31f4b0a42b60093b02bfd5adafb451d84bfd3314f88c0e833","743ca12939a64a2076fa4307e581ac5465dc7605ac2d3ac920d13409ad5c46c8","6494edf2dbfeb859e9f15bac22852403015e1750b4f38faa7aac66a9f6bfce14","2223005c545706fb961cff0a034c46db73e5de6a1dac8ededae914f91756de3d","738a2fdd9c4a45fd181cdbe6c08273ab3d48619427f1953a43b291447a3917c1","dff478c6deb08f527c1782e16f7f0f43fd1c9485657784c8db5aa6a7c915b6ef","7e120366e7e55879c2d553f5fccf65be0201e2d876036eb81a7ae9a77c575d15","d5d9077c9c94596545f3494ca8bba34a301e55f4ac18717d63be89250a923f4c","b7705a32ea5d02641973e63b7d9971d75c5e15b86eb1782d13172beddd9b8a61","3daaffb9f2a1707232f4e4010fb1a385567589af0ebd92754d2ded57be86922c","7a4474497db8a2d1f9f3df66a21340be32b82afcdfe68754124a0e7817afae1b","ad11ad24465c6f7823e5d663e304c02a1985c97c3488d76ce3bd70d096afd3e0","d895673753aaca60a30929a7091ffe24c64930f1cbdefd88442110945ba58361","f1d49060ba422ed8a04a9e9ca704bdf588586325148207e53cb5818d074edd06","953f809f570a5bbffbd79b112d62ba9b81fc087d5dd207394c5bc900168b3c38","c1cd135d63fceefb66a71c57a319665735fbd6cd483b03de3b124cbd2b6b2ab4",{"version":"2bc4130f217369e12cc52f16e919fa4c57573533bd798d21b9effea8326b8d27","signature":"675e716c3874127949f521c0b0cdaf915bdc6c8603182a91fa19368023f63a26"},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"117329d3d655e485c8c562857f8267947d4ee6c4c7f9e88cdd4099b8d4d53ad4","signature":"bf3c71db9b5129a4e89d63ab300db5dcf59865b2ed1ec46599280974478d19df"},"04ad7f4a76339aff3e37651d3777b1b065b19c3f5d368e44633da92b3b72ade3","bd8305ea3955dad684e52167c0c6f0bf7970cb8a9a3c9e73fc4d597120d5ec27",{"version":"9119c2aa61ee1e10e270cb6452b4e0d4ed8625e024a825e846ba7d2f60970f36","signature":"6a4836a90aaa4c1cd0c37c54b3a86118304b0712d882b05e10474cd550a0b051"},{"version":"6808648728044b53cfecd2de713e7e6170d9478ff79cbde0611bfc99280c01ee","signature":"c5bff92d878a705afaa4c8e4fc580d6f327dc10a524c3f29e8f3bfa6526df8a9"},{"version":"56d3dc3a2cce7a9dba1cfca60557f9c544c4ab281d3af79acb6c1d7ecfe3eabc","signature":"f8e577a314928a70842ef72a953646642963b37b01491fc8e6ac6d05ecccdade"},{"version":"75c0f4716f2c8b8d912321263b925567fea6a697a17e1b4a83b26fec7159a12b","signature":"3802a296c35fae6a4664a969dd6347f5f16250ff71f738eb42f6a6104c7f55e3"},{"version":"fab58e600970e66547644a44bc9918e3223aa2cbd9e8763cec004b2cfb48827e","impliedFormat":1},{"version":"241354ad210f27a8dfb2d029cedfd5f8bd9f4ef63ea32354e0773b03c89fb060","signature":"f7f321cd51fb551f4d066470d210e79e2a9421a46b6c5de87fc02bcb75969c5f"},{"version":"1dd2f1d12a412124eb51e56a34e0c0d26586467d83302cbabfc38433817af016","signature":"948a3a9c0f8e2cdb9f189d80d58c01f6860ca06c19f409df41755653a5f536e0"},{"version":"531e301b66501437feeb7bf1293c239f922e00bb2254a7bdda3895a70c4b57c2","signature":"17bc0aadbb22dfc455cbef6dba44a225446f1312f5f9d8b68d586446904af08c"},{"version":"311d67e1872fc88f327d317ff28a03844be85eadbe7f6c46158bfe04db082daf","signature":"2bf53f531a10d0c65e0ff80581c91e35238042a8fcdbd352a749db3239f5fe66"},{"version":"0b6e874ac7c9fb87799c4952011435b8b0076e4f28b69e040bb8704a8779bb13","signature":"baede161a93d0a075a764cc61f24e079380e72ad34a2a8d6b78b4593b4643f29"},{"version":"d1b511ca204df4b2d8c8a9631237575b2e389e23c3533cec038da2876d53b253","signature":"6c0d5fb372ac7ba32e66304b31d3536f0bbe2a9599e67d4ecfbee7be59d6fa2d"},{"version":"84ed12b557e3f1401d69233a45998ab5caeb89b7437be47a6b9a7e00ceff3651","signature":"5cc3f152303ec19087192e740fe949503b5ec237d53bc01eefb6872a5606fd28"},{"version":"62df1293986f0fe90cd6b395f322e11f475cebc735322f71e2135c2dc2b8e4bc","signature":"25df1fbc0261eee6fdf8f6f2849284d3e027c1cf947e5b97886cb1e31e65f64b"},{"version":"83cda386f2df57e65fe6a5271af31e0187bee96077c39747b1f1e58fa3def432","signature":"d8425fff263540ea5756cbb183e808900ed80ff82c883d631f2a8eeec6d902b9"},{"version":"6841bf60be1e3be83fcae18f8f7f1708c873ff34f0a23678ac30de7529a84fda","signature":"fb6c179fea3ee0a207cc2a7ac74fcadae7331e3eedd7a8c90f2231d74eeffaf2"},{"version":"65b221247cb9d255037a1c153ceddaf4a9a9aaf95e1d583ebec39a443138f98c","signature":"029c91ecbc1463e79270a6f5fbb135a2be5cabc0e423170c9bc7b08623076932"},{"version":"14cd1c178163f2e15668ba8a6225aac7294b1e887a7183d11ce45f5c46c9edda","signature":"f7b680228cd4b50a200944fd660defef0ea0f792d4075f154540cd8e4708d975"},{"version":"3909693964433384bc21e047b64283e979da0fb17c8b6b1fdba0d9944463de06","signature":"86cb4a7ffd778d2608bd95dab41491a61df4bd5605d342d58ab18c3331fe3404"},{"version":"e0336a1ef188982e7bec83b812717e58447446ec0ca25f2b97898ab45be0a764","signature":"ba9f99e43b4c52eab63104a34f84af4a1a468e072b947901e04c6d731121df65"},{"version":"5ae32d70b5588c623b616fcdbac6e97b006fbf0486629dc87255e3072bfe3e5e","signature":"1d3a96304dc44546f75be7a0d5991a18c5dd96679af608e99e917295271e93d1"},{"version":"15101befbe344b26c6e6018dcc883390ca72c150555ed66b1d3132c4aaa7143a","signature":"f512273c515b874795a768864d530178bf3ed4d06ae6e679c19893d7b5c7d78b"},{"version":"4f56d6e331fb56edddc45713301b688dff04fae5defe553afbc464998e0995c5","signature":"42ea987fb72f4c8267d8cca356c4fa54392b89efee45611bce960b20bfc6dfa9"},{"version":"7b5b145f480fb154170d735fcda9cc5a2aea3e158aee7a548ff2007194fe4db9","signature":"746ec452f42702f93c78e6740ddcc29d439a00771c34c57838e2c7059a89c066"},{"version":"3254a855916f9c12b518ceaa231fb62055e80b7520df1dcada37928e2cd02304","signature":"5b2aeee88a120adac456de7ca0be45b4bac8fe96199c4d009da6fedb6ec43c96"},{"version":"07002d4c369d31da3e478e3cafbf46747e8189366d45397b09afcabf87f46291","signature":"38f35d4b099e2b7d297c1d3633cd873d3b7c2ebbd57ca7b2390ea61c6c025c48"},{"version":"f8aa3e6998ebe802b0266c5900f37d67e922450dbfc5f814101f17a103653d10","signature":"c8f7be34ff957e325b674931e6b713f1a3dcb864389d5be70bdb66a08f69c4ee"},{"version":"a72d313bb91d97bca7fba7da3681cb8ee00cd2bf98d9a545727f91f0345330c9","impliedFormat":1},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"13af9e8fb6757946c48117315866177b95e554d1e773577bb6ca6e40083b6d73","affectsGlobalScope":true,"impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"d2bc987ae352271d0d615a420dcf98cc886aa16b87fb2b569358c1fe0ca0773d","affectsGlobalScope":true,"impliedFormat":1},{"version":"f550093acc8ad4f64ad1c7e96153615f3351b81919dae5473375b81e1e8f272c","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"76103716ba397bbb61f9fa9c9090dca59f39f9047cb1352b2179c5d8e7f4e8d0","impliedFormat":1},{"version":"53eac70430b30089a3a1959d8306b0f9cfaf0de75224b68ef25243e0b5ad1ca3","affectsGlobalScope":true,"impliedFormat":1},{"version":"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","impliedFormat":1},{"version":"115971d64632ea4742b5b115fb64ed04bcaae2c3c342f13d9ba7e3f9ee39c4e7","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb","impliedFormat":1},{"version":"86956cc2eb9dd371d6fab493d326a574afedebf76eef3fa7833b8e0d9b52d6f1","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"e6f5a38687bebe43a4cef426b69d34373ef68be9a6b1538ec0a371e69f309354","impliedFormat":1},{"version":"a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","impliedFormat":1},{"version":"e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1ff5a53a58e756d2661b73ba60ffe274231a4432d21f7a2d0d9e4f6aa99f4283","impliedFormat":1},{"version":"1e289f30a48126935a5d408a91129a13a59c9b0f8c007a816f9f16ef821e144e","impliedFormat":1},{"version":"2ea254f944dfe131df1264d1fb96e4b1f7d110195b21f1f5dbb68fdd394e5518","impliedFormat":1},{"version":"5135bdd72cc05a8192bd2e92f0914d7fc43ee077d1293dc622a049b7035a0afb","impliedFormat":1},{"version":"4f80de3a11c0d2f1329a72e92c7416b2f7eab14f67e92cac63bb4e8d01c6edc8","impliedFormat":1},{"version":"6d386bc0d7f3afa1d401afc3e00ed6b09205a354a9795196caed937494a713e6","impliedFormat":1},{"version":"fcc4b974b1cf7eca347490f11143ab2f5bc3c449b2073eb4d9494f6a16651e75","affectsGlobalScope":true,"impliedFormat":1},{"version":"23459c1915878a7c1e86e8bdb9c187cddd3aea105b8b1dfce512f093c969bc7e","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true,"impliedFormat":1},{"version":"5f6f1d54779d0b9ed152b0516b0958cd34889764c1190434bbf18e7a8bb884cd","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"c6b4e0a02545304935ecbf7de7a8e056a31bb50939b5b321c9d50a405b5a0bba","impliedFormat":1},{"version":"fab29e6d649aa074a6b91e3bdf2bff484934a46067f6ee97a30fcd9762ae2213","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"1cbae62b67f180291d211f0e1045fb923a8ec800cfbf9caa13223d769013dae2","impliedFormat":1},{"version":"553870e516f8c772b89f3820576152ebc70181d7994d96917bb943e37da7f8a7","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633","impliedFormat":1},{"version":"745c4240220559bd340c8aeb6e3c5270a709d3565e934dc22a69c304703956bc","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"92949391eab12082218333a61b9070996f404ad662ff488d48ebb09564963d2b","affectsGlobalScope":true,"impliedFormat":1},{"version":"bef91efa0baea5d0e0f0f27b574a8bc100ce62a6d7e70220a0d58af6acab5e89","affectsGlobalScope":true,"impliedFormat":1},{"version":"282fd2a1268a25345b830497b4b7bf5037a5e04f6a9c44c840cb605e19fea841","impliedFormat":1},{"version":"5360a27d3ebca11b224d7d3e38e3e2c63f8290cb1fcf6c3610401898f8e68bc3","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true,"impliedFormat":1},{"version":"cb094bb347d7df3380299eb69836c2c8758626ecf45917577707c03cf816b6f4","affectsGlobalScope":true,"impliedFormat":1},{"version":"f689c4237b70ae6be5f0e4180e8833f34ace40529d1acc0676ab8fb8f70457d7","impliedFormat":1},{"version":"ae25afbbf1ed5df63a177d67b9048bf7481067f1b8dc9c39212e59db94fc9fc6","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"52a8e7e8a1454b6d1b5ad428efae3870ffc56f2c02d923467f2940c454aa9aec","affectsGlobalScope":true,"impliedFormat":1},{"version":"78dc0513cc4f1642906b74dda42146bcbd9df7401717d6e89ea6d72d12ecb539","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1}],"root":[71,73,[76,79],[81,101]],"options":{"composite":true,"declaration":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"module":1,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"outDir":"./","sourceMap":true,"strict":true,"target":7},"referencedMap":[[102,1],[147,2],[148,2],[149,3],[108,4],[150,5],[151,6],[152,7],[103,1],[106,8],[104,1],[105,1],[153,9],[154,10],[155,11],[156,12],[157,13],[158,14],[159,14],[161,15],[160,16],[162,17],[163,18],[164,19],[146,20],[107,1],[165,21],[166,22],[167,23],[200,24],[168,25],[169,26],[170,27],[171,28],[172,29],[173,30],[174,31],[175,32],[176,33],[177,34],[178,34],[179,35],[180,1],[181,1],[182,36],[184,37],[183,38],[185,39],[186,40],[187,41],[188,42],[189,43],[190,44],[191,45],[192,46],[193,47],[194,48],[195,49],[196,50],[197,51],[198,52],[199,53],[80,1],[72,1],[49,1],[50,1],[10,1],[8,1],[9,1],[14,1],[13,1],[2,1],[15,1],[16,1],[17,1],[18,1],[19,1],[20,1],[21,1],[22,1],[3,1],[23,1],[24,1],[4,1],[25,1],[29,1],[26,1],[27,1],[28,1],[30,1],[31,1],[32,1],[5,1],[33,1],[34,1],[35,1],[36,1],[6,1],[40,1],[37,1],[38,1],[39,1],[41,1],[7,1],[42,1],[51,1],[47,1],[48,1],[43,1],[44,1],[45,1],[46,1],[1,1],[12,1],[11,1],[124,54],[134,55],[123,54],[144,56],[115,57],[114,58],[143,59],[137,60],[142,61],[117,62],[131,63],[116,64],[140,65],[112,66],[111,59],[141,67],[113,68],[118,69],[119,1],[122,69],[109,1],[145,70],[135,71],[126,72],[127,73],[129,74],[125,75],[128,76],[138,59],[120,77],[121,78],[130,79],[110,80],[133,71],[132,69],[136,1],[139,81],[70,82],[66,1],[68,1],[60,1],[52,1],[53,1],[62,1],[54,1],[55,1],[58,1],[69,1],[59,1],[57,1],[63,1],[64,83],[61,1],[56,1],[67,1],[65,1],[75,84],[74,1],[101,85],[94,86],[71,87],[73,87],[86,1],[76,87],[84,88],[95,89],[90,90],[96,91],[97,92],[77,93],[88,94],[87,95],[92,96],[85,1],[89,97],[98,98],[99,99],[79,100],[93,101],[91,102],[82,103],[100,104],[81,105],[83,106],[78,107]],"latestChangedDtsFile":"./src/reflection/type.d.ts","version":"5.7.3"}
\ No newline at end of file
+{"fileNames":["../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es5.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.asynciterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.scripthost.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.core.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.date.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.object.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.array.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.object.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.date.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.number.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.decorators.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.full.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/core.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/decorators.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/enum.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/iterators.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/timer.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/process-locker.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/network.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/perf.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/compiler.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/string.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/emitter.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/reactive.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/reflection.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/url.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/array.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/types.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/buffer.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/path.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/index.d.ts","../../src/changes.ts","../../../../../.pnpm/buffer@5.7.1/node_modules/buffer/index.d.ts","../../src/core.ts","../../src/decorator-builder.ts","../../../../../.pnpm/@deepkit+type-spec@1.0.1_patch_hash=f3c3a4fd486751022d78f17d39a5a79f493bca20b185964ca1aba41fbfc93244/node_modules/@deepkit/type-spec/dist/cjs/src/type.d.ts","../../../../../.pnpm/@deepkit+type-spec@1.0.1_patch_hash=f3c3a4fd486751022d78f17d39a5a79f493bca20b185964ca1aba41fbfc93244/node_modules/@deepkit/type-spec/dist/cjs/index.d.ts","../../src/debug.ts","../../src/reflection/state.ts","../../src/reflection/processor.ts","../../src/reflection/extends.ts","../../src/reflection/type.ts","../../src/reference.ts","../../src/validators.ts","../../src/serializer.ts","../../../../../.pnpm/@types+uuid@8.3.4/node_modules/@types/uuid/index.d.ts","../../src/utils.ts","../../src/typeguard.ts","../../src/validator.ts","../../src/decorator.ts","../../src/inheritance.ts","../../src/type-serialization.ts","../../src/reflection/reflection.ts","../../src/snapshot.ts","../../src/change-detector.ts","../../src/default.ts","../../src/mixin.ts","../../src/path.ts","../../src/registry.ts","../../src/serializer-facade.ts","../../src/types.ts","../../index.ts","../../../../../.pnpm/lz-string@1.5.0/node_modules/lz-string/typings/lz-string.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/compatibility/disposable.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/compatibility/indexable.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/compatibility/iterators.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/compatibility/index.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/globals.typedarray.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/buffer.buffer.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/header.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/readable.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/file.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/fetch.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/formdata.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/connector.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/client.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/errors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/dispatcher.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/global-dispatcher.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/global-origin.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/pool-stats.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/handlers.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/balanced-pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-interceptor.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-client.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-errors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/proxy-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/env-http-proxy-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/retry-handler.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/retry-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/api.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/interceptors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/util.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/cookies.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/patch.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/websocket.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/eventsource.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/filereader.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/diagnostics-channel.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/content-type.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/cache.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/index.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/globals.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/assert.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/assert/strict.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/async_hooks.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/buffer.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/child_process.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/cluster.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/console.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/constants.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/crypto.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/dgram.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/diagnostics_channel.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/dns.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/dns/promises.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/domain.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/dom-events.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/events.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/fs.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/fs/promises.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/http.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/http2.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/https.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/inspector.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/module.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/net.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/os.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/path.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/perf_hooks.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/decode.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/encode.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/index.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/process.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/punycode.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/querystring.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/readline.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/readline/promises.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/repl.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/sea.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/sqlite.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/stream.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/stream/promises.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/stream/consumers.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/stream/web.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/string_decoder.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/test.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/timers.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/timers/promises.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/tls.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/trace_events.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/tty.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/url.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/util.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/v8.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/vm.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/wasi.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/worker_threads.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/zlib.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/index.d.ts"],"fileIdsList":[[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,108,150],[108,150],[52,108,150],[75,108,150],[108,147,150],[108,149,150],[150],[108,150,155,188],[108,150,151,156,162,163,170,185,196],[108,150,151,152,162,170],[103,104,105,108,150],[108,150,153,197],[108,150,154,155,163,171],[108,150,155,185,193],[108,150,156,158,162,170],[108,149,150,157],[108,150,158,159],[108,150,160,162],[108,149,150,162],[108,150,162,163,164,185,196],[108,150,162,163,164,180,185,188],[108,145,150],[108,145,150,158,162,165,170,185,196],[108,150,162,163,165,166,170,185,193,196],[108,150,165,167,185,193,196],[106,107,108,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],[108,150,162,168],[108,150,169,196],[108,150,158,162,170,185],[108,150,171],[108,150,172],[108,149,150,173],[108,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],[108,150,178],[108,150,179],[108,150,162,180,181],[108,150,180,182,197,199],[108,150,162,185,186,188],[108,150,187,188],[108,150,185,186],[108,150,188],[108,150,189],[108,147,150,185,190],[108,150,162,191,192],[108,150,191,192],[108,150,155,170,185,193],[108,150,194],[108,150,170,195],[108,150,165,179,196],[108,150,155,197],[108,150,185,198],[108,150,169,199],[108,150,200],[108,150,162,164,173,185,188,196,198,199,201],[108,150,185,202],[108,150,174,175],[108,117,121,150,196],[108,117,150,185,196],[108,112,150],[108,114,117,150,193,196],[108,150,170,193],[108,150,203],[108,112,150,203],[108,114,117,150,170,196],[108,109,110,113,116,150,162,185,196],[108,117,124,150],[108,109,115,150],[108,117,138,139,150],[108,113,117,150,188,196,203],[108,138,150,203],[108,111,112,150,203],[108,117,150],[108,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,150],[108,117,132,150],[108,117,124,125,150],[108,115,117,125,126,150],[108,116,150],[108,109,112,117,150],[108,117,121,125,126,150],[108,121,150],[108,115,117,120,150,196],[108,109,114,117,124,150],[108,150,185],[108,112,117,138,150,201,203],[71,73,74,76,79,80,81,82,83,84,86,87,88,89,91,92,93,94,95,96,97,98,99,100,108,150],[70,71,81,84,92,93,108,150],[70,108,150],[70,73,74,81,88,92,108,150],[81,108,150],[81,92,108,150],[70,92,108,150],[70,81,84,92,108,150],[70,73,81,92,108,150],[70,79,81,108,150],[70,76,77,78,80,81,89,92,108,150],[70,79,81,86,88,89,90,91,108,150],[70,76,78,79,80,92,108,150],[70,81,108,150],[70,71,79,81,84,86,87,92,108,150],[70,73,76,79,80,81,82,83,88,92,108,150],[70,73,81,84,92,108,150],[70,73,81,86,92,108,150],[81,84,86,88,92,108,150],[81,88,108,150],[85,108,150],[70,81,84,87,89,92,108,150],[70,81,88,108,150]],"fileInfos":[{"version":"c430d44666289dae81f30fa7b2edebf186ecc91a2d4c71266ea6ae76388792e1","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"080941d9f9ff9307f7e27a83bcd888b7c8270716c39af943532438932ec1d0b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2e80ee7a49e8ac312cc11b77f1475804bee36b3b2bc896bead8b6e1266befb43","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7a3c8b952931daebdfc7a2897c53c0a1c73624593fa070e46bd537e64dcd20a","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"fb0f136d372979348d59b3f5020b4cdb81b5504192b1cacff5d1fbba29378aa1","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"a680117f487a4d2f30ea46f1b4b7f58bef1480456e18ba53ee85c2746eeca012","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1305d1e76ca44e30fb8b2b8075fa522b83f60c0bcf5d4326a9d2cf79b53724f8","impliedFormat":1},{"version":"2d2f730d138ade6912bd4fed19e5c75a3e86583b34cedaca803ab6ba92f9e410","impliedFormat":1},{"version":"9d3032643946a4ef7baf0bb9edf42f30c25ba9228da79feef68228273aee9641","impliedFormat":1},{"version":"2abbb3d628f1339724c106de13d12ce02288a45d3cb9230493cb63870c529bb9","impliedFormat":1},{"version":"fac6ddbc83bfa1d31f4b0a42b60093b02bfd5adafb451d84bfd3314f88c0e833","impliedFormat":1},{"version":"743ca12939a64a2076fa4307e581ac5465dc7605ac2d3ac920d13409ad5c46c8","impliedFormat":1},{"version":"6494edf2dbfeb859e9f15bac22852403015e1750b4f38faa7aac66a9f6bfce14","impliedFormat":1},{"version":"2223005c545706fb961cff0a034c46db73e5de6a1dac8ededae914f91756de3d","impliedFormat":1},{"version":"738a2fdd9c4a45fd181cdbe6c08273ab3d48619427f1953a43b291447a3917c1","impliedFormat":1},{"version":"dff478c6deb08f527c1782e16f7f0f43fd1c9485657784c8db5aa6a7c915b6ef","impliedFormat":1},{"version":"7e120366e7e55879c2d553f5fccf65be0201e2d876036eb81a7ae9a77c575d15","impliedFormat":1},{"version":"d5d9077c9c94596545f3494ca8bba34a301e55f4ac18717d63be89250a923f4c","impliedFormat":1},{"version":"b7705a32ea5d02641973e63b7d9971d75c5e15b86eb1782d13172beddd9b8a61","impliedFormat":1},{"version":"3daaffb9f2a1707232f4e4010fb1a385567589af0ebd92754d2ded57be86922c","impliedFormat":1},{"version":"7a4474497db8a2d1f9f3df66a21340be32b82afcdfe68754124a0e7817afae1b","impliedFormat":1},{"version":"ad11ad24465c6f7823e5d663e304c02a1985c97c3488d76ce3bd70d096afd3e0","impliedFormat":1},{"version":"d895673753aaca60a30929a7091ffe24c64930f1cbdefd88442110945ba58361","impliedFormat":1},{"version":"f1d49060ba422ed8a04a9e9ca704bdf588586325148207e53cb5818d074edd06","impliedFormat":1},{"version":"953f809f570a5bbffbd79b112d62ba9b81fc087d5dd207394c5bc900168b3c38","impliedFormat":1},{"version":"c1cd135d63fceefb66a71c57a319665735fbd6cd483b03de3b124cbd2b6b2ab4","impliedFormat":1},{"version":"2bc4130f217369e12cc52f16e919fa4c57573533bd798d21b9effea8326b8d27","signature":"675e716c3874127949f521c0b0cdaf915bdc6c8603182a91fa19368023f63a26","impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"1ebffd76885e72d90226d6a0180b97cd151a516761701c39d15315f1ab810057","signature":"1b17636675ab90a22eee0d62d336da771e85b39d35cfdc859615bfdc7d1fad4c","impliedFormat":1},{"version":"9119c2aa61ee1e10e270cb6452b4e0d4ed8625e024a825e846ba7d2f60970f36","signature":"6a4836a90aaa4c1cd0c37c54b3a86118304b0712d882b05e10474cd550a0b051","impliedFormat":1},{"version":"320217defa5f5efc928f9dd07135cc90086a76f56305174a4748ac24a42fa033","impliedFormat":1},{"version":"bd8305ea3955dad684e52167c0c6f0bf7970cb8a9a3c9e73fc4d597120d5ec27","impliedFormat":1},{"version":"d1b511ca204df4b2d8c8a9631237575b2e389e23c3533cec038da2876d53b253","signature":"6c0d5fb372ac7ba32e66304b31d3536f0bbe2a9599e67d4ecfbee7be59d6fa2d","impliedFormat":1},{"version":"0b6e874ac7c9fb87799c4952011435b8b0076e4f28b69e040bb8704a8779bb13","signature":"baede161a93d0a075a764cc61f24e079380e72ad34a2a8d6b78b4593b4643f29","impliedFormat":1},{"version":"61b57e507124078ab94a0a1bf292f99df666318d3b677b618a78b727d71cd480","signature":"6ad72f23a1ef6bf1f62fee28d58b6301beef379350ef5d61c91f56e24f266bc2","impliedFormat":1},{"version":"62df1293986f0fe90cd6b395f322e11f475cebc735322f71e2135c2dc2b8e4bc","signature":"25df1fbc0261eee6fdf8f6f2849284d3e027c1cf947e5b97886cb1e31e65f64b","impliedFormat":1},{"version":"61dc26afbecbafb9b84cdf840699b3611d9fe0b539c1bf303e8484c1e99550b7","signature":"83e93109dedfcd2f66a736421843a0070420789df720bef1a5d78181974f3ea5","impliedFormat":1},{"version":"6808648728044b53cfecd2de713e7e6170d9478ff79cbde0611bfc99280c01ee","signature":"c5bff92d878a705afaa4c8e4fc580d6f327dc10a524c3f29e8f3bfa6526df8a9","impliedFormat":1},{"version":"56d3dc3a2cce7a9dba1cfca60557f9c544c4ab281d3af79acb6c1d7ecfe3eabc","signature":"f8e577a314928a70842ef72a953646642963b37b01491fc8e6ac6d05ecccdade","impliedFormat":1},{"version":"a28584b66f802ef3d0d286e4a3d6020a6c20ac4adbda84049cd858d7f60bd406","signature":"66408117a4788d5799bc9ecdf81b8e7ebd52cf2c6f22b43e55aedca41f5f5fc8","impliedFormat":1},{"version":"fab58e600970e66547644a44bc9918e3223aa2cbd9e8763cec004b2cfb48827e","impliedFormat":1},{"version":"241354ad210f27a8dfb2d029cedfd5f8bd9f4ef63ea32354e0773b03c89fb060","signature":"f7f321cd51fb551f4d066470d210e79e2a9421a46b6c5de87fc02bcb75969c5f","impliedFormat":1},{"version":"1dd2f1d12a412124eb51e56a34e0c0d26586467d83302cbabfc38433817af016","signature":"948a3a9c0f8e2cdb9f189d80d58c01f6860ca06c19f409df41755653a5f536e0","impliedFormat":1},{"version":"531e301b66501437feeb7bf1293c239f922e00bb2254a7bdda3895a70c4b57c2","signature":"17bc0aadbb22dfc455cbef6dba44a225446f1312f5f9d8b68d586446904af08c","impliedFormat":1},{"version":"311d67e1872fc88f327d317ff28a03844be85eadbe7f6c46158bfe04db082daf","signature":"2bf53f531a10d0c65e0ff80581c91e35238042a8fcdbd352a749db3239f5fe66","impliedFormat":1},{"version":"6841bf60be1e3be83fcae18f8f7f1708c873ff34f0a23678ac30de7529a84fda","signature":"fb6c179fea3ee0a207cc2a7ac74fcadae7331e3eedd7a8c90f2231d74eeffaf2","impliedFormat":1},{"version":"dc3073d04ddd6d656aa2654d791e70f20a031a517664fde933c88f50a66bc420","signature":"d020b84c67bdd73f228910a0ca322b03e1da30badbe713615546262a371d26a2","impliedFormat":1},{"version":"caf0f5eee0f8421ce9d9924d0b39fa0ed9bd20b6fd3ee2ea064b9c795489eec4","signature":"e946023a72e2036fe75aa43e7039f5af8ac2dd03b02c2c3db0011582829d49ea","impliedFormat":1},{"version":"3909693964433384bc21e047b64283e979da0fb17c8b6b1fdba0d9944463de06","signature":"86cb4a7ffd778d2608bd95dab41491a61df4bd5605d342d58ab18c3331fe3404","impliedFormat":1},{"version":"e0336a1ef188982e7bec83b812717e58447446ec0ca25f2b97898ab45be0a764","signature":"ba9f99e43b4c52eab63104a34f84af4a1a468e072b947901e04c6d731121df65","impliedFormat":1},{"version":"32c2d70903357ae029bf8c70e76f22d6a9229dbc94e0402d4ae2cbe010a2627d","signature":"1a687d9913dcc5b03f2686037a28894c52c388bf281bf582c76d6098036ffe48","impliedFormat":1},{"version":"15101befbe344b26c6e6018dcc883390ca72c150555ed66b1d3132c4aaa7143a","signature":"f512273c515b874795a768864d530178bf3ed4d06ae6e679c19893d7b5c7d78b","impliedFormat":1},{"version":"4f56d6e331fb56edddc45713301b688dff04fae5defe553afbc464998e0995c5","signature":"42ea987fb72f4c8267d8cca356c4fa54392b89efee45611bce960b20bfc6dfa9","impliedFormat":1},{"version":"508503b0ca81a683fc5cd7ed6438bef42a28014cb8583f175fc2728bdee9bcc5","signature":"f54df125e9bce8031371280526f305802709177c821377ad0b0acab94f6f532a","impliedFormat":1},{"version":"3254a855916f9c12b518ceaa231fb62055e80b7520df1dcada37928e2cd02304","signature":"5b2aeee88a120adac456de7ca0be45b4bac8fe96199c4d009da6fedb6ec43c96","impliedFormat":1},{"version":"07002d4c369d31da3e478e3cafbf46747e8189366d45397b09afcabf87f46291","signature":"38f35d4b099e2b7d297c1d3633cd873d3b7c2ebbd57ca7b2390ea61c6c025c48","impliedFormat":1},{"version":"cc39071e339f89d79cbc34defbda81c11f798e8fef4922958d0ffbcd732bcbbd","signature":"026f9269b0967d54bdcbd1d810d200d42417242c306bc776d8e7d905db487aed","impliedFormat":1},{"version":"5a9ffc0682aeb335925a4a676d0a15130ae678f198aac62d8436bdfd9c266bf8","impliedFormat":1},{"version":"6c7176368037af28cb72f2392010fa1cef295d6d6744bca8cfb54985f3a18c3e","affectsGlobalScope":true,"impliedFormat":1},{"version":"ab41ef1f2cdafb8df48be20cd969d875602483859dc194e9c97c8a576892c052","affectsGlobalScope":true,"impliedFormat":1},{"version":"437e20f2ba32abaeb7985e0afe0002de1917bc74e949ba585e49feba65da6ca1","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"d802f0e6b5188646d307f070d83512e8eb94651858de8a82d1e47f60fb6da4e2","affectsGlobalScope":true,"impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"763fe0f42b3d79b440a9b6e51e9ba3f3f91352469c1e4b3b67bfa4ff6352f3f4","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"7f182617db458e98fc18dfb272d40aa2fff3a353c44a89b2c0ccb3937709bfb5","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"a12d953aa755b14ac1d28ecdc1e184f3285b01d6d1e58abc11bf1826bc9d80e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"a38efe83ff77c34e0f418a806a01ca3910c02ee7d64212a59d59bca6c2c38fa1","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"2b06b93fd01bcd49d1a6bd1f9b65ddcae6480b9a86e9061634d6f8e354c1468f","impliedFormat":1},{"version":"fac88fbdde5ae2c50fe0a490d63ef7662509271d3c7d00543de8cdd82df2949a","affectsGlobalScope":true,"impliedFormat":1},{"version":"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","impliedFormat":1},{"version":"e9b97d69510658d2f4199b7d384326b7c4053b9e6645f5c19e1c2a54ede427fc","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"f478f6f5902dc144c0d6d7bdc919c5177cac4d17a8ca8653c2daf6d7dc94317f","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"9855e02d837744303391e5623a531734443a5f8e6e8755e018c41d63ad797db2","impliedFormat":1},{"version":"bdba81959361810be44bcfdd283f4d601e406ab5ad1d2bdff0ed480cf983c9d7","impliedFormat":1},{"version":"836a356aae992ff3c28a0212e3eabcb76dd4b0cc06bcb9607aeef560661b860d","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true,"impliedFormat":1},{"version":"b326f4813b90d230ec3950f66bd5b5ce3971aac5fac67cfafc54aa07b39fd07f","affectsGlobalScope":true,"impliedFormat":1},{"version":"25d130083f833251b5b4c2794890831b1b8ce2ead24089f724181576cf9d7279","impliedFormat":1},{"version":"ffe66ee5c9c47017aca2136e95d51235c10e6790753215608bff1e712ff54ec6","impliedFormat":1},{"version":"2b0439104c87ea2041f0f41d7ed44447fe87b5bd4d31535233176fa19882e800","impliedFormat":1},{"version":"017caf5d2a8ef581cf94f678af6ce7415e06956317946315560f1487b9a56167","impliedFormat":1},{"version":"528b62e4272e3ddfb50e8eed9e359dedea0a4d171c3eb8f337f4892aac37b24b","impliedFormat":1},{"version":"d71535813e39c23baa113bc4a29a0e187b87d1105ccc8c5a6ebaca38d9a9bff2","impliedFormat":1},{"version":"d83f86427b468176fbacb28ef302f152ad3d2d127664c627216e45cfa06fbf7e","affectsGlobalScope":true,"impliedFormat":1},{"version":"f72bc8fe16da67e4e3268599295797b202b95e54bd215a03f97e925dd1502a36","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"915e18c559321c0afaa8d34674d3eb77e1ded12c3e85bf2a9891ec48b07a1ca5","affectsGlobalScope":true,"impliedFormat":1},{"version":"ad7e61eca7f2f8bf47e72695f9f6663b75e41d87ef49abdb17c0cb843862f8aa","impliedFormat":1},{"version":"ecba2e44af95b0599c269a92628cec22e752868bce37396740deb51a5c547a26","impliedFormat":1},{"version":"46a9fb41a8f3bc7539eeebc15a6e04b9e55d7537a081615ad3614220d34c3e0f","impliedFormat":1},{"version":"a2f3aa60aece790303a62220456ff845a1b980899bdc2e81646b8e33d9d9cc15","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"933921f0bb0ec12ef45d1062a1fc0f27635318f4d294e4d99de9a5493e618ca2","impliedFormat":1},{"version":"71a0f3ad612c123b57239a7749770017ecfe6b66411488000aba83e4546fde25","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"4f9d8ca0c417b67b69eeb54c7ca1bedd7b56034bb9bfd27c5d4f3bc4692daca7","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"0be405730b99eee7dbb051d74f6c3c0f1f8661d86184a7122b82c2bfb0991922","impliedFormat":1},{"version":"199c8269497136f3a0f4da1d1d90ab033f899f070e0dd801946f2a241c8abba2","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"edbb3546af6a57fa655860fef11f4109390f4a2f1eab4a93f548ccc21d604a56","impliedFormat":1},{"version":"f0be1b8078cd549d91f37c30c222c2a187ac1cf981d994fb476a1adc61387b14","affectsGlobalScope":true,"impliedFormat":1},{"version":"0aaed1d72199b01234152f7a60046bc947f1f37d78d182e9ae09c4289e06a592","impliedFormat":1},{"version":"98ffdf93dfdd206516971d28e3e473f417a5cfd41172e46b4ce45008f640588e","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true,"impliedFormat":1},{"version":"27c45985c94b8b342110506d89ac2c145e1eaaac62fa4baae471c603ef3dda90","affectsGlobalScope":true,"impliedFormat":1},{"version":"0f7e00beefa952297cde4638b2124d2d9a1eed401960db18edcadaa8500c78eb","impliedFormat":1},{"version":"3a051941721a7f905544732b0eb819c8d88333a96576b13af08b82c4f17581e4","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"a4568ec1888b5306bbde6d9ede5c4a81134635fa8aad7eaad15752760eb9783f","affectsGlobalScope":true,"impliedFormat":1},{"version":"3797dd6f4ea3dc15f356f8cdd3128bfa18122213b38a80d6c1f05d8e13cbdad8","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1}],"root":[71,73,74,[77,84],[86,101]],"options":{"composite":true,"declaration":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"module":1,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"outDir":"./","sourceMap":true,"strict":true,"target":7},"referencedMap":[[70,1],[66,2],[68,2],[60,2],[52,2],[53,2],[62,2],[54,2],[55,2],[58,2],[69,2],[59,2],[57,2],[63,2],[64,3],[61,2],[56,2],[67,2],[65,2],[76,4],[75,2],[147,5],[148,5],[149,6],[108,7],[150,8],[151,9],[152,10],[103,2],[106,11],[104,2],[105,2],[153,12],[154,13],[155,14],[156,15],[157,16],[158,17],[159,17],[161,2],[160,18],[162,19],[163,20],[164,21],[146,22],[107,2],[165,23],[166,24],[167,25],[203,26],[168,27],[169,28],[170,29],[171,30],[172,31],[173,32],[177,33],[178,34],[179,35],[180,36],[181,36],[182,37],[183,2],[184,2],[185,38],[187,39],[186,40],[188,41],[189,42],[190,43],[191,44],[192,45],[193,46],[194,47],[195,48],[196,49],[197,50],[198,51],[199,52],[200,53],[201,54],[202,55],[85,2],[72,2],[102,2],[174,2],[175,2],[176,56],[49,2],[50,2],[10,2],[8,2],[9,2],[14,2],[13,2],[2,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[3,2],[23,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[51,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[1,2],[12,2],[11,2],[124,57],[134,58],[123,57],[144,59],[115,60],[114,61],[143,62],[137,63],[142,64],[117,65],[131,66],[116,67],[140,68],[112,69],[111,62],[141,70],[113,71],[118,72],[119,2],[122,72],[109,2],[145,73],[135,74],[126,75],[127,76],[129,77],[125,78],[128,79],[138,62],[120,80],[121,81],[130,82],[110,83],[133,74],[132,72],[136,2],[139,84],[101,85],[94,86],[71,87],[73,87],[77,2],[74,87],[89,88],[95,89],[90,90],[96,91],[97,92],[82,93],[80,94],[79,95],[92,96],[78,2],[81,97],[98,98],[99,99],[84,100],[93,101],[91,102],[87,103],[100,104],[86,105],[88,106],[83,107]],"latestChangedDtsFile":"./index.d.ts","version":"5.9.2"}
\ No newline at end of file
diff --git a/dist/esm/index.d.ts b/dist/esm/index.d.ts
index 0e9c31c4b4e4570331823d0f42fa15ccf607918c..a1594986297164308ba060496455a4bb9d666d84 100644
--- a/dist/esm/index.d.ts
+++ b/dist/esm/index.d.ts
@@ -1,26 +1,26 @@
-export * from './src/core.js';
-export * from './src/changes.js';
-export * from './src/decorator.js';
-export * from './src/decorator-builder.js';
-export * from './src/reference.js';
-export * from './src/serializer.js';
-export * from './src/serializer-facade.js';
-export * from './src/typeguard.js';
-export * from './src/types.js';
-export * from './src/utils.js';
-export * from './src/validator.js';
-export * from './src/validators.js';
-export * from './src/snapshot.js';
-export * from './src/change-detector.js';
-export * from './src/path.js';
-export * from './src/type-serialization.js';
-export * from './src/registry.js';
-export * from './src/default.js';
-export * from './src/mixin.js';
-export * from './src/reflection/type.js';
-export { typeAnnotation as metaAnnotation } from './src/reflection/type.js';
-export * from './src/reflection/processor.js';
-export * from './src/reflection/type.js';
-export * from './src/reflection/extends.js';
-export * from './src/reflection/reflection.js';
-export { TypeNumberBrand } from '@deepkit/type-spec';
+export * from "./src/change-detector.js";
+export * from "./src/changes.js";
+export * from "./src/core.js";
+export * from "./src/decorator-builder.js";
+export * from "./src/decorator.js";
+export * from "./src/default.js";
+export * from "./src/mixin.js";
+export * from "./src/path.js";
+export * from "./src/reference.js";
+export * from "./src/registry.js";
+export * from "./src/serializer-facade.js";
+export * from "./src/serializer.js";
+export * from "./src/snapshot.js";
+export * from "./src/type-serialization.js";
+export * from "./src/typeguard.js";
+export * from "./src/types.js";
+export * from "./src/utils.js";
+export * from "./src/validator.js";
+export * from "./src/validators.js";
+export * from "./src/reflection/type.js";
+export { typeAnnotation as metaAnnotation } from "./src/reflection/type.js";
+export * from "./src/reflection/extends.js";
+export * from "./src/reflection/processor.js";
+export * from "./src/reflection/reflection.js";
+export * from "./src/reflection/type.js";
+export { TypeNumberBrand } from "@deepkit/type-spec";
diff --git a/dist/esm/index.js b/dist/esm/index.js
index 0e5ac807a9d51a942626ebc2e425ececd221fe6a..81a19529e9f46e0f26b4af7a9cdba6261fe4c599 100644
--- a/dist/esm/index.js
+++ b/dist/esm/index.js
@@ -7,30 +7,30 @@
  *
  * You should have received a copy of the MIT License along with this program.
  */
-export * from './src/core.js';
-export * from './src/changes.js';
-export * from './src/decorator.js';
-export * from './src/decorator-builder.js';
-export * from './src/reference.js';
-export * from './src/serializer.js';
-export * from './src/serializer-facade.js';
-export * from './src/typeguard.js';
-export * from './src/types.js';
-export * from './src/utils.js';
-export * from './src/validator.js';
-export * from './src/validators.js';
-export * from './src/snapshot.js';
-export * from './src/change-detector.js';
-export * from './src/path.js';
-export * from './src/type-serialization.js';
-export * from './src/registry.js';
-export * from './src/default.js';
-export * from './src/mixin.js';
-export * from './src/reflection/type.js';
-export { typeAnnotation as metaAnnotation } from './src/reflection/type.js';
-export * from './src/reflection/processor.js';
-export * from './src/reflection/type.js';
-export * from './src/reflection/extends.js';
-export * from './src/reflection/reflection.js';
-export { TypeNumberBrand } from '@deepkit/type-spec';
+export * from "./src/change-detector.js";
+export * from "./src/changes.js";
+export * from "./src/core.js";
+export * from "./src/decorator-builder.js";
+export * from "./src/decorator.js";
+export * from "./src/default.js";
+export * from "./src/mixin.js";
+export * from "./src/path.js";
+export * from "./src/reference.js";
+export * from "./src/registry.js";
+export * from "./src/serializer-facade.js";
+export * from "./src/serializer.js";
+export * from "./src/snapshot.js";
+export * from "./src/type-serialization.js";
+export * from "./src/typeguard.js";
+export * from "./src/types.js";
+export * from "./src/utils.js";
+export * from "./src/validator.js";
+export * from "./src/validators.js";
+export * from "./src/reflection/type.js";
+export { typeAnnotation as metaAnnotation } from "./src/reflection/type.js";
+export * from "./src/reflection/extends.js";
+export * from "./src/reflection/processor.js";
+export * from "./src/reflection/reflection.js";
+export * from "./src/reflection/type.js";
+export { TypeNumberBrand } from "@deepkit/type-spec";
 //# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/dist/esm/index.js.map b/dist/esm/index.js.map
index 9f8472efd7a20d4f9be89574d9349b983c9d8cef..68956f3ca5dda1a9c8c9b61c105758477a88f9ca 100644
--- a/dist/esm/index.js.map
+++ b/dist/esm/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../index.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAEH,cAAc,eAAe,CAAC;AAC9B,cAAc,kBAAkB,CAAC;AACjC,cAAc,oBAAoB,CAAC;AACnC,cAAc,4BAA4B,CAAC;AAC3C,cAAc,oBAAoB,CAAC;AACnC,cAAc,qBAAqB,CAAC;AACpC,cAAc,4BAA4B,CAAC;AAC3C,cAAc,oBAAoB,CAAC;AACnC,cAAc,gBAAgB,CAAC;AAC/B,cAAc,gBAAgB,CAAC;AAC/B,cAAc,oBAAoB,CAAC;AACnC,cAAc,qBAAqB,CAAC;AACpC,cAAc,mBAAmB,CAAC;AAClC,cAAc,0BAA0B,CAAC;AACzC,cAAc,eAAe,CAAC;AAC9B,cAAc,6BAA6B,CAAC;AAC5C,cAAc,mBAAmB,CAAC;AAClC,cAAc,kBAAkB,CAAC;AACjC,cAAc,gBAAgB,CAAC;AAE/B,cAAc,0BAA0B,CAAC;AACzC,OAAO,EAAE,cAAc,IAAI,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAE5E,cAAc,+BAA+B,CAAC;AAC9C,cAAc,0BAA0B,CAAC;AACzC,cAAc,6BAA6B,CAAC;AAC5C,cAAc,gCAAgC,CAAC;AAE/C,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../index.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAEH,cAAc,0BAA0B,CAAC;AACzC,cAAc,kBAAkB,CAAC;AACjC,cAAc,eAAe,CAAC;AAC9B,cAAc,4BAA4B,CAAC;AAC3C,cAAc,oBAAoB,CAAC;AACnC,cAAc,kBAAkB,CAAC;AACjC,cAAc,gBAAgB,CAAC;AAC/B,cAAc,eAAe,CAAC;AAC9B,cAAc,oBAAoB,CAAC;AACnC,cAAc,mBAAmB,CAAC;AAClC,cAAc,4BAA4B,CAAC;AAC3C,cAAc,qBAAqB,CAAC;AACpC,cAAc,mBAAmB,CAAC;AAClC,cAAc,6BAA6B,CAAC;AAC5C,cAAc,oBAAoB,CAAC;AACnC,cAAc,gBAAgB,CAAC;AAC/B,cAAc,gBAAgB,CAAC;AAC/B,cAAc,oBAAoB,CAAC;AACnC,cAAc,qBAAqB,CAAC;AAEpC,cAAc,0BAA0B,CAAC;AACzC,OAAO,EAAE,cAAc,IAAI,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAE5E,cAAc,6BAA6B,CAAC;AAC5C,cAAc,+BAA+B,CAAC;AAC9C,cAAc,gCAAgC,CAAC;AAC/C,cAAc,0BAA0B,CAAC;AAEzC,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC"}
\ No newline at end of file
diff --git a/dist/esm/src/core.d.ts b/dist/esm/src/core.d.ts
index 890424c19ae36d315461360ce2770ca519571606..735d3d07312f27227a0e7c8a77bc3720269c53f9 100644
--- a/dist/esm/src/core.d.ts
+++ b/dist/esm/src/core.d.ts
@@ -1,5 +1,5 @@
-import { Buffer } from 'buffer';
-import { ClassType } from '@deepkit/core';
+import { ClassType } from "@deepkit/core";
+import { Buffer } from "buffer";
 export declare enum UnpopulatedCheck {
     None = 0,//returns undefined
     Throw = 1,//throws regular error
@@ -77,7 +77,7 @@ export declare function arrayBufferFrom(data: string, encoding?: string): ArrayB
 /**
  * Same as Buffer.from(arrayBuffer).toString(encoding), but more in line with the current API.
  */
-export declare function arrayBufferTo(arrayBuffer: ArrayBuffer, encoding?: string | 'utf8' | 'base64' | 'ascii'): string;
+export declare function arrayBufferTo(arrayBuffer: ArrayBuffer, encoding?: string | "utf8" | "base64" | "ascii"): string;
 export declare type __ΩUnpopulatedCheck = any[];
 export declare type __ΩTypeSettings = any[];
 export declare type __ΩTypedArrayClassType = any[];
diff --git a/dist/esm/src/core.js b/dist/esm/src/core.js
index 2da8bb43c399af4db4985eaefd69891c2de1a522..d4fc771ab36779db6080715357fb6d0bb5fa42af 100644
--- a/dist/esm/src/core.js
+++ b/dist/esm/src/core.js
@@ -1,17 +1,8 @@
 const __ΩArrayBufferLike = [() => __ΩArrayBufferTypes, () => __ΩArrayBufferTypes, 'ArrayBufferLike', 'n!n"gfw#y'];
 const __ΩArrayBufferTypes = ['ArrayBuffer', 'ArrayBufferTypes', 'P_4!Mw"y'];
 /*@ts-ignore*/
-import { __ΩClassType } from '@deepkit/core';
-/*
- * Deepkit Framework
- * Copyright (c) Deepkit UG, Marc J. Schmidt
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the MIT License.
- *
- * You should have received a copy of the MIT License along with this program.
- */
-import { Buffer } from 'buffer';
+import { __ΩClassType } from "@deepkit/core";
+import { Buffer } from "buffer";
 const __ΩUnpopulatedCheck = ['None', 'Throw', 'ReturnSymbol', 'UnpopulatedCheck', 'PC!C"C#Bw$'];
 export { __ΩUnpopulatedCheck as __ΩUnpopulatedCheck };
 //on unpopulated properties access
@@ -19,12 +10,15 @@ export var UnpopulatedCheck;
 (function (UnpopulatedCheck) {
     UnpopulatedCheck[UnpopulatedCheck["None"] = 0] = "None";
     UnpopulatedCheck[UnpopulatedCheck["Throw"] = 1] = "Throw";
-    UnpopulatedCheck[UnpopulatedCheck["ReturnSymbol"] = 2] = "ReturnSymbol";
+    UnpopulatedCheck[UnpopulatedCheck["ReturnSymbol"] = 2] = "ReturnSymbol"; //returns `unpopulatedSymbol`
 })(UnpopulatedCheck || (UnpopulatedCheck = {}));
-export const unpopulatedSymbol = Symbol('unpopulated');
+export const unpopulatedSymbol = Symbol("unpopulated");
 const __ΩTypeSettings = [() => __ΩClassType, 'registeredEntities', () => __ΩUnpopulatedCheck, 'unpopulatedCheck', 'TypeSettings', 'PP&n!LM4"n#4$Mw%y'];
 export { __ΩTypeSettings as __ΩTypeSettings };
-export const typeSettings = { registeredEntities: {}, unpopulatedCheck: UnpopulatedCheck.Throw };
+export const typeSettings = {
+    registeredEntities: {},
+    unpopulatedCheck: UnpopulatedCheck.Throw
+};
 const __ΩTypedArrayClassType = ['T', 'args', 'new', 'BYTES_PER_ELEMENT', 'TypedArrayClassType', 'b!PP"@2"e#!1#\'4$9Mw%y'];
 export { __ΩTypedArrayClassType as __ΩTypedArrayClassType };
 const __ΩTypedArray = ['BYTES_PER_ELEMENT', () => __ΩArrayBufferLike, 'buffer', 'length', 'byteLength', 'byteOffset', 'TypedArray', 'P\'4!9n"4#9\'4$9\'4%9\'4&9Mw\'y'];
@@ -56,10 +50,10 @@ base64ToUint8ArrayAtoB.__type = ['base64', 'base64ToUint8ArrayAtoB', 'P&2!W/"'];
  * a raw ArrayBuffer that represents the actual data correctly.
  */
 export function base64ToTypedArray(base64, type) {
-    if ('function' === typeof atob) {
+    if ("function" === typeof atob) {
         return new type(base64ToUint8ArrayAtoB(base64).buffer);
     }
-    return nodeBufferToTypedArray(Buffer.from(base64, 'base64'), type);
+    return nodeBufferToTypedArray(Buffer.from(base64, "base64"), type);
 }
 base64ToTypedArray.__type = ['base64', () => __ΩTypedArrayClassType, 'type', 'base64ToTypedArray', 'P&2!"o""2#"/$'];
 /**
@@ -68,10 +62,10 @@ base64ToTypedArray.__type = ['base64', () => __ΩTypedArrayClassType, 'type', 'b
  * sure a copy happens and the ArrayBuffer is not shared.
  */
 export function base64ToArrayBuffer(base64) {
-    if ('function' === typeof atob) {
+    if ("function" === typeof atob) {
         return base64ToUint8ArrayAtoB(base64).buffer;
     }
-    return nodeBufferToArrayBuffer(Buffer.from(base64, 'base64'));
+    return nodeBufferToArrayBuffer(Buffer.from(base64, "base64"));
 }
 base64ToArrayBuffer.__type = ['base64', 'base64ToArrayBuffer', 'P&2!_/"'];
 /**
@@ -98,11 +92,11 @@ export function typedArrayToBuffer(typedArray) {
 }
 typedArrayToBuffer.__type = [() => __ΩTypedArray, 'typedArray', () => Buffer, 'typedArrayToBuffer', 'Pn!2"P7#/$'];
 export function arrayBufferToBase64(arrayBuffer) {
-    return Buffer.from(arrayBuffer).toString('base64');
+    return Buffer.from(arrayBuffer).toString("base64");
 }
 arrayBufferToBase64.__type = ['arrayBuffer', 'arrayBufferToBase64', 'P_2!&/"'];
 export function typedArrayToBase64(typedArray) {
-    return typedArrayToBuffer(typedArray).toString('base64');
+    return typedArrayToBuffer(typedArray).toString("base64");
 }
 typedArrayToBase64.__type = [() => __ΩTypedArray, 'typedArray', 'typedArrayToBase64', 'Pn!2"&/#'];
 /**
diff --git a/dist/esm/src/core.js.map b/dist/esm/src/core.js.map
index c934b7da25c54db86f631c199849966406d703b1..3edd0e57203167d8a0485f10306426f342dda77f 100644
--- a/dist/esm/src/core.js.map
+++ b/dist/esm/src/core.js.map
@@ -1 +1 @@
-{"version":3,"file":"core.js","sourceRoot":"","sources":["../../../src/core.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"core.js","sourceRoot":"","sources":["../../../src/core.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/src/default.d.ts b/dist/esm/src/default.d.ts
index 302e08e9edd71bb44e18d8d7071c61842d5162a0..9a2c9f096e7189e69130d5c9a154abf56e56d371 100644
--- a/dist/esm/src/default.d.ts
+++ b/dist/esm/src/default.d.ts
@@ -1,4 +1,4 @@
-import { Type } from './reflection/type.js';
+import { Type } from "./reflection/type.js";
 /**
  * Returns a sensible default value for a given type.
  * Sensible means it satisfies the type checker, but not necessarily attached validators.
diff --git a/dist/esm/src/default.js b/dist/esm/src/default.js
index e805325ba52eea9a6c5bbee2591718ff9695bc6d..78eb040071fc97716952faefaab9bcd038815d7c 100644
--- a/dist/esm/src/default.js
+++ b/dist/esm/src/default.js
@@ -1,4 +1,4 @@
-import { binaryTypes, ReflectionKind, resolveTypeMembers } from './reflection/type.js';
+import { binaryTypes, ReflectionKind, resolveTypeMembers } from "./reflection/type.js";
 /**
  * Returns a sensible default value for a given type.
  * Sensible means it satisfies the type checker, but not necessarily attached validators.
@@ -14,7 +14,7 @@ export function defaultValue(type) {
         case ReflectionKind.null:
             return null;
         case ReflectionKind.string:
-            return '';
+            return "";
         case ReflectionKind.number:
             return 0;
         case ReflectionKind.boolean:
@@ -63,28 +63,34 @@ export function defaultValue(type) {
             const types = resolveTypeMembers(type);
             for (const type of types) {
                 if (type.kind === ReflectionKind.propertySignature) {
-                    if (type.optional)
+                    if (type.optional) {
                         continue;
+                    }
                     result[type.name] = defaultValue(type.type);
                 }
             }
             return result;
         }
         case ReflectionKind.class: {
-            if (type.classType === Date)
-                return new Date;
-            if (type.classType === Set)
-                return new Set;
-            if (type.classType === Map)
-                return new Map;
-            if (binaryTypes.includes(type.classType))
-                return new type.classType;
+            if (type.classType === Date) {
+                return new Date();
+            }
+            if (type.classType === Set) {
+                return new Set();
+            }
+            if (type.classType === Map) {
+                return new Map();
+            }
+            if (binaryTypes.includes(type.classType)) {
+                return new type.classType();
+            }
             const result = {};
             const types = resolveTypeMembers(type);
             for (const type of types) {
                 if (type.kind === ReflectionKind.property) {
-                    if (type.optional)
+                    if (type.optional) {
                         continue;
+                    }
                     result[type.name] = defaultValue(type.type);
                 }
             }
diff --git a/dist/esm/src/default.js.map b/dist/esm/src/default.js.map
index 0eb4f54f2cbc49aab22c142dd03c539d1a9ef3da..e9c81a5ae8d9a8595de9c714f348b4eaacb80f70 100644
--- a/dist/esm/src/default.js.map
+++ b/dist/esm/src/default.js.map
@@ -1 +1 @@
-{"version":3,"file":"default.js","sourceRoot":"","sources":["../../../src/default.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"default.js","sourceRoot":"","sources":["../../../src/default.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/src/reflection/processor.d.ts b/dist/esm/src/reflection/processor.d.ts
index 1cf6e4d91f5a176d6dfc4281b3c1f8aa043f984f..9874f1da5856426846d0c726ec9043e646f99502 100644
--- a/dist/esm/src/reflection/processor.d.ts
+++ b/dist/esm/src/reflection/processor.d.ts
@@ -1,6 +1,6 @@
-import { Type } from './type.js';
-import { ReflectionOp } from '@deepkit/type-spec';
-import { ClassType } from '@deepkit/core';
+import { ClassType } from "@deepkit/core";
+import { ReflectionOp } from "@deepkit/type-spec";
+import { Type } from "./type.js";
 export type RuntimeStackEntry = Type | Object | (() => ClassType | Object) | string | number | boolean | bigint;
 export type Packed = (RuntimeStackEntry | string)[] & {
     __is?: (data: any) => boolean;
diff --git a/dist/esm/src/reflection/processor.js b/dist/esm/src/reflection/processor.js
index 2ced1eead5efb0f966e7954f187ce3deb62c2b72..4cac11ec3e62d3e13ef771a134bc8f2596f6f27e 100644
--- a/dist/esm/src/reflection/processor.js
+++ b/dist/esm/src/reflection/processor.js
@@ -7,19 +7,19 @@ const __ΩIteratorResult = ['T', 'TReturn', () => __ΩIteratorYieldResult, () =>
 const __ΩIteratorYieldResult = ['TYield', false, 'done', 'value', 'IteratorYieldResult', 'b!P."4#8e"!4$Mw%y'];
 const __ΩIteratorReturnResult = ['TReturn', true, 'done', 'value', 'IteratorReturnResult', 'b!P."4#e"!4$Mw%y'];
 /*@ts-ignore*/
-import { __ΩClassType } from '@deepkit/core';
+import { __ΩClassType } from "@deepkit/core";
 /*@ts-ignore*/
-import { __ΩTypeClass } from './type.js';
+import { __ΩTypeClass } from "./type.js";
 /*@ts-ignore*/
-import { __ΩTypePropertySignature } from './type.js';
+import { __ΩTypePropertySignature } from "./type.js";
 /*@ts-ignore*/
-import { __ΩTypeMethodSignature } from './type.js';
+import { __ΩTypeMethodSignature } from "./type.js";
 /*@ts-ignore*/
-import { __ΩTypeObjectLiteral } from './type.js';
+import { __ΩTypeObjectLiteral } from "./type.js";
 /*@ts-ignore*/
-import { __ΩTypeIndexSignature } from './type.js';
+import { __ΩTypeIndexSignature } from "./type.js";
 /*@ts-ignore*/
-import { __ΩTypeCallSignature } from './type.js';
+import { __ΩTypeCallSignature } from "./type.js";
 function __assignType(fn, args) {
     fn.__type = args;
     return fn;
@@ -33,14 +33,14 @@ function __assignType(fn, args) {
  *
  * You should have received a copy of the MIT License along with this program.
  */
-import { applyScheduledAnnotations, CartesianProduct, copyAndSetParent, defaultAnnotation, flattenUnionTypes, getAnnotations, getMember, indexAccess, isMember, isPrimitive, isSameType, isType, isTypeIncluded, isWithAnnotations, merge, narrowOriginalLiteral, ReflectionKind, ReflectionVisibility, stringifyType, typeDecorators, unboxUnion, validationAnnotation, widenLiteral, } from './type.js';
-import { ReflectionOp } from '@deepkit/type-spec';
-import { isExtendable } from './extends.js';
-import { isArray, isClass, isFunction, stringifyValueWithType } from '@deepkit/core';
-import { isWithDeferredDecorators } from '../decorator.js';
-import { ReflectionClass, TData } from './reflection.js';
-import { state } from './state.js';
-import { debug } from '../debug.js';
+import { isArray, isClass, isFunction, stringifyValueWithType } from "@deepkit/core";
+import { ReflectionOp } from "@deepkit/type-spec";
+import { debug } from "../debug.js";
+import { isWithDeferredDecorators } from "../decorator.js";
+import { isExtendable } from "./extends.js";
+import { ReflectionClass, TData } from "./reflection.js";
+import { state } from "./state.js";
+import { applyScheduledAnnotations, CartesianProduct, copyAndSetParent, defaultAnnotation, flattenUnionTypes, getAnnotations, getMember, indexAccess, isMember, isPrimitive, isSameType, isType, isTypeIncluded, isWithAnnotations, merge, narrowOriginalLiteral, ReflectionKind, ReflectionVisibility, stringifyType, typeDecorators, unboxUnion, validationAnnotation, widenLiteral } from "./type.js";
 const __ΩRuntimeStackEntry = ['Type', () => __ΩObject, () => __ΩClassType, () => __ΩObject, '', 'RuntimeStackEntry', 'P"w!n"PPn#n$J/%&\')*Jw&y'];
 export { __ΩRuntimeStackEntry as __ΩRuntimeStackEntry };
 const __ΩPacked = [() => __ΩRuntimeStackEntry, 'data', '', '__is', 'Type', '__type', () => PackStruct, '__unpack', 'Packed', 'PPn!&JFPP"2")/#4$8MP"w%4&8MPP7\'4(8MKw)y'];
@@ -59,7 +59,7 @@ function unpackOps(decodedOps, encodedOPs) {
 }
 unpackOps.__type = ['ReflectionOp', 'decodedOps', 'encodedOPs', 'unpackOps', 'P"w!F2"&2#$/$'];
 export function encodeOps(ops) {
-    return ops.map(__assignType(v => String.fromCharCode(v + 33), ['v', '', 'P"2!"/"'])).join('');
+    return ops.map(__assignType(v => String.fromCharCode(v + 33), ['v', '', 'P"2!"/"'])).join("");
 }
 encodeOps.__type = ['ReflectionOp', 'ops', 'encodeOps', 'P"w!F2"&/#'];
 /**
@@ -80,7 +80,7 @@ export function unpack(pack) {
     const ops = [];
     const encodedOPs = pack[pack.length - 1];
     //the end has always to be a string
-    if ('string' !== typeof encodedOPs)
+    if ("string" !== typeof encodedOPs)
         return { ops: [], stack: [] };
     unpackOps(ops, encodedOPs);
     return { ops, stack: pack.length > 1 ? pack.slice(0, -1) : [] };
@@ -104,7 +104,7 @@ export function resolveRuntimeType(o, args = [], options) {
     if (isType(type)) {
         return type;
     }
-    throw new Error('No type returned from runtime type program');
+    throw new Error("No type returned from runtime type program");
 }
 resolveRuntimeType.__type = [() => __ΩClassType, () => Function, () => __ΩPacked, 'o', 'args', () => [], () => __ΩReflectOptions, 'options', 'Type', 'resolveRuntimeType', 'PPn!Pu"n#"J2$"F2%>&n\'2(8"w)/*'];
 const __ΩFrame = ['index', 'startIndex', 'variables', () => __ΩRuntimeStackEntry, 'inputs', 0, 'previous', () => Loop, 'mappedType', () => Loop, 'distributiveLoop', 'Frame', 'P\'4!\'4"\'4#n$F4%n&4\'8P7(4)8P7*4+8Mw,y'];
@@ -132,12 +132,14 @@ function assignResult(ref, result, assignParents) {
         // if (ref.kind === ReflectionKind.class && ref.arguments) {
         //     for (const member of ref.arguments) member.parent = ref;
         // }
-        if (ref.kind === ReflectionKind.function || ref.kind === ReflectionKind.method || ref.kind === ReflectionKind.methodSignature) {
+        if (ref.kind === ReflectionKind.function ||
+            ref.kind === ReflectionKind.method ||
+            ref.kind === ReflectionKind.methodSignature) {
             ref.return.parent = ref;
             for (const member of ref.parameters)
                 member.parent = ref;
         }
-        if ('types' in ref) {
+        if ("types" in ref) {
             for (const member of ref.types) {
                 member.parent = ref;
             }
@@ -147,7 +149,7 @@ function assignResult(ref, result, assignParents) {
 }
 assignResult.__type = ['Type', 'ref', 'result', 'assignParents', 'assignResult', 'P"w!2""2#)2$"/%'];
 function isConditionTruthy(condition) {
-    if ('number' === typeof condition)
+    if ("number" === typeof condition)
         return condition !== 0;
     return !!(condition.kind === ReflectionKind.literal && condition.literal);
 }
@@ -155,7 +157,13 @@ isConditionTruthy.__type = ['Type', 'condition', 'isConditionTruthy', 'PP"w!\'J2
 function createProgram(options, inputs) {
     const program = {
         active: true,
-        frame: { index: 0, startIndex: -1, inputs: inputs || [], variables: 0, previous: undefined },
+        frame: {
+            index: 0,
+            startIndex: -1,
+            inputs: inputs || [],
+            variables: 0,
+            previous: undefined
+        },
         stack: options.stack || [],
         stackPointer: options.stackPointer ?? -1,
         program: 0,
@@ -169,7 +177,7 @@ function createProgram(options, inputs) {
         // resultTypes: [],
         // typeParameters: [],
         // previous: undefined,
-        object: options.object,
+        object: options.object
     };
     if (options.initialStack)
         for (let i = 0; i < options.initialStack.length; i++) {
@@ -180,7 +188,9 @@ function createProgram(options, inputs) {
                 program.stack.push(options.initialStack[i]);
             }
         }
-    program.stackPointer = options.initialStack ? options.initialStack.length - 1 : -1;
+    program.stackPointer = options.initialStack
+        ? options.initialStack.length - 1
+        : -1;
     program.frame.startIndex = program.stackPointer;
     return program;
 }
@@ -192,7 +202,8 @@ function isValidCacheEntry(current, object, inputs = []) {
         let sameInputs = current.inputs.length === inputs.length;
         if (sameInputs) {
             for (let i = 0; i < current.inputs.length; i++) {
-                if (!inputs[i] || !isSameType(current.inputs[i], inputs[i])) {
+                if (!inputs[i] ||
+                    !isSameType(current.inputs[i], inputs[i])) {
                     sameInputs = false;
                     break;
                 }
@@ -218,7 +229,8 @@ function findExistingProgram(current, object, inputs = []) {
             let sameInputs = current.inputs.length === inputs.length;
             if (sameInputs) {
                 for (let i = 0; i < current.inputs.length; i++) {
-                    if (!inputs[i] || !isSameType(current.inputs[i], inputs[i])) {
+                    if (!inputs[i] ||
+                        !isSameType(current.inputs[i], inputs[i])) {
                         sameInputs = false;
                         break;
                     }
@@ -264,13 +276,13 @@ export class Processor {
             inputs: [],
             end: 0,
             ops: [],
-            started: 0,
+            started: 0
             // previous: undefined,
             // object: undefined,
         };
     }
     static get() {
-        return Processor.typeProcessor || (Processor.typeProcessor = new Processor());
+        return (Processor.typeProcessor || (Processor.typeProcessor = new Processor()));
     }
     reflect(object, inputs = [], options = {}) {
         const start = Date.now();
@@ -288,8 +300,10 @@ export class Processor {
                 //functions without any type annotations do not have the overhead of an assigned __type
                 return {
                     kind: ReflectionKind.function,
-                    function: object, name: object.name,
-                    parameters: [], return: { kind: ReflectionKind.any },
+                    function: object,
+                    name: object.name,
+                    parameters: [],
+                    return: { kind: ReflectionKind.any }
                 };
             }
             throw new Error(`No valid runtime type for ${stringifyValueWithType(object)} given. Is @deepkit/type-compiler correctly installed? Execute deepkit-type-install to check`);
@@ -313,7 +327,9 @@ export class Processor {
         //We cache only direct non-generic (inputs empty) types passed to typeOf<>() or resolveRuntimeType(). all other reflect() calls do not use this cache.
         //make sure the same type is returned if already known.
         //packed.length === 0 for deserialized TypeClass with reconstructed classes.
-        if ((options.reuseCached || packed.length === 0) && packed.__type && inputs.length === 0) {
+        if ((options.reuseCached || packed.length === 0) &&
+            packed.__type &&
+            inputs.length === 0) {
             return packed.__type;
         }
         //all computed types should be cached until the program terminates, otherwise a lot of types will be computed
@@ -323,7 +339,9 @@ export class Processor {
         for (const cache of this.cache) {
             if (isValidCacheEntry(cache, object, inputs)) {
                 //if program is still active, create new ref otherwise copy computed type
-                const result = cache.active ? createRef(cache) : copyAndSetParent(cache.resultType);
+                const result = cache.active
+                    ? createRef(cache)
+                    : copyAndSetParent(cache.resultType);
                 result.typeName || (result.typeName = options.typeName);
                 return result;
             }
@@ -337,7 +355,7 @@ export class Processor {
             return result;
         }
         // process.stdout.write(`${options.reuseCached} Cache miss ${stringifyValueWithType(object)}(...${inputs.length})\n`);
-        const pack = packed.__unpack || (packed.__unpack = unpack(packed));
+        const pack = (packed.__unpack || (packed.__unpack = unpack(packed)));
         const program = createProgram({ ops: pack.ops, initialStack: pack.stack, object }, inputs);
         const type = this.runProgram(program);
         type.typeName || (type.typeName = options.typeName);
@@ -433,7 +451,10 @@ export class Processor {
                         break;
                     case ReflectionOp.literal: {
                         const ref = this.eatParameter();
-                        this.pushType({ kind: ReflectionKind.literal, literal: program.stack[ref] });
+                        this.pushType({
+                            kind: ReflectionKind.literal,
+                            literal: program.stack[ref]
+                        });
                         break;
                     }
                     case ReflectionOp.templateLiteral: {
@@ -441,56 +462,107 @@ export class Processor {
                         break;
                     }
                     case ReflectionOp.date:
-                        this.pushType({ kind: ReflectionKind.class, classType: Date, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: Date,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.uint8Array:
-                        this.pushType({ kind: ReflectionKind.class, classType: Uint8Array, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: Uint8Array,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.int8Array:
-                        this.pushType({ kind: ReflectionKind.class, classType: Int8Array, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: Int8Array,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.uint8ClampedArray:
-                        this.pushType({ kind: ReflectionKind.class, classType: Uint8ClampedArray, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: Uint8ClampedArray,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.uint16Array:
-                        this.pushType({ kind: ReflectionKind.class, classType: Uint16Array, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: Uint16Array,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.int16Array:
-                        this.pushType({ kind: ReflectionKind.class, classType: Int16Array, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: Int16Array,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.uint32Array:
-                        this.pushType({ kind: ReflectionKind.class, classType: Uint32Array, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: Uint32Array,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.int32Array:
-                        this.pushType({ kind: ReflectionKind.class, classType: Int32Array, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: Int32Array,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.float32Array:
-                        this.pushType({ kind: ReflectionKind.class, classType: Float32Array, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: Float32Array,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.float64Array:
-                        this.pushType({ kind: ReflectionKind.class, classType: Float64Array, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: Float64Array,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.bigInt64Array:
                         this.pushType({
                             kind: ReflectionKind.class,
-                            classType: 'undefined' !== typeof BigInt64Array ? BigInt64Array : class BigInt64ArrayNotAvailable {
-                            },
-                            types: [],
+                            classType: "undefined" !== typeof BigInt64Array
+                                ? BigInt64Array
+                                : class BigInt64ArrayNotAvailable {
+                                },
+                            types: []
                         });
                         break;
                     case ReflectionOp.arrayBuffer:
-                        this.pushType({ kind: ReflectionKind.class, classType: ArrayBuffer, types: [] });
+                        this.pushType({
+                            kind: ReflectionKind.class,
+                            classType: ArrayBuffer,
+                            types: []
+                        });
                         break;
                     case ReflectionOp.class: {
                         const types = this.popFrame();
-                        let t = { kind: ReflectionKind.class, id: state.nominalId++, classType: Object, types: [] };
+                        let t = {
+                            kind: ReflectionKind.class,
+                            id: state.nominalId++,
+                            classType: Object,
+                            types: []
+                        };
                         function add(member) {
                             if (member.kind === ReflectionKind.propertySignature) {
                                 member = {
                                     ...member,
                                     parent: t,
                                     visibility: ReflectionVisibility.public,
-                                    kind: ReflectionKind.property,
+                                    kind: ReflectionKind.property
                                 };
                             }
                             else if (member.kind === ReflectionKind.methodSignature) {
@@ -498,7 +570,7 @@ export class Processor {
                                     ...member,
                                     parent: t,
                                     visibility: ReflectionVisibility.public,
-                                    kind: ReflectionKind.method,
+                                    kind: ReflectionKind.method
                                 };
                             }
                             switch (member.kind) {
@@ -509,26 +581,32 @@ export class Processor {
                                 }
                                 case ReflectionKind.property:
                                 case ReflectionKind.method: {
-                                    const existing = t.types.findIndex(v => (v.kind === ReflectionKind.property || v.kind === ReflectionKind.method) && v.name === member.name);
+                                    const existing = t.types.findIndex(v => (v.kind === ReflectionKind.property ||
+                                        v.kind === ReflectionKind.method) &&
+                                        v.name === member.name);
                                     if (existing !== -1) {
                                         //remove entry, since we replace it
                                         t.types.splice(existing, 1);
                                     }
                                     t.types.push(member);
-                                    if (member.kind === ReflectionKind.method && member.name === 'constructor') {
+                                    if (member.kind === ReflectionKind.method &&
+                                        member.name === "constructor") {
                                         for (const parameter of member.parameters) {
-                                            if (parameter.visibility !== undefined || parameter.readonly) {
+                                            if (parameter.visibility !== undefined ||
+                                                parameter.readonly) {
                                                 const property = {
                                                     kind: ReflectionKind.property,
                                                     name: parameter.name,
                                                     visibility: parameter.visibility,
                                                     default: parameter.default,
-                                                    type: parameter.type,
+                                                    type: parameter.type
                                                 };
-                                                if (parameter.optional)
+                                                if (parameter.optional) {
                                                     property.optional = true;
-                                                if (parameter.readonly)
+                                                }
+                                                if (parameter.readonly) {
                                                     property.readonly = true;
+                                                }
                                                 parameter.type.parent = property;
                                                 add(property);
                                             }
@@ -588,12 +666,18 @@ export class Processor {
                         for (let i = 0; i < argsNumber; i++) {
                             types.push(this.pop());
                         }
-                        program.stack[program.stackPointer].implements = types;
+                        program.stack[program.stackPointer].implements =
+                            types;
                         break;
                     }
                     case ReflectionOp.parameter: {
                         const ref = this.eatParameter();
-                        const t = { kind: ReflectionKind.parameter, parent: undefined, name: program.stack[ref], type: this.pop() };
+                        const t = {
+                            kind: ReflectionKind.parameter,
+                            parent: undefined,
+                            name: program.stack[ref],
+                            type: this.pop()
+                        };
                         t.type.parent = t;
                         this.pushType(t);
                         break;
@@ -609,16 +693,31 @@ export class Processor {
                         }
                         if (!classOrFunction.__type) {
                             if (op === ReflectionOp.classReference) {
-                                this.pushType({ kind: ReflectionKind.class, classType: classOrFunction, typeArguments: inputs, types: [] });
+                                this.pushType({
+                                    kind: ReflectionKind.class,
+                                    classType: classOrFunction,
+                                    typeArguments: inputs,
+                                    types: []
+                                });
                             }
                             else if (op === ReflectionOp.functionReference) {
-                                this.pushType({ kind: ReflectionKind.function, function: classOrFunction, parameters: [], return: { kind: ReflectionKind.unknown } });
+                                this.pushType({
+                                    kind: ReflectionKind.function,
+                                    function: classOrFunction,
+                                    parameters: [],
+                                    return: { kind: ReflectionKind.unknown }
+                                });
                             }
                         }
                         else {
                             //when it's just a simple reference resolution like typeOf<Class>() then enable cache re-use (so always the same type is returned)
-                            const directReference = !!(this.isEnded() && program.previous && program.previous.end === 0);
-                            const result = this.reflect(classOrFunction, inputs, { inline: !directReference, reuseCached: directReference });
+                            const directReference = !!(this.isEnded() &&
+                                program.previous &&
+                                program.previous.end === 0);
+                            const result = this.reflect(classOrFunction, inputs, {
+                                inline: !directReference,
+                                reuseCached: directReference
+                            });
                             if (directReference)
                                 program.directReturn = true;
                             this.push(result, program);
@@ -642,10 +741,12 @@ export class Processor {
                         const enumType = {};
                         let i = 0;
                         for (const type of types) {
-                            if (type.default) {
-                                const v = type.default();
+                            if (type.default !== undefined) {
+                                const v = typeof type.default === "function"
+                                    ? type.default()
+                                    : type.default;
                                 enumType[type.name] = v;
-                                if ('number' === typeof v) {
+                                if ("number" === typeof v) {
                                     i = v + 1;
                                 }
                             }
@@ -654,7 +755,12 @@ export class Processor {
                             }
                         }
                         const values = Object.values(enumType);
-                        const t = { kind: ReflectionKind.enum, enum: enumType, values, indexType: getEnumType(values) };
+                        const t = {
+                            kind: ReflectionKind.enum,
+                            enum: enumType,
+                            values,
+                            indexType: getEnumType(values)
+                        };
                         this.pushType(t);
                         break;
                     }
@@ -663,7 +769,7 @@ export class Processor {
                         this.pushType({
                             kind: ReflectionKind.enumMember,
                             parent: undefined,
-                            name: isFunction(name) ? name() : name,
+                            name: isFunction(name) ? name() : name
                         });
                         break;
                     }
@@ -673,8 +779,9 @@ export class Processor {
                     }
                     case ReflectionOp.tupleMember: {
                         const t = {
-                            kind: ReflectionKind.tupleMember, type: this.pop(),
-                            parent: undefined,
+                            kind: ReflectionKind.tupleMember,
+                            type: this.pop(),
+                            parent: undefined
                         };
                         t.type.parent = t;
                         this.pushType(t);
@@ -683,9 +790,10 @@ export class Processor {
                     case ReflectionOp.namedTupleMember: {
                         const name = program.stack[this.eatParameter()];
                         const t = {
-                            kind: ReflectionKind.tupleMember, type: this.pop(),
+                            kind: ReflectionKind.tupleMember,
+                            type: this.pop(),
                             parent: undefined,
-                            name: isFunction(name) ? name() : name,
+                            name: isFunction(name) ? name() : name
                         };
                         t.type.parent = t;
                         this.pushType(t);
@@ -695,7 +803,7 @@ export class Processor {
                         const t = {
                             kind: ReflectionKind.rest,
                             parent: undefined,
-                            type: this.pop(),
+                            type: this.pop()
                         };
                         t.type.parent = t;
                         this.pushType(t);
@@ -718,8 +826,14 @@ export class Processor {
                         }
                         if (type === undefined) {
                             //generic not instantiated
-                            program.typeParameters.push({ kind: ReflectionKind.any, typeParameter: true });
-                            this.pushType({ kind: ReflectionKind.typeParameter, name: program.stack[nameRef] });
+                            program.typeParameters.push({
+                                kind: ReflectionKind.any,
+                                typeParameter: true
+                            });
+                            this.pushType({
+                                kind: ReflectionKind.typeParameter,
+                                name: program.stack[nameRef]
+                            });
                         }
                         else {
                             program.typeParameters.push(type);
@@ -728,7 +842,12 @@ export class Processor {
                         break;
                     }
                     case ReflectionOp.set: {
-                        const t = { kind: ReflectionKind.class, classType: Set, arguments: [this.pop()], types: [] };
+                        const t = {
+                            kind: ReflectionKind.class,
+                            classType: Set,
+                            arguments: [this.pop()],
+                            types: []
+                        };
                         t.arguments[0].parent = t;
                         this.pushType(t);
                         break;
@@ -736,7 +855,12 @@ export class Processor {
                     case ReflectionOp.map: {
                         const value = this.pop();
                         const key = this.pop();
-                        const t = { kind: ReflectionKind.class, classType: Map, arguments: [key, value], types: [] };
+                        const t = {
+                            kind: ReflectionKind.class,
+                            classType: Map,
+                            arguments: [key, value],
+                            types: []
+                        };
                         t.arguments[0].parent = t;
                         t.arguments[1].parent = t;
                         this.pushType(t);
@@ -752,7 +876,10 @@ export class Processor {
                     case ReflectionOp.union: {
                         const types = this.popFrame();
                         const flattened = flattenUnionTypes(types);
-                        const t = unboxUnion({ kind: ReflectionKind.union, types: flattened });
+                        const t = unboxUnion({
+                            kind: ReflectionKind.union,
+                            types: flattened
+                        });
                         if (t.kind === ReflectionKind.union) {
                             for (const member of t.types) {
                                 member.parent = t;
@@ -771,20 +898,24 @@ export class Processor {
                     case ReflectionOp.function: {
                         const types = this.popFrame();
                         let name = program.stack[this.eatParameter()];
-                        const returnType = types.length > 0 ? types[types.length - 1] : { kind: ReflectionKind.any };
+                        const returnType = types.length > 0
+                            ? types[types.length - 1]
+                            : { kind: ReflectionKind.any };
                         const parameters = types.length > 1 ? types.slice(0, -1) : [];
                         if (isFunction(name))
                             name = name();
-                        let t = op === ReflectionOp.callSignature ? {
-                            kind: ReflectionKind.callSignature,
-                            return: returnType,
-                            parameters,
-                        } : {
-                            kind: ReflectionKind.function,
-                            name: name || undefined,
-                            return: returnType,
-                            parameters,
-                        };
+                        let t = op === ReflectionOp.callSignature
+                            ? {
+                                kind: ReflectionKind.callSignature,
+                                return: returnType,
+                                parameters
+                            }
+                            : {
+                                kind: ReflectionKind.function,
+                                name: name || undefined,
+                                return: returnType,
+                                parameters
+                            };
                         t.return.parent = t;
                         for (const member of t.parameters)
                             member.parent = t;
@@ -792,7 +923,10 @@ export class Processor {
                         break;
                     }
                     case ReflectionOp.array: {
-                        const t = { kind: ReflectionKind.array, type: this.pop() };
+                        const t = {
+                            kind: ReflectionKind.array,
+                            type: this.pop()
+                        };
                         t.type.parent = t;
                         this.pushType(t);
                         break;
@@ -804,22 +938,26 @@ export class Processor {
                         let isOptional = false;
                         if (type.kind === ReflectionKind.union && type.types.length === 2) {
                             const undefinedType = type.types.find(v => v.kind === ReflectionKind.undefined);
-                            const restType = type.types.find(v => v.kind !== ReflectionKind.null && v.kind !== ReflectionKind.undefined);
+                            const restType = type.types.find(v => v.kind !== ReflectionKind.null &&
+                                v.kind !== ReflectionKind.undefined);
                             if (restType && undefinedType) {
                                 type = restType;
                                 isOptional = true;
                             }
                         }
                         const property = {
-                            kind: op === ReflectionOp.propertySignature ? ReflectionKind.propertySignature : ReflectionKind.property,
+                            kind: op === ReflectionOp.propertySignature
+                                ? ReflectionKind.propertySignature
+                                : ReflectionKind.property,
                             type,
-                            name: isFunction(name) ? name() : name,
+                            name: isFunction(name) ? name() : name
                         };
                         if (isOptional) {
                             property.optional = true;
                         }
                         if (op === ReflectionOp.property) {
-                            property.visibility = ReflectionVisibility.public;
+                            property.visibility =
+                                ReflectionVisibility.public;
                         }
                         property.type.parent = property;
                         this.pushType(property);
@@ -829,13 +967,28 @@ export class Processor {
                     case ReflectionOp.methodSignature: {
                         let name = program.stack[this.eatParameter()];
                         const types = this.popFrame();
-                        const returnType = types.length > 0 ? types[types.length - 1] : { kind: ReflectionKind.any };
+                        const returnType = types.length > 0
+                            ? types[types.length - 1]
+                            : { kind: ReflectionKind.any };
                         const parameters = types.length > 1 ? types.slice(0, -1) : [];
                         if (isFunction(name))
                             name = name();
                         let t = op === ReflectionOp.method
-                            ? { kind: ReflectionKind.method, parent: undefined, visibility: ReflectionVisibility.public, name, return: returnType, parameters }
-                            : { kind: ReflectionKind.methodSignature, parent: undefined, name, return: returnType, parameters };
+                            ? {
+                                kind: ReflectionKind.method,
+                                parent: undefined,
+                                visibility: ReflectionVisibility.public,
+                                name,
+                                return: returnType,
+                                parameters
+                            }
+                            : {
+                                kind: ReflectionKind.methodSignature,
+                                parent: undefined,
+                                name,
+                                return: returnType,
+                                parameters
+                            };
                         t.return.parent = t;
                         for (const member of t.parameters)
                             member.parent = t;
@@ -846,34 +999,50 @@ export class Processor {
                         program.stack[program.stackPointer].optional = true;
                         break;
                     case ReflectionOp.readonly:
-                        program.stack[program.stackPointer].readonly = true;
+                        program.stack[program.stackPointer].readonly =
+                            true;
                         break;
                     case ReflectionOp.public:
-                        program.stack[program.stackPointer].visibility = ReflectionVisibility.public;
+                        program.stack[program.stackPointer].visibility =
+                            ReflectionVisibility.public;
                         break;
                     case ReflectionOp.protected:
-                        program.stack[program.stackPointer].visibility = ReflectionVisibility.protected;
+                        program.stack[program.stackPointer].visibility =
+                            ReflectionVisibility.protected;
                         break;
                     case ReflectionOp.private:
-                        program.stack[program.stackPointer].visibility = ReflectionVisibility.private;
+                        program.stack[program.stackPointer].visibility =
+                            ReflectionVisibility.private;
                         break;
                     case ReflectionOp.abstract:
-                        program.stack[program.stackPointer].abstract = true;
+                        program.stack[program.stackPointer].abstract =
+                            true;
                         break;
                     case ReflectionOp.static:
-                        program.stack[program.stackPointer].static = true;
+                        program.stack[program.stackPointer].static =
+                            true;
                         break;
                     case ReflectionOp.defaultValue:
-                        program.stack[program.stackPointer].default = program.stack[this.eatParameter()];
+                        const stackDefaultValue = program.stack[program.stackPointer];
+                        stackDefaultValue.default =
+                            program.stack[this.eatParameter()];
                         break;
                     case ReflectionOp.description:
-                        program.stack[program.stackPointer].description = program.stack[this.eatParameter()];
+                        const stackDescription = program.stack[program.stackPointer];
+                        stackDescription.description = program.stack[this.eatParameter()];
+                        break;
+                    case ReflectionOp.tags:
+                        const stackTags = program.stack[program.stackPointer];
+                        stackTags.tags = program.stack[this.eatParameter()];
                         break;
                     case ReflectionOp.typeName: {
                         const type = program.stack[program.stackPointer];
                         const name = program.stack[this.eatParameter()];
                         if (type.typeName) {
-                            type.originTypes = [{ typeName: type.typeName, typeArguments: type.typeArguments }, ...(type.originTypes || [])];
+                            type.originTypes = [
+                                { typeName: type.typeName, typeArguments: type.typeArguments },
+                                ...(type.originTypes || [])
+                            ];
                             type.typeArguments = undefined;
                         }
                         type.typeName = name;
@@ -882,7 +1051,12 @@ export class Processor {
                     case ReflectionOp.indexSignature: {
                         const type = this.pop();
                         const index = this.pop();
-                        const t = { kind: ReflectionKind.indexSignature, parent: undefined, index, type };
+                        const t = {
+                            kind: ReflectionKind.indexSignature,
+                            parent: undefined,
+                            index,
+                            type
+                        };
                         t.type.parent = t;
                         t.index.parent = t;
                         this.pushType(t);
@@ -892,7 +1066,7 @@ export class Processor {
                         let t = {
                             kind: ReflectionKind.objectLiteral,
                             id: state.nominalId++,
-                            types: [],
+                            types: []
                         };
                         const frameTypes = this.popFrame();
                         pushObjectLiteralTypes(t, frameTypes);
@@ -914,7 +1088,9 @@ export class Processor {
                         const left = this.pop();
                         const condition = this.pop();
                         this.popFrame();
-                        isConditionTruthy(condition) ? this.pushType(left) : this.pushType(right);
+                        isConditionTruthy(condition)
+                            ? this.pushType(left)
+                            : this.pushType(right);
                         break;
                     }
                     case ReflectionOp.jumpCondition: {
@@ -931,19 +1107,28 @@ export class Processor {
                         const frame = program.frame;
                         let last = { kind: ReflectionKind.unknown };
                         this.push({
-                            kind: ReflectionKind.infer, set: (type) => {
+                            kind: ReflectionKind.infer,
+                            set: (type) => {
                                 if (last.kind !== ReflectionKind.unknown) {
-                                    if (last.kind === ReflectionKind.union || last.kind === ReflectionKind.intersection) {
+                                    if (last.kind === ReflectionKind.union ||
+                                        last.kind === ReflectionKind.intersection) {
                                         if (!isTypeIncluded(last.types, type)) {
                                             last.types.push(type);
                                         }
                                     }
                                     else {
-                                        if (type.parent && type.parent.kind === ReflectionKind.parameter) {
-                                            last = { kind: ReflectionKind.intersection, types: [last, type] };
+                                        if (type.parent &&
+                                            type.parent.kind === ReflectionKind.parameter) {
+                                            last = {
+                                                kind: ReflectionKind.intersection,
+                                                types: [last, type]
+                                            };
                                         }
                                         else {
-                                            last = { kind: ReflectionKind.union, types: [last, type] };
+                                            last = {
+                                                kind: ReflectionKind.union,
+                                                types: [last, type]
+                                            };
                                         }
                                     }
                                 }
@@ -960,18 +1145,23 @@ export class Processor {
                                     program.stack[frame.previous.previous.startIndex + 1 + stackEntryIndex] = last;
                                 }
                                 else if (frameOffset === 3) {
-                                    program.stack[frame.previous.previous.previous.startIndex + 1 + stackEntryIndex] = last;
+                                    program.stack[frame.previous.previous.previous.startIndex +
+                                        1 +
+                                        stackEntryIndex] = last;
                                 }
                                 else if (frameOffset === 4) {
-                                    program.stack[frame.previous.previous.previous.previous.startIndex + 1 + stackEntryIndex] = last;
+                                    program.stack[frame.previous.previous.previous.previous.startIndex +
+                                        1 +
+                                        stackEntryIndex] = last;
                                 }
                                 else {
                                     let current = frame;
                                     for (let i = 0; i < frameOffset; i++)
                                         current = current.previous;
-                                    program.stack[current.startIndex + 1 + stackEntryIndex] = last;
+                                    program.stack[current.startIndex + 1 + stackEntryIndex] =
+                                        last;
                                 }
-                            },
+                            }
                         });
                         break;
                     }
@@ -1028,13 +1218,20 @@ export class Processor {
                             this.push(program.stack[program.frame.previous.startIndex + 1 + stackEntryIndex]);
                         }
                         else if (frameOffset === 2) {
-                            this.push(program.stack[program.frame.previous.previous.startIndex + 1 + stackEntryIndex]);
+                            this.push(program.stack[program.frame.previous.previous.startIndex +
+                                1 +
+                                stackEntryIndex]);
                         }
                         else if (frameOffset === 3) {
-                            this.push(program.stack[program.frame.previous.previous.previous.startIndex + 1 + stackEntryIndex]);
+                            this.push(program.stack[program.frame.previous.previous.previous.startIndex +
+                                1 +
+                                stackEntryIndex]);
                         }
                         else if (frameOffset === 4) {
-                            this.push(program.stack[program.frame.previous.previous.previous.previous.startIndex + 1 + stackEntryIndex]);
+                            this.push(program.stack[program.frame.previous.previous.previous.previous
+                                .startIndex +
+                                1 +
+                                stackEntryIndex]);
                         }
                         else {
                             let current = program.frame;
@@ -1051,7 +1248,10 @@ export class Processor {
                         if (t instanceof ReflectionClass) {
                             this.push({ ...t.type, typeName: t.getClassName() });
                         }
-                        else if ('string' === typeof t || 'number' === typeof t || 'boolean' === typeof t || 'bigint' === typeof t) {
+                        else if ("string" === typeof t ||
+                            "number" === typeof t ||
+                            "boolean" === typeof t ||
+                            "bigint" === typeof t) {
                             this.push({ kind: ReflectionKind.literal, literal: t });
                         }
                         else {
@@ -1098,14 +1298,19 @@ export class Processor {
                             debug(`Failed runtime inlining of ${pOrFn.toString()}. Value is undefined, probably because of a circular reference or failed import.`);
                             this.push({ kind: ReflectionKind.unknown });
                         }
-                        else if ('number' === typeof p) {
+                        else if ("number" === typeof p) {
                             //self circular reference, usually a 0, which indicates we put the result of the current program as the type on the stack.
                             this.push(program.resultType);
                         }
                         else {
                             //when it's just a simple reference resolution like typeOf<Class>() then don't issue a new reference (no inline: true)
-                            const directReference = !!(this.isEnded() && program.previous && program.previous.end === 0);
-                            const result = this.reflect(p, [], { inline: !directReference, reuseCached: directReference });
+                            const directReference = !!(this.isEnded() &&
+                                program.previous &&
+                                program.previous.end === 0);
+                            const result = this.reflect(p, [], {
+                                inline: !directReference,
+                                reuseCached: directReference
+                            });
                             if (directReference)
                                 program.directReturn = true;
                             this.push(result, program);
@@ -1124,7 +1329,9 @@ export class Processor {
                         const inputs = [];
                         for (let i = 0; i < argumentSize; i++) {
                             let input = this.pop();
-                            if ((input.kind === ReflectionKind.never || input.kind === ReflectionKind.unknown) && program.inputs[i])
+                            if ((input.kind === ReflectionKind.never ||
+                                input.kind === ReflectionKind.unknown) &&
+                                program.inputs[i])
                                 input = program.inputs[i];
                             inputs.unshift(input);
                         }
@@ -1134,7 +1341,7 @@ export class Processor {
                             debug(`Failed runtime inlining call of ${pOrFn.toString()}. Value is undefined, probably because of a circular reference or failed import.`);
                             this.push({ kind: ReflectionKind.unknown });
                         }
-                        else if ('number' === typeof p) {
+                        else if ("number" === typeof p) {
                             if (argumentSize === 0) {
                                 //self circular reference, usually a 0, which indicates we put the result of the current program as the type on the stack.
                                 this.push(program.resultType);
@@ -1149,7 +1356,7 @@ export class Processor {
                                     //execute again the current program
                                     const nextProgram = createProgram({
                                         ops: program.ops,
-                                        initialStack: program.initialStack,
+                                        initialStack: program.initialStack
                                     }, inputs);
                                     this.push(this.runProgram(nextProgram), program);
                                     //continue to next this.program that was assigned by runProgram()
@@ -1182,7 +1389,8 @@ export class Processor {
             // process.stdout.write(`Done ${program.depth} in ${Date.now() - program.started}ms with ${stringifyValueWithType(program.object)} -> ${stringifyShortResolvedType(result as Type)}\n`);
             if (isType(result)) {
                 if (program.object) {
-                    if (result.kind === ReflectionKind.class && result.classType === Object) {
+                    if (result.kind === ReflectionKind.class &&
+                        result.classType === Object) {
                         result.classType = program.object;
                         applyClassDecorators(result);
                     }
@@ -1215,11 +1423,13 @@ export class Processor {
         const types = [];
         const stackTypes = this.popFrame();
         for (const type of stackTypes) {
-            const resolved = type.kind === ReflectionKind.tupleMember ? type : {
-                kind: ReflectionKind.tupleMember,
-                parent: undefined,
-                type,
-            };
+            const resolved = type.kind === ReflectionKind.tupleMember
+                ? type
+                : {
+                    kind: ReflectionKind.tupleMember,
+                    parent: undefined,
+                    type
+                };
             type.parent = resolved;
             if (resolved.type.kind === ReflectionKind.rest) {
                 if (resolved.type.type.kind === ReflectionKind.tuple) {
@@ -1259,10 +1469,19 @@ export class Processor {
                 decorators.push(...a.decorators);
         }
         function handleUnion(a, unionType) {
-            if (a.kind === ReflectionKind.objectLiteral || a.kind === ReflectionKind.class) {
-                return unboxUnion({ kind: ReflectionKind.union, types: unionType.types.map(v => collapse(v, a)).filter(v => v.kind !== ReflectionKind.never) });
+            if (a.kind === ReflectionKind.objectLiteral ||
+                a.kind === ReflectionKind.class) {
+                return unboxUnion({
+                    kind: ReflectionKind.union,
+                    types: unionType.types
+                        .map(v => collapse(v, a))
+                        .filter(v => v.kind !== ReflectionKind.never)
+                });
             }
-            return unboxUnion({ kind: ReflectionKind.union, types: unionType.types.filter(v => isExtendable(v, a)) });
+            return unboxUnion({
+                kind: ReflectionKind.union,
+                types: unionType.types.filter(v => isExtendable(v, a))
+            });
         }
         function handleAndObject(a, objectType) {
             if (objectType.types.length === 0) {
@@ -1283,16 +1502,21 @@ export class Processor {
             if (b.kind === ReflectionKind.union) {
                 return handleUnion(a, b);
             }
-            if ((a.kind === ReflectionKind.objectLiteral || a.kind === ReflectionKind.class) && (b.kind === ReflectionKind.objectLiteral || b.kind === ReflectionKind.class)) {
+            if ((a.kind === ReflectionKind.objectLiteral ||
+                a.kind === ReflectionKind.class) &&
+                (b.kind === ReflectionKind.objectLiteral ||
+                    b.kind === ReflectionKind.class)) {
                 appendAnnotations(a);
                 appendAnnotations(b);
                 return merge([a, b]);
             }
             // object & {then() ...}
-            if (a.kind === ReflectionKind.object && b.kind === ReflectionKind.objectLiteral) {
+            if (a.kind === ReflectionKind.object &&
+                b.kind === ReflectionKind.objectLiteral) {
                 return b;
             }
-            if (b.kind === ReflectionKind.object && a.kind === ReflectionKind.objectLiteral) {
+            if (b.kind === ReflectionKind.object &&
+                a.kind === ReflectionKind.objectLiteral) {
                 return a;
             }
             if (isPrimitive(a) && b.kind === ReflectionKind.objectLiteral) {
@@ -1319,7 +1543,10 @@ export class Processor {
             if (isPrimitive(a) && isPrimitive(b) && a.kind !== b.kind) {
                 return { kind: ReflectionKind.never };
             }
-            if (a.kind === ReflectionKind.objectLiteral || a.kind === ReflectionKind.class || a.kind === ReflectionKind.never || a.kind === ReflectionKind.unknown)
+            if (a.kind === ReflectionKind.objectLiteral ||
+                a.kind === ReflectionKind.class ||
+                a.kind === ReflectionKind.never ||
+                a.kind === ReflectionKind.unknown)
                 return b;
             if (b.annotations) {
                 Object.assign(annotations, b.annotations);
@@ -1383,7 +1610,10 @@ export class Processor {
         if (next === undefined) {
             //end
             const types = this.popFrame();
-            const result = { kind: ReflectionKind.union, types: flattenUnionTypes(types) };
+            const result = {
+                kind: ReflectionKind.union,
+                types: flattenUnionTypes(types)
+            };
             const t = unboxUnion(result);
             if (t.kind === ReflectionKind.union)
                 for (const member of t.types)
@@ -1404,34 +1634,71 @@ export class Processor {
         else {
             const t = indexAccess(left, right);
             if (isWithAnnotations(t)) {
-                t.indexAccessOrigin = { container: left, index: right };
+                t.indexAccessOrigin = {
+                    container: left,
+                    index: right
+                };
             }
             this.push(copyAndSetParent(t));
         }
     }
     handleKeyOf() {
         const type = this.pop();
-        if (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) {
-            const union = { kind: ReflectionKind.union, origin: type, types: [] };
+        if (type.kind === ReflectionKind.objectLiteral ||
+            type.kind === ReflectionKind.class) {
+            const union = {
+                kind: ReflectionKind.union,
+                origin: type,
+                types: []
+            };
             for (const member of type.types) {
-                if ((member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.property) && member.name !== 'new') {
-                    union.types.push({ kind: ReflectionKind.literal, literal: member.name, parent: union, origin: member });
+                if ((member.kind === ReflectionKind.propertySignature ||
+                    member.kind === ReflectionKind.property) &&
+                    member.name !== "new") {
+                    union.types.push({
+                        kind: ReflectionKind.literal,
+                        literal: member.name,
+                        parent: union,
+                        origin: member
+                    });
                 }
-                else if ((member.kind === ReflectionKind.methodSignature || member.kind === ReflectionKind.method) && member.name !== 'constructor') {
-                    union.types.push({ kind: ReflectionKind.literal, literal: member.name, parent: union, origin: member });
+                else if ((member.kind === ReflectionKind.methodSignature ||
+                    member.kind === ReflectionKind.method) &&
+                    member.name !== "constructor") {
+                    union.types.push({
+                        kind: ReflectionKind.literal,
+                        literal: member.name,
+                        parent: union,
+                        origin: member
+                    });
                 }
             }
             this.push(union);
         }
         else if (type.kind === ReflectionKind.tuple) {
-            const union = { kind: ReflectionKind.union, origin: type, types: [] };
+            const union = {
+                kind: ReflectionKind.union,
+                origin: type,
+                types: []
+            };
             for (let i = 0; i < type.types.length; i++) {
-                union.types.push({ kind: ReflectionKind.literal, literal: i, parent: union });
+                union.types.push({
+                    kind: ReflectionKind.literal,
+                    literal: i,
+                    parent: union
+                });
             }
             this.push(union);
         }
         else if (type.kind === ReflectionKind.any) {
-            this.push({ kind: ReflectionKind.union, types: [{ kind: ReflectionKind.string }, { kind: ReflectionKind.number }, { kind: ReflectionKind.symbol }] });
+            this.push({
+                kind: ReflectionKind.union,
+                types: [
+                    { kind: ReflectionKind.string },
+                    { kind: ReflectionKind.number },
+                    { kind: ReflectionKind.symbol }
+                ]
+            });
         }
         else {
             this.push({ kind: ReflectionKind.never });
@@ -1441,7 +1708,9 @@ export class Processor {
         const functionPointer = this.eatParameter();
         const modifier = this.eatParameter();
         function isSimpleIndex(index) {
-            if (index.kind === ReflectionKind.string || index.kind === ReflectionKind.number || index.kind === ReflectionKind.symbol)
+            if (index.kind === ReflectionKind.string ||
+                index.kind === ReflectionKind.number ||
+                index.kind === ReflectionKind.symbol)
                 return true;
             if (index.kind === ReflectionKind.union) {
                 const types = index.types.filter(v => isSimpleIndex(v));
@@ -1451,14 +1720,15 @@ export class Processor {
         }
         if (program.frame.mappedType) {
             let type = this.pop();
-            let index = program.stack[program.frame.startIndex + 1];
+            let index = program
+                .stack[program.frame.startIndex + 1];
             if (withName) {
                 if (type.kind === ReflectionKind.tuple) {
                     index = type.types[1].type;
                     type = type.types[0].type;
                 }
                 else {
-                    throw new Error('Tuple expect');
+                    throw new Error("Tuple expect");
                 }
             }
             const fromType = program.frame.mappedType.fromType;
@@ -1467,7 +1737,12 @@ export class Processor {
                 //ignore
             }
             else if (index.kind === ReflectionKind.any || isSimpleIndex(index)) {
-                const t = { kind: ReflectionKind.indexSignature, type, index, parent: undefined };
+                const t = {
+                    kind: ReflectionKind.indexSignature,
+                    type,
+                    index,
+                    parent: undefined
+                };
                 t.type.parent = t;
                 t.index.parent = t;
                 this.push(t);
@@ -1475,23 +1750,37 @@ export class Processor {
             else {
                 let optional = undefined;
                 let readonly = undefined;
-                if (index.kind === ReflectionKind.literal && !(index.literal instanceof RegExp)) {
-                    optional = !!index.origin && isMember(index.origin) && index.origin.optional ? true : undefined;
+                if (index.kind === ReflectionKind.literal &&
+                    !(index.literal instanceof RegExp)) {
+                    optional =
+                        !!index.origin && isMember(index.origin) && index.origin.optional
+                            ? true
+                            : undefined;
                     index = index.literal;
                 }
                 // If the type was a property, then grab the optional modifier from the property itself.
                 // Note: This is inconsistent with TS official behaviour, as
                 // mapped types only preserve modifiers when its homomorphic
                 // https://github.com/microsoft/TypeScript/pull/12563
-                if (type.parent && (type.parent.kind === ReflectionKind.propertySignature || type.parent.kind === ReflectionKind.property)) {
+                if (type.parent &&
+                    (type.parent.kind === ReflectionKind.propertySignature ||
+                        type.parent.kind === ReflectionKind.property)) {
                     if (type.parent.optional)
                         optional = true;
                     if (type.parent.readonly)
                         readonly = true;
                 }
-                const property = type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property || type.kind === ReflectionKind.tupleMember
+                const property = type.kind === ReflectionKind.propertySignature ||
+                    type.kind === ReflectionKind.property ||
+                    type.kind === ReflectionKind.tupleMember
                     ? type
-                    : { kind: isTuple ? ReflectionKind.tupleMember : ReflectionKind.propertySignature, name: index, type };
+                    : {
+                        kind: isTuple
+                            ? ReflectionKind.tupleMember
+                            : ReflectionKind.propertySignature,
+                        name: index,
+                        type
+                    };
                 if (optional) {
                     property.optional = true;
                 }
@@ -1512,7 +1801,8 @@ export class Processor {
                             if (modifier & 4 /* MappedModifier.readonly */) {
                                 property.readonly = true;
                             }
-                            if (modifier & 8 /* MappedModifier.removeReadonly */ && property.readonly) {
+                            if (modifier & 8 /* MappedModifier.removeReadonly */ &&
+                                property.readonly) {
                                 property.readonly = undefined;
                             }
                         }
@@ -1534,7 +1824,11 @@ export class Processor {
                 t = { kind: ReflectionKind.tuple, types: members };
             }
             else {
-                t = { kind: ReflectionKind.objectLiteral, id: state.nominalId++, types: members };
+                t = {
+                    kind: ReflectionKind.objectLiteral,
+                    id: state.nominalId++,
+                    types: members
+                };
             }
             this.push(t);
         }
@@ -1555,7 +1849,10 @@ export class Processor {
         }
         const product = cartesian.calculate();
         outer: for (const combination of product) {
-            const template = { kind: ReflectionKind.templateLiteral, types: [] };
+            const template = {
+                kind: ReflectionKind.templateLiteral,
+                types: []
+            };
             let hasPlaceholder = false;
             let lastLiteral = undefined;
             //merge a combination of types, e.g. [string, 'abc', '3'] as template literal => `${string}abc3`.
@@ -1566,10 +1863,14 @@ export class Processor {
                 }
                 if (item.kind === ReflectionKind.literal) {
                     if (lastLiteral) {
-                        lastLiteral.literal += item.literal + '';
+                        lastLiteral.literal += item.literal + "";
                     }
                     else {
-                        lastLiteral = { kind: ReflectionKind.literal, literal: item.literal + '', parent: template };
+                        lastLiteral = {
+                            kind: ReflectionKind.literal,
+                            literal: item.literal + "",
+                            parent: template
+                        };
                         template.types.push(lastLiteral);
                     }
                 }
@@ -1581,7 +1882,8 @@ export class Processor {
                 }
             }
             if (hasPlaceholder) {
-                if (template.types.length === 1 && template.types[0].kind === ReflectionKind.string) {
+                if (template.types.length === 1 &&
+                    template.types[0].kind === ReflectionKind.string) {
                     template.types[0].parent = result;
                     result.types.push(template.types[0]);
                 }
@@ -1612,7 +1914,7 @@ export class Processor {
     }
     pop() {
         if (this.program.stackPointer < 0)
-            throw new Error('Stack empty');
+            throw new Error("Stack empty");
         // return this.program.stack.pop()!;
         return this.program.stack[this.program.stackPointer--];
     }
@@ -1622,7 +1924,7 @@ export class Processor {
             startIndex: this.program.stackPointer,
             inputs: [],
             variables: 0,
-            previous: this.program.frame,
+            previous: this.program.frame
         };
     }
     popFrame() {
@@ -1650,7 +1952,7 @@ export class Processor {
         // process.stdout.write(`[${this.program.frame.index}] return ${returnAddress}\n`);
         this.program.stackPointer = this.program.frame.startIndex - 1; //-1 because call convention adds `return address` before entering new frame
         this.push(returnValue);
-        if ('number' === typeof returnAddress)
+        if ("number" === typeof returnAddress)
             this.program.program = returnAddress - 1; //-1 because iteration does program++
         if (this.program.frame.previous)
             this.program.frame = this.program.frame.previous;
@@ -1669,11 +1971,19 @@ function typeInferFromContainer(container) {
         if (!isTypeIncluded(union.types, type))
             union.types.push(type);
     }
-    return union.types.length === 0 ? { kind: ReflectionKind.any } : union.types.length === 1 ? union.types[0] : union;
+    return union.types.length === 0
+        ? { kind: ReflectionKind.any }
+        : union.types.length === 1
+            ? union.types[0]
+            : union;
 }
 typeInferFromContainer.__type = [() => __ΩIterable, 'container', 'Type', 'typeInferFromContainer', 'P"o!"2""w#/$'];
 export function typeInfer(value) {
-    if ('string' === typeof value || 'number' === typeof value || 'boolean' === typeof value || 'bigint' === typeof value || 'symbol' === typeof value) {
+    if ("string" === typeof value ||
+        "number" === typeof value ||
+        "boolean" === typeof value ||
+        "bigint" === typeof value ||
+        "symbol" === typeof value) {
         return { kind: ReflectionKind.literal, literal: value };
     }
     else if (null === value) {
@@ -1685,28 +1995,44 @@ export function typeInfer(value) {
     else if (value instanceof RegExp) {
         return { kind: ReflectionKind.literal, literal: value };
     }
-    else if ('function' === typeof value) {
+    else if ("function" === typeof value) {
         if (isArray(value.__type)) {
             //with emitted types: function or class
             //don't use resolveRuntimeType since we don't allow cache here
             // console.log('typeInfer of', value.name);
-            return Processor.get().reflect(value, undefined, { inline: true });
+            return Processor.get().reflect(value, undefined, {
+                inline: true
+            });
         }
         if (isClass(value)) {
             //unknown class
-            return { kind: ReflectionKind.class, classType: value, types: [] };
+            return {
+                kind: ReflectionKind.class,
+                classType: value,
+                types: []
+            };
         }
-        return { kind: ReflectionKind.function, function: value, name: value.name, return: { kind: ReflectionKind.any }, parameters: [] };
+        return {
+            kind: ReflectionKind.function,
+            function: value,
+            name: value.name,
+            return: { kind: ReflectionKind.any },
+            parameters: []
+        };
     }
     else if (isArray(value)) {
         return { kind: ReflectionKind.array, type: typeInferFromContainer(value) };
     }
-    else if ('object' === typeof value) {
+    else if ("object" === typeof value) {
         const constructor = value.constructor;
-        if ('function' === typeof constructor && constructor !== Object && isArray(constructor.__type)) {
+        if ("function" === typeof constructor &&
+            constructor !== Object &&
+            isArray(constructor.__type)) {
             //with emitted types
             //don't use resolveRuntimeType since we don't allow cache here
-            return Processor.get().reflect(constructor, undefined, { inline: true });
+            return Processor.get().reflect(constructor, undefined, {
+                inline: true
+            });
         }
         if (constructor === RegExp)
             return { kind: ReflectionKind.regexp };
@@ -1714,18 +2040,32 @@ export function typeInfer(value) {
             return { kind: ReflectionKind.class, classType: Date, types: [] };
         if (constructor === Set) {
             const type = typeInferFromContainer(value);
-            return { kind: ReflectionKind.class, classType: Set, arguments: [type], types: [] };
+            return {
+                kind: ReflectionKind.class,
+                classType: Set,
+                arguments: [type],
+                types: []
+            };
         }
         if (constructor === Map) {
             const keyType = typeInferFromContainer(value.keys());
             const valueType = typeInferFromContainer(value.values());
-            return { kind: ReflectionKind.class, classType: Map, arguments: [keyType, valueType], types: [] };
+            return {
+                kind: ReflectionKind.class,
+                classType: Map,
+                arguments: [keyType, valueType],
+                types: []
+            };
         }
         //generate a new program that builds a objectLiteral. This is necessary since typeInfer() with its Processor.reflect() calls might return immediately TypeAny if
         //the execution was scheduled (if we are in an executing program) so we can not depend on the result directly.
         //each part of the program of a value[i] is executed after the current OP, so we have to schedule new OPs doing the same as
         //in this loop here and construct the objectLiteral in the VM.
-        const resultType = { kind: ReflectionKind.objectLiteral, id: state.nominalId++, types: [] };
+        const resultType = {
+            kind: ReflectionKind.objectLiteral,
+            id: state.nominalId++,
+            types: []
+        };
         const ops = [];
         const stack = [];
         for (const i in value) {
@@ -1751,10 +2091,13 @@ function applyClassDecorators(type) {
             const member = getMember(type, property);
             if (!member)
                 continue;
-            if (member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.property) {
+            if (member.kind === ReflectionKind.propertySignature ||
+                member.kind === ReflectionKind.property) {
                 applyPropertyDecorator(member.type, data);
             }
-            if ('number' === typeof parameterIndexOrDescriptor && (member.kind === ReflectionKind.method || member.kind === ReflectionKind.methodSignature)) {
+            if ("number" === typeof parameterIndexOrDescriptor &&
+                (member.kind === ReflectionKind.method ||
+                    member.kind === ReflectionKind.methodSignature)) {
                 const param = member.parameters[parameterIndexOrDescriptor];
                 if (param) {
                     applyPropertyDecorator(param.type, data);
@@ -1770,22 +2113,32 @@ function applyPropertyDecorator(type, data) {
         const annotations = getAnnotations(type);
         for (const validator of data.validators) {
             validationAnnotation.register(annotations, {
-                name: 'function',
-                args: [{ kind: ReflectionKind.function, function: validator, parameters: [], return: { kind: ReflectionKind.any } }],
+                name: "function",
+                args: [
+                    {
+                        kind: ReflectionKind.function,
+                        function: validator,
+                        parameters: [],
+                        return: { kind: ReflectionKind.any }
+                    }
+                ]
             });
         }
     }
 }
 applyPropertyDecorator.__type = ['Type', 'type', () => TData, 'data', 'applyPropertyDecorator', 'P"w!2"P7#2$"/%'];
 function collapseFunctionToMethod(member) {
-    return member.kind === ReflectionKind.propertySignature && member.type.kind === ReflectionKind.function && member.type.function !== Function;
+    return (member.kind === ReflectionKind.propertySignature &&
+        member.type.kind === ReflectionKind.function &&
+        member.type.function !== Function);
 }
 collapseFunctionToMethod.__type = [() => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, 'member', 'collapseFunctionToMethod', 'PPn!n"J2#!/$'];
 function pushObjectLiteralTypes(type, types) {
     let annotations = {};
     const decorators = [];
     outer: for (const member of types) {
-        if (member.kind === ReflectionKind.propertySignature && member.type.kind === ReflectionKind.never)
+        if (member.kind === ReflectionKind.propertySignature &&
+            member.type.kind === ReflectionKind.never)
             continue;
         if (member.kind === ReflectionKind.objectLiteral) {
             //all `extends T` expression land at the beginning of the stack frame, and are always an objectLiteral.
@@ -1812,15 +2165,20 @@ function pushObjectLiteralTypes(type, types) {
             //note: is it possible to overwrite an index signature?
             type.types.push(member);
         }
-        else if (member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.methodSignature) {
-            const toAdd = collapseFunctionToMethod(member) ? {
-                kind: ReflectionKind.methodSignature,
-                name: member.name,
-                optional: member.optional,
-                parameters: member.type.parameters,
-                return: member.type.return,
-            } : member;
-            const existing = type.types.findIndex(__assignType(v => (v.kind === ReflectionKind.propertySignature || v.kind === ReflectionKind.methodSignature) && v.name === toAdd.name, ['v', '', 'P"2!"/"']));
+        else if (member.kind === ReflectionKind.propertySignature ||
+            member.kind === ReflectionKind.methodSignature) {
+            const toAdd = collapseFunctionToMethod(member)
+                ? {
+                    kind: ReflectionKind.methodSignature,
+                    name: member.name,
+                    optional: member.optional,
+                    parameters: member.type.parameters,
+                    return: member.type.return
+                }
+                : member;
+            const existing = type.types.findIndex(__assignType(v => (v.kind === ReflectionKind.propertySignature ||
+                v.kind === ReflectionKind.methodSignature) &&
+                v.name === toAdd.name, ['v', '', 'P"2!"/"']));
             if (existing !== -1) {
                 //remove entry, since we replace it
                 type.types.splice(existing, 1, toAdd);
@@ -1849,9 +2207,9 @@ export function getEnumType(values) {
             allowUndefined = true;
         if (v === null)
             allowNull = true;
-        if (typeof v === 'number')
+        if (typeof v === "number")
             allowNumber = true;
-        if (typeof v === 'string')
+        if (typeof v === "string")
             allowString = true;
     }
     const union = { kind: ReflectionKind.union, types: [] };
diff --git a/dist/esm/src/reflection/processor.js.map b/dist/esm/src/reflection/processor.js.map
index 18f6201e041045169e23b0381830cdb5f2aa059b..40a95d8edb8fa3138fc359fe413ffe5831d6e64d 100644
--- a/dist/esm/src/reflection/processor.js.map
+++ b/dist/esm/src/reflection/processor.js.map
@@ -1 +1 @@
-{"version":3,"file":"processor.js","sourceRoot":"","sources":["../../../../src/reflection/processor.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"processor.js","sourceRoot":"","sources":["../../../../src/reflection/processor.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/src/reflection/reflection.d.ts b/dist/esm/src/reflection/reflection.d.ts
index 48bd902420f48d3622f1b5b5ee2ef4fb4e5b9a50..c168ec7dda145d40bf4751f5251c29325e541be2 100644
--- a/dist/esm/src/reflection/reflection.d.ts
+++ b/dist/esm/src/reflection/reflection.d.ts
@@ -1,8 +1,8 @@
-import { BackReferenceOptionsResolved, DatabaseFieldOptions, IndexOptions, ReferenceOptions, ReflectionKind, ReflectionVisibility, Type, TypeClass, TypeFunction, TypeMethod, TypeMethodSignature, TypeObjectLiteral, TypeParameter, TypeProperty, TypePropertySignature, TypeTemplateLiteral } from './type.js';
-import { AbstractClassType, ClassType } from '@deepkit/core';
-import { Packed } from './processor.js';
-import type { ValidateFunction } from '../validator.js';
-import { SerializedTypes } from '../type-serialization.js';
+import { AbstractClassType, ClassType } from "@deepkit/core";
+import { SerializedTypes } from "../type-serialization.js";
+import type { ValidateFunction } from "../validator.js";
+import { Packed } from "./processor.js";
+import { BackReferenceOptionsResolved, DatabaseFieldOptions, IndexOptions, ReferenceOptions, ReflectionKind, ReflectionVisibility, TagsReflection, Type, TypeClass, TypeFunction, TypeMethod, TypeMethodSignature, TypeObjectLiteral, TypeParameter, TypeProperty, TypePropertySignature, TypeTemplateLiteral } from "./type.js";
 /**
  * Receives the runtime type of template argument.
  *
@@ -45,6 +45,7 @@ export declare class ReflectionParameter {
     hasDefault(): boolean;
     isValueRequired(): boolean;
     getDefaultValue(): any;
+    setDefaultValue(value: any): void;
     hasDefaultFunctionExpression(): boolean;
     applyDecorator(t: TData): void;
     getVisibility(): ReflectionVisibility | undefined;
@@ -52,6 +53,15 @@ export declare class ReflectionParameter {
     isProtected(): boolean;
     isPrivate(): boolean;
     isReadonly(): boolean;
+    setTags(tags: TagsReflection): void;
+    getTags(): TagsReflection;
+    isHidden(): boolean;
+    isIgnored(): boolean;
+    isInternal(): boolean;
+    getAlias(): string[];
+    getTitle(): string | undefined;
+    getPermission(): string[];
+    getDomain(): string | undefined;
     /**
      * True if the parameter becomes a property in the class.
      * This is the case for parameters in constructors with visibility or readonly.
@@ -69,10 +79,11 @@ export declare class ReflectionParameter {
 export declare class ReflectionFunction {
     readonly type: TypeMethod | TypeMethodSignature | TypeFunction;
     parameters: ReflectionParameter[];
+    parameterAliases: Map<string, string>;
     description: string;
     constructor(type: TypeMethod | TypeMethodSignature | TypeFunction);
     static from(fn: Function): ReflectionFunction;
-    getParameterNames(): (string)[];
+    getParameterNames(): string[];
     hasParameter(name: string | number | symbol): boolean;
     getParameterOrUndefined(name: string | number | symbol): ReflectionParameter | undefined;
     getParameter(name: string | number | symbol): ReflectionParameter;
@@ -82,6 +93,16 @@ export declare class ReflectionFunction {
     getName(): number | string | symbol;
     getDescription(): string;
     get name(): string;
+    setTags(tags: TagsReflection): void;
+    getTags(): TagsReflection;
+    isHidden(): boolean;
+    isReadonly(): boolean;
+    isIgnored(): boolean;
+    isInternal(): boolean;
+    getAlias(): string[];
+    getTitle(): string | undefined;
+    getPermission(): string[];
+    getDomain(): string | undefined;
 }
 /**
  * @reflection never
@@ -98,6 +119,16 @@ export declare class ReflectionMethod extends ReflectionFunction {
     applyDecorator(data: TData): void;
     clone(reflectionClass?: ReflectionClass<any>, method?: TypeMethod | TypeMethodSignature): ReflectionMethod;
     isOptional(): boolean;
+    setTags(tags: TagsReflection): void;
+    getTags(): TagsReflection;
+    isHidden(): boolean;
+    isIgnored(): boolean;
+    isReadonly(): boolean;
+    isInternal(): boolean;
+    getAlias(): string[];
+    getTitle(): string | undefined;
+    getPermission(): string[];
+    getDomain(): string | undefined;
 }
 export declare function resolveForeignReflectionClass(property: ReflectionProperty): ReflectionClass<any>;
 /**
@@ -215,12 +246,22 @@ export declare class ReflectionProperty {
     isAbstract(): boolean;
     hasDefault(): boolean;
     getDefaultValue(): any;
+    setDefaultValue(value: any): void;
     hasDefaultFunctionExpression(): boolean;
     getDefaultValueFunction(): (() => any) | undefined;
     getVisibility(): ReflectionVisibility | undefined;
     isPublic(): boolean;
     isProtected(): boolean;
     isPrivate(): boolean;
+    setTags(tags: TagsReflection): void;
+    getTags(): TagsReflection;
+    isHidden(): boolean;
+    isIgnored(): boolean;
+    isInternal(): boolean;
+    getAlias(): string[];
+    getTitle(): string | undefined;
+    getPermission(): string[];
+    getDomain(): string | undefined;
 }
 export declare const reflectionClassSymbol: unique symbol;
 export interface SerializerFn {
@@ -260,6 +301,10 @@ export declare class ReflectionClass<T> {
      * The description, extracted from the class JSDoc @description.
      */
     description: string;
+    /**
+     * The tags, extracted from the class JSDoc @tag.
+     */
+    tags?: TagsReflection;
     /**
      * A place where arbitrary data is stored, usually set via decorator t.data.
      */
@@ -318,7 +363,9 @@ export declare class ReflectionClass<T> {
     protected propertyNames: string[];
     protected methodNames: string[];
     protected properties: ReflectionProperty[];
+    protected propertyAliases: Map<string, string>;
     protected methods: ReflectionMethod[];
+    protected methodAliases: Map<string, string>;
     /**
      * References and back references.
      */
@@ -365,6 +412,8 @@ export declare class ReflectionClass<T> {
         description?: string;
         visibility?: ReflectionVisibility;
         type: Type;
+        default?: any;
+        tags?: TagsReflection;
     }): ReflectionProperty;
     registerMethod(method: ReflectionMethod): void;
     add(member: Type): void;
@@ -396,6 +445,16 @@ export declare class ReflectionClass<T> {
     getMethod(name: string | number | symbol): ReflectionMethod;
     hasCircularReference(): boolean;
     serializeType(): SerializedTypes;
+    setTags(tags: TagsReflection): void;
+    getTags(): TagsReflection;
+    isHidden(): boolean;
+    isIgnored(): boolean;
+    isInternal(): boolean;
+    isReadonly(): boolean;
+    getAlias(): string[];
+    getTitle(): string | undefined;
+    getPermission(): string[];
+    getDomain(): string | undefined;
     /**
      * All references have a counter-part. This methods finds it and errors if not possible.
      *
diff --git a/dist/esm/src/reflection/reflection.js b/dist/esm/src/reflection/reflection.js
index 0a1039a691d18d92fc370ead604da623f6625176..9e6e982a863f7b2402380d3bc25fe0106869877a 100644
--- a/dist/esm/src/reflection/reflection.js
+++ b/dist/esm/src/reflection/reflection.js
@@ -1,25 +1,25 @@
 /*@ts-ignore*/
-import { __ΩPacked } from './processor.js';
+import { __ΩPacked } from "./processor.js";
 /*@ts-ignore*/
-import { __ΩClassType } from '@deepkit/core';
+import { __ΩClassType } from "@deepkit/core";
 /*@ts-ignore*/
-import { __ΩAbstractClassType } from '@deepkit/core';
+import { __ΩAbstractClassType } from "@deepkit/core";
 /*@ts-ignore*/
-import { __ΩTypeObjectLiteral } from './type.js';
+import { __ΩTypeObjectLiteral } from "./type.js";
 /*@ts-ignore*/
-import { __ΩTypeClass } from './type.js';
+import { __ΩTypeClass } from "./type.js";
 /*@ts-ignore*/
-import { __ΩTypeProperty } from './type.js';
+import { __ΩTypeProperty } from "./type.js";
 /*@ts-ignore*/
-import { __ΩTypePropertySignature } from './type.js';
+import { __ΩTypePropertySignature } from "./type.js";
 /*@ts-ignore*/
-import { __ΩTypeMethod } from './type.js';
+import { __ΩTypeMethod } from "./type.js";
 /*@ts-ignore*/
-import { __ΩTypeMethodSignature } from './type.js';
+import { __ΩTypeMethodSignature } from "./type.js";
 /*@ts-ignore*/
-import { __ΩIndexOptions } from './type.js';
+import { __ΩIndexOptions } from "./type.js";
 /*@ts-ignore*/
-import { __ΩEntityOptions } from './type.js';
+import { __ΩEntityOptions } from "./type.js";
 function __assignType(fn, args) {
     fn.__type = args;
     return fn;
@@ -33,13 +33,13 @@ function __assignType(fn, args) {
  *
  * You should have received a copy of the MIT License along with this program.
  */
-import { assertType, autoIncrementAnnotation, clearTypeJitContainer, copyAndSetParent, dataAnnotation, databaseAnnotation, embeddedAnnotation, entityAnnotation, excludedAnnotation, getBackReferenceType, getClassType, getReferenceType, getTypeJitContainer, groupAnnotation, hasMember, indexAnnotation, isBackReferenceType, isReferenceType, isType, memberNameToString, primaryKeyAnnotation, ReflectionKind, ReflectionVisibility, stringifyResolvedType, stringifyType, } from './type.js';
-import { arrayRemoveItem, getClassName, isArray, isClass, isFunction, isGlobalClass, isPrototypeOfBase, stringifyValueWithType, } from '@deepkit/core';
-import { resolvePacked, resolveRuntimeType } from './processor.js';
-import { NoTypeReceived } from '../utils.js';
-import { findCommonLiteral } from '../inheritance.js';
-import { isWithDeferredDecorators } from '../decorator.js';
-import { serializeType } from '../type-serialization.js';
+import { arrayRemoveItem, getClassName, isArray, isClass, isFunction, isGlobalClass, isPrototypeOfBase, stringifyValueWithType } from "@deepkit/core";
+import { isWithDeferredDecorators } from "../decorator.js";
+import { findCommonLiteral } from "../inheritance.js";
+import { serializeType } from "../type-serialization.js";
+import { NoTypeReceived } from "../utils.js";
+import { resolvePacked, resolveRuntimeType } from "./processor.js";
+import { assertType, autoIncrementAnnotation, clearTypeJitContainer, copyAndSetParent, dataAnnotation, databaseAnnotation, embeddedAnnotation, entityAnnotation, excludedAnnotation, getBackReferenceType, getClassType, getReferenceType, getTypeJitContainer, groupAnnotation, hasMember, indexAnnotation, isBackReferenceType, isReferenceType, isType, memberNameToString, primaryKeyAnnotation, ReflectionKind, ReflectionVisibility, stringifyResolvedType, stringifyType } from "./type.js";
 const __ΩReceiveType = ['T', () => __ΩPacked, 'Type', () => __ΩClassType, 'ReceiveType', 'b!Pn""w#e"!o$"Jw%y'];
 export { __ΩReceiveType as __ΩReceiveType };
 export function resolveReceiveType(type) {
@@ -51,7 +51,7 @@ export function resolveReceiveType(type) {
             return type.__type;
         // this is fast path for simple references to a type, e.g. cast<User>(), so that User is directly handled
         // instead of running the VM to resolve to User first.
-        if (type[type.length - 1] === 'n!' || type[type.length - 1] === 'P7!') {
+        if (type[type.length - 1] === "n!" || type[type.length - 1] === "P7!") {
             //n! represents a simple inline: [Op.inline, 0]
             //P7! represents a class reference: [Op.Frame, Op.classReference, 0] (Op.Frame seems unnecessary)
             typeFn = type[0];
@@ -68,15 +68,15 @@ export function resolveReceiveType(type) {
     if (isType(type))
         return type;
     if (isClass(type) || isGlobalClass(type)) {
-        if (!('__type' in type)) {
+        if (!("__type" in type)) {
             if (type.__cached_type)
                 return type.__cached_type;
             // disabled reflection for this class, so we return shallow TypeClass
-            return type.__cached_type = {
+            return (type.__cached_type = {
                 kind: ReflectionKind.class,
                 classType: type,
-                types: [],
-            };
+                types: []
+            });
         }
         return resolveRuntimeType(type);
     }
@@ -106,7 +106,8 @@ export function valuesOf(args = [], p = valuesOf.Ω?.[0]) {
             return v;
         }, ['v', '', 'P"2!"/"']));
     }
-    if (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) {
+    if (type.kind === ReflectionKind.objectLiteral ||
+        type.kind === ReflectionKind.class) {
         return type.types.map(__assignType(v => {
             if (v.kind === ReflectionKind.method)
                 return v;
@@ -125,7 +126,8 @@ valuesOf.__type = ['args', () => [], () => __ΩReceiveType, 'p', 'Type', 'values
 export function propertiesOf(args = [], p = propertiesOf.Ω?.[0]) {
     propertiesOf.Ω = undefined;
     const type = typeOf(args, p);
-    if (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) {
+    if (type.kind === ReflectionKind.objectLiteral ||
+        type.kind === ReflectionKind.class) {
         return type.types.map(__assignType(v => {
             if (v.kind === ReflectionKind.method)
                 return v.name;
@@ -144,7 +146,8 @@ propertiesOf.__type = ['args', () => [], () => __ΩReceiveType, 'p', 'Type', 'pr
 export function getNominalId(args = [], p = getNominalId.Ω?.[0]) {
     getNominalId.Ω = undefined;
     const t = typeOf(args, p);
-    if (t.kind === ReflectionKind.class || t.kind === ReflectionKind.objectLiteral)
+    if (t.kind === ReflectionKind.class ||
+        t.kind === ReflectionKind.objectLiteral)
         return t.id;
     return;
 }
@@ -152,9 +155,11 @@ getNominalId.__type = ['args', () => [], () => __ΩReceiveType, 'p', 'getNominal
 export function typeOf(args = [], p = typeOf.Ω?.[0]) {
     typeOf.Ω = undefined;
     if (p) {
-        return args.length > 0 ? resolveRuntimeType(p, args) : resolveReceiveType(p);
+        return args.length > 0
+            ? resolveRuntimeType(p, args)
+            : resolveReceiveType(p);
     }
-    throw new Error('No type given');
+    throw new Error("No type given");
 }
 typeOf.__type = ['args', () => [], () => __ΩReceiveType, 'p', 'Type', 'typeOf', 'P"F2!>""o#"2$8"w%/&'];
 export function removeTypeName(type) {
@@ -172,7 +177,8 @@ export function removeNominal(type) {
         return type.map(__assignType(v => removeNominal(v), ['v', '', 'P"2!"/"']));
     }
     else {
-        if (type.kind === ReflectionKind.class || type.kind === ReflectionKind.objectLiteral) {
+        if (type.kind === ReflectionKind.class ||
+            type.kind === ReflectionKind.objectLiteral) {
             return { ...type, id: undefined };
         }
     }
@@ -181,19 +187,30 @@ export function removeNominal(type) {
 removeNominal.__type = ['type', 'removeNominal', 'P"2!"/"'];
 export function getProperty(type, memberName) {
     for (const t of type.types) {
-        if ((t.kind === ReflectionKind.property || t.kind === ReflectionKind.propertySignature) && t.name === memberName)
+        if ((t.kind === ReflectionKind.property ||
+            t.kind === ReflectionKind.propertySignature) &&
+            t.name === memberName)
             return t;
     }
     return;
 }
 getProperty.__type = [() => __ΩTypeObjectLiteral, () => __ΩTypeClass, 'type', 'memberName', () => __ΩTypeProperty, () => __ΩTypePropertySignature, 'getProperty', 'PPn!n"J2#P\'&+J2$Pn%n&-J/\''];
 export function toSignature(type) {
-    if (type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.methodSignature)
+    if (type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.methodSignature)
         return type;
     if (type.kind === ReflectionKind.property) {
-        return { ...type, parent: type.parent, kind: ReflectionKind.propertySignature };
+        return {
+            ...type,
+            parent: type.parent,
+            kind: ReflectionKind.propertySignature
+        };
     }
-    return { ...type, parent: type.parent, kind: ReflectionKind.methodSignature };
+    return {
+        ...type,
+        parent: type.parent,
+        kind: ReflectionKind.methodSignature
+    };
 }
 toSignature.__type = [() => __ΩTypeProperty, () => __ΩTypeMethod, () => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, 'type', () => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, 'toSignature', 'PPn!n"n#n$J2%Pn&n\'J/('];
 export function hasCircularReference(type) {
@@ -204,25 +221,25 @@ export function hasCircularReference(type) {
     visit(type, () => undefined, () => {
         hasCircular = true;
     });
-    return jit.hasCircularReference = hasCircular;
+    return (jit.hasCircularReference = hasCircular);
 }
 hasCircularReference.__type = ['Type', 'type', 'hasCircularReference', 'P"w!2""/#'];
 let visitStackId = 0;
 function extendPath(path, member) {
-    let name = '';
-    if ('name' in member) {
+    let name = "";
+    if ("name" in member) {
         name = member.name;
     }
-    if (name === '' || name === undefined)
+    if (name === "" || name === undefined)
         return path;
     if (path)
-        return path + '.' + String(name);
+        return path + "." + String(name);
     return String(name);
 }
 extendPath.__type = ['path', 'Type', 'member', 'extendPath', 'P&2!"w"2#&/$'];
 export function visit(type, visitor, onCircular) {
     const stack = [];
-    stack.push({ type, depth: 0, path: '' });
+    stack.push({ type, depth: 0, path: "" });
     const stackId = visitStackId++;
     while (stack.length) {
         const entry = stack.shift();
@@ -230,7 +247,9 @@ export function visit(type, visitor, onCircular) {
             break;
         const type = entry.type;
         const jit = getTypeJitContainer(type);
-        if (jit.visitStack && jit.visitStack.id === stackId && jit.visitStack.depth < entry.depth) {
+        if (jit.visitStack &&
+            jit.visitStack.id === stackId &&
+            jit.visitStack.depth < entry.depth) {
             if (onCircular)
                 onCircular();
             return;
@@ -249,7 +268,7 @@ export function visit(type, visitor, onCircular) {
                     stack.push({
                         type: member,
                         depth: entry.depth + 1,
-                        path: extendPath(entry.path, member),
+                        path: extendPath(entry.path, member)
                     });
                 break;
             case ReflectionKind.string:
@@ -259,17 +278,25 @@ export function visit(type, visitor, onCircular) {
             case ReflectionKind.regexp:
             case ReflectionKind.boolean:
                 if (type.origin)
-                    stack.push({ type: type.origin, depth: entry.depth + 1, path: entry.path });
+                    stack.push({
+                        type: type.origin,
+                        depth: entry.depth + 1,
+                        path: entry.path
+                    });
                 break;
             case ReflectionKind.function:
             case ReflectionKind.method:
             case ReflectionKind.methodSignature:
-                stack.push({ type: type.return, depth: entry.depth + 1, path: entry.path });
+                stack.push({
+                    type: type.return,
+                    depth: entry.depth + 1,
+                    path: entry.path
+                });
                 for (const member of type.parameters)
                     stack.push({
                         type: member,
                         depth: entry.depth + 1,
-                        path: extendPath(entry.path, member),
+                        path: extendPath(entry.path, member)
                     });
                 break;
             case ReflectionKind.propertySignature:
@@ -279,11 +306,23 @@ export function visit(type, visitor, onCircular) {
             case ReflectionKind.parameter:
             case ReflectionKind.tupleMember:
             case ReflectionKind.rest:
-                stack.push({ type: type.type, depth: entry.depth + 1, path: entry.path });
+                stack.push({
+                    type: type.type,
+                    depth: entry.depth + 1,
+                    path: entry.path
+                });
                 break;
             case ReflectionKind.indexSignature:
-                stack.push({ type: type.index, depth: entry.depth + 1, path: entry.path });
-                stack.push({ type: type.type, depth: entry.depth + 1, path: entry.path });
+                stack.push({
+                    type: type.index,
+                    depth: entry.depth + 1,
+                    path: entry.path
+                });
+                stack.push({
+                    type: type.type,
+                    depth: entry.depth + 1,
+                    path: entry.path
+                });
                 break;
         }
     }
@@ -291,25 +330,25 @@ export function visit(type, visitor, onCircular) {
 visit.__type = ['Type', 'type', 'path', false, '', 'visitor', 'onCircular', 'visit', 'P"w!2"P"w!2"&2#P.$$J/%2&P$/%2\'8$/('];
 function hasFunctionExpression(fn) {
     let code = fn.toString();
-    if (code.startsWith('() => '))
-        code = code.slice('() => '.length);
-    if (code.startsWith('function () { return ')) {
-        code = code.slice('function () { return '.length);
-        if (code.endsWith('; }'))
+    if (code.startsWith("() => "))
+        code = code.slice("() => ".length);
+    if (code.startsWith("function () { return ")) {
+        code = code.slice("function () { return ".length);
+        if (code.endsWith("; }"))
             code = code.slice(0, -3);
     }
-    if (code.startsWith('function() { return ')) {
-        code = code.slice('function() { return '.length);
-        if (code.endsWith('; }'))
+    if (code.startsWith("function() { return ")) {
+        code = code.slice("function() { return ".length);
+        if (code.endsWith("; }"))
             code = code.slice(0, -3);
     }
-    if (code[0] === '\'' && code[code.length - 1] === '\'')
+    if (code[0] === "'" && code[code.length - 1] === "'")
         return false;
     if (code[0] === '"' && code[code.length - 1] === '"')
         return false;
-    if (code[0] === '`' && code[code.length - 1] === '`')
+    if (code[0] === "`" && code[code.length - 1] === "`")
         return false;
-    return code.includes('(');
+    return code.includes("(");
 }
 hasFunctionExpression.__type = [() => Function, 'fn', 'hasFunctionExpression', 'PPu!2")/#'];
 /**
@@ -337,23 +376,33 @@ export class ReflectionParameter {
         return this.parameter.default !== undefined;
     }
     isValueRequired() {
-        if (this.hasDefault())
+        if (this.hasDefault()) {
             return false;
+        }
         return !this.isOptional();
     }
     getDefaultValue() {
         if (this.parameter.default !== undefined) {
-            return this.parameter.default();
+            if (typeof this.parameter.default === "function") {
+                return this.parameter.default();
+            }
+            return this.parameter.default;
         }
     }
+    setDefaultValue(value) {
+        this.parameter.default = value;
+    }
     hasDefaultFunctionExpression() {
         return !!(this.parameter.default && hasFunctionExpression(this.parameter.default));
     }
     applyDecorator(t) {
         if (t.type) {
             this.type = resolveReceiveType(t.type);
-            if (this.getVisibility() !== undefined && this.reflectionFunction instanceof ReflectionMethod) {
-                this.reflectionFunction.reflectionClass.getProperty(this.getName()).setType(this.type);
+            if (this.getVisibility() !== undefined &&
+                this.reflectionFunction instanceof ReflectionMethod) {
+                this.reflectionFunction.reflectionClass
+                    .getProperty(this.getName())
+                    .setType(this.type);
             }
         }
     }
@@ -370,7 +419,36 @@ export class ReflectionParameter {
         return this.parameter.visibility === ReflectionVisibility.private;
     }
     isReadonly() {
-        return this.parameter.readonly === true;
+        return (this.parameter.readonly === true ||
+            this.getTags().readonly === true ||
+            this.reflectionFunction.isReadonly());
+    }
+    setTags(tags) {
+        this.parameter.tags = tags;
+    }
+    getTags() {
+        return this.parameter.tags ?? {};
+    }
+    isHidden() {
+        return this.getTags().hidden === true || this.reflectionFunction.isHidden();
+    }
+    isIgnored() {
+        return (this.getTags().ignore === true || this.reflectionFunction.isIgnored());
+    }
+    isInternal() {
+        return (this.getTags().internal === true || this.reflectionFunction.isInternal());
+    }
+    getAlias() {
+        return this.getTags().alias ?? [];
+    }
+    getTitle() {
+        return this.getTags().title;
+    }
+    getPermission() {
+        return (this.getTags().permission ?? []).concat(this.reflectionFunction.getPermission());
+    }
+    getDomain() {
+        return this.getTags().domain || this.reflectionFunction.getDomain();
     }
     /**
      * True if the parameter becomes a property in the class.
@@ -382,7 +460,9 @@ export class ReflectionParameter {
      * }
      */
     isProperty() {
-        return this.parameter.readonly === true || this.parameter.visibility !== undefined;
+        return (this.parameter.readonly === true ||
+            this.parameter.tags?.readonly === true ||
+            this.parameter.visibility !== undefined);
     }
 }
 /**
@@ -392,7 +472,8 @@ export class ReflectionFunction {
     constructor(type) {
         this.type = type;
         this.parameters = [];
-        this.description = '';
+        this.parameterAliases = new Map();
+        this.description = "";
         for (const p of this.type.parameters) {
             this.parameters.push(new ReflectionParameter(p, this));
         }
@@ -401,13 +482,13 @@ export class ReflectionFunction {
     }
     static from(fn) {
         //todo: cache it
-        if (!('__type' in fn)) {
+        if (!("__type" in fn)) {
             //functions without any types have no __type attached
             return new ReflectionFunction({
                 kind: ReflectionKind.function,
                 function: fn,
                 return: { kind: ReflectionKind.any },
-                parameters: [],
+                parameters: []
             });
         }
         const type = reflect(fn);
@@ -427,6 +508,10 @@ export class ReflectionFunction {
             if (property.getName() === name)
                 return property;
         }
+        if (this.parameterAliases.has(name.toString())) {
+            const alias = this.parameterAliases.get(name.toString());
+            return this.getParameterOrUndefined(alias);
+        }
         return;
     }
     getParameter(name) {
@@ -448,7 +533,7 @@ export class ReflectionFunction {
         return this.type.return;
     }
     getName() {
-        return this.type.name || 'anonymous';
+        return this.type.name || "anonymous";
     }
     getDescription() {
         return this.description;
@@ -456,6 +541,36 @@ export class ReflectionFunction {
     get name() {
         return memberNameToString(this.getName());
     }
+    setTags(tags) {
+        this.type.tags = tags;
+    }
+    getTags() {
+        return this.type.tags ?? {};
+    }
+    isHidden() {
+        return this.getTags().hidden === true;
+    }
+    isReadonly() {
+        return this.getTags().readonly === true;
+    }
+    isIgnored() {
+        return this.getTags().ignore === true;
+    }
+    isInternal() {
+        return this.getTags().internal === true;
+    }
+    getAlias() {
+        return this.getTags().alias ?? [];
+    }
+    getTitle() {
+        return this.getTags().title;
+    }
+    getPermission() {
+        return this.getTags().permission ?? [];
+    }
+    getDomain() {
+        return this.getTags().domain;
+    }
 }
 /**
  * @reflection never
@@ -491,6 +606,36 @@ export class ReflectionMethod extends ReflectionFunction {
     isOptional() {
         return this.type.optional === true;
     }
+    setTags(tags) {
+        this.type.tags = tags;
+    }
+    getTags() {
+        return this.type.tags ?? {};
+    }
+    isHidden() {
+        return this.getTags().hidden === true || this.reflectionClass.isHidden();
+    }
+    isIgnored() {
+        return this.getTags().ignore === true || this.reflectionClass.isIgnored();
+    }
+    isReadonly() {
+        return (this.getTags().readonly === true || this.reflectionClass.isReadonly());
+    }
+    isInternal() {
+        return (this.getTags().internal === true || this.reflectionClass.isInternal());
+    }
+    getAlias() {
+        return this.getTags().alias ?? [];
+    }
+    getTitle() {
+        return this.getTags().title;
+    }
+    getPermission() {
+        return (this.getTags().permission ?? []).concat(this.reflectionClass.getPermission());
+    }
+    getDomain() {
+        return this.getTags().domain || this.reflectionClass.getDomain();
+    }
 }
 export function resolveForeignReflectionClass(property) {
     if (property.isReference())
@@ -508,7 +653,8 @@ resolveForeignReflectionClass.__type = ['ReflectionProperty', 'property', 'Refle
  * Resolved the class/object ReflectionClass of the given TypeClass|TypeObjectLiteral
  */
 export function resolveClassType(type) {
-    if (type.kind !== ReflectionKind.class && type.kind !== ReflectionKind.objectLiteral) {
+    if (type.kind !== ReflectionKind.class &&
+        type.kind !== ReflectionKind.objectLiteral) {
         throw new Error(`Cant resolve ReflectionClass of type ${type.kind} since its not a class or object literal`);
     }
     return ReflectionClass.from(type);
@@ -555,10 +701,12 @@ export class ReflectionProperty {
         return isBackReferenceType(this.getType());
     }
     isDatabaseSkipped(database) {
-        return databaseAnnotation.getDatabase(this.getType(), database)?.skip === true;
+        return (databaseAnnotation.getDatabase(this.getType(), database)?.skip === true);
     }
     isDatabaseMigrationSkipped(database) {
-        return this.isDatabaseSkipped(database) || databaseAnnotation.getDatabase(this.getType(), database)?.skipMigration === true;
+        return (this.isDatabaseSkipped(database) ||
+            databaseAnnotation.getDatabase(this.getType(), database)
+                ?.skipMigration === true);
     }
     getBackReference() {
         return getBackReferenceType(this.getType());
@@ -573,10 +721,11 @@ export class ReflectionProperty {
         return this.type.kind === ReflectionKind.array;
     }
     isDate() {
-        return this.type.kind === ReflectionKind.class && this.type.classType === Date;
+        return (this.type.kind === ReflectionKind.class && this.type.classType === Date);
     }
     isNumber() {
-        return this.type.kind === ReflectionKind.number || this.type.kind === ReflectionKind.bigint;
+        return (this.type.kind === ReflectionKind.number ||
+            this.type.kind === ReflectionKind.bigint);
     }
     getForeignKeyName() {
         return this.getNameAsString();
@@ -605,10 +754,11 @@ export class ReflectionProperty {
      * @throws Error if the property is not from type TypeClass or TypeObjectLiteral
      */
     getResolvedReflectionClass() {
-        if (this.type.kind !== ReflectionKind.class && this.type.kind !== ReflectionKind.objectLiteral) {
+        if (this.type.kind !== ReflectionKind.class &&
+            this.type.kind !== ReflectionKind.objectLiteral) {
             throw new Error(`Could not resolve reflection class since ${this.name} is not a class|object but of type ${stringifyType(this.type)}`);
         }
-        return this.cachedResolvedReflectionClass || (this.cachedResolvedReflectionClass = resolveClassType(this.getType()));
+        return (this.cachedResolvedReflectionClass || (this.cachedResolvedReflectionClass = resolveClassType(this.getType())));
     }
     /**
      * If undefined the property is not an index.
@@ -662,7 +812,7 @@ export class ReflectionProperty {
         return this.type;
     }
     getDescription() {
-        return this.property.description || '';
+        return this.property.description || "";
     }
     /**
      * Whether a value is required from serialization point of view.
@@ -670,8 +820,9 @@ export class ReflectionProperty {
      * then the value is not required to instantiate the property value.
      */
     isValueRequired() {
-        if (this.hasDefault())
+        if (this.hasDefault()) {
             return false;
+        }
         return !this.isOptional();
     }
     /**
@@ -685,56 +836,126 @@ export class ReflectionProperty {
      * If the property is actual optional or is an union with undefined in it.
      */
     isOptional() {
-        return this.property.optional === true || (this.type.kind === ReflectionKind.union && this.type.types.some(v => v.kind === ReflectionKind.undefined));
+        return (this.property.optional === true ||
+            (this.type.kind === ReflectionKind.union &&
+                this.type.types.some(v => v.kind === ReflectionKind.undefined)));
     }
     setOptional(v) {
         this.property.optional = v ? true : undefined;
     }
     isNullable() {
-        return (this.type.kind === ReflectionKind.union && this.type.types.some(v => v.kind === ReflectionKind.null));
+        return (this.type.kind === ReflectionKind.union &&
+            this.type.types.some(v => v.kind === ReflectionKind.null));
     }
     isReadonly() {
-        return this.property.readonly === true;
+        return (this.property.readonly === true ||
+            this.getTags().readonly === true ||
+            this.reflectionClass.isReadonly());
     }
     isAbstract() {
-        return this.property.kind === ReflectionKind.property && this.property.abstract === true;
+        return (this.property.kind === ReflectionKind.property &&
+            this.property.abstract === true);
     }
     hasDefault() {
-        return this.property.kind === ReflectionKind.property && this.property.default !== undefined;
+        return this.property.default === undefined
+            ? !this.isOptional() &&
+                (this.getKind() === ReflectionKind.boolean ||
+                    (this.type.kind === ReflectionKind.union &&
+                        this.type.types.some(t => t.kind === ReflectionKind.boolean)) ||
+                    this.getKind() === ReflectionKind.number ||
+                    (this.type.kind === ReflectionKind.union &&
+                        this.type.types.some(t => t.kind === ReflectionKind.number)))
+            : true;
     }
     getDefaultValue() {
-        if (this.property.kind === ReflectionKind.property && this.property.default !== undefined) {
+        if (this.property.default !== undefined) {
             try {
-                return this.property.default();
+                if (typeof this.property.default === "function") {
+                    return this.property.default();
+                }
+                return this.property.default;
             }
             catch {
-                return;
+                return undefined;
+            }
+        }
+        else if (!this.isOptional()) {
+            if (this.getKind() === ReflectionKind.boolean ||
+                (this.type.kind === ReflectionKind.union &&
+                    this.type.types.some(t => t.kind === ReflectionKind.boolean))) {
+                return false;
+            }
+            else if (this.getKind() === ReflectionKind.number ||
+                (this.type.kind === ReflectionKind.union &&
+                    this.type.types.some(t => t.kind === ReflectionKind.number))) {
+                return 0;
             }
         }
     }
+    setDefaultValue(value) {
+        this.property.default = value;
+    }
     hasDefaultFunctionExpression() {
-        return this.property.kind === ReflectionKind.property && !!this.property.default && hasFunctionExpression(this.property.default);
+        return (this.property.kind === ReflectionKind.property &&
+            !!this.property.default &&
+            hasFunctionExpression(this.property.default));
     }
     getDefaultValueFunction() {
-        if (this.property.kind === ReflectionKind.property && this.property.default !== undefined) {
+        if (this.property.kind === ReflectionKind.property &&
+            this.property.default !== undefined) {
             return this.property.default;
         }
-        return;
+        return undefined;
     }
     getVisibility() {
-        return this.property.kind === ReflectionKind.property ? this.property.visibility : undefined;
+        return this.property.kind === ReflectionKind.property
+            ? this.property.visibility
+            : undefined;
     }
     isPublic() {
-        return this.property.kind === ReflectionKind.property ? this.property.visibility === ReflectionVisibility.public : true;
+        return this.property.kind === ReflectionKind.property
+            ? this.property.visibility === ReflectionVisibility.public
+            : true;
     }
     isProtected() {
-        return this.property.kind === ReflectionKind.property ? this.property.visibility === ReflectionVisibility.protected : false;
+        return this.property.kind === ReflectionKind.property
+            ? this.property.visibility === ReflectionVisibility.protected
+            : false;
     }
     isPrivate() {
-        return this.property.kind === ReflectionKind.property ? this.property.visibility === ReflectionVisibility.private : false;
+        return this.property.kind === ReflectionKind.property
+            ? this.property.visibility === ReflectionVisibility.private
+            : false;
+    }
+    setTags(tags) {
+        this.property.tags = tags;
+    }
+    getTags() {
+        return this.property.tags ?? {};
+    }
+    isHidden() {
+        return this.getTags().hidden === true || this.reflectionClass.isHidden();
+    }
+    isIgnored() {
+        return this.getTags().ignore === true || this.reflectionClass.isIgnored();
+    }
+    isInternal() {
+        return (this.getTags().internal === true || this.reflectionClass.isInternal());
+    }
+    getAlias() {
+        return this.getTags().alias ?? [];
+    }
+    getTitle() {
+        return this.getTags().title;
+    }
+    getPermission() {
+        return (this.getTags().permission ?? []).concat(this.reflectionClass.getPermission());
+    }
+    getDomain() {
+        return this.getTags().domain || this.reflectionClass.getDomain();
     }
 }
-export const reflectionClassSymbol = Symbol('reflectionClass');
+export const reflectionClassSymbol = Symbol("reflectionClass");
 const __ΩSerializerFn = ['value', 'ReflectionProperty', 'property', '', 'SerializerFn', 'PP"2!"w"2#"v$Mw%y'];
 export { __ΩSerializerFn as __ΩSerializerFn };
 export class TData {
@@ -778,7 +999,7 @@ export class ReflectionClass {
         /**
          * The description, extracted from the class JSDoc @description.
          */
-        this.description = '';
+        this.description = "";
         /**
          * A place where arbitrary data is stored, usually set via decorator t.data.
          */
@@ -807,7 +1028,9 @@ export class ReflectionClass {
         this.propertyNames = [];
         this.methodNames = [];
         this.properties = [];
+        this.propertyAliases = new Map();
         this.methods = [];
+        this.methodAliases = new Map();
         /**
          * References and back references.
          */
@@ -818,13 +1041,15 @@ export class ReflectionClass {
          * A class using @t.singleTableInheritance registers itself in this array in its super class.
          */
         this.subClasses = [];
-        if (type.kind !== ReflectionKind.class && type.kind !== ReflectionKind.objectLiteral)
-            throw new Error('Only class, interface, or object literal type possible');
+        if (type.kind !== ReflectionKind.class &&
+            type.kind !== ReflectionKind.objectLiteral)
+            throw new Error("Only class, interface, or object literal type possible");
         if (parent) {
             this.name = parent.name;
             this.collectionName = parent.collectionName;
             this.databaseSchemaName = parent.databaseSchemaName;
             this.description = parent.description;
+            this.tags = parent.tags;
             for (const member of parent.getProperties()) {
                 this.registerProperty(member.clone(this));
             }
@@ -840,16 +1065,20 @@ export class ReflectionClass {
             applyEntityOptions(this, entityOptions);
         }
         this.description = this.type.description || this.description;
+        this.tags = this.type.tags || this.tags;
         //apply decorators
-        if (type.kind === ReflectionKind.class && isWithDeferredDecorators(type.classType)) {
+        if (type.kind === ReflectionKind.class &&
+            isWithDeferredDecorators(type.classType)) {
             for (const decorator of type.classType.__decorators) {
                 if (decorator.target !== type.classType)
                     continue;
                 const { data, property, parameterIndexOrDescriptor } = decorator;
-                if (property === undefined && parameterIndexOrDescriptor === undefined) {
+                if (property === undefined &&
+                    parameterIndexOrDescriptor === undefined) {
                     this.applyDecorator(data);
                 }
-                else if (property !== undefined && parameterIndexOrDescriptor === undefined) {
+                else if (property !== undefined &&
+                    parameterIndexOrDescriptor === undefined) {
                     const reflectionProperty = this.getPropertyOrUndefined(property);
                     if (reflectionProperty)
                         reflectionProperty.applyDecorator(data);
@@ -858,7 +1087,7 @@ export class ReflectionClass {
                         reflectionMethod.applyDecorator(data);
                 }
                 else if (parameterIndexOrDescriptor !== undefined) {
-                    const reflectionMethod = this.getMethodOrUndefined(property || 'constructor');
+                    const reflectionMethod = this.getMethodOrUndefined(property || "constructor");
                     if (reflectionMethod) {
                         const params = reflectionMethod.getParameters();
                         const param = params[parameterIndexOrDescriptor];
@@ -879,16 +1108,19 @@ export class ReflectionClass {
         reflection.subClasses = this.subClasses.slice();
         reflection.data = { ...this.data };
         reflection.description = this.description;
+        reflection.tags = this.tags;
         return reflection;
     }
     toString() {
         return stringifyResolvedType(this.type);
     }
     getPropertiesDeclaredInConstructor() {
-        const constructor = this.getMethod('constructor');
+        const constructor = this.getMethod("constructor");
         if (!constructor)
             return [];
-        const propertyNames = constructor.parameters.filter(v => v.getVisibility() !== undefined).map(v => v.getName());
+        const propertyNames = constructor.parameters
+            .filter(v => v.getVisibility() !== undefined)
+            .map(v => v.getName());
         return this.properties.filter(v => propertyNames.includes(memberNameToString(v.getName())));
     }
     clearJitContainer() {
@@ -898,14 +1130,18 @@ export class ReflectionClass {
         return getTypeJitContainer(this.type);
     }
     getClassType() {
-        return this.type.kind === ReflectionKind.class ? this.type.classType : Object;
+        return this.type.kind === ReflectionKind.class
+            ? this.type.classType
+            : Object;
     }
     getClassName() {
-        return this.type.kind === ReflectionKind.class ? this.type.typeName || getClassName(this.getClassType()) : this.type.typeName || 'Object';
+        return this.type.kind === ReflectionKind.class
+            ? this.type.typeName || getClassName(this.getClassType())
+            : this.type.typeName || "Object";
     }
     createDefaultObject() {
         try {
-            return new (this.getClassType());
+            return new (this.getClassType())();
         }
         catch {
             return {};
@@ -921,10 +1157,16 @@ export class ReflectionClass {
         return this.collectionName || this.getName();
     }
     hasProperty(name) {
-        return this.propertyNames.includes(memberNameToString(name));
+        const memberName = memberNameToString(name);
+        return (this.propertyNames.includes(memberName) ||
+            (this.propertyAliases.has(memberName) &&
+                this.propertyNames.includes(this.propertyAliases.get(memberName))));
     }
     hasMethod(name) {
-        return this.methodNames.includes(memberNameToString(name));
+        const memberName = memberNameToString(name);
+        return (this.methodNames.includes(memberName) ||
+            (this.methodAliases.has(memberName) &&
+                this.methodNames.includes(this.methodAliases.get(memberName))));
     }
     getPrimary() {
         if (!this.primaries.length) {
@@ -956,7 +1198,9 @@ export class ReflectionClass {
             throw new Error(`Property ${String(name)} not known in ${this.getClassName()}`);
         const stringName = memberNameToString(name);
         arrayRemoveItem(this.propertyNames, stringName);
-        const indexType = this.type.types.findIndex(v => (v.kind === ReflectionKind.property || v.kind === ReflectionKind.propertySignature) && v.name === name);
+        const indexType = this.type.types.findIndex(v => (v.kind === ReflectionKind.property ||
+            v.kind === ReflectionKind.propertySignature) &&
+            v.name === name);
         if (indexType !== -1)
             this.type.types.splice(indexType, 1);
         arrayRemoveItem(this.properties, property);
@@ -995,13 +1239,20 @@ export class ReflectionClass {
         if (index) {
             this.indexes.push({ names: [property.name], options: index });
         }
+        if (property.getAlias().length > 0) {
+            for (const alias of property.getAlias()) {
+                this.propertyAliases.set(alias, property.name);
+            }
+        }
         this.getJitContainer();
     }
     addProperty(prop) {
         const type = {
-            kind: this.type.kind === ReflectionKind.class ? ReflectionKind.property : ReflectionKind.propertySignature,
+            kind: this.type.kind === ReflectionKind.class
+                ? ReflectionKind.property
+                : ReflectionKind.propertySignature,
             parent: this.type,
-            ...prop,
+            ...prop
         };
         if (type.kind === ReflectionKind.property) {
             type.visibility = prop.visibility ?? ReflectionVisibility.public;
@@ -1015,9 +1266,15 @@ export class ReflectionClass {
             return;
         this.methods.push(method);
         this.methodNames.push(method.name);
+        if (method.getAlias().length > 0) {
+            for (const alias of method.getAlias()) {
+                this.methodAliases.set(alias, method.name);
+            }
+        }
     }
     add(member) {
-        if (member.kind === ReflectionKind.property || member.kind === ReflectionKind.propertySignature) {
+        if (member.kind === ReflectionKind.property ||
+            member.kind === ReflectionKind.propertySignature) {
             const existing = this.getPropertyOrUndefined(member.name);
             if (existing) {
                 existing.setType(member.type);
@@ -1026,7 +1283,8 @@ export class ReflectionClass {
                 this.registerProperty(new ReflectionProperty(member, this));
             }
         }
-        if (member.kind === ReflectionKind.method || member.kind === ReflectionKind.methodSignature) {
+        if (member.kind === ReflectionKind.method ||
+            member.kind === ReflectionKind.methodSignature) {
             const existing = this.getMethodOrUndefined(member.name);
             if (existing) {
                 existing.setType(member);
@@ -1063,7 +1321,8 @@ export class ReflectionClass {
         return this.assignedSingleTableInheritanceSubClassesByIdentifier;
     }
     hasSingleTableInheritanceSubClasses() {
-        return this.getAssignedSingleTableInheritanceSubClassesByIdentifier() !== undefined;
+        return (this.getAssignedSingleTableInheritanceSubClassesByIdentifier() !==
+            undefined);
     }
     getSingleTableInheritanceDiscriminantName() {
         if (!this.data.singleTableInheritanceProperty) {
@@ -1075,7 +1334,8 @@ export class ReflectionClass {
             }
             this.data.singleTableInheritanceProperty = this.getProperty(discriminant);
         }
-        return this.data.singleTableInheritanceProperty.name;
+        return this.data.singleTableInheritanceProperty
+            .name;
     }
     applyDecorator(data) {
         Object.assign(this.data, data.data);
@@ -1105,34 +1365,48 @@ export class ReflectionClass {
         if (classTypeIn instanceof ReflectionClass)
             return classTypeIn;
         if (isType(classTypeIn)) {
-            if (classTypeIn.kind === ReflectionKind.objectLiteral || (classTypeIn.kind === ReflectionKind.class && classTypeIn.typeArguments)) {
+            if (classTypeIn.kind === ReflectionKind.objectLiteral ||
+                (classTypeIn.kind === ReflectionKind.class && classTypeIn.typeArguments)) {
                 const jit = getTypeJitContainer(classTypeIn);
                 if (jit.reflectionClass)
                     return jit.reflectionClass;
-                return jit.reflectionClass = (ReflectionClass.Ω = [undefined], new ReflectionClass(classTypeIn));
+                return (jit.reflectionClass = (ReflectionClass.Ω = [undefined], new ReflectionClass(classTypeIn)));
             }
             if (classTypeIn.kind !== ReflectionKind.class)
                 throw new Error(`TypeClass or TypeObjectLiteral expected, not ${ReflectionKind[classTypeIn.kind]}`);
         }
-        const classType = isType(classTypeIn) ? classTypeIn.classType : classTypeIn['prototype'] ? classTypeIn : classTypeIn.constructor;
+        const classType = isType(classTypeIn)
+            ? classTypeIn.classType
+            : classTypeIn["prototype"]
+                ? classTypeIn
+                : classTypeIn.constructor;
         if (!classType.prototype.hasOwnProperty(reflectionClassSymbol)) {
-            Object.defineProperty(classType.prototype, reflectionClassSymbol, { writable: true, enumerable: false });
+            Object.defineProperty(classType.prototype, reflectionClassSymbol, {
+                writable: true,
+                enumerable: false
+            });
         }
         if (classType.prototype[reflectionClassSymbol] && args.length === 0) {
             return classType.prototype[reflectionClassSymbol];
         }
-        const type = isType(classTypeIn) ? classTypeIn : ('__type' in classType ?
-            args.length ? resolveRuntimeType(classType, args) : resolveRuntimeType(classType)
-            : {
-                kind: ReflectionKind.class,
-                classType,
-                types: [],
-            });
+        const type = isType(classTypeIn)
+            ? classTypeIn
+            : "__type" in classType
+                ? args.length
+                    ? resolveRuntimeType(classType, args)
+                    : resolveRuntimeType(classType)
+                : {
+                    kind: ReflectionKind.class,
+                    classType,
+                    types: []
+                };
         if (type.kind !== ReflectionKind.class) {
             throw new Error(`Given class is not a class but kind ${ReflectionKind[type.kind]}. classType: ${stringifyValueWithType(classType)}`);
         }
         const parentProto = Object.getPrototypeOf(classType.prototype);
-        const parentReflectionClass = parentProto && parentProto.constructor !== Object ? ReflectionClass.from(parentProto, type.extendsArguments) : undefined;
+        const parentReflectionClass = parentProto && parentProto.constructor !== Object
+            ? ReflectionClass.from(parentProto, type.extendsArguments)
+            : undefined;
         const reflectionClass = new ReflectionClass(type, parentReflectionClass);
         if (args.length === 0) {
             classType.prototype[reflectionClassSymbol] = reflectionClass;
@@ -1143,7 +1417,7 @@ export class ReflectionClass {
         }
     }
     getIndexSignatures() {
-        throw new Error('todo');
+        throw new Error("todo");
     }
     getPropertyNames() {
         return this.propertyNames;
@@ -1167,13 +1441,17 @@ export class ReflectionClass {
         return this.references;
     }
     getConstructorOrUndefined() {
-        return this.getMethodOrUndefined('constructor');
+        return this.getMethodOrUndefined("constructor");
     }
     getPropertyOrUndefined(name) {
         for (const property of this.getProperties()) {
             if (property.getName() === name)
                 return property;
         }
+        if (this.propertyAliases.has(name.toString())) {
+            const alias = this.propertyAliases.get(name.toString());
+            return this.getPropertyOrUndefined(alias);
+        }
         return;
     }
     getProperty(name) {
@@ -1191,6 +1469,10 @@ export class ReflectionClass {
             if (method.getName() === name)
                 return method;
         }
+        if (this.methodAliases.has(name.toString())) {
+            const alias = this.methodAliases.get(name.toString());
+            return this.getMethodOrUndefined(alias);
+        }
         return;
     }
     getMethod(name) {
@@ -1205,6 +1487,36 @@ export class ReflectionClass {
     serializeType() {
         return serializeType(this.type);
     }
+    setTags(tags) {
+        this.type.tags = tags;
+    }
+    getTags() {
+        return this.type.tags ?? {};
+    }
+    isHidden() {
+        return this.getTags().hidden === true;
+    }
+    isIgnored() {
+        return this.getTags().ignore === true;
+    }
+    isInternal() {
+        return this.getTags().internal === true;
+    }
+    isReadonly() {
+        return this.getTags().readonly === true;
+    }
+    getAlias() {
+        return this.getTags().alias ?? [];
+    }
+    getTitle() {
+        return this.getTags().title;
+    }
+    getPermission() {
+        return this.getTags().permission ?? [];
+    }
+    getDomain() {
+        return this.getTags().domain;
+    }
     /**
      * All references have a counter-part. This methods finds it and errors if not possible.
      *
@@ -1219,8 +1531,10 @@ export class ReflectionClass {
      * should make its relation mapping not ambiguous.
      */
     findReverseReference(toClassType, fromReference) {
-        if (fromReference.isBackReference() && fromReference.getBackReference().mappedBy) {
-            if (resolveForeignReflectionClass(fromReference).getClassType() === this.getClassType()) {
+        if (fromReference.isBackReference() &&
+            fromReference.getBackReference().mappedBy) {
+            if (resolveForeignReflectionClass(fromReference).getClassType() ===
+                this.getClassType()) {
                 return this.getProperty(fromReference.getBackReference().mappedBy);
             }
         }
@@ -1229,9 +1543,11 @@ export class ReflectionClass {
             if (backRef === fromReference)
                 continue;
             //backRef points to something completely different
-            if (!backRef.isArray() && resolveForeignReflectionClass(backRef).getClassType() !== toClassType)
+            if (!backRef.isArray() &&
+                resolveForeignReflectionClass(backRef).getClassType() !== toClassType)
                 continue;
-            if (backRef.isArray() && getClassType(backRef.getSubType()) !== toClassType)
+            if (backRef.isArray() &&
+                getClassType(backRef.getSubType()) !== toClassType)
                 continue;
             //we found the perfect match, manually annotated
             if (backRef.isBackReference() && backRef.getBackReference().mappedBy) {
@@ -1240,7 +1556,9 @@ export class ReflectionClass {
                 }
                 continue;
             }
-            if (fromReference.isBackReference() && fromReference.getBackReference().mappedBy && !fromReference.getBackReference().via) {
+            if (fromReference.isBackReference() &&
+                fromReference.getBackReference().mappedBy &&
+                !fromReference.getBackReference().via) {
                 if (fromReference.getBackReference().mappedBy === backRef.name) {
                     //perfect match
                     return backRef;
@@ -1248,13 +1566,19 @@ export class ReflectionClass {
                 continue;
             }
             //add to candidates if possible
-            if (fromReference.isBackReference() && fromReference.getBackReference().via && backRef.isBackReference() && backRef.getBackReference().via) {
-                if (fromReference.getBackReference().via === backRef.getBackReference().via) {
+            if (fromReference.isBackReference() &&
+                fromReference.getBackReference().via &&
+                backRef.isBackReference() &&
+                backRef.getBackReference().via) {
+                if (fromReference.getBackReference().via ===
+                    backRef.getBackReference().via) {
                     candidates.push(backRef);
                 }
                 continue;
             }
-            if (fromReference.isBackReference() && fromReference.isArray() && !fromReference.getBackReference().via) {
+            if (fromReference.isBackReference() &&
+                fromReference.isArray() &&
+                !fromReference.getBackReference().via) {
                 //other side must be non-array
                 if (backRef.isArray())
                     continue;
@@ -1262,7 +1586,7 @@ export class ReflectionClass {
             candidates.push(backRef);
         }
         if (candidates.length > 1) {
-            throw new Error(`Class ${this.getClassName()} has multiple potential reverse references [${candidates.map(v => v.name).join(', ')}] for ${fromReference.name} to class ${getClassName(toClassType)}. ` +
+            throw new Error(`Class ${this.getClassName()} has multiple potential reverse references [${candidates.map(v => v.name).join(", ")}] for ${fromReference.name} to class ${getClassName(toClassType)}. ` +
                 `Please specify each back reference by using 'mappedBy', e.g. @t.backReference({mappedBy: 'fieldNameOnTheOtherSide'} so its not ambiguous anymore.`);
         }
         if (candidates.length === 1)
diff --git a/dist/esm/src/reflection/reflection.js.map b/dist/esm/src/reflection/reflection.js.map
index ba5b18cdf60504a177b2c1a7b0343514e92f781a..87e84a48dc295ca5ba59f82dbf088e56770ad637 100644
--- a/dist/esm/src/reflection/reflection.js.map
+++ b/dist/esm/src/reflection/reflection.js.map
@@ -1 +1 @@
-{"version":3,"file":"reflection.js","sourceRoot":"","sources":["../../../../src/reflection/reflection.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"reflection.js","sourceRoot":"","sources":["../../../../src/reflection/reflection.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/src/reflection/type.d.ts b/dist/esm/src/reflection/type.d.ts
index a0f511e61710bc4b952d6d0573530fc73f565c1f..6b708576c81fee9e36d4991e759f057299b86408 100644
--- a/dist/esm/src/reflection/type.d.ts
+++ b/dist/esm/src/reflection/type.d.ts
@@ -1,6 +1,6 @@
-import { AbstractClassType, ClassType, TypeAnnotation } from '@deepkit/core';
-import { TypeNumberBrand } from '@deepkit/type-spec';
-import { ReceiveType, ReflectionClass } from './reflection.js';
+import { AbstractClassType, ClassType, TypeAnnotation } from "@deepkit/core";
+import { TypeNumberBrand } from "@deepkit/type-spec";
+import { ReceiveType, ReflectionClass } from "./reflection.js";
 export declare enum ReflectionVisibility {
     public = 0,
     protected = 1,
@@ -105,6 +105,16 @@ export declare function hasTypeInformation(object: ClassType | Function): boolea
 export type JitContainer = any;
 export declare function getTypeJitContainer(type: Type): JitContainer;
 export declare function clearTypeJitContainer(type: Type): void;
+export interface TagsReflection {
+    hidden?: boolean;
+    ignore?: boolean;
+    internal?: boolean;
+    alias?: string[];
+    title?: string;
+    readonly?: boolean;
+    permission?: string[];
+    domain?: string;
+}
 export interface TypeNever extends TypeAnnotations {
     kind: ReflectionKind.never;
     parent?: Type;
@@ -175,6 +185,7 @@ export interface TypeBaseMember extends TypeAnnotations {
     static?: true;
     optional?: true;
     readonly?: true;
+    tags?: TagsReflection;
 }
 export interface TypeParameter extends TypeAnnotations {
     kind: ReflectionKind.parameter;
@@ -188,7 +199,8 @@ export interface TypeParameter extends TypeAnnotations {
     /**
      * Set when the parameter has a default value aka initializer.
      */
-    default?: () => any;
+    default?: (() => any) | any;
+    tags?: TagsReflection;
 }
 export interface TypeMethod extends TypeBaseMember {
     kind: ReflectionKind.method;
@@ -208,7 +220,7 @@ export interface TypeProperty extends TypeBaseMember {
     /**
      * Set when the property has a default value aka initializer.
      */
-    default?: () => any;
+    default?: (() => any) | any;
 }
 export interface TypeFunction extends TypeAnnotations {
     kind: ReflectionKind.function;
@@ -218,12 +230,14 @@ export interface TypeFunction extends TypeAnnotations {
     function?: Function;
     parameters: TypeParameter[];
     return: Type;
+    tags?: TagsReflection;
 }
 export interface TypeCallSignature extends TypeAnnotations {
     kind: ReflectionKind.callSignature;
     parent?: Type;
     parameters: TypeParameter[];
     return: Type;
+    tags?: TagsReflection;
 }
 export interface TypePromise extends TypeAnnotations {
     kind: ReflectionKind.promise;
@@ -258,6 +272,7 @@ export interface TypeClass extends TypeAnnotations {
      * properties/methods.
      */
     types: (TypeIndexSignature | TypeProperty | TypeMethod)[];
+    tags?: TagsReflection;
 }
 export interface TypeEnum extends TypeAnnotations {
     kind: ReflectionKind.enum;
@@ -268,17 +283,21 @@ export interface TypeEnum extends TypeAnnotations {
     values: (string | number | undefined | null)[];
     indexType: Type;
     description?: string;
+    tags?: TagsReflection;
 }
 export interface TypeEnumMember extends TypeAnnotations {
     kind: ReflectionKind.enumMember;
     parent: TypeEnum;
     name: string;
-    default?: () => string | number;
+    description?: string;
+    default?: (() => string | number) | string | number;
+    tags?: TagsReflection;
 }
 export interface TypeTypeParameter extends TypeAnnotations {
     kind: ReflectionKind.typeParameter;
     parent?: Type;
     name: string;
+    tags?: TagsReflection;
 }
 export interface TypeUnion extends TypeAnnotations {
     kind: ReflectionKind.union;
@@ -294,6 +313,7 @@ export interface TypeArray extends TypeAnnotations {
     kind: ReflectionKind.array;
     parent?: Type;
     type: Type;
+    tags?: TagsReflection;
 }
 export interface TypePropertySignature extends TypeAnnotations {
     kind: ReflectionKind.propertySignature;
@@ -303,6 +323,11 @@ export interface TypePropertySignature extends TypeAnnotations {
     readonly?: true;
     description?: string;
     type: Type;
+    /**
+     * Set when the property has a default value aka initializer.
+     */
+    default?: (() => any) | any;
+    tags?: TagsReflection;
 }
 export interface TypeMethodSignature extends TypeAnnotations {
     kind: ReflectionKind.methodSignature;
@@ -312,6 +337,7 @@ export interface TypeMethodSignature extends TypeAnnotations {
     description?: string;
     parameters: TypeParameter[];
     return: Type;
+    tags?: TagsReflection;
 }
 /**
  * Object literals or interfaces.
@@ -327,12 +353,18 @@ export interface TypeObjectLiteral extends TypeAnnotations {
      * For example `interface A extends B<string, boolean> {}` then implements = [B<string, boolean>].
      */
     implements?: Type[];
+    tags?: TagsReflection;
 }
 export interface TypeIndexSignature extends TypeAnnotations {
     kind: ReflectionKind.indexSignature;
     parent: TypeClass | TypeObjectLiteral;
     index: Type;
     type: Type;
+    /**
+     * Set when the property has a default value aka initializer.
+     */
+    default?: (() => any) | any;
+    tags?: TagsReflection;
 }
 export interface TypeInfer extends TypeAnnotations {
     kind: ReflectionKind.infer;
@@ -452,14 +484,14 @@ type GetArrayElement<T extends any[]> = [T] extends [Array<infer K>] ? K : never
 type RemoveParent<T, K extends keyof T> = {
     [P in K]: T[P] extends Type[] ? RemoveParentHomomorphic<GetArrayElement<T[P]>>[] : T[P] extends Type ? RemoveParentHomomorphic<T[P]> : T[P];
 };
-type RemoveParentHomomorphic<T> = RemoveParent<T, Exclude<keyof T, 'parent'>>;
+type RemoveParentHomomorphic<T> = RemoveParent<T, Exclude<keyof T, "parent">>;
 type RemoveDeepParent<T extends Type> = T extends infer K ? RemoveParentHomomorphic<K> : never;
 export type ParentLessType = RemoveDeepParent<Type>;
 /**
  * This function does not do a deep copy, only shallow. A deep copy makes it way to inefficient, so much that router.spec.ts takes up to 20-30seconds
  * to complete instead of barely 30ms.
  */
-export declare function copyAndSetParent<T extends ParentLessType>(inc: T, parent?: Type): FindType<Type, T['kind']>;
+export declare function copyAndSetParent<T extends ParentLessType>(inc: T, parent?: Type): FindType<Type, T["kind"]>;
 export declare function widenLiteral(type: Type): Type;
 export declare function assertType<K extends ReflectionKind, T>(t: Type | undefined, kind: K): asserts t is FindType<Type, K>;
 export declare function getClassType(type: Type): ClassType;
@@ -479,6 +511,42 @@ export declare function hasDefaultValue(type: Type): boolean;
  * Checks whether `null` is allowed as type.
  */
 export declare function isNullable(type: Type): boolean;
+/**
+ * Get tags from type.
+ */
+export declare function getTags(type: Type): TagsReflection;
+/**
+ * Checks whether the \`hidden\` tag was specified for the type.
+ */
+export declare function isHidden(type: Type): boolean;
+/**
+ * Checks whether the \`ignore\` tag was specified for the type.
+ */
+export declare function isIgnore(type: Type): boolean;
+/**
+ * Checks whether the \`internal\` tag was specified for the type.
+ */
+export declare function isInternal(type: Type): boolean;
+/**
+ * Returns the values specified by the type's \`alias\` tag(s).
+ */
+export declare function getAlias(type: Type): string[];
+/**
+ * Checks whether the \`readonly\` tag was specified for the type.
+ */
+export declare function isReadonly(type: Type): boolean;
+/**
+ * Returns the values specified by the type's \`title\` tag.
+ */
+export declare function getTitle(type: Type): string | undefined;
+/**
+ * Returns the values specified by the type's \`permission\` tag(s).
+ */
+export declare function getPermission(type: Type): string[];
+/**
+ * Returns the values specified by the type's \`domain\` tag.
+ */
+export declare function getDomain(type: Type): string | undefined;
 /**
  * Integer
  */
@@ -539,7 +607,7 @@ export declare class AnnotationDefinition<T = true> {
     hasAnnotations(type: Type): boolean;
 }
 export type AnnotationType<T extends AnnotationDefinition<any>> = T extends AnnotationDefinition<infer K> ? K : never;
-export type ReferenceActions = 'RESTRICT' | 'NO ACTION' | 'CASCADE' | 'SET NULL' | 'SET DEFAULT';
+export type ReferenceActions = "RESTRICT" | "NO ACTION" | "CASCADE" | "SET NULL" | "SET DEFAULT";
 export interface ReferenceOptions {
     /**
      * Default is CASCADE.
@@ -574,7 +642,7 @@ export interface EntityOptions {
  * }
  * ```
  */
-export type Entity<T extends EntityOptions> = {} & TypeAnnotation<'entity', T>;
+export type Entity<T extends EntityOptions> = {} & TypeAnnotation<"entity", T>;
 /**
  * Marks a property as primary key.
  * ```typescript
@@ -583,7 +651,7 @@ export type Entity<T extends EntityOptions> = {} & TypeAnnotation<'entity', T>;
  * }
  * ```
  */
-export type PrimaryKey = TypeAnnotation<'primaryKey'>;
+export type PrimaryKey = TypeAnnotation<"primaryKey">;
 type TypeKeyOf<T> = T[keyof T];
 export type PrimaryKeyFields<T> = any extends T ? any : {
     [P in keyof T]: Required<T[P]> extends Required<PrimaryKey> ? T[P] : never;
@@ -601,7 +669,7 @@ export type ReferenceFields<T> = {
  * }
  * ```
  */
-export type AutoIncrement = TypeAnnotation<'autoIncrement'>;
+export type AutoIncrement = TypeAnnotation<"autoIncrement">;
 /**
  * UUID v4, as string, serialized as string in JSON, and binary in database.
  * Use `uuid()` as handy initializer.
@@ -612,11 +680,11 @@ export type AutoIncrement = TypeAnnotation<'autoIncrement'>;
  * }
  * ```
  */
-export type UUID = string & TypeAnnotation<'UUIDv4'>;
+export type UUID = string & TypeAnnotation<"UUIDv4">;
 /**
  * MongoDB's ObjectID type. serialized as string in JSON, ObjectID in database.
  */
-export type MongoId = string & TypeAnnotation<'mongoId'>;
+export type MongoId = string & TypeAnnotation<"mongoId">;
 /**
  * Same as `bigint` but serializes to unsigned binary with unlimited size (instead of 8 bytes in most databases).
  * Negative values will be converted to positive (abs(x)).
@@ -627,7 +695,7 @@ export type MongoId = string & TypeAnnotation<'mongoId'>;
  * }
  * ```
  */
-export type BinaryBigInt = bigint & TypeAnnotation<'binaryBigInt'>;
+export type BinaryBigInt = bigint & TypeAnnotation<"binaryBigInt">;
 /**
  * Same as `bigint` but serializes to signed binary with unlimited size (instead of 8 bytes in most databases).
  * The binary has an additional leading sign byte and is represented as an uint: 255 for negative, 0 for zero, or 1 for positive.
@@ -638,7 +706,7 @@ export type BinaryBigInt = bigint & TypeAnnotation<'binaryBigInt'>;
  * }
  * ```
  */
-export type SignedBinaryBigInt = bigint & TypeAnnotation<'signedBinaryBigInt'>;
+export type SignedBinaryBigInt = bigint & TypeAnnotation<"signedBinaryBigInt">;
 export interface BackReferenceOptions {
     /**
      * Necessary for normalised many-to-many relations. This defines the class of the pivot table/collection.
@@ -651,13 +719,13 @@ export interface BackReferenceOptions {
      */
     mappedBy?: string;
 }
-export type Reference<Options extends ReferenceOptions = {}> = TypeAnnotation<'reference', Options>;
-export type BackReference<Options extends BackReferenceOptions = {}> = TypeAnnotation<'backReference', Options>;
-export type EmbeddedMeta<Options> = TypeAnnotation<'embedded', Options>;
+export type Reference<Options extends ReferenceOptions = {}> = TypeAnnotation<"reference", Options>;
+export type BackReference<Options extends BackReferenceOptions = {}> = TypeAnnotation<"backReference", Options>;
+export type EmbeddedMeta<Options> = TypeAnnotation<"embedded", Options>;
 export type Embedded<T, Options extends {
     prefix?: string;
 } = {}> = T & EmbeddedMeta<Options>;
-export type MapName<Alias extends string, ForSerializer extends string = ''> = TypeAnnotation<'mapName', [Alias, ForSerializer]>;
+export type MapName<Alias extends string, ForSerializer extends string = ""> = TypeAnnotation<"mapName", [Alias, ForSerializer]>;
 export declare const referenceAnnotation: AnnotationDefinition<ReferenceOptions>;
 export declare const entityAnnotation: {
     set<K extends keyof EntityOptions>(type: Type, name: K, value: EntityOptions[K]): void;
@@ -749,7 +817,7 @@ export declare function hasEmbedded(type: Type): boolean;
  * }
  * ```
  */
-export type Group<Name extends string> = TypeAnnotation<'group', Name>;
+export type Group<Name extends string> = TypeAnnotation<"group", Name>;
 /**
  * Excludes the type from serialization of all kind.
  *
@@ -761,7 +829,7 @@ export type Group<Name extends string> = TypeAnnotation<'group', Name>;
  *  }
  *  ```
  */
-export type Excluded<Name extends string = '*'> = TypeAnnotation<'excluded', Name>;
+export type Excluded<Name extends string = "*"> = TypeAnnotation<"excluded", Name>;
 /**
  * Assigns arbitrary data to a type that can be read in runtime.
  *
@@ -773,7 +841,10 @@ export type Excluded<Name extends string = '*'> = TypeAnnotation<'excluded', Nam
  * }
  * ```
  */
-export type Data<Name extends string, Value> = TypeAnnotation<'data', [Name, Value]>;
+export type Data<Name extends string, Value> = TypeAnnotation<"data", [
+    Name,
+    Value
+]>;
 /**
  * Resets an already set decorator to undefined.
  *
@@ -787,7 +858,7 @@ export type Data<Name extends string, Value> = TypeAnnotation<'data', [Name, Val
  * }
  * ```
  */
-export type ResetAnnotation<Name extends string> = TypeAnnotation<'reset', Name>;
+export type ResetAnnotation<Name extends string> = TypeAnnotation<"reset", Name>;
 export type IndexOptions = {
     name?: string;
     size?: number;
@@ -798,10 +869,10 @@ export type IndexOptions = {
     where?: string;
     expireAfterSeconds?: number;
 };
-export type Unique<Options extends IndexOptions = {}> = TypeAnnotation<'index', Options & {
+export type Unique<Options extends IndexOptions = {}> = TypeAnnotation<"index", Options & {
     unique: true;
 }>;
-export type Index<Options extends IndexOptions = {}> = TypeAnnotation<'index', Options>;
+export type Index<Options extends IndexOptions = {}> = TypeAnnotation<"index", Options>;
 export interface DatabaseFieldOptions {
     /**
      * The name of the column in the database.
@@ -848,11 +919,11 @@ export interface SqliteOptions extends DatabaseFieldOptions {
 }
 type Database<Name extends string, Options extends {
     [name: string]: any;
-}> = TypeAnnotation<'database', [Name, Options]>;
-export type MySQL<Options extends MySQLOptions> = Database<'mysql', Options>;
-export type Postgres<Options extends PostgresOptions> = Database<'postgres', Options>;
-export type SQLite<Options extends SqliteOptions> = Database<'sqlite', Options>;
-export type DatabaseField<Options extends DatabaseFieldOptions, Name extends string = '*'> = Database<Name, Options>;
+}> = TypeAnnotation<"database", [Name, Options]>;
+export type MySQL<Options extends MySQLOptions> = Database<"mysql", Options>;
+export type Postgres<Options extends PostgresOptions> = Database<"postgres", Options>;
+export type SQLite<Options extends SqliteOptions> = Database<"sqlite", Options>;
+export type DatabaseField<Options extends DatabaseFieldOptions, Name extends string = "*"> = Database<Name, Options>;
 export declare const enum BinaryBigIntType {
     unsigned = 0,
     signed = 1
@@ -1047,6 +1118,7 @@ interface StringifyTypeOptions {
     defaultIsOptional: boolean;
     showHeritage: boolean;
     showDefaults: boolean;
+    showTags: boolean;
     defaultValues: any;
     stringify?: (type: Type) => string | undefined;
 }
@@ -1058,6 +1130,7 @@ export declare type __ΩReflectionKind = any[];
 export declare type __ΩTypeDecorator = any[];
 export declare type __ΩAnnotations = any[];
 export declare type __ΩJitContainer = any[];
+export declare type __ΩTagsReflection = any[];
 export declare type __ΩTypeNever = any[];
 export declare type __ΩTypeAny = any[];
 export declare type __ΩTypeUnknown = any[];
diff --git a/dist/esm/src/reflection/type.js b/dist/esm/src/reflection/type.js
index 73b4726abb37b4641f62f0c109c8585828e470bd..9131956b3d270db652ff625c44886061d8a6d878 100644
--- a/dist/esm/src/reflection/type.js
+++ b/dist/esm/src/reflection/type.js
@@ -4,13 +4,13 @@ const __ΩReturnType = ['T', 'args', '', 'ReturnType', 'l>e"!R"RPde#!P"@2"h"!/#q
 const __ΩExclude = ['T', 'U', 'Exclude', 'l6!Re$!RPe#!e$"qk#%QRb!b"Pde"!p)w#y'];
 const __ΩRequired = ['T', 'Required', 'l+e#!e"!fRb!Pde"!gN##w"y'];
 /*@ts-ignore*/
-import { __ΩClassType } from '@deepkit/core';
+import { __ΩClassType } from "@deepkit/core";
 /*@ts-ignore*/
-import { __ΩAbstractClassType } from '@deepkit/core';
+import { __ΩAbstractClassType } from "@deepkit/core";
 /*@ts-ignore*/
-import { __ΩReceiveType } from './reflection.js';
+import { __ΩReceiveType } from "./reflection.js";
 /*@ts-ignore*/
-import { __ΩTypeAnnotation } from '@deepkit/core';
+import { __ΩTypeAnnotation } from "@deepkit/core";
 function __assignType(fn, args) {
     fn.__type = args;
     return fn;
@@ -24,12 +24,12 @@ function __assignType(fn, args) {
  *
  * You should have received a copy of the MIT License along with this program.
  */
-import { arrayRemoveItem, getClassName, getInheritanceChain, getParentClass, indent, isArray, isClass, isGlobalClass, } from '@deepkit/core';
-import { TypeNumberBrand } from '@deepkit/type-spec';
-import { getProperty, reflect, ReflectionClass, resolveReceiveType, toSignature } from './reflection.js';
-import { isExtendable } from './extends.js';
-import { state } from './state.js';
-import { resolveRuntimeType } from './processor.js';
+import { arrayRemoveItem, getClassName, getInheritanceChain, getParentClass, indent, isArray, isClass, isGlobalClass } from "@deepkit/core";
+import { TypeNumberBrand } from "@deepkit/type-spec";
+import { isExtendable } from "./extends.js";
+import { resolveRuntimeType } from "./processor.js";
+import { getProperty, reflect, ReflectionClass, resolveReceiveType, toSignature } from "./reflection.js";
+import { state } from "./state.js";
 const __ΩReflectionVisibility = ['public', 'protected', 'private', 'ReflectionVisibility', 'PC!C"C#Bw$'];
 export { __ΩReflectionVisibility as __ΩReflectionVisibility };
 export var ReflectionVisibility;
@@ -101,7 +101,7 @@ export function applyScheduledAnnotations(type) {
 }
 applyScheduledAnnotations.__type = ['Type', 'type', 'applyScheduledAnnotations', 'P"w!2""/#'];
 export function hasTypeInformation(object) {
-    return '__type' in object && isArray(object.__type);
+    return "__type" in object && isArray(object.__type);
 }
 hasTypeInformation.__type = [() => __ΩClassType, () => Function, 'object', 'hasTypeInformation', 'PPn!Pu"J2#)/$'];
 const __ΩJitContainer = ['JitContainer', '"w!y'];
@@ -116,6 +116,8 @@ export function clearTypeJitContainer(type) {
     type.jit = {};
 }
 clearTypeJitContainer.__type = ['Type', 'type', 'clearTypeJitContainer', 'P"w!2"$/#'];
+const __ΩTagsReflection = ['hidden', 'ignore', 'internal', 'alias', 'title', 'readonly', 'permission', 'domain', 'TagsReflection', 'P)4!8)4"8)4#8&F4$8&4%8)4&8&F4\'8&4(8Mw)y'];
+export { __ΩTagsReflection as __ΩTagsReflection };
 const __ΩTypeNever = ['TypeAnnotations', 0, 'kind', 'Type', 'parent', 'TypeNever', 'P"w!a"4#"w$4%8Mw&y'];
 export { __ΩTypeNever as __ΩTypeNever };
 const __ΩTypeAny = ['TypeAnnotations', 1, 'kind', 'Type', 'parent', 'TypeAny', 'P"w!a"4#"w$4%8Mw&y'];
@@ -129,7 +131,10 @@ export { __ΩTypeObject as __ΩTypeObject };
 const __ΩTypeString = ['TypeAnnotations', 5, 'kind', 'Type', 'parent', 'TypeString', 'P"w!a"4#"w$4%8Mw&y'];
 export { __ΩTypeString as __ΩTypeString };
 export function isIntegerType(type) {
-    return type.kind === ReflectionKind.number && type.brand !== undefined && type.brand >= TypeNumberBrand.integer && type.brand <= TypeNumberBrand.uint32;
+    return (type.kind === ReflectionKind.number &&
+        type.brand !== undefined &&
+        type.brand >= TypeNumberBrand.integer &&
+        type.brand <= TypeNumberBrand.uint32);
 }
 isIntegerType.__type = ['Type', 'type', 'isIntegerType', 'P"w!2"!/#'];
 const __ΩTypeNumber = ['TypeAnnotations', 6, 'kind', 'TypeNumberBrand', 'brand', 'Type', 'parent', 'TypeNumber', 'P"w!a"4#"w$4%8"w&4\'8Mw(y'];
@@ -152,47 +157,47 @@ const __ΩTypeRegexp = ['TypeAnnotations', 12, 'kind', 'Type', 'parent', 'TypeRe
 export { __ΩTypeRegexp as __ΩTypeRegexp };
 class User {
     getUserName() {
-        return '';
+        return "";
     }
 }
 User.__type = ['username', "username", 'getUserName', 'User', '&3!P!."f0#5w$'];
 const __Ωa = [() => User, 'username', 'a', 'PP7!P)4"MKw#y'];
 const __Ωb = [() => __ΩReturnType, () => __Ωa, "getUserName", 'b', 'n".#fo!"w$y'];
-const __ΩTypeBaseMember = ['TypeAnnotations', () => __ΩReflectionVisibility, 'visibility', true, 'abstract', true, 'static', true, 'optional', true, 'readonly', 'TypeBaseMember', 'P"w!n"4#.$4%8.&4\'8.(4)8.*4+8Mw,y'];
+const __ΩTypeBaseMember = ['TypeAnnotations', () => __ΩReflectionVisibility, 'visibility', true, 'abstract', true, 'static', true, 'optional', true, 'readonly', () => __ΩTagsReflection, 'tags', 'TypeBaseMember', 'P"w!n"4#.$4%8.&4\'8.(4)8.*4+8n,4-8Mw.y'];
 export { __ΩTypeBaseMember as __ΩTypeBaseMember };
-const __ΩTypeParameter = ['TypeAnnotations', 18, 'kind', 'name', 'Type', 'type', () => __ΩTypeFunction, () => __ΩTypeMethod, () => __ΩTypeMethodSignature, () => __ΩTypeCallSignature, 'parent', () => __ΩReflectionVisibility, 'visibility', true, 'readonly', true, 'optional', 'description', '', 'default', 'TypeParameter', 'P"w!a"4#&4$"w%4&Pn\'n(n)n*J4+n,4-8..4/8.0418&428P"/3448Mw5y'];
+const __ΩTypeParameter = ['TypeAnnotations', 18, 'kind', 'name', 'Type', 'type', () => __ΩTypeFunction, () => __ΩTypeMethod, () => __ΩTypeMethodSignature, () => __ΩTypeCallSignature, 'parent', () => __ΩReflectionVisibility, 'visibility', true, 'readonly', true, 'optional', 'description', '', 'default', () => __ΩTagsReflection, 'tags', 'TypeParameter', 'P"w!a"4#&4$"w%4&Pn\'n(n)n*J4+n,4-8..4/8.0418&428PP"/3"J448n5468Mw7y'];
 export { __ΩTypeParameter as __ΩTypeParameter };
 const __ΩTypeMethod = [() => __ΩTypeBaseMember, 16, 'kind', () => __ΩTypeClass, 'parent', 'name', 'description', () => __ΩTypeParameter, 'parameters', 'Type', 'return', 'TypeMethod', 'Pn!a"4#n$4%P\'&+J4&&4\'8n(F4)"w*4+Mw,y'];
 export { __ΩTypeMethod as __ΩTypeMethod };
-const __ΩTypeProperty = [() => __ΩTypeBaseMember, 15, 'kind', () => __ΩTypeClass, 'parent', () => __ΩReflectionVisibility, 'visibility', 'name', 'description', 'Type', 'type', '', 'default', 'TypeProperty', 'Pn!a"4#n$4%n&4\'P\'&+J4(&4)8"w*4+P"/,4-8Mw.y'];
+const __ΩTypeProperty = [() => __ΩTypeBaseMember, 15, 'kind', () => __ΩTypeClass, 'parent', () => __ΩReflectionVisibility, 'visibility', 'name', 'description', 'Type', 'type', '', 'default', 'TypeProperty', 'Pn!a"4#n$4%n&4\'P\'&+J4(&4)8"w*4+PP"/,"J4-8Mw.y'];
 export { __ΩTypeProperty as __ΩTypeProperty };
-const __ΩTypeFunction = ['TypeAnnotations', 17, 'kind', 'Type', 'parent', 'name', 'description', () => Function, 'function', () => __ΩTypeParameter, 'parameters', 'return', 'TypeFunction', 'P"w!a"4#"w$4%8P\'&+J4&8&4\'8Pu(4)8n*F4+"w$4,Mw-y'];
+const __ΩTypeFunction = ['TypeAnnotations', 17, 'kind', 'Type', 'parent', 'name', 'description', () => Function, 'function', () => __ΩTypeParameter, 'parameters', 'return', () => __ΩTagsReflection, 'tags', 'TypeFunction', 'P"w!a"4#"w$4%8P\'&+J4&8&4\'8Pu(4)8n*F4+"w$4,n-4.8Mw/y'];
 export { __ΩTypeFunction as __ΩTypeFunction };
-const __ΩTypeCallSignature = ['TypeAnnotations', 35, 'kind', 'Type', 'parent', () => __ΩTypeParameter, 'parameters', 'return', 'TypeCallSignature', 'P"w!a"4#"w$4%8n&F4\'"w$4(Mw)y'];
+const __ΩTypeCallSignature = ['TypeAnnotations', 35, 'kind', 'Type', 'parent', () => __ΩTypeParameter, 'parameters', 'return', () => __ΩTagsReflection, 'tags', 'TypeCallSignature', 'P"w!a"4#"w$4%8n&F4\'"w$4(n)4*8Mw+y'];
 export { __ΩTypeCallSignature as __ΩTypeCallSignature };
 const __ΩTypePromise = ['TypeAnnotations', 19, 'kind', 'Type', 'parent', 'type', 'TypePromise', 'P"w!a"4#"w$4%8"w$4&Mw\'y'];
 export { __ΩTypePromise as __ΩTypePromise };
-const __ΩTypeClass = ['TypeAnnotations', 20, 'kind', 'Type', 'parent', () => __ΩClassType, 'classType', 'description', 'extendsArguments', 'implements', 'arguments', () => __ΩTypeIndexSignature, () => __ΩTypeProperty, () => __ΩTypeMethod, 'types', 'TypeClass', 'P"w!a"4#"w$4%8n&4\'&4(8"w$F4)8"w$F4*8"w$F4+8Pn,n-n.JF4/Mw0y'];
+const __ΩTypeClass = ['TypeAnnotations', 20, 'kind', 'Type', 'parent', () => __ΩClassType, 'classType', 'description', 'extendsArguments', 'implements', 'arguments', () => __ΩTypeIndexSignature, () => __ΩTypeProperty, () => __ΩTypeMethod, 'types', () => __ΩTagsReflection, 'tags', 'TypeClass', 'P"w!a"4#"w$4%8n&4\'&4(8"w$F4)8"w$F4*8"w$F4+8Pn,n-n.JF4/n0418Mw2y'];
 export { __ΩTypeClass as __ΩTypeClass };
-const __ΩTypeEnum = ['TypeAnnotations', 22, 'kind', 'Type', 'parent', 'enum', 'values', 'indexType', 'description', 'TypeEnum', 'P"w!a"4#"w$4%8P&P&\'-,JLM4&P&\'-,JF4\'"w$4(&4)8Mw*y'];
+const __ΩTypeEnum = ['TypeAnnotations', 22, 'kind', 'Type', 'parent', 'enum', 'values', 'indexType', 'description', () => __ΩTagsReflection, 'tags', 'TypeEnum', 'P"w!a"4#"w$4%8P&P&\'-,JLM4&P&\'-,JF4\'"w$4(&4)8n*4+8Mw,y'];
 export { __ΩTypeEnum as __ΩTypeEnum };
-const __ΩTypeEnumMember = ['TypeAnnotations', 28, 'kind', () => __ΩTypeEnum, 'parent', 'name', '', 'default', 'TypeEnumMember', 'P"w!a"4#n$4%&4&PP&\'J/\'4(8Mw)y'];
+const __ΩTypeEnumMember = ['TypeAnnotations', 28, 'kind', () => __ΩTypeEnum, 'parent', 'name', 'description', '', 'default', () => __ΩTagsReflection, 'tags', 'TypeEnumMember', 'P"w!a"4#n$4%&4&&4\'8PPP&\'J/(&\'J4)8n*4+8Mw,y'];
 export { __ΩTypeEnumMember as __ΩTypeEnumMember };
-const __ΩTypeTypeParameter = ['TypeAnnotations', 21, 'kind', 'Type', 'parent', 'name', 'TypeTypeParameter', 'P"w!a"4#"w$4%8&4&Mw\'y'];
+const __ΩTypeTypeParameter = ['TypeAnnotations', 21, 'kind', 'Type', 'parent', 'name', () => __ΩTagsReflection, 'tags', 'TypeTypeParameter', 'P"w!a"4#"w$4%8&4&n\'4(8Mw)y'];
 export { __ΩTypeTypeParameter as __ΩTypeTypeParameter };
 const __ΩTypeUnion = ['TypeAnnotations', 23, 'kind', 'Type', 'parent', 'types', 'TypeUnion', 'P"w!a"4#"w$4%8"w$F4&Mw\'y'];
 export { __ΩTypeUnion as __ΩTypeUnion };
 const __ΩTypeIntersection = ['TypeAnnotations', 24, 'kind', 'Type', 'parent', 'types', 'TypeIntersection', 'P"w!a"4#"w$4%8"w$F4&Mw\'y'];
 export { __ΩTypeIntersection as __ΩTypeIntersection };
-const __ΩTypeArray = ['TypeAnnotations', 25, 'kind', 'Type', 'parent', 'type', 'TypeArray', 'P"w!a"4#"w$4%8"w$4&Mw\'y'];
+const __ΩTypeArray = ['TypeAnnotations', 25, 'kind', 'Type', 'parent', 'type', () => __ΩTagsReflection, 'tags', 'TypeArray', 'P"w!a"4#"w$4%8"w$4&n\'4(8Mw)y'];
 export { __ΩTypeArray as __ΩTypeArray };
-const __ΩTypePropertySignature = ['TypeAnnotations', 32, 'kind', () => __ΩTypeObjectLiteral, 'parent', 'name', true, 'optional', true, 'readonly', 'description', 'Type', 'type', 'TypePropertySignature', 'P"w!a"4#n$4%P\'&+J4&.\'4(8.)4*8&4+8"w,4-Mw.y'];
+const __ΩTypePropertySignature = ['TypeAnnotations', 32, 'kind', () => __ΩTypeObjectLiteral, 'parent', 'name', true, 'optional', true, 'readonly', 'description', 'Type', 'type', '', 'default', () => __ΩTagsReflection, 'tags', 'TypePropertySignature', 'P"w!a"4#n$4%P\'&+J4&.\'4(8.)4*8&4+8"w,4-PP"/."J4/8n0418Mw2y'];
 export { __ΩTypePropertySignature as __ΩTypePropertySignature };
-const __ΩTypeMethodSignature = ['TypeAnnotations', 33, 'kind', () => __ΩTypeObjectLiteral, 'parent', 'name', true, 'optional', 'description', () => __ΩTypeParameter, 'parameters', 'Type', 'return', 'TypeMethodSignature', 'P"w!a"4#n$4%P\'&+J4&.\'4(8&4)8n*F4+"w,4-Mw.y'];
+const __ΩTypeMethodSignature = ['TypeAnnotations', 33, 'kind', () => __ΩTypeObjectLiteral, 'parent', 'name', true, 'optional', 'description', () => __ΩTypeParameter, 'parameters', 'Type', 'return', () => __ΩTagsReflection, 'tags', 'TypeMethodSignature', 'P"w!a"4#n$4%P\'&+J4&.\'4(8&4)8n*F4+"w,4-n.4/8Mw0y'];
 export { __ΩTypeMethodSignature as __ΩTypeMethodSignature };
-const __ΩTypeObjectLiteral = ['TypeAnnotations', 30, 'kind', 'Type', 'parent', 'description', () => __ΩTypeIndexSignature, () => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, () => __ΩTypeCallSignature, 'types', 'implements', 'TypeObjectLiteral', 'P"w!a"4#"w$4%8&4&8Pn\'n(n)n*JF4+"w$F4,8Mw-y'];
+const __ΩTypeObjectLiteral = ['TypeAnnotations', 30, 'kind', 'Type', 'parent', 'description', () => __ΩTypeIndexSignature, () => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, () => __ΩTypeCallSignature, 'types', 'implements', () => __ΩTagsReflection, 'tags', 'TypeObjectLiteral', 'P"w!a"4#"w$4%8&4&8Pn\'n(n)n*JF4+"w$F4,8n-4.8Mw/y'];
 export { __ΩTypeObjectLiteral as __ΩTypeObjectLiteral };
-const __ΩTypeIndexSignature = ['TypeAnnotations', 31, 'kind', () => __ΩTypeClass, () => __ΩTypeObjectLiteral, 'parent', 'Type', 'index', 'type', 'TypeIndexSignature', 'P"w!a"4#Pn$n%J4&"w\'4("w\'4)Mw*y'];
+const __ΩTypeIndexSignature = ['TypeAnnotations', 31, 'kind', () => __ΩTypeClass, () => __ΩTypeObjectLiteral, 'parent', 'Type', 'index', 'type', '', 'default', () => __ΩTagsReflection, 'tags', 'TypeIndexSignature', 'P"w!a"4#Pn$n%J4&"w\'4("w\'4)PP"/*"J4+8n,4-8Mw.y'];
 export { __ΩTypeIndexSignature as __ΩTypeIndexSignature };
 const __ΩTypeInfer = ['TypeAnnotations', 34, 'kind', 'Type', 'parent', 'type', 'set', 'TypeInfer', 'P"w!a"4#"w$4%8P"w$2&$1\'Mw(y'];
 export { __ΩTypeInfer as __ΩTypeInfer };
@@ -209,20 +214,26 @@ export { __ΩFindType as __ΩFindType };
 const __ΩInlineRuntimeType = ['T', () => ReflectionClass, 'InlineRuntimeType', 'l:e"!R"RPde#!Ph"!7"qk#\'QRb!Pde"!p)w#y'];
 export { __ΩInlineRuntimeType as __ΩInlineRuntimeType };
 export function isType(entry) {
-    return entry && 'object' === typeof entry && 'number' === typeof entry.kind;
+    return entry && "object" === typeof entry && "number" === typeof entry.kind;
 }
 isType.__type = ['entry', 'isType', 'P"2!!/"'];
 export function isBinary(type) {
-    return type.kind === ReflectionKind.class && binaryTypes.includes(type.classType);
+    return (type.kind === ReflectionKind.class && binaryTypes.includes(type.classType));
 }
 isBinary.__type = ['Type', 'type', 'isBinary', 'P"w!2")/#'];
 export function isPrimitive(type) {
-    return type.kind === ReflectionKind.string || type.kind === ReflectionKind.number || type.kind === ReflectionKind.bigint || type.kind === ReflectionKind.boolean
-        || type.kind === ReflectionKind.literal || type.kind === ReflectionKind.null || type.kind === ReflectionKind.undefined;
+    return (type.kind === ReflectionKind.string ||
+        type.kind === ReflectionKind.number ||
+        type.kind === ReflectionKind.bigint ||
+        type.kind === ReflectionKind.boolean ||
+        type.kind === ReflectionKind.literal ||
+        type.kind === ReflectionKind.null ||
+        type.kind === ReflectionKind.undefined);
 }
 isPrimitive.__type = ['type', 'isPrimitive', 'P"2!)/"'];
 export function isPropertyType(type) {
-    return type.kind === ReflectionKind.property || type.kind === ReflectionKind.propertySignature;
+    return (type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.propertySignature);
 }
 isPropertyType.__type = ['Type', 'type', 'isPropertyType', 'P"w!2"!/#'];
 /**
@@ -242,11 +253,11 @@ isPropertyMemberType.__type = ['Type', 'type', 'isPropertyMemberType', 'P"w!2"!/
 export function getConstructorProperties(type) {
     const result = {
         parameters: [],
-        properties: [],
+        properties: []
     };
     if (type.kind === ReflectionKind.objectLiteral)
         return result;
-    const constructor = findMember('constructor', resolveTypeMembers(type));
+    const constructor = findMember("constructor", resolveTypeMembers(type));
     if (!constructor)
         return result;
     for (const parameter of constructor.parameters) {
@@ -265,14 +276,28 @@ getConstructorProperties.__type = [() => __ΩTypeClass, () => __ΩTypeObjectLite
 const __ΩWithAnnotations = [() => __ΩTypeAny, () => __ΩTypeUnknown, () => __ΩTypeString, () => __ΩTypeNumber, () => __ΩTypeBigInt, () => __ΩTypeBoolean, () => __ΩTypeArray, () => __ΩTypeTuple, () => __ΩTypeLiteral, () => __ΩTypeNull, () => __ΩTypeUndefined, () => __ΩTypeClass, () => __ΩTypeObjectLiteral, () => __ΩTypeObject, () => __ΩTypeTemplateLiteral, () => __ΩTypeRegexp, () => __ΩTypeSymbol, 'WithAnnotations', 'Pn!n"n#n$n%n&n\'n(n)n*n+n,n-n.n/n0n1Jw2y'];
 export { __ΩWithAnnotations as __ΩWithAnnotations };
 export function isWithAnnotations(type) {
-    return type.kind === ReflectionKind.any || type.kind === ReflectionKind.unknown || type.kind === ReflectionKind.string || type.kind === ReflectionKind.number || type.kind === ReflectionKind.bigint || type.kind === ReflectionKind.boolean
-        || type.kind === ReflectionKind.union || type.kind === ReflectionKind.array || type.kind === ReflectionKind.tuple || type.kind === ReflectionKind.literal || type.kind === ReflectionKind.null || type.kind === ReflectionKind.undefined
-        || type.kind === ReflectionKind.class || type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.object || type.kind === ReflectionKind.templateLiteral
-        || type.kind === ReflectionKind.regexp || type.kind === ReflectionKind.symbol;
+    return (type.kind === ReflectionKind.any ||
+        type.kind === ReflectionKind.unknown ||
+        type.kind === ReflectionKind.string ||
+        type.kind === ReflectionKind.number ||
+        type.kind === ReflectionKind.bigint ||
+        type.kind === ReflectionKind.boolean ||
+        type.kind === ReflectionKind.union ||
+        type.kind === ReflectionKind.array ||
+        type.kind === ReflectionKind.tuple ||
+        type.kind === ReflectionKind.literal ||
+        type.kind === ReflectionKind.null ||
+        type.kind === ReflectionKind.undefined ||
+        type.kind === ReflectionKind.class ||
+        type.kind === ReflectionKind.objectLiteral ||
+        type.kind === ReflectionKind.object ||
+        type.kind === ReflectionKind.templateLiteral ||
+        type.kind === ReflectionKind.regexp ||
+        type.kind === ReflectionKind.symbol);
 }
 isWithAnnotations.__type = [() => __ΩParentLessType, 'type', 'isWithAnnotations', 'Pn!2"!/#'];
 export function getAnnotations(type) {
-    return type.annotations || (type.annotations = {});
+    return (type.annotations || (type.annotations = {}));
 }
 getAnnotations.__type = [() => __ΩWithAnnotations, 'type', () => __ΩAnnotations, 'getAnnotations', 'Pn!2"n#/$'];
 const __ΩStackEntry = ['Type', 'left', 'right', 'StackEntry', 'P"w!4""w!4#Mw$y'];
@@ -304,7 +329,8 @@ export function isSameType(a, b, stack = []) {
             return isSameType(a.type, b.type, stack);
         if (a.kind === ReflectionKind.literal)
             return a.literal === b.literal;
-        if (a.kind === ReflectionKind.templateLiteral && b.kind === ReflectionKind.templateLiteral) {
+        if (a.kind === ReflectionKind.templateLiteral &&
+            b.kind === ReflectionKind.templateLiteral) {
             if (a.types.length !== b.types.length)
                 return false;
             for (let i = 0; a.types.length; i++) {
@@ -345,7 +371,8 @@ export function isSameType(a, b, stack = []) {
             // }
             // return true;
         }
-        if (a.kind === ReflectionKind.objectLiteral && b.kind === ReflectionKind.objectLiteral) {
+        if (a.kind === ReflectionKind.objectLiteral &&
+            b.kind === ReflectionKind.objectLiteral) {
             if (a.types.length !== b.types.length)
                 return false;
             for (const aMember of a.types) {
@@ -361,7 +388,8 @@ export function isSameType(a, b, stack = []) {
                     if (!valid)
                         return false;
                 }
-                else if (aMember.kind === ReflectionKind.propertySignature || aMember.kind === ReflectionKind.methodSignature) {
+                else if (aMember.kind === ReflectionKind.propertySignature ||
+                    aMember.kind === ReflectionKind.methodSignature) {
                     const bMember = findMember(aMember.name, b.types);
                     if (!bMember)
                         return false;
@@ -395,7 +423,9 @@ export function isSameType(a, b, stack = []) {
         if (a.kind === ReflectionKind.tupleMember) {
             if (b.kind !== ReflectionKind.tupleMember)
                 return false;
-            return a.optional === b.optional && a.name === b.name && isSameType(a.type, b.type, stack);
+            return (a.optional === b.optional &&
+                a.name === b.name &&
+                isSameType(a.type, b.type, stack));
         }
         if (a.kind === ReflectionKind.array) {
             if (b.kind !== ReflectionKind.array)
@@ -416,16 +446,25 @@ export function isSameType(a, b, stack = []) {
         if (a.kind === ReflectionKind.parameter) {
             if (b.kind !== ReflectionKind.parameter)
                 return false;
-            return a.name === b.name && a.optional === b.optional && isSameType(a.type, b.type, stack);
-        }
-        if (a.kind === ReflectionKind.function || a.kind === ReflectionKind.method || a.kind === ReflectionKind.methodSignature) {
-            if (b.kind !== ReflectionKind.function && b.kind !== ReflectionKind.method && b.kind !== ReflectionKind.methodSignature)
+            return (a.name === b.name &&
+                a.optional === b.optional &&
+                isSameType(a.type, b.type, stack));
+        }
+        if (a.kind === ReflectionKind.function ||
+            a.kind === ReflectionKind.method ||
+            a.kind === ReflectionKind.methodSignature) {
+            if (b.kind !== ReflectionKind.function &&
+                b.kind !== ReflectionKind.method &&
+                b.kind !== ReflectionKind.methodSignature)
                 return false;
             if (a.parameters.length !== b.parameters.length)
                 return false;
-            if (a.kind === ReflectionKind.function && b.kind === ReflectionKind.function && a.function !== b.function)
+            if (a.kind === ReflectionKind.function &&
+                b.kind === ReflectionKind.function &&
+                a.function !== b.function)
                 return false;
-            if (a.kind === ReflectionKind.method && b.kind === ReflectionKind.method) {
+            if (a.kind === ReflectionKind.method &&
+                b.kind === ReflectionKind.method) {
                 if (a.visibility !== b.visibility)
                     return false;
             }
@@ -478,7 +517,11 @@ export function addType(container, type) {
             container.types.push({ ...type, parent: container });
         }
         else {
-            container.types.push({ kind: ReflectionKind.tupleMember, parent: container, type: type });
+            container.types.push({
+                kind: ReflectionKind.tupleMember,
+                parent: container,
+                type: type
+            });
         }
     }
     else if (container.kind === ReflectionKind.union) {
@@ -488,8 +531,12 @@ export function addType(container, type) {
             }
         }
         else if (type.kind === ReflectionKind.tupleMember) {
-            if (type.optional && !isTypeIncluded(container.types, { kind: ReflectionKind.undefined })) {
-                container.types.push({ kind: ReflectionKind.undefined, parent: container });
+            if (type.optional &&
+                !isTypeIncluded(container.types, { kind: ReflectionKind.undefined })) {
+                container.types.push({
+                    kind: ReflectionKind.undefined,
+                    parent: container
+                });
             }
             addType(container, type.type);
         }
@@ -593,7 +640,8 @@ unboxUnion.__type = [() => __ΩTypeUnion, 'union', 'Type', 'unboxUnion', 'Pn!2""
 export function findMember(index, types) {
     const indexType = typeof index;
     for (const member of types) {
-        if (member.kind === ReflectionKind.propertySignature && member.name === index)
+        if (member.kind === ReflectionKind.propertySignature &&
+            member.name === index)
             return member;
         if (member.kind === ReflectionKind.methodSignature && member.name === index)
             return member;
@@ -602,11 +650,11 @@ export function findMember(index, types) {
         if (member.kind === ReflectionKind.method && member.name === index)
             return member;
         if (member.kind === ReflectionKind.indexSignature) {
-            if (member.index.kind === ReflectionKind.string && 'string' === indexType)
+            if (member.index.kind === ReflectionKind.string && "string" === indexType)
                 return member;
-            if (member.index.kind === ReflectionKind.number && 'number' === indexType)
+            if (member.index.kind === ReflectionKind.number && "number" === indexType)
                 return member;
-            if (member.index.kind === ReflectionKind.symbol && 'symbol' === indexType)
+            if (member.index.kind === ReflectionKind.symbol && "symbol" === indexType)
                 return member;
             //todo: union needs to match depending on union and indexType
         }
@@ -615,17 +663,22 @@ export function findMember(index, types) {
 }
 findMember.__type = [() => __ΩTypeTemplateLiteral, 'index', 'Type', 'types', () => __ΩTypePropertySignature, () => __ΩTypeMethodSignature, () => __ΩTypeMethod, () => __ΩTypeProperty, () => __ΩTypeIndexSignature, 'findMember', 'PP&\'+n!J2""w#F2$Pn%n&n\'n(n)-J/*'];
 function resolveObjectIndexType(type, index) {
-    if (index.kind === ReflectionKind.literal && ('string' === typeof index.literal || 'number' === typeof index.literal || 'symbol' === typeof index.literal)) {
+    if (index.kind === ReflectionKind.literal &&
+        ("string" === typeof index.literal ||
+            "number" === typeof index.literal ||
+            "symbol" === typeof index.literal)) {
         const member = findMember(index.literal, resolveTypeMembers(type));
         if (member) {
             if (member.kind === ReflectionKind.indexSignature) {
                 //todo: check if index type matches literal type
                 return member.type;
             }
-            else if (member.kind === ReflectionKind.method || member.kind === ReflectionKind.methodSignature) {
+            else if (member.kind === ReflectionKind.method ||
+                member.kind === ReflectionKind.methodSignature) {
                 return member;
             }
-            else if (member.kind === ReflectionKind.property || member.kind === ReflectionKind.propertySignature) {
+            else if (member.kind === ReflectionKind.property ||
+                member.kind === ReflectionKind.propertySignature) {
                 return member.type;
             }
             else {
@@ -636,7 +689,9 @@ function resolveObjectIndexType(type, index) {
             return { kind: ReflectionKind.never };
         }
     }
-    else if (index.kind === ReflectionKind.string || index.kind === ReflectionKind.number || index.kind === ReflectionKind.symbol) {
+    else if (index.kind === ReflectionKind.string ||
+        index.kind === ReflectionKind.number ||
+        index.kind === ReflectionKind.symbol) {
         //check if index signature match
         for (const member of resolveTypeMembers(type)) {
             if (member.kind === ReflectionKind.indexSignature) {
@@ -650,7 +705,9 @@ function resolveObjectIndexType(type, index) {
 resolveObjectIndexType.__type = [() => __ΩTypeObjectLiteral, () => __ΩTypeClass, 'type', 'Type', 'index', 'resolveObjectIndexType', 'PPn!n"J2#"w$2%"w$/&'];
 const __ΩCStack = ['Type', 'iterator', 'i', 'round', 'CStack', 'P"w!F4"\'4#\'4$Mw%y'];
 export function emptyObject(type) {
-    return (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) && type.types.length === 0;
+    return ((type.kind === ReflectionKind.objectLiteral ||
+        type.kind === ReflectionKind.class) &&
+        type.types.length === 0);
 }
 emptyObject.__type = ['Type', 'type', 'emptyObject', 'P"w!2")/#'];
 export class CartesianProduct {
@@ -661,20 +718,23 @@ export class CartesianProduct {
         return s.iterator[s.i];
     }
     next(s) {
-        return (++s.i === s.iterator.length) ? (s.i = 0, false) : true;
+        return ++s.i === s.iterator.length ? ((s.i = 0), false) : true;
     }
     toGroup(type) {
         if (type.kind === ReflectionKind.boolean) {
-            return [{ kind: ReflectionKind.literal, literal: 'false' }, {
+            return [
+                { kind: ReflectionKind.literal, literal: "false" },
+                {
                     kind: ReflectionKind.literal,
-                    literal: 'true',
-                }];
+                    literal: "true"
+                }
+            ];
         }
         else if (type.kind === ReflectionKind.null) {
-            return [{ kind: ReflectionKind.literal, literal: 'null' }];
+            return [{ kind: ReflectionKind.literal, literal: "null" }];
         }
         else if (type.kind === ReflectionKind.undefined) {
-            return [{ kind: ReflectionKind.literal, literal: 'undefined' }];
+            return [{ kind: ReflectionKind.literal, literal: "undefined" }];
             // } else if (type.kind === ReflectionKind.templateLiteral) {
             // //     //todo: this is wrong
             // //     return type.types;
@@ -742,19 +802,24 @@ CartesianProduct.__type = [() => __ΩCStack, 'stack', function () { return []; }
  */
 export function indexAccess(container, index) {
     if (container.kind === ReflectionKind.array) {
-        if ((index.kind === ReflectionKind.literal && 'number' === typeof index.literal) || index.kind === ReflectionKind.number)
+        if ((index.kind === ReflectionKind.literal &&
+            "number" === typeof index.literal) ||
+            index.kind === ReflectionKind.number)
             return container.type;
-        if (index.kind === ReflectionKind.literal && index.literal === 'length')
+        if (index.kind === ReflectionKind.literal && index.literal === "length")
             return { kind: ReflectionKind.number };
     }
     else if (container.kind === ReflectionKind.tuple) {
-        if (index.kind === ReflectionKind.literal && index.literal === 'length') {
+        if (index.kind === ReflectionKind.literal && index.literal === "length") {
             return { kind: ReflectionKind.literal, literal: container.types.length };
         }
-        if (index.kind === ReflectionKind.literal && 'number' === typeof index.literal && index.literal < 0) {
+        if (index.kind === ReflectionKind.literal &&
+            "number" === typeof index.literal &&
+            index.literal < 0) {
             index = { kind: ReflectionKind.number };
         }
-        if (index.kind === ReflectionKind.literal && 'number' === typeof index.literal) {
+        if (index.kind === ReflectionKind.literal &&
+            "number" === typeof index.literal) {
             const __Ωb0 = [0, 'b0', 'P&)H8G.!fw"y'];
             const __Ωb1 = [1, 'b1', 'P&)H8G.!fw"y'];
             const __Ωa0 = [0, 'a0', 'P&\'@)G.!fw"y'];
@@ -778,7 +843,7 @@ export function indexAccess(container, index) {
                 if (sub.optional)
                     return {
                         kind: ReflectionKind.union,
-                        types: [sub.type, { kind: ReflectionKind.undefined }],
+                        types: [sub.type, { kind: ReflectionKind.undefined }]
                     };
                 return sub.type;
             }
@@ -786,10 +851,13 @@ export function indexAccess(container, index) {
             const result = { kind: ReflectionKind.union, types: [] };
             for (let i = restPosition; i < container.types.length; i++) {
                 const member = container.types[i];
-                const type = member.type.kind === ReflectionKind.rest ? member.type.type : member.type;
+                const type = member.type.kind === ReflectionKind.rest
+                    ? member.type.type
+                    : member.type;
                 if (!isTypeIncluded(result.types, type))
                     result.types.push(type);
-                if (member.optional && !isTypeIncluded(result.types, { kind: ReflectionKind.undefined }))
+                if (member.optional &&
+                    !isTypeIncluded(result.types, { kind: ReflectionKind.undefined }))
                     result.types.push({ kind: ReflectionKind.undefined });
             }
             return unboxUnion(result);
@@ -814,7 +882,8 @@ export function indexAccess(container, index) {
             return { kind: ReflectionKind.never };
         }
     }
-    else if (container.kind === ReflectionKind.objectLiteral || container.kind === ReflectionKind.class) {
+    else if (container.kind === ReflectionKind.objectLiteral ||
+        container.kind === ReflectionKind.class) {
         if (index.kind === ReflectionKind.literal) {
             return resolveObjectIndexType(container, index);
         }
@@ -853,7 +922,7 @@ export function indexAccess(container, index) {
             // and you index it with 'foo', you get 'bar' | 'baz'. This should
             // accordingly print ['bar', 'baz'] when valueOf<...>() is called
             // on the union.
-            if (['string', 'number', 'symbol'].includes(typeof index.literal)) {
+            if (["string", "number", "symbol"].includes(typeof index.literal)) {
                 const union = { kind: ReflectionKind.union, types: [] };
                 // For each type in the union, t, resolve the type at index.
                 for (const t of container.types) {
@@ -913,7 +982,11 @@ export function indexAccess(container, index) {
 }
 indexAccess.__type = ['Type', 'container', 'index', 'indexAccess', 'P"w!2""w!2#"w!/$'];
 export function merge(types) {
-    const type = { kind: ReflectionKind.objectLiteral, id: state.nominalId++, types: [] };
+    const type = {
+        kind: ReflectionKind.objectLiteral,
+        id: state.nominalId++,
+        types: []
+    };
     for (const subType of types) {
         for (const member of subType.types) {
             if (member.kind === ReflectionKind.indexSignature) {
@@ -938,7 +1011,11 @@ export function merge(types) {
 }
 merge.__type = [() => __ΩTypeObjectLiteral, () => __ΩTypeClass, 'types', () => __ΩTypeObjectLiteral, 'merge', 'PPn!n"JF2#n$/%'];
 export function narrowOriginalLiteral(type) {
-    if ((type.kind === ReflectionKind.string || type.kind === ReflectionKind.number || type.kind === ReflectionKind.boolean || type.kind === ReflectionKind.bigint) && type.origin) {
+    if ((type.kind === ReflectionKind.string ||
+        type.kind === ReflectionKind.number ||
+        type.kind === ReflectionKind.boolean ||
+        type.kind === ReflectionKind.bigint) &&
+        type.origin) {
         return type.origin;
     }
     return type;
@@ -955,7 +1032,9 @@ export { __ΩParentLessType as __ΩParentLessType };
  * to complete instead of barely 30ms.
  */
 export function copyAndSetParent(inc, parent) {
-    const type = parent ? { ...inc, parent: parent } : { ...inc };
+    const type = parent
+        ? { ...inc, parent: parent }
+        : { ...inc };
     if (isWithAnnotations(type) && isWithAnnotations(inc)) {
         if (inc.annotations) {
             type.annotations = {};
@@ -1015,15 +1094,15 @@ export function copyAndSetParent(inc, parent) {
 copyAndSetParent.__type = ['inc', 'Type', 'parent', () => __ΩFindType, "kind", 'copyAndSetParent', 'P"2!"w"2#8"w"".%fo$#/&'];
 export function widenLiteral(type) {
     if (type.kind === ReflectionKind.literal) {
-        if ('number' === typeof type.literal)
+        if ("number" === typeof type.literal)
             return copyAndSetParent({ kind: ReflectionKind.number, origin: type });
-        if ('boolean' === typeof type.literal)
+        if ("boolean" === typeof type.literal)
             return copyAndSetParent({ kind: ReflectionKind.boolean, origin: type });
-        if ('bigint' === typeof type.literal)
+        if ("bigint" === typeof type.literal)
             return copyAndSetParent({ kind: ReflectionKind.bigint, origin: type });
-        if ('symbol' === typeof type.literal)
+        if ("symbol" === typeof type.literal)
             return copyAndSetParent({ kind: ReflectionKind.symbol, origin: type });
-        if ('string' === typeof type.literal)
+        if ("string" === typeof type.literal)
             return copyAndSetParent({ kind: ReflectionKind.string, origin: type });
         if (type.literal instanceof RegExp)
             return copyAndSetParent({ kind: ReflectionKind.regexp, origin: type });
@@ -1043,12 +1122,20 @@ export function getClassType(type) {
 }
 getClassType.__type = ['Type', 'type', () => __ΩClassType, 'getClassType', 'P"w!2"n#/$'];
 export function isMember(type) {
-    return type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property
-        || type.kind === ReflectionKind.methodSignature || type.kind === ReflectionKind.method;
+    return (type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.methodSignature ||
+        type.kind === ReflectionKind.method);
 }
 isMember.__type = ['Type', 'type', 'isMember', 'P"w!2"!/#'];
 export function hasMember(type, memberName, memberType) {
-    return type.types.some(__assignType(v => isMember(v) && v.name === memberName && (!memberType || isExtendable(v.kind === ReflectionKind.propertySignature || v.kind === ReflectionKind.property ? v.type : v, memberType)), ['v', '', 'P"2!"/"']));
+    return type.types.some(__assignType(v => isMember(v) &&
+        v.name === memberName &&
+        (!memberType ||
+            isExtendable(v.kind === ReflectionKind.propertySignature ||
+                v.kind === ReflectionKind.property
+                ? v.type
+                : v, memberType)), ['v', '', 'P"2!"/"']));
 }
 hasMember.__type = [() => __ΩTypeObjectLiteral, () => __ΩTypeClass, 'type', 'memberName', 'Type', 'memberType', 'hasMember', 'PPn!n"J2#P\'&+J2$"w%2&8)/\''];
 export function getMember(type, memberName) {
@@ -1060,7 +1147,7 @@ export function getTypeObjectLiteralFromTypeClass(type) {
         const objectLiteral = {
             kind: ReflectionKind.objectLiteral,
             id: state.nominalId++,
-            types: [],
+            types: []
         };
         for (const member of type.types) {
             if (member.kind === ReflectionKind.indexSignature) {
@@ -1068,12 +1155,18 @@ export function getTypeObjectLiteralFromTypeClass(type) {
                 member.parent = objectLiteral;
             }
             else if (member.kind === ReflectionKind.property) {
-                const m = { ...member, kind: ReflectionKind.propertySignature };
+                const m = {
+                    ...member,
+                    kind: ReflectionKind.propertySignature
+                };
                 m.parent = objectLiteral;
                 objectLiteral.types.push(m);
             }
             else if (member.kind === ReflectionKind.method) {
-                const m = { ...member, kind: ReflectionKind.methodSignature };
+                const m = {
+                    ...member,
+                    kind: ReflectionKind.methodSignature
+                };
                 m.parent = objectLiteral;
                 objectLiteral.types.push(m);
             }
@@ -1093,27 +1186,134 @@ export function isOptional(type) {
         return type.optional || isOptional(type.type);
     if (type.kind === ReflectionKind.tupleMember)
         return type.optional || isOptional(type.type);
-    if (type.kind === ReflectionKind.property || type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.indexSignature)
+    if (type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.indexSignature)
         return isOptional(type.type);
-    return type.kind === ReflectionKind.any || type.kind === ReflectionKind.undefined || (type.kind === ReflectionKind.union && type.types.some(isOptional));
+    return (type.kind === ReflectionKind.any ||
+        type.kind === ReflectionKind.undefined ||
+        (type.kind === ReflectionKind.union && type.types.some(isOptional)));
 }
 isOptional.__type = ['Type', 'type', 'isOptional', 'P"w!2")/#'];
 /**
  * Whether a property has an initializer/default value.
  */
 export function hasDefaultValue(type) {
-    return (type.kind === ReflectionKind.property || type.kind === ReflectionKind.parameter) && type.default !== undefined;
+    return ((type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.parameter) &&
+        type.default !== undefined);
 }
 hasDefaultValue.__type = ['Type', 'type', 'hasDefaultValue', 'P"w!2")/#'];
 /**
  * Checks whether `null` is allowed as type.
  */
 export function isNullable(type) {
-    if (type.kind === ReflectionKind.property || type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.indexSignature)
+    if (type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.indexSignature)
         return isNullable(type.type);
-    return type.kind === ReflectionKind.null || (type.kind === ReflectionKind.union && type.types.some(isNullable));
+    return (type.kind === ReflectionKind.null ||
+        (type.kind === ReflectionKind.union && type.types.some(isNullable)));
 }
 isNullable.__type = ['Type', 'type', 'isNullable', 'P"w!2")/#'];
+/**
+ * Get tags from type.
+ */
+export function getTags(type) {
+    if (type.kind === ReflectionKind.property ||
+        type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.indexSignature) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.method ||
+        type.kind === ReflectionKind.methodSignature) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.class ||
+        type.kind === ReflectionKind.objectLiteral) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.function) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.enum ||
+        type.kind === ReflectionKind.enumMember) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.parameter ||
+        type.kind === ReflectionKind.typeParameter) {
+        return type.tags ?? {};
+    }
+    else if (type.kind === ReflectionKind.array) {
+        return type.tags ?? {};
+    }
+    return {};
+}
+getTags.__type = ['Type', 'type', () => __ΩTagsReflection, 'getTags', 'P"w!2"n#/$'];
+/**
+ * Checks whether the \`hidden\` tag was specified for the type.
+ */
+export function isHidden(type) {
+    const tags = getTags(type);
+    return Boolean(tags.hidden);
+}
+isHidden.__type = ['Type', 'type', 'isHidden', 'P"w!2")/#'];
+/**
+ * Checks whether the \`ignore\` tag was specified for the type.
+ */
+export function isIgnore(type) {
+    const tags = getTags(type);
+    return Boolean(tags.ignore);
+}
+isIgnore.__type = ['Type', 'type', 'isIgnore', 'P"w!2")/#'];
+/**
+ * Checks whether the \`internal\` tag was specified for the type.
+ */
+export function isInternal(type) {
+    const tags = getTags(type);
+    return Boolean(tags.internal);
+}
+isInternal.__type = ['Type', 'type', 'isInternal', 'P"w!2")/#'];
+/**
+ * Returns the values specified by the type's \`alias\` tag(s).
+ */
+export function getAlias(type) {
+    const tags = getTags(type);
+    return tags.alias ?? [];
+}
+getAlias.__type = ['Type', 'type', 'getAlias', 'P"w!2"&F/#'];
+/**
+ * Checks whether the \`readonly\` tag was specified for the type.
+ */
+export function isReadonly(type) {
+    const tags = getTags(type);
+    return Boolean(tags.readonly);
+}
+isReadonly.__type = ['Type', 'type', 'isReadonly', 'P"w!2")/#'];
+/**
+ * Returns the values specified by the type's \`title\` tag.
+ */
+export function getTitle(type) {
+    const tags = getTags(type);
+    return tags.title;
+}
+getTitle.__type = ['Type', 'type', 'getTitle', 'P"w!2"P&-J/#'];
+/**
+ * Returns the values specified by the type's \`permission\` tag(s).
+ */
+export function getPermission(type) {
+    const tags = getTags(type);
+    return tags.permission ?? [];
+}
+getPermission.__type = ['Type', 'type', 'getPermission', 'P"w!2"&F/#'];
+/**
+ * Returns the values specified by the type's \`domain\` tag.
+ */
+export function getDomain(type) {
+    const tags = getTags(type);
+    return tags.domain;
+}
+getDomain.__type = ['Type', 'type', 'getDomain', 'P"w!2"P&-J/#'];
 const __Ωinteger = ['integer', '\'w!y'];
 export { __Ωinteger as __Ωinteger };
 const __Ωint8 = ['int8', '\'w!y'];
@@ -1214,7 +1414,7 @@ const __ΩEmbedded = ['T', 'Options', () => __ΩEmbeddedMeta, 'Embedded', 'b!PMc
 export { __ΩEmbedded as __ΩEmbedded };
 const __ΩMapName = ['Alias', "", 'ForSerializer', () => __ΩTypeAnnotation, "mapName", 'MapName', 'b!."c#.%Pe"!e""Go$#w&y'];
 export { __ΩMapName as __ΩMapName };
-export const referenceAnnotation = (AnnotationDefinition.Ω = [[() => __ΩReferenceOptions, 'n!']], new AnnotationDefinition('reference'));
+export const referenceAnnotation = (AnnotationDefinition.Ω = [[() => __ΩReferenceOptions, 'n!']], new AnnotationDefinition("reference"));
 export const entityAnnotation = new (_a = class extends AnnotationDefinition {
         set(type, name, value) {
             const data = this.getFirst(type) || {};
@@ -1231,24 +1431,24 @@ export const entityAnnotation = new (_a = class extends AnnotationDefinition {
         }
     },
     _a.__type = [() => __ΩEntityOptions, () => AnnotationDefinition, 'Type', 'type', 'name', () => __ΩEntityOptions, 'value', 'set', () => __ΩEntityOptions, 'get', () => __ΩEntityOptions, 'Pn!7"P"w#2$"2%n&"f2\'"0(P"w#2$n)0*5n+6"'],
-    _a)('entity');
-export const mapNameAnnotation = (AnnotationDefinition.Ω = [['name', 'serializer', 'P&4!&4"8M']], new AnnotationDefinition('mapName'));
-export const autoIncrementAnnotation = new AnnotationDefinition('autoIncrement');
+    _a)("entity");
+export const mapNameAnnotation = (AnnotationDefinition.Ω = [['name', 'serializer', 'P&4!&4"8M']], new AnnotationDefinition("mapName"));
+export const autoIncrementAnnotation = new AnnotationDefinition("autoIncrement");
 export const primaryKeyAnnotation = new (_b = class extends AnnotationDefinition {
         isPrimaryKey(type) {
             return this.getAnnotations(type).length > 0;
         }
     },
     _b.__type = [() => AnnotationDefinition, 'Type', 'type', 'isPrimaryKey', 'P7!P"w"2#)0$5'],
-    _b)('primaryKey');
+    _b)("primaryKey");
 const __ΩBackReferenceOptionsResolved = [() => __ΩTypeClass, () => __ΩTypeObjectLiteral, 'via', 'mappedBy', 'BackReferenceOptionsResolved', 'PPn!n"J4#8&4$8Mw%y'];
 export { __ΩBackReferenceOptionsResolved as __ΩBackReferenceOptionsResolved };
-export const backReferenceAnnotation = (AnnotationDefinition.Ω = [[() => __ΩBackReferenceOptionsResolved, 'n!']], new AnnotationDefinition('backReference'));
-export const validationAnnotation = (AnnotationDefinition.Ω = [['name', 'Type', 'args', 'P&4!"w"F4#M']], new AnnotationDefinition('validation'));
-export const UUIDAnnotation = new AnnotationDefinition('UUID');
-export const mongoIdAnnotation = new AnnotationDefinition('mongoID');
-export const uuidAnnotation = new AnnotationDefinition('uuid');
-export const defaultAnnotation = (AnnotationDefinition.Ω = [['Type', '"w!']], new AnnotationDefinition('default'));
+export const backReferenceAnnotation = (AnnotationDefinition.Ω = [[() => __ΩBackReferenceOptionsResolved, 'n!']], new AnnotationDefinition("backReference"));
+export const validationAnnotation = (AnnotationDefinition.Ω = [['name', 'Type', 'args', 'P&4!"w"F4#M']], new AnnotationDefinition("validation"));
+export const UUIDAnnotation = new AnnotationDefinition("UUID");
+export const mongoIdAnnotation = new AnnotationDefinition("mongoID");
+export const uuidAnnotation = new AnnotationDefinition("uuid");
+export const defaultAnnotation = (AnnotationDefinition.Ω = [['Type', '"w!']], new AnnotationDefinition("default"));
 export function isUUIDType(type) {
     return uuidAnnotation.getFirst(type) !== undefined;
 }
@@ -1282,7 +1482,8 @@ export function isBackReferenceType(type) {
 }
 isBackReferenceType.__type = ['Type', 'type', 'isBackReferenceType', 'P"w!2")/#'];
 export function resolveProperty(type) {
-    if (type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property) {
+    if (type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.property) {
         type = type.type;
     }
     return type;
@@ -1291,7 +1492,7 @@ resolveProperty.__type = ['Type', 'type', 'resolveProperty', 'P"w!2""w!/#'];
 export function getBackReferenceType(type) {
     const options = backReferenceAnnotation.getFirst(type);
     if (!options)
-        throw new Error('No back reference');
+        throw new Error("No back reference");
     return options;
 }
 getBackReferenceType.__type = ['Type', 'type', () => __ΩBackReferenceOptionsResolved, 'getBackReferenceType', 'P"w!2"n#/$'];
@@ -1311,7 +1512,9 @@ isMapType.__type = ['Type', 'type', 'isMapType', 'P"w!2")/#'];
  * Get the key type of a Map or object literal with index signatures.
  */
 export function getKeyType(type) {
-    if (type.kind === ReflectionKind.class && type.classType === Map && type.typeArguments)
+    if (type.kind === ReflectionKind.class &&
+        type.classType === Map &&
+        type.typeArguments)
         return type.typeArguments[0] || { kind: ReflectionKind.any };
     if (type.kind === ReflectionKind.objectLiteral) {
         const type = { kind: ReflectionKind.union, types: [] };
@@ -1332,7 +1535,9 @@ getKeyType.__type = ['Type', 'type', 'getKeyType', 'P"w!2""w!/#'];
  * Get the value type of a Map or object literal with index signatures.
  */
 export function getValueType(type) {
-    if (type.kind === ReflectionKind.class && type.classType === Map && type.typeArguments)
+    if (type.kind === ReflectionKind.class &&
+        type.classType === Map &&
+        type.typeArguments)
         return type.typeArguments[1] || { kind: ReflectionKind.any };
     if (type.kind === ReflectionKind.objectLiteral) {
         const type = { kind: ReflectionKind.union, types: [] };
@@ -1351,9 +1556,10 @@ export function getValueType(type) {
 getValueType.__type = ['Type', 'type', 'getValueType', 'P"w!2""w!/#'];
 const __ΩEmbeddedOptions = ['prefix', 'EmbeddedOptions', 'P&4!8Mw"y'];
 export { __ΩEmbeddedOptions as __ΩEmbeddedOptions };
-export const embeddedAnnotation = (AnnotationDefinition.Ω = [[() => __ΩEmbeddedOptions, 'n!']], new AnnotationDefinition('embedded'));
+export const embeddedAnnotation = (AnnotationDefinition.Ω = [[() => __ΩEmbeddedOptions, 'n!']], new AnnotationDefinition("embedded"));
 export function hasEmbedded(type) {
-    if (type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property)
+    if (type.kind === ReflectionKind.propertySignature ||
+        type.kind === ReflectionKind.property)
         return hasEmbedded(type.type);
     if (type.kind === ReflectionKind.union)
         return type.types.some(hasEmbedded);
@@ -1393,16 +1599,16 @@ const __ΩDatabaseField = ['Options', "*", 'Name', () => __ΩDatabase, 'Database
 export { __ΩDatabaseField as __ΩDatabaseField };
 const __ΩBinaryBigIntType = ['unsigned', 'signed', 'BinaryBigIntType', 'PC!C"Bw#'];
 export { __ΩBinaryBigIntType as __ΩBinaryBigIntType };
-export const binaryBigIntAnnotation = (AnnotationDefinition.Ω = [[() => __ΩBinaryBigIntType, 'n!']], new AnnotationDefinition('binaryBigInt'));
-export const groupAnnotation = (AnnotationDefinition.Ω = [['&']], new AnnotationDefinition('group'));
+export const binaryBigIntAnnotation = (AnnotationDefinition.Ω = [[() => __ΩBinaryBigIntType, 'n!']], new AnnotationDefinition("binaryBigInt"));
+export const groupAnnotation = (AnnotationDefinition.Ω = [['&']], new AnnotationDefinition("group"));
 export const excludedAnnotation = new (_c = class extends AnnotationDefinition {
         isExcluded(type, name) {
             const excluded = this.getAnnotations(type);
-            return excluded.includes('*') || excluded.includes(name);
+            return excluded.includes("*") || excluded.includes(name);
         }
     },
     _c.__type = [() => AnnotationDefinition, 'Type', 'type', 'name', 'isExcluded', 'P&7!P"w"2#&2$)0%5&6"'],
-    _c)('excluded');
+    _c)("excluded");
 export const dataAnnotation = new (_d = class extends AnnotationDefinition {
         set(type, key, value) {
             const data = this.getFirst(type) || {};
@@ -1416,7 +1622,7 @@ export const dataAnnotation = new (_d = class extends AnnotationDefinition {
         }
     },
     _d.__type = [() => AnnotationDefinition, 'type', 'key', 'value', 'set', 'Type', 'get', 'PP&"LM7!P"2"&2#"2$"0%P"w&2"&2#"0\'5P&"LM6"'],
-    _d)('data');
+    _d)("data");
 /**
  * All raw data from `TypeAnnotation<Name, Options>` types.
  */
@@ -1440,13 +1646,13 @@ export const typeAnnotation = new (_e = class extends AnnotationDefinition {
         }
     },
     _e.__type = ['name', 'Type', 'options', () => AnnotationDefinition, 'type', 'getOption', 'getType', 'PP&4!"w"4#M7$P"w"2%&2!"0&P"w"2%&2!P"w"-J0\'5P&4!"w"4#M6"'],
-    _e)('meta');
-export const indexAnnotation = (AnnotationDefinition.Ω = [[() => __ΩIndexOptions, 'n!']], new AnnotationDefinition('index'));
+    _e)("meta");
+export const indexAnnotation = (AnnotationDefinition.Ω = [[() => __ΩIndexOptions, 'n!']], new AnnotationDefinition("index"));
 export const databaseAnnotation = new (_f = class extends AnnotationDefinition {
         getDatabase(type, name) {
             let options = undefined;
             for (const annotation of this.getAnnotations(type)) {
-                if (annotation.name === '*' || annotation.name === name) {
+                if (annotation.name === "*" || annotation.name === name) {
                     if (!options)
                         options = {};
                     Object.assign(options, annotation.options);
@@ -1454,10 +1660,9 @@ export const databaseAnnotation = new (_f = class extends AnnotationDefinition {
             }
             return options;
         }
-        ;
     },
-    _f.__type = ['name', 'options', () => AnnotationDefinition, 'Type', 'type', 'getDatabase', 'PP&4!P&"LM4"M7#P"w$2%&2!P"-J0&!5P&4!P&"LM4"M6"'],
-    _f)('database');
+    _f.__type = ['name', 'options', () => AnnotationDefinition, 'Type', 'type', 'getDatabase', 'PP&4!P&"LM4"M7#P"w$2%&2!P"-J0&5P&4!P&"LM4"M6"'],
+    _f)("database");
 export function registerTypeDecorator(decorator) {
     typeDecorators.push(decorator);
 }
@@ -1481,17 +1686,19 @@ registerTypeDecorator.__type = [() => __ΩTypeDecorator, 'decorator', 'registerT
  * ```
  */
 export function getAnnotationMeta(type) {
-    const meta = getProperty(type, '__meta');
+    const meta = getProperty(type, "__meta");
     if (!meta || !meta.optional)
         return;
     let tuple = undefined;
     if (meta.type.kind === ReflectionKind.intersection) {
-        if (meta.type.types.length === 1 && meta.type.types[0].kind === ReflectionKind.tuple) {
+        if (meta.type.types.length === 1 &&
+            meta.type.types[0].kind === ReflectionKind.tuple) {
             tuple = meta.type.types[0];
         }
         if (!tuple && meta.type.types.length === 2) {
             tuple = meta.type.types.find(__assignType(v => v.kind === ReflectionKind.tuple, ['v', '', 'P"2!"/"']));
-            if (tuple && !meta.type.types.find(__assignType(v => v.kind === ReflectionKind.never, ['v', '', 'P"2!"/"']))) {
+            if (tuple &&
+                !meta.type.types.find(__assignType(v => v.kind === ReflectionKind.never, ['v', '', 'P"2!"/"']))) {
                 tuple = undefined;
             }
         }
@@ -1502,7 +1709,9 @@ export function getAnnotationMeta(type) {
     if (!tuple)
         return;
     const id = tuple.types[0];
-    if (!id || id.type.kind !== ReflectionKind.literal || 'string' !== typeof id.type.literal)
+    if (!id ||
+        id.type.kind !== ReflectionKind.literal ||
+        "string" !== typeof id.type.literal)
         return;
     const optionsMember = tuple.types[1];
     return { id: id.type.literal, options: optionsMember?.type };
@@ -1515,7 +1724,7 @@ export const typeDecorators = [
         if (!meta)
             return false;
         switch (meta.id) {
-            case 'reference': {
+            case "reference": {
                 const optionsType = meta.options;
                 if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
                     return false;
@@ -1523,7 +1732,7 @@ export const typeDecorators = [
                 referenceAnnotation.replace(annotations, [options]);
                 return true;
             }
-            case 'entity': {
+            case "entity": {
                 const optionsType = meta.options;
                 if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
                     return false;
@@ -1531,34 +1740,37 @@ export const typeDecorators = [
                 entityAnnotation.replace(annotations, [options]);
                 return true;
             }
-            case 'mapName': {
+            case "mapName": {
                 if (!meta.options)
                     return false;
                 const [name, serializer] = typeToObject(meta.options);
-                if ('string' === typeof name && (!serializer || 'string' === typeof serializer)) {
+                if ("string" === typeof name &&
+                    (!serializer || "string" === typeof serializer)) {
                     mapNameAnnotation.replace(annotations, [{ name, serializer }]);
                 }
                 return true;
             }
-            case 'autoIncrement':
+            case "autoIncrement":
                 autoIncrementAnnotation.register(annotations, true);
                 return true;
-            case 'binaryBigInt':
-                binaryBigIntAnnotation.replace(annotations, [0 /* BinaryBigIntType.unsigned */]);
+            case "binaryBigInt":
+                binaryBigIntAnnotation.replace(annotations, [
+                    0 /* BinaryBigIntType.unsigned */
+                ]);
                 return true;
-            case 'signedBinaryBigInt':
+            case "signedBinaryBigInt":
                 binaryBigIntAnnotation.replace(annotations, [1 /* BinaryBigIntType.signed */]);
                 return true;
-            case 'primaryKey':
+            case "primaryKey":
                 primaryKeyAnnotation.register(annotations, true);
                 return true;
-            case 'mongoId':
+            case "mongoId":
                 mongoIdAnnotation.register(annotations, true);
                 return true;
-            case 'UUIDv4':
+            case "UUIDv4":
                 uuidAnnotation.register(annotations, true);
                 return true;
-            case 'embedded': {
+            case "embedded": {
                 const optionsType = meta.options;
                 if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
                     return false;
@@ -1566,14 +1778,16 @@ export const typeDecorators = [
                 embeddedAnnotation.replace(annotations, [options]);
                 return true;
             }
-            case 'group': {
+            case "group": {
                 const nameType = meta.options;
-                if (!nameType || nameType.kind !== ReflectionKind.literal || 'string' !== typeof nameType.literal)
+                if (!nameType ||
+                    nameType.kind !== ReflectionKind.literal ||
+                    "string" !== typeof nameType.literal)
                     return false;
                 groupAnnotation.register(annotations, nameType.literal);
                 return true;
             }
-            case 'index': {
+            case "index": {
                 const optionsType = meta.options;
                 if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
                     return false;
@@ -1581,19 +1795,19 @@ export const typeDecorators = [
                 indexAnnotation.replace(annotations, [options]);
                 return true;
             }
-            case 'database': {
+            case "database": {
                 const [name, options] = typeToObject(meta.options);
                 databaseAnnotation.register(annotations, { name: name, options });
                 return true;
             }
-            case 'excluded': {
+            case "excluded": {
                 const name = typeToObject(meta.options);
                 excludedAnnotation.register(annotations, name);
                 return true;
             }
-            case 'reset': {
+            case "reset": {
                 const name = typeToObject(meta.options);
-                if ('string' !== typeof name)
+                if ("string" !== typeof name)
                     return false;
                 const map = {
                     primaryKey: primaryKeyAnnotation,
@@ -1607,18 +1821,20 @@ export const typeDecorators = [
                     mapName: mapNameAnnotation,
                     reference: referenceAnnotation,
                     backReference: backReferenceAnnotation,
-                    validator: validationAnnotation,
+                    validator: validationAnnotation
                 };
                 const annotation = map[name] || typeAnnotation;
                 annotation.reset(annotations);
                 return true;
             }
-            case 'data': {
+            case "data": {
                 const tuple = meta.options;
                 if (!tuple || tuple.kind !== ReflectionKind.tuple)
                     return false;
                 const nameType = tuple.types[0].type;
-                if (!nameType || nameType.kind !== ReflectionKind.literal || 'string' !== typeof nameType.literal)
+                if (!nameType ||
+                    nameType.kind !== ReflectionKind.literal ||
+                    "string" !== typeof nameType.literal)
                     return false;
                 const dataType = tuple.types[1].type;
                 if (!dataType)
@@ -1631,43 +1847,59 @@ export const typeDecorators = [
                 else {
                     annotations[dataAnnotation.symbol].push(data);
                 }
-                data[nameType.literal] = dataType.kind === ReflectionKind.literal ? dataType.literal : dataType;
+                data[nameType.literal] =
+                    dataType.kind === ReflectionKind.literal
+                        ? dataType.literal
+                        : dataType;
                 return true;
             }
-            case 'backReference': {
+            case "backReference": {
                 const optionsType = meta.options;
                 if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
                     return false;
                 const options = typeToObject(optionsType);
-                const member = findMember('via', resolveTypeMembers(optionsType));
+                const member = findMember("via", resolveTypeMembers(optionsType));
                 backReferenceAnnotation.register(annotations, {
                     mappedBy: options.mappedBy,
-                    via: member && member.kind === ReflectionKind.propertySignature && (member.type.kind === ReflectionKind.objectLiteral || member.type.kind === ReflectionKind.class) ? member.type : undefined,
+                    via: member &&
+                        member.kind === ReflectionKind.propertySignature &&
+                        (member.type.kind === ReflectionKind.objectLiteral ||
+                            member.type.kind === ReflectionKind.class)
+                        ? member.type
+                        : undefined
                 });
                 return true;
             }
-            case 'validator': {
+            case "validator": {
                 const tuple = meta.options;
                 if (!tuple || tuple.kind !== ReflectionKind.tuple)
                     return false;
                 const nameType = tuple.types[0].type;
-                if (!nameType || nameType.kind !== ReflectionKind.literal || 'string' !== typeof nameType.literal)
+                if (!nameType ||
+                    nameType.kind !== ReflectionKind.literal ||
+                    "string" !== typeof nameType.literal)
                     return false;
                 const name = nameType.literal;
                 const argsType = tuple.types[1].type;
                 if (!argsType || argsType.kind !== ReflectionKind.tuple)
                     return false;
                 const args = argsType.types.map(__assignType(v => v.type, ['v', '', 'P"2!"/"']));
-                const options = { name, args };
+                const options = {
+                    name,
+                    args
+                };
                 validationAnnotation.register(annotations, options);
                 return true;
             }
             default: {
-                typeAnnotation.register(annotations, { name: meta.id, options: meta.options });
+                typeAnnotation.register(annotations, {
+                    name: meta.id,
+                    options: meta.options
+                });
                 return true;
             }
         }
-    }, [() => __ΩAnnotations, 'annotations', () => __ΩTypeObjectLiteral, 'decorator', '', 'Pn!2"n#2$"/%']),
+    }, [() => __ΩAnnotations, 'annotations', () => __ΩTypeObjectLiteral, 'decorator', '', 'Pn!2"n#2$"/%'])
 ];
 export function typeToObject(type, state = { stack: [] }) {
     if (!type)
@@ -1685,7 +1917,7 @@ export function typeToObject(type, state = { stack: [] }) {
             case ReflectionKind.null:
                 return null;
             case ReflectionKind.string:
-                return '';
+                return "";
             case ReflectionKind.number:
                 return 0;
             case ReflectionKind.bigint:
@@ -1699,7 +1931,7 @@ export function typeToObject(type, state = { stack: [] }) {
             case ReflectionKind.promise:
                 return typeToObject(type.type);
             case ReflectionKind.templateLiteral:
-                return '';
+                return "";
             case ReflectionKind.class: {
                 return type.classType;
             }
@@ -1748,7 +1980,7 @@ export const binaryTypes = [
     Uint32Array,
     Float32Array,
     Float64Array,
-    ArrayBuffer,
+    ArrayBuffer
 ];
 /**
  * Returns true if the given type is Date, ArrayBuffer, Uint8Array, etc.
@@ -1793,7 +2025,11 @@ export function stringifyResolvedType(type) {
 }
 stringifyResolvedType.__type = ['Type', 'type', 'stringifyResolvedType', 'P"w!2"&/#'];
 export function stringifyShortResolvedType(type, stateIn = {}) {
-    return stringifyType(type, { ...stateIn, showNames: false, showFullDefinition: false });
+    return stringifyType(type, {
+        ...stateIn,
+        showNames: false,
+        showFullDefinition: false
+    });
 }
 stringifyShortResolvedType.__type = ['Type', 'type', () => __ΩPartial, () => __ΩStringifyTypeOptions, 'stateIn', () => ({}), 'stringifyShortResolvedType', 'P"w!2"n$o#"2%>&&/\''];
 /**
@@ -1806,7 +2042,7 @@ export function getDeepConstructorProperties(type) {
         const type = resolveReceiveType(classType);
         if (type.kind !== ReflectionKind.class)
             continue;
-        const constructor = findMember('constructor', type.types);
+        const constructor = findMember("constructor", type.types);
         if (!constructor || constructor.kind !== ReflectionKind.method)
             continue;
         for (const param of constructor.parameters) {
@@ -1837,7 +2073,7 @@ export function getEnumValueIndexMatcher(type) {
     }, ['value', '', 'P"2!\'/"']);
 }
 getEnumValueIndexMatcher.__type = [() => __ΩTypeEnum, 'type', 'value', '', 'getEnumValueIndexMatcher', 'Pn!2"PP&\'-,J2#\'/$/%'];
-const __ΩStringifyTypeOptions = ['showNames', 'showFullDefinition', 'showDescription', 'defaultIsOptional', 'showHeritage', 'showDefaults', 'defaultValues', 'Type', 'type', '', 'stringify', 'StringifyTypeOptions', 'P)4!)4")4#)4$)4%)4&"4\'P"w(2)P&-J/*4+8Mw,y'];
+const __ΩStringifyTypeOptions = ['showNames', 'showFullDefinition', 'showDescription', 'defaultIsOptional', 'showHeritage', 'showDefaults', 'showTags', 'defaultValues', 'Type', 'type', '', 'stringify', 'StringifyTypeOptions', 'P)4!)4")4#)4$)4%)4&)4\'"4(P"w)2*P&-J/+4,8Mw-y'];
 let stringifyTypeId = 1;
 export function stringifyType(type, stateIn = {}) {
     const state = {
@@ -1848,7 +2084,8 @@ export function stringifyType(type, stateIn = {}) {
         showDescription: false,
         showHeritage: false,
         showFullDefinition: false,
-        ...stateIn,
+        showTags: true,
+        ...stateIn
     };
     const stack = [];
     stack.push({ type, defaultValue: state.defaultValues, depth: 1 });
@@ -1862,8 +2099,8 @@ export function stringifyType(type, stateIn = {}) {
         const depth = entry.depth || 1;
         if (type && stateIn.stringify) {
             const manual = stateIn.stringify(type);
-            if ('string' === typeof manual) {
-                if (manual !== '') {
+            if ("string" === typeof manual) {
+                if (manual !== "") {
                     if (entry.before) {
                         result.push(entry.before);
                     }
@@ -1880,33 +2117,45 @@ export function stringifyType(type, stateIn = {}) {
         }
         if (type) {
             const jit = getTypeJitContainer(type);
-            if (entry.depth !== undefined && jit.visitStack && jit.visitStack.id === stackId && jit.visitStack.depth < entry.depth) {
-                result.push((type.typeName ? type.typeName : '* Recursion *'));
+            if (entry.depth !== undefined &&
+                jit.visitStack &&
+                jit.visitStack.id === stackId &&
+                jit.visitStack.depth < entry.depth) {
+                result.push(type.typeName ? type.typeName : "* Recursion *");
                 continue;
             }
             // objectLiteral and class types usually get their own reference, but their types are shared.
             // thus we have to check for their member types identity to check for recursions.
-            if (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) {
+            if (type.kind === ReflectionKind.objectLiteral ||
+                type.kind === ReflectionKind.class) {
                 const first = type.types[0];
                 const jit = first ? getTypeJitContainer(first) : undefined;
-                if (jit && entry.depth !== undefined && jit.visitStack && jit.visitStack.id === stackId && jit.visitStack.depth < entry.depth + 1) {
-                    result.push((type.typeName ? type.typeName : '* Recursion *'));
+                if (jit &&
+                    entry.depth !== undefined &&
+                    jit.visitStack &&
+                    jit.visitStack.id === stackId &&
+                    jit.visitStack.depth < entry.depth + 1) {
+                    result.push(type.typeName ? type.typeName : "* Recursion *");
                     continue;
                 }
             }
             jit.visitStack = { id: stackId, depth };
             const manual = stateIn.stringify ? stateIn.stringify(type) : undefined;
-            if ('string' === typeof manual) {
-                result.push(jit.stringifyTypeResult = manual);
+            if ("string" === typeof manual) {
+                result.push((jit.stringifyTypeResult = manual));
                 continue;
             }
             if (state.showNames && type.typeName && !state.showFullDefinition) {
                 if (type.typeArguments && type.typeArguments.length) {
-                    stack.push({ before: '>' });
+                    stack.push({ before: ">" });
                     for (let i = type.typeArguments.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.typeArguments[i], before: i === 0 ? undefined : ', ', depth });
+                        stack.push({
+                            type: type.typeArguments[i],
+                            before: i === 0 ? undefined : ", ",
+                            depth
+                        });
                     }
-                    stack.push({ before: '<' });
+                    stack.push({ before: "<" });
                 }
                 result.push(type.typeName);
                 continue;
@@ -1934,54 +2183,59 @@ export function stringifyType(type, stateIn = {}) {
                     result.push(`object`);
                     break;
                 case ReflectionKind.string:
-                    result.push('string');
+                    result.push("string");
                     break;
                 case ReflectionKind.infer:
-                    result.push('infer');
+                    result.push("infer");
                     break;
                 case ReflectionKind.number:
-                    result.push('number');
+                    result.push("number");
                     break;
                 case ReflectionKind.bigint:
-                    result.push('bigint');
+                    result.push("bigint");
                     break;
                 case ReflectionKind.regexp:
-                    result.push('RegExp');
+                    result.push("RegExp");
                     break;
                 case ReflectionKind.boolean:
-                    result.push('boolean');
+                    result.push("boolean");
                     break;
                 case ReflectionKind.symbol:
-                    result.push('symbol');
+                    result.push("symbol");
                     break;
                 case ReflectionKind.literal:
-                    if ('number' === typeof type.literal) {
-                        result.push(type.literal + '');
+                    if ("number" === typeof type.literal) {
+                        result.push(type.literal + "");
                     }
-                    else if ('boolean' === typeof type.literal) {
-                        result.push(type.literal + '');
+                    else if ("boolean" === typeof type.literal) {
+                        result.push(type.literal + "");
                     }
                     else {
-                        result.push(`'${String(type.literal).replace(/'/g, '\\\'')}'`);
+                        result.push(`'${String(type.literal).replace(/'/g, "\\'")}'`);
                     }
                     break;
                 case ReflectionKind.promise:
-                    result.push('Promise<');
-                    stack.push({ before: '>' });
+                    result.push("Promise<");
+                    stack.push({ before: ">" });
                     stack.push({ type: type.type, depth: depth + 1 });
                     break;
                 case ReflectionKind.templateLiteral:
-                    stack.push({ before: '`' });
+                    stack.push({ before: "`" });
                     for (let i = type.types.length - 1; i >= 0; i--) {
                         const sub = type.types[i];
                         if (sub.kind === ReflectionKind.literal) {
                             stack.push({ before: String(sub.literal) });
                         }
                         else {
-                            stack.push({ type: sub, before: '${', after: '}', depth: depth + 1 });
+                            stack.push({
+                                type: sub,
+                                before: "${",
+                                after: "}",
+                                depth: depth + 1
+                            });
                         }
                     }
-                    stack.push({ before: '`' });
+                    stack.push({ before: "`" });
                     break;
                 case ReflectionKind.class: {
                     if (type.classType === Date) {
@@ -1989,16 +2243,16 @@ export function stringifyType(type, stateIn = {}) {
                         break;
                     }
                     if (type.classType === Set) {
-                        result.push('Set<');
-                        stack.push({ before: '>' });
+                        result.push("Set<");
+                        stack.push({ before: ">" });
                         stack.push({ type: type.arguments[0], depth: depth + 1 });
                         break;
                     }
                     if (type.classType === Map) {
-                        result.push('Map<');
-                        stack.push({ before: '>' });
+                        result.push("Map<");
+                        stack.push({ before: ">" });
                         stack.push({ type: type.arguments[1], depth: depth + 1 });
-                        stack.push({ before: ', ' });
+                        stack.push({ before: ", " });
                         stack.push({ type: type.arguments[0], depth: depth + 1 });
                         break;
                     }
@@ -2009,137 +2263,166 @@ export function stringifyType(type, stateIn = {}) {
                     const typeName = type.typeName || getClassName(type.classType);
                     const superClass = getParentClass(type.classType);
                     if (state.showFullDefinition) {
-                        const types = state.showHeritage ? type.types : resolveTypeMembers(type);
-                        stack.push({ before: '}' });
+                        const types = state.showHeritage
+                            ? type.types
+                            : resolveTypeMembers(type);
+                        stack.push({ before: "}" });
                         for (let i = types.length - 1; i >= 0; i--) {
                             const sub = types[i];
-                            const showDescription = stateIn.showDescription && sub.kind === ReflectionKind.property && sub.description;
+                            const showDescription = stateIn.showDescription &&
+                                sub.kind === ReflectionKind.property &&
+                                sub.description;
                             const withIndentation = types.length > 1 || showDescription;
                             if (withIndentation && i === types.length - 1) {
-                                stack.push({ before: '\n' + (' '.repeat((depth - 1) * 2)) });
+                                stack.push({ before: "\n" + " ".repeat((depth - 1) * 2) });
                             }
                             if (state.stringify) {
                                 const manual = state.stringify(sub);
-                                if ('string' === typeof manual) {
-                                    if (manual !== '') {
+                                if ("string" === typeof manual) {
+                                    if (manual !== "") {
                                         stack.push({ before: manual });
                                     }
                                     continue;
                                 }
                             }
-                            if (showDescription || (types.length > 1 && (withIndentation || i !== types.length - 1))) {
-                                stack.push({ before: withIndentation ? ';' : '; ' });
+                            if (showDescription ||
+                                (types.length > 1 &&
+                                    (withIndentation || i !== types.length - 1))) {
+                                stack.push({ before: withIndentation ? ";" : "; " });
                             }
-                            const defaultValue = entry.defaultValue && (sub.kind === ReflectionKind.property) ? entry.defaultValue[sub.name] : undefined;
-                            const showDefault = sub.kind === ReflectionKind.property && sub.type.kind !== ReflectionKind.class && sub.type.kind !== ReflectionKind.objectLiteral;
+                            const defaultValue = entry.defaultValue && sub.kind === ReflectionKind.property
+                                ? entry.defaultValue[sub.name]
+                                : undefined;
+                            const showDefault = sub.kind === ReflectionKind.property &&
+                                sub.type.kind !== ReflectionKind.class &&
+                                sub.type.kind !== ReflectionKind.objectLiteral;
                             if (state.showDefaults && showDefault) {
                                 if (defaultValue !== undefined) {
-                                    stack.push({ before: ' = ' + JSON.stringify(defaultValue) });
+                                    stack.push({ before: " = " + JSON.stringify(defaultValue) });
                                 }
-                                else if (sub.kind === ReflectionKind.property && sub.default) {
+                                else if (sub.kind === ReflectionKind.property &&
+                                    sub.default) {
                                     try {
-                                        stack.push({ before: ' = ' + JSON.stringify(sub.default()) });
-                                    }
-                                    catch {
+                                        stack.push({
+                                            before: " = " + JSON.stringify(sub.default())
+                                        });
                                     }
+                                    catch { }
                                 }
                             }
                             stack.push({ type: sub, defaultValue, depth: depth + 1 });
                             if (withIndentation) {
-                                stack.push({ before: '\n' + (' '.repeat(depth * 2)) });
+                                stack.push({ before: "\n" + " ".repeat(depth * 2) });
                             }
                             if (showDescription) {
-                                const indentation = indent(depth * 2, ' * ');
-                                stack.push({ before: '\n' + indentation('/* ' + sub.description + ' */') });
+                                const indentation = indent(depth * 2, " * ");
+                                stack.push({
+                                    before: "\n" + indentation("/** " + sub.description + " */")
+                                });
                             }
                         }
-                        stack.push({ before: ' {' });
+                        stack.push({ before: " {" });
                     }
                     if (superClass && state.showHeritage) {
                         try {
                             const superClassType = reflect(superClass);
                             if (superClassType.kind === ReflectionKind.class) {
                                 if (type.extendsArguments && type.extendsArguments.length) {
-                                    stack.push({ before: '>' });
+                                    stack.push({ before: ">" });
                                     for (let i = type.extendsArguments.length - 1; i >= 0; i--) {
                                         stack.push({
                                             type: type.extendsArguments[i],
-                                            before: i === 0 ? undefined : ', ',
-                                            depth: depth + 1,
+                                            before: i === 0 ? undefined : ", ",
+                                            depth: depth + 1
                                         });
                                     }
-                                    stack.push({ before: '<' });
+                                    stack.push({ before: "<" });
                                 }
-                                stack.push({ before: ' extends ' + (superClassType.typeName || superClass.name) });
+                                stack.push({
+                                    before: " extends " + (superClassType.typeName || superClass.name)
+                                });
                             }
                         }
                         catch {
-                            stack.push({ before: ' extends ' + (superClass.name) });
+                            stack.push({ before: " extends " + superClass.name });
                         }
                     }
                     const typeArguments = type.arguments || type.typeArguments;
-                    if ((!state.showFullDefinition || type.types.length === 0) && typeArguments && typeArguments.length) {
-                        stack.push({ before: '>' });
+                    if ((!state.showFullDefinition || type.types.length === 0) &&
+                        typeArguments &&
+                        typeArguments.length) {
+                        stack.push({ before: ">" });
                         for (let i = typeArguments.length - 1; i >= 0; i--) {
                             stack.push({
                                 type: typeArguments[i],
-                                before: i === 0 ? undefined : ', ',
-                                depth: depth + 1,
+                                before: i === 0 ? undefined : ", ",
+                                depth: depth + 1
                             });
                         }
-                        stack.push({ before: '<' });
+                        stack.push({ before: "<" });
                     }
                     stack.push({ before: typeName });
                     break;
                 }
                 case ReflectionKind.objectLiteral: {
-                    const typeName = type.typeName || '';
+                    const typeName = type.typeName || "";
                     result.push(typeName);
                     if (!typeName || state.showFullDefinition) {
-                        result.push(typeName ? ' {' : '{');
-                        stack.push({ before: '}' });
+                        result.push(typeName ? " {" : "{");
+                        stack.push({ before: "}" });
                         for (let i = type.types.length - 1; i >= 0; i--) {
                             const sub = type.types[i];
-                            const showDescription = stateIn.showDescription && sub.kind === ReflectionKind.propertySignature && sub.description;
+                            const showDescription = stateIn.showDescription &&
+                                sub.kind === ReflectionKind.propertySignature &&
+                                sub.description;
                             const withIndentation = type.types.length > 1 || showDescription;
                             if (state.stringify) {
                                 const manual = state.stringify(sub);
-                                if ('string' === typeof manual) {
-                                    if (manual !== '') {
+                                if ("string" === typeof manual) {
+                                    if (manual !== "") {
                                         stack.push({ before: manual });
                                     }
                                     continue;
                                 }
                             }
                             if (withIndentation && i === type.types.length - 1) {
-                                stack.push({ before: '\n' + (' '.repeat((depth - 1) * 2)) });
+                                stack.push({ before: "\n" + " ".repeat((depth - 1) * 2) });
                             }
                             if (state.stringify) {
                                 const manual = state.stringify(sub);
-                                if ('string' === typeof manual) {
-                                    if (manual !== '') {
+                                if ("string" === typeof manual) {
+                                    if (manual !== "") {
                                         stack.push({ before: manual });
                                     }
                                     continue;
                                 }
                             }
-                            if (showDescription || (type.types.length > 1 && (withIndentation || i !== type.types.length - 1))) {
-                                stack.push({ before: withIndentation ? ';' : '; ' });
+                            if (showDescription ||
+                                (type.types.length > 1 &&
+                                    (withIndentation || i !== type.types.length - 1))) {
+                                stack.push({ before: withIndentation ? ";" : "; " });
                             }
-                            const defaultValue = entry.defaultValue && (sub.kind === ReflectionKind.propertySignature) ? entry.defaultValue[sub.name] : undefined;
-                            const showDefault = sub.kind === ReflectionKind.propertySignature && sub.type.kind !== ReflectionKind.class && sub.type.kind !== ReflectionKind.objectLiteral;
+                            const defaultValue = entry.defaultValue &&
+                                sub.kind === ReflectionKind.propertySignature
+                                ? entry.defaultValue[sub.name]
+                                : undefined;
+                            const showDefault = sub.kind === ReflectionKind.propertySignature &&
+                                sub.type.kind !== ReflectionKind.class &&
+                                sub.type.kind !== ReflectionKind.objectLiteral;
                             if (state.showDefaults && showDefault) {
                                 if (defaultValue !== undefined) {
-                                    stack.push({ before: ' = ' + JSON.stringify(defaultValue) });
+                                    stack.push({ before: " = " + JSON.stringify(defaultValue) });
                                 }
                             }
                             stack.push({ type: sub, defaultValue, depth: depth + 1 });
                             if (withIndentation) {
-                                stack.push({ before: '\n' + (' '.repeat(depth * 2)) });
+                                stack.push({ before: "\n" + " ".repeat(depth * 2) });
                             }
                             if (showDescription) {
-                                const indentation = indent(depth * 2, ' * ');
-                                stack.push({ before: '\n' + indentation('/* ' + sub.description + ' */') });
+                                const indentation = indent(depth * 2, " * ");
+                                stack.push({
+                                    before: "\n" + indentation("/* " + sub.description + " */")
+                                });
                             }
                         }
                     }
@@ -2147,108 +2430,157 @@ export function stringifyType(type, stateIn = {}) {
                 }
                 case ReflectionKind.union:
                     for (let i = type.types.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.types[i], before: i === 0 ? undefined : ' | ', depth: depth + 1 });
+                        stack.push({
+                            type: type.types[i],
+                            before: i === 0 ? undefined : " | ",
+                            depth: depth + 1
+                        });
                     }
                     break;
                 case ReflectionKind.intersection:
                     for (let i = type.types.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.types[i], before: i === 0 ? undefined : ' & ', depth: depth + 1 });
+                        stack.push({
+                            type: type.types[i],
+                            before: i === 0 ? undefined : " & ",
+                            depth: depth + 1
+                        });
                     }
                     break;
                 case ReflectionKind.parameter: {
-                    const visibility = type.visibility ? ReflectionVisibility[type.visibility] + ' ' : '';
-                    const dotdotdot = type.type.kind === ReflectionKind.rest ? '...' : '';
-                    result.push(`${type.readonly ? 'readonly ' : ''}${visibility}${dotdotdot}${type.name}${type.optional ? '?' : ''}: `);
+                    const visibility = type.visibility
+                        ? ReflectionVisibility[type.visibility] + " "
+                        : "";
+                    const dotdotdot = type.type.kind === ReflectionKind.rest ? "..." : "";
+                    result.push(`${type.readonly ? "readonly " : ""}${visibility}${dotdotdot}${type.name}${type.optional ? "?" : ""}: `);
                     stack.push({ type: type.type, depth: depth + 1 });
                     break;
                 }
                 case ReflectionKind.callSignature:
                 case ReflectionKind.function:
                     stack.push({ type: type.return, depth: depth + 1 });
-                    stack.push({ before: ') => ' });
+                    stack.push({ before: ") => " });
                     for (let i = type.parameters.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.parameters[i], before: i === 0 ? undefined : ', ', depth: depth + 1 });
+                        stack.push({
+                            type: type.parameters[i],
+                            before: i === 0 ? undefined : ", ",
+                            depth: depth + 1
+                        });
                     }
-                    stack.push({ before: '(' });
+                    stack.push({ before: "(" });
                     break;
                 case ReflectionKind.enum:
-                    const members = Object.entries(type.enum).map(__assignType(([label, value]) => `${label}: ${value}`, ['param0', '', 'P"2!"/"'])).join(', ');
-                    stack.push({ before: `${type.typeName ? type.typeName : 'Enum'} {` + (members) + '}' });
+                    const members = Object.entries(type.enum)
+                        .map(__assignType(([label, value]) => `${label}: ${value}`, ['param0', '', 'P"2!"/"']))
+                        .join(", ");
+                    stack.push({
+                        before: `${type.typeName ? type.typeName : "Enum"} {` + members + "}"
+                    });
                     break;
                 case ReflectionKind.array:
-                    stack.push({ before: '>' });
-                    stack.push({ type: type.type, before: 'Array<', depth: depth + 1 });
+                    stack.push({ before: ">" });
+                    stack.push({ type: type.type, before: "Array<", depth: depth + 1 });
                     break;
                 case ReflectionKind.typeParameter:
                     stack.push({ before: type.name });
                     break;
                 case ReflectionKind.rest:
-                    stack.push({ before: '[]' });
+                    stack.push({ before: "[]" });
                     stack.push({ type: type.type, depth: depth + 1 });
-                    if (type.parent && type.parent.kind === ReflectionKind.tupleMember && !type.parent.name) {
-                        stack.push({ before: '...' });
+                    if (type.parent &&
+                        type.parent.kind === ReflectionKind.tupleMember &&
+                        !type.parent.name) {
+                        stack.push({ before: "..." });
                     }
                     break;
                 case ReflectionKind.tupleMember:
                     if (type.name) {
-                        const dotdotdot = type.type.kind === ReflectionKind.rest ? '...' : '';
-                        result.push(`${dotdotdot}${type.name}${type.optional ? '?' : ''}: `);
+                        const dotdotdot = type.type.kind === ReflectionKind.rest ? "..." : "";
+                        result.push(`${dotdotdot}${type.name}${type.optional ? "?" : ""}: `);
                         stack.push({ type: type.type, depth: depth + 1 });
                         break;
                     }
                     if (type.optional) {
-                        stack.push({ before: '?' });
+                        stack.push({ before: "?" });
                     }
                     stack.push({ type: type.type, depth: depth + 1 });
                     break;
                 case ReflectionKind.tuple:
-                    stack.push({ before: ']' });
+                    stack.push({ before: "]" });
                     for (let i = type.types.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.types[i], before: i === 0 ? undefined : ', ', depth: depth + 1 });
+                        stack.push({
+                            type: type.types[i],
+                            before: i === 0 ? undefined : ", ",
+                            depth: depth + 1
+                        });
                     }
-                    stack.push({ before: '[' });
+                    stack.push({ before: "[" });
                     break;
                 case ReflectionKind.indexSignature:
                     stack.push({ type: type.type, depth: depth + 1 });
-                    stack.push({ before: ']: ' });
+                    stack.push({ before: "]: " });
                     stack.push({ type: type.index, depth: depth + 1 });
-                    stack.push({ before: '[index: ' });
+                    stack.push({ before: "[index: " });
                     // name = `{[index: ${stringifyType(type.index, state)}]: ${stringifyType(type.type, state)}`;
                     break;
                 case ReflectionKind.propertySignature:
-                    result.push(`${type.readonly ? 'readonly ' : ''}${memberNameToString(type.name)}${type.optional ? '?' : ''}: `);
-                    stack.push({ type: type.type, defaultValue: entry.defaultValue, depth });
+                    result.push(`${type.readonly ? "readonly " : ""}${memberNameToString(type.name)}${type.optional ? "?" : ""}: `);
+                    stack.push({
+                        type: type.type,
+                        defaultValue: entry.defaultValue,
+                        depth
+                    });
                     break;
                 case ReflectionKind.property: {
-                    const visibility = type.visibility ? ReflectionVisibility[type.visibility] + ' ' : '';
-                    const optional = type.optional || (stateIn.defaultIsOptional && type.default !== undefined);
-                    result.push(`${type.static ? 'static ' : ''}${type.readonly ? 'readonly ' : ''}${visibility}${memberNameToString(type.name)}${optional ? '?' : ''}: `);
-                    stack.push({ type: type.type, defaultValue: entry.defaultValue, depth });
+                    const visibility = type.visibility
+                        ? ReflectionVisibility[type.visibility] + " "
+                        : "";
+                    const optional = type.optional ||
+                        (stateIn.defaultIsOptional && type.default !== undefined);
+                    result.push(`${type.static ? "static " : ""}${type.readonly ? "readonly " : ""}${visibility}${memberNameToString(type.name)}${optional ? "?" : ""}: `);
+                    stack.push({
+                        type: type.type,
+                        defaultValue: entry.defaultValue,
+                        depth
+                    });
                     break;
                 }
                 case ReflectionKind.methodSignature:
                     stack.push({ type: type.return, depth });
-                    stack.push({ before: '): ' });
+                    stack.push({ before: "): " });
                     for (let i = type.parameters.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.parameters[i], before: i === 0 ? undefined : ', ', depth });
+                        stack.push({
+                            type: type.parameters[i],
+                            before: i === 0 ? undefined : ", ",
+                            depth
+                        });
                     }
-                    stack.push({ before: `${memberNameToString(type.name)}${type.optional ? '?' : ''}(` });
+                    stack.push({
+                        before: `${memberNameToString(type.name)}${type.optional ? "?" : ""}(`
+                    });
                     break;
                 case ReflectionKind.method: {
-                    const visibility = type.visibility ? ReflectionVisibility[type.visibility] + ' ' : '';
-                    const abstract = type.abstract ? 'abstract ' : '';
-                    const staticPrefix = type.static ? 'static ' : '';
-                    if (type.name === 'constructor') {
-                        stack.push({ before: ')' });
+                    const visibility = type.visibility
+                        ? ReflectionVisibility[type.visibility] + " "
+                        : "";
+                    const abstract = type.abstract ? "abstract " : "";
+                    const staticPrefix = type.static ? "static " : "";
+                    if (type.name === "constructor") {
+                        stack.push({ before: ")" });
                     }
                     else {
                         stack.push({ type: type.return, depth });
-                        stack.push({ before: '): ' });
+                        stack.push({ before: "): " });
                     }
                     for (let i = type.parameters.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.parameters[i], before: i === 0 ? undefined : ', ', depth });
+                        stack.push({
+                            type: type.parameters[i],
+                            before: i === 0 ? undefined : ", ",
+                            depth
+                        });
                     }
-                    stack.push({ before: `${staticPrefix}${abstract}${visibility}${memberNameToString(type.name)}${type.optional ? '?' : ''}(` });
+                    stack.push({
+                        before: `${staticPrefix}${abstract}${visibility}${memberNameToString(type.name)}${type.optional ? "?" : ""}(`
+                    });
                     break;
                 }
             }
@@ -2257,7 +2589,7 @@ export function stringifyType(type, stateIn = {}) {
             result.push(entry.after);
         }
     }
-    return result.join('');
+    return result.join("");
 }
 stringifyType.__type = ['Type', 'type', () => __ΩPartial, () => __ΩStringifyTypeOptions, 'stateIn', () => ({}), 'stringifyType', 'P"w!2"n$o#"2%>&&/\''];
 export function annotateClass(clazz, type = annotateClass.Ω?.[0]) {
diff --git a/dist/esm/src/reflection/type.js.map b/dist/esm/src/reflection/type.js.map
index fedd5087097e97923dbb6e457f3632434adbf5d3..8c5eb9345f180fb19e8139d27fe7a5036f1e8c7f 100644
--- a/dist/esm/src/reflection/type.js.map
+++ b/dist/esm/src/reflection/type.js.map
@@ -1 +1 @@
-{"version":3,"file":"type.js","sourceRoot":"","sources":["../../../../src/reflection/type.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"type.js","sourceRoot":"","sources":["../../../../src/reflection/type.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/src/registry.d.ts b/dist/esm/src/registry.d.ts
index aa1687f2d35536f74e7a83b5813c66bec73f94f6..4aa12ebfbca3c975415e8373f43325764f75443e 100644
--- a/dist/esm/src/registry.d.ts
+++ b/dist/esm/src/registry.d.ts
@@ -1,5 +1,5 @@
-import { ClassType } from '@deepkit/core';
-import { ReflectionKind, Type } from './reflection/type.js';
+import { ClassType } from "@deepkit/core";
+import { ReflectionKind, Type } from "./reflection/type.js";
 interface RegistryDecorator<T> {
     predicate: (type: Type) => boolean;
     v: T;
diff --git a/dist/esm/src/registry.js b/dist/esm/src/registry.js
index 781d3c41b840fd829670287ba101b966dbfcbc4a..3ace5c4a5e8ce912f4daf0ac1fb76b0f64dd4bdc 100644
--- a/dist/esm/src/registry.js
+++ b/dist/esm/src/registry.js
@@ -1,9 +1,9 @@
 /*@ts-ignore*/
-import { __ΩClassType } from '@deepkit/core';
+import { __ΩClassType } from "@deepkit/core";
 /*@ts-ignore*/
-import { __ΩReflectionKind } from './reflection/type.js';
-import { isArray, isFunction } from '@deepkit/core';
-import { binaryTypes, ReflectionKind } from './reflection/type.js';
+import { __ΩReflectionKind } from "./reflection/type.js";
+import { isArray, isFunction } from "@deepkit/core";
+import { binaryTypes, ReflectionKind } from "./reflection/type.js";
 const __ΩRegistryDecorator = ['T', 'Type', 'type', '', 'predicate', 'v', 'RegistryDecorator', 'b!PP"w"2#)/$4%e"!4&Mw\'y'];
 export class TypeRegistry {
     constructor() {
@@ -24,7 +24,9 @@ export class TypeRegistry {
             const classResult = this.classes.get(type.classType);
             if (classResult)
                 return classResult;
-            if (type.classType === Set || type.classType === Map || binaryTypes.includes(type.classType))
+            if (type.classType === Set ||
+                type.classType === Map ||
+                binaryTypes.includes(type.classType))
                 return undefined;
         }
         return this.results[type.kind];
diff --git a/dist/esm/src/registry.js.map b/dist/esm/src/registry.js.map
index 20475117feacfcfa1b3478960c85e08578527a9a..4572521184f00b7724ba8b872e48419eb6a087d0 100644
--- a/dist/esm/src/registry.js.map
+++ b/dist/esm/src/registry.js.map
@@ -1 +1 @@
-{"version":3,"file":"registry.js","sourceRoot":"","sources":["../../../src/registry.ts"],"names":[],"mappings":";6BAA+C,eAAe;;kCACZ,sBAAsB;AADxE,OAAO,EAAa,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC/D,OAAO,EAAE,WAAW,EAAE,cAAc,EAAQ,MAAM,sBAAsB,CAAC;;AAOzE,MAAM,OAAO,YAAY;IAAzB;QACc,YAAO,GAAqC,EAAE,CAAC;QAClD,YAAO,IAAO,GAAG,0CAAP,IAAI,GAAG,EAAgB,EAAC;QAC/B,eAAU,GAA2B,EAAE,CAAC;KA4DrD;IA1DG,KAAK;QACD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,GAAG,CAAC,IAAU;QACV,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YAC9B,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,EAAE,CAAC;YACrC,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,WAAW;gBAAE,OAAO,WAAW,CAAC;YACpC,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;gBAAE,OAAO,SAAS,CAAC;QACnH,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,SAAS,CAAC,SAAkC,EAAE,CAAI;QAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,CAAI;QACV,KAAK,MAAM,SAAS,IAAI,WAAW;YAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,UAAU,CAAC,CAAI;QACX,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IAChE,CAAC;IAED;;;;;OAKG;IACH,QAAQ,CAAC,SAAoB,EAAE,CAAI;QAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAoB;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,GAAG,CAAC,IAAmE,EAAE,CAAI;QACzE,IAAI,UAAU,CAAC,IAAI,CAAC;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACrD,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACrC,KAAK,MAAM,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC;;qFA7DqD,EAAE,sCACnC,GAAG,0CAAP,IAAI,GAAG,EAAgB,qEACO,EAAE"}
\ No newline at end of file
+{"version":3,"file":"registry.js","sourceRoot":"","sources":["../../../src/registry.ts"],"names":[],"mappings":";6BAA+C,eAAe;;kCACZ,sBAAsB;AADxE,OAAO,EAAa,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC/D,OAAO,EAAE,WAAW,EAAE,cAAc,EAAQ,MAAM,sBAAsB,CAAC;;AAOzE,MAAM,OAAO,YAAY;IAAzB;QACY,YAAO,GAAqC,EAAE,CAAC;QAClD,YAAO,IAAO,GAAG,0CAAP,IAAI,GAAG,EAAgB,EAAC;QAC/B,eAAU,GAA2B,EAAE,CAAC;KAoEnD;IAlEC,KAAK;QACH,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,GAAG,CAAC,IAAU;QACZ,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,EAAE,CAAC;YACvC,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,WAAW;gBAAE,OAAO,WAAW,CAAC;YACpC,IACE,IAAI,CAAC,SAAS,KAAK,GAAG;gBACtB,IAAI,CAAC,SAAS,KAAK,GAAG;gBACtB,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;gBAEpC,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,SAAS,CAAC,SAAkC,EAAE,CAAI;QAChD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,CAAI;QACZ,KAAK,MAAM,SAAS,IAAI,WAAW;YAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,UAAU,CAAC,CAAI;QACb,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED;;;;;OAKG;IACH,QAAQ,CAAC,SAAoB,EAAE,CAAI;QACjC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAoB;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,GAAG,CACD,IAAmE,EACnE,CAAI;QAEJ,IAAI,UAAU,CAAC,IAAI,CAAC;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACrD,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACrC,KAAK,MAAM,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;;qFArEqD,EAAE,sCACnC,GAAG,0CAAP,IAAI,GAAG,EAAgB,qEACO,EAAE"}
\ No newline at end of file
diff --git a/dist/esm/src/serializer.d.ts b/dist/esm/src/serializer.d.ts
index 52c4d460cfa8f37af3c5502f8e13eddb66dfe6cb..e3b1c502a3fe173c715b196ae76a2fcd47617c53 100644
--- a/dist/esm/src/serializer.d.ts
+++ b/dist/esm/src/serializer.d.ts
@@ -1,7 +1,7 @@
-import { ClassType, CompilerContext, CustomError } from '@deepkit/core';
-import { AnnotationDefinition, EmbeddedOptions, FindType, ReflectionKind, Type, TypeArray, TypeClass, TypeIndexSignature, TypeObjectLiteral, TypeParameter, TypeProperty, TypePropertySignature, TypeUnion } from './reflection/type.js';
-import { ReflectionProperty } from './reflection/reflection.js';
-import { ValidationErrorItem } from './validator.js';
+import { ClassType, CompilerContext, CustomError } from "@deepkit/core";
+import { ReflectionProperty } from "./reflection/reflection.js";
+import { AnnotationDefinition, EmbeddedOptions, FindType, ReflectionKind, Type, TypeArray, TypeClass, TypeIndexSignature, TypeObjectLiteral, TypeParameter, TypeProperty, TypePropertySignature, TypeUnion } from "./reflection/type.js";
+import { ValidationErrorItem } from "./validator.js";
 /**
  * Make sure to change the id when a custom naming strategy is implemented, since caches are based on it.
  */
@@ -130,7 +130,7 @@ export declare class TemplateState {
      * Strict means only use type guards of specificality of 1 (used for is()/validation()).
      * For deserialization loose is used.
      */
-    validation?: 'strict' | 'loose';
+    validation?: "strict" | "loose";
     /**
      * When this is set all specificalities are used (used in union type guards to detect which member to pick).
      */
@@ -138,11 +138,11 @@ export declare class TemplateState {
     propertyName?: string | RuntimeCode;
     setterDisabled: boolean;
     parentTypes: Type[];
-    target: 'serialize' | 'deserialize';
+    target: "serialize" | "deserialize";
     protected handledAnnotations: AnnotationDefinition[];
     constructor(originalSetter: string | ContainerAccessor, originalAccessor: string | ContainerAccessor, compilerContext: CompilerContext, registry: TemplateRegistry, namingStrategy?: NamingStrategy, jitStack?: JitStack, path?: (string | RuntimeCode)[]);
     isValidation(): boolean;
-    withValidation(validation: this['validation']): this;
+    withValidation(validation: this["validation"]): this;
     includeAllSpecificalities(guardRegistry: TypeGuardRegistry): this;
     replaceTemplate(template: string): void;
     /**
diff --git a/dist/esm/src/serializer.js b/dist/esm/src/serializer.js
index 51d8a221efb5b25bdb3d51d3bc3ea1819360602e..85d525084825289377e87d0c66b1729622de01e1 100644
--- a/dist/esm/src/serializer.js
+++ b/dist/esm/src/serializer.js
@@ -1,31 +1,31 @@
 var _a, _b;
 const __ΩPartial = ['T', 'Partial', 'l+e#!e"!fRb!Pde"!gN#"w"y'];
 /*@ts-ignore*/
-import { __ΩTypeProperty } from './reflection/type.js';
+import { __ΩTypeProperty } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩTypePropertySignature } from './reflection/type.js';
+import { __ΩTypePropertySignature } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩTypeClass } from './reflection/type.js';
+import { __ΩTypeClass } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩTypeObjectLiteral } from './reflection/type.js';
+import { __ΩTypeObjectLiteral } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩClassType } from '@deepkit/core';
+import { __ΩClassType } from "@deepkit/core";
 /*@ts-ignore*/
-import { __ΩReflectionKind } from './reflection/type.js';
+import { __ΩReflectionKind } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩFindType } from './reflection/type.js';
+import { __ΩFindType } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩTypeIndexSignature } from './reflection/type.js';
+import { __ΩTypeIndexSignature } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩEmbeddedOptions } from './reflection/type.js';
+import { __ΩEmbeddedOptions } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩTypeArray } from './reflection/type.js';
+import { __ΩTypeArray } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩTypeTuple } from './reflection/type.js';
+import { __ΩTypeTuple } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩTypeParameter } from './reflection/type.js';
+import { __ΩTypeParameter } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩTypeUnion } from './reflection/type.js';
+import { __ΩTypeUnion } from "./reflection/type.js";
 function __assignType(fn, args) {
     fn.__type = args;
     return fn;
@@ -39,21 +39,21 @@ function __assignType(fn, args) {
  *
  * You should have received a copy of the MIT License along with this program.
  */
-import { CompilerContext, CustomError, getObjectKeysSize, hasProperty, isArray, isFunction, isInteger, isIterable, isNumeric, isObject, isObjectLiteral, iterableSize, stringifyValueWithType, toFastProperties, } from '@deepkit/core';
-import { AnnotationDefinition, assertType, binaryBigIntAnnotation, binaryTypes, copyAndSetParent, embeddedAnnotation, excludedAnnotation, getConstructorProperties, getDeepConstructorProperties, getEnumValueIndexMatcher, getTypeJitContainer, getTypeObjectLiteralFromTypeClass, groupAnnotation, hasDefaultValue, hasEmbedded, isBackReferenceType, isCustomTypeClass, isMongoIdType, isNullable, isOptional, isPropertyMemberType, isReferenceType, isType, isUUIDType, mapNameAnnotation, memberNameToString, referenceAnnotation, ReflectionKind, resolveTypeMembers, stringifyResolvedType, stringifyType, typeToObject, validationAnnotation, } from './reflection/type.js';
-import { TypeNumberBrand } from '@deepkit/type-spec';
-import { hasCircularReference, ReflectionClass, ReflectionProperty } from './reflection/reflection.js';
-import { extendTemplateLiteral, isExtendable } from './reflection/extends.js';
-import { resolveRuntimeType } from './reflection/processor.js';
-import { createReference, isReferenceHydrated, isReferenceInstance } from './reference.js';
-import { validate, ValidationError, ValidationErrorItem } from './validator.js';
-import { validators } from './validators.js';
-import { arrayBufferToBase64, base64ToArrayBuffer, base64ToTypedArray, typedArrayToBase64, typeSettings, UnpopulatedCheck, unpopulatedSymbol, } from './core.js';
+import { CompilerContext, CustomError, getObjectKeysSize, hasProperty, isArray, isFunction, isInteger, isIterable, isNumeric, isObject, isObjectLiteral, iterableSize, stringifyValueWithType, toFastProperties } from "@deepkit/core";
+import { TypeNumberBrand } from "@deepkit/type-spec";
+import { arrayBufferToBase64, base64ToArrayBuffer, base64ToTypedArray, typedArrayToBase64, typeSettings, UnpopulatedCheck, unpopulatedSymbol } from "./core.js";
+import { createReference, isReferenceHydrated, isReferenceInstance } from "./reference.js";
+import { extendTemplateLiteral, isExtendable } from "./reflection/extends.js";
+import { resolveRuntimeType } from "./reflection/processor.js";
+import { hasCircularReference, ReflectionClass, ReflectionProperty } from "./reflection/reflection.js";
+import { AnnotationDefinition, assertType, binaryBigIntAnnotation, binaryTypes, copyAndSetParent, embeddedAnnotation, excludedAnnotation, getConstructorProperties, getDeepConstructorProperties, getEnumValueIndexMatcher, getTypeJitContainer, getTypeObjectLiteralFromTypeClass, groupAnnotation, hasDefaultValue, hasEmbedded, isBackReferenceType, isCustomTypeClass, isMongoIdType, isNullable, isOptional, isPropertyMemberType, isReferenceType, isType, isUUIDType, mapNameAnnotation, memberNameToString, referenceAnnotation, ReflectionKind, resolveTypeMembers, stringifyResolvedType, stringifyType, typeToObject, validationAnnotation } from "./reflection/type.js";
+import { validate, ValidationError, ValidationErrorItem } from "./validator.js";
+import { validators } from "./validators.js";
 /**
  * Make sure to change the id when a custom naming strategy is implemented, since caches are based on it.
  */
 export class NamingStrategy {
-    constructor(id = 'default') {
+    constructor(id = "default") {
         this.id = id;
     }
     getPropertyName(type, forSerializer) {
@@ -67,17 +67,17 @@ export class NamingStrategy {
 NamingStrategy.__type = ['id', () => "default", 'constructor', () => __ΩTypeProperty, () => __ΩTypePropertySignature, 'type', 'forSerializer', 'getPropertyName', 'NamingStrategy', 'P&2!:>""0#PPn$n%J2&&2\'P&-J0(5w)'];
 export const underscoreNamingStrategy = new (_a = class extends NamingStrategy {
         constructor() {
-            super('underscore');
+            super("underscore");
         }
         getPropertyName(type, forSerializer) {
             const name = super.getPropertyName(type, forSerializer);
             if (!name)
                 return name;
-            return name.replace(/([A-Z])/g, '_$1').toLowerCase();
+            return name.replace(/([A-Z])/g, "_$1").toLowerCase();
         }
     },
     _a.__type = [() => NamingStrategy, 'constructor', () => __ΩTypeProperty, () => __ΩTypePropertySignature, 'type', 'forSerializer', 'getPropertyName', 'P7!P"0"PPn#n$J2%&2&P&-J0\'5'],
-    _a);
+    _a)();
 const __ΩSerializationOptions = ['groups', 'groupsExclude', 'loosely', 'SerializationOptions', 'P&F4!8&F4"8)4#8Mw$y'];
 export { __ΩSerializationOptions as __ΩSerializationOptions };
 function isGroupAllowed(options, groupNames) {
@@ -117,11 +117,12 @@ export function getPartialType(type) {
     // we have to copy members manually, since we want to modify them
     type.types = type.types.map(__assignType(v => ({ ...v }), ['v', '', 'P"2!"/"']));
     for (const member of type.types) {
-        if (member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.property) {
+        if (member.kind === ReflectionKind.propertySignature ||
+            member.kind === ReflectionKind.property) {
             member.optional = true;
         }
     }
-    return jitContainer.partialType = getTypeObjectLiteralFromTypeClass(type);
+    return (jitContainer.partialType = getTypeObjectLiteralFromTypeClass(type));
 }
 getPartialType.__type = [() => __ΩTypeClass, () => __ΩTypeObjectLiteral, 'type', 'getPartialType', 'PPn!n"J2#"/$'];
 /**
@@ -134,9 +135,9 @@ getPartialSerializeFunction.__type = [() => __ΩTypeClass, () => __ΩTypeObjectL
 /**
  * Returns a (cached) serializer function for the given registry (serialize or deserialize).
  */
-export function getSerializeFunction(type, registry, namingStrategy = new NamingStrategy(), path = '', jitStack = new JitStack()) {
+export function getSerializeFunction(type, registry, namingStrategy = new NamingStrategy(), path = "", jitStack = new JitStack()) {
     const jit = getTypeJitContainer(type);
-    const id = registry.id + '_' + namingStrategy.id + '_' + path;
+    const id = registry.id + "_" + namingStrategy.id + "_" + path;
     if (jit[id])
         return jit[id];
     jit[id] = createSerializeFunction(type, registry, namingStrategy, path, jitStack);
@@ -144,18 +145,18 @@ export function getSerializeFunction(type, registry, namingStrategy = new Naming
     return jit[id];
 }
 getSerializeFunction.__type = ['Type', 'type', () => TemplateRegistry, 'registry', () => NamingStrategy, 'namingStrategy', () => new NamingStrategy(), 'path', () => "", 'jitStack', () => __ΩSerializeFunction, 'getSerializeFunction', 'P"w!2"P7#2$P7%2&>\'&2(>)"2*n+/,'];
-export function createSerializeFunction(type, registry, namingStrategy = new NamingStrategy(), path = '', jitStack = new JitStack()) {
+export function createSerializeFunction(type, registry, namingStrategy = new NamingStrategy(), path = "", jitStack = new JitStack()) {
     const compiler = new CompilerContext();
-    const state = new TemplateState('result', 'data', compiler, registry, namingStrategy, jitStack, isArray(path) ? path : path ? [path] : []);
+    const state = new TemplateState("result", "data", compiler, registry, namingStrategy, jitStack, isArray(path) ? path : path ? [path] : []);
     if (state.registry === state.registry.serializer.deserializeRegistry) {
-        state.target = 'deserialize';
+        state.target = "deserialize";
     }
     //set unpopulatedCheck to ReturnSymbol to jump over those properties
-    compiler.context.set('typeSettings', typeSettings);
-    compiler.context.set('UnpopulatedCheck', UnpopulatedCheck);
-    compiler.context.set('UnpopulatedCheckReturnSymbol', UnpopulatedCheck.ReturnSymbol);
-    compiler.context.set('SerializationError', SerializationError);
-    compiler.context.set('ValidationErrorItem', ValidationErrorItem);
+    compiler.context.set("typeSettings", typeSettings);
+    compiler.context.set("UnpopulatedCheck", UnpopulatedCheck);
+    compiler.context.set("UnpopulatedCheckReturnSymbol", UnpopulatedCheck.ReturnSymbol);
+    compiler.context.set("SerializationError", SerializationError);
+    compiler.context.set("ValidationErrorItem", ValidationErrorItem);
     const code = `
         var result;
         state = state ? state : {};
@@ -165,7 +166,7 @@ export function createSerializeFunction(type, registry, namingStrategy = new Nam
         typeSettings.unpopulatedCheck = oldUnpopulatedCheck;
         return result;
     `;
-    return compiler.build(code, 'data', 'state');
+    return compiler.build(code, "data", "state");
 }
 createSerializeFunction.__type = ['Type', 'type', () => TemplateRegistry, 'registry', () => NamingStrategy, 'namingStrategy', () => new NamingStrategy(), () => RuntimeCode, () => RuntimeCode, 'path', () => "", 'jitStack', () => __ΩSerializeFunction, 'createSerializeFunction', 'P"w!2"P7#2$P7%2&>\'P&P7(P&P7)JFJ2*>+"2,n-/.'];
 const __ΩGuard = ['T', 'data', () => ValidationErrorItem, 'errors', 'state', '', 'Guard', 'b!P"2"PP7#F4$8M2%8!/&w\'y'];
@@ -174,23 +175,23 @@ export function createTypeGuardFunction(type, stateIn, serializerToUse, withLoos
     const compiler = new CompilerContext();
     let state;
     if (stateIn instanceof TemplateState) {
-        state = stateIn.fork('result');
+        state = stateIn.fork("result");
         state.compilerContext = compiler;
     }
     else {
-        state = new TemplateState('result', 'data', compiler, (serializerToUse || serializer).typeGuards.getRegistry(1));
+        state = new TemplateState("result", "data", compiler, (serializerToUse || serializer).typeGuards.getRegistry(1));
         if (stateIn)
             Object.assign(state, stateIn);
     }
-    state.path = [new RuntimeCode('_path')];
+    state.path = [new RuntimeCode("_path")];
     state.setterDisabled = false;
     const templates = state.registry.get(type);
     if (!templates.length)
         return undefined;
     executeTemplates(state, type, withLoose);
-    compiler.context.set('typeSettings', typeSettings);
+    compiler.context.set("typeSettings", typeSettings);
     //set unpopulatedCheck to ReturnSymbol to jump over those properties
-    compiler.context.set('UnpopulatedCheckReturnSymbol', UnpopulatedCheck.ReturnSymbol);
+    compiler.context.set("UnpopulatedCheckReturnSymbol", UnpopulatedCheck.ReturnSymbol);
     const code = `
         var result;
         if (_path === undefined) _path = '';
@@ -201,12 +202,13 @@ export function createTypeGuardFunction(type, stateIn, serializerToUse, withLoos
         typeSettings.unpopulatedCheck = oldUnpopulatedCheck;
         return result === true;
     `;
-    return compiler.build(code, 'data', 'state', '_path', 'property');
+    return compiler.build(code, "data", "state", "_path", "property");
 }
 createTypeGuardFunction.__type = ['Type', 'type', () => __ΩPartial, () => TemplateState, 'stateIn', () => Serializer, 'serializerToUse', 'withLoose', () => __ΩGuard, 'createTypeGuardFunction', 'P"w!2"P7$o#"2%8P7&2\'8"2(P-"o)"J/*'];
 export class SerializationError extends CustomError {
-    constructor(originalMessage, code = '', path = '') {
-        super(`Serialization failed. ${!path ? '' : (path && path.startsWith('.') ? path.slice(1) : path) + ': '}` + originalMessage);
+    constructor(originalMessage, code = "", path = "") {
+        super(`Serialization failed. ${!path ? "" : (path && path.startsWith(".") ? path.slice(1) : path) + ": "}` +
+            originalMessage);
         this.originalMessage = originalMessage;
         this.code = code;
         this.path = path;
@@ -220,11 +222,14 @@ export class RuntimeCode {
 }
 RuntimeCode.__type = ['code', 'constructor', 'RuntimeCode', 'P&2!:"0"5w#'];
 export function collapsePath(path, prefix) {
-    return path.filter(__assignType(v => !!v, ['v', '', 'P"2!"/"'])).map(__assignType(v => v instanceof RuntimeCode ? v.code : JSON.stringify(v), ['v', '', 'P"2!"/"'])).join(`+'.'+`) || `''`;
+    return (path
+        .filter(__assignType(v => !!v, ['v', '', 'P"2!"/"']))
+        .map(__assignType(v => (v instanceof RuntimeCode ? v.code : JSON.stringify(v)), ['v', '', 'P"2!"/"']))
+        .join(`+'.'+`) || `''`);
 }
 collapsePath.__type = [() => RuntimeCode, 'path', 'prefix', 'collapsePath', 'PP&P7!JF2"&2#8&/$'];
 export function getPropertyNameString(propertyName) {
-    return propertyName ? collapsePath([propertyName]) : '';
+    return propertyName ? collapsePath([propertyName]) : "";
 }
 getPropertyNameString.__type = [() => RuntimeCode, 'propertyName', 'getPropertyNameString', 'PP&P7!J2"8"/#'];
 /**
@@ -252,15 +257,19 @@ export class JitStack {
     }
     prepare(registry, type) {
         if (this.getStack(registry).has(type)) {
-            throw new Error('Circular jit building detected: ' + stringifyType(type));
+            throw new Error("Circular jit building detected: " + stringifyType(type));
         }
-        const entry = { fn: undefined, id: this.id++ };
+        const entry = {
+            fn: undefined,
+            id: this.id++
+        };
         this.getStack(registry).set(type, entry);
         return {
-            id: entry.id, prepare: __assignType((fn) => {
+            id: entry.id,
+            prepare: __assignType((fn) => {
                 entry.fn = fn;
                 return entry;
-            }, [() => Function, 'fn', '', 'PPu!2""/#']),
+            }, [() => Function, 'fn', '', 'PPu!2""/#'])
         };
     }
     getOrCreate(registry, type, create) {
@@ -268,7 +277,10 @@ export class JitStack {
         const existing = stack.get(type);
         if (existing)
             return existing;
-        const entry = { fn: undefined, id: this.id++ };
+        const entry = {
+            fn: undefined,
+            id: this.id++
+        };
         stack.set(type, entry);
         entry.fn = create();
         return entry;
@@ -286,7 +298,7 @@ export class ContainerAccessor {
 }
 ContainerAccessor.__type = [() => ContainerAccessor, 'container', 'property', 'constructor', 'toString', 'ContainerAccessor', 'PP&P7!J2":&2#:"0$P"0%5w&'];
 export class TemplateState {
-    constructor(originalSetter, originalAccessor, compilerContext, registry, namingStrategy = new NamingStrategy, jitStack = new JitStack(), path = []) {
+    constructor(originalSetter, originalAccessor, compilerContext, registry, namingStrategy = new NamingStrategy(), jitStack = new JitStack(), path = []) {
         this.originalSetter = originalSetter;
         this.originalAccessor = originalAccessor;
         this.compilerContext = compilerContext;
@@ -298,13 +310,13 @@ export class TemplateState {
          * Before and after template content is rendered before/after all other templates.
          * When a template is put into its own function, before/after templates are run outside of this function.
          */
-        this.template = '';
+        this.template = "";
         this.ended = false;
-        this.setter = '';
-        this.accessor = '';
+        this.setter = "";
+        this.accessor = "";
         this.setterDisabled = false;
         this.parentTypes = [];
-        this.target = 'serialize';
+        this.target = "serialize";
         this.handledAnnotations = [];
         this.setter = originalSetter;
         this.accessor = originalAccessor;
@@ -368,10 +380,10 @@ export class TemplateState {
         return this.handledAnnotations.includes(annotation);
     }
     get isSerialization() {
-        return this.target === 'serialize';
+        return this.target === "serialize";
     }
     get isDeserialization() {
-        return this.target === 'deserialize';
+        return this.target === "deserialize";
     }
     extendPath(path) {
         this.path.push(path instanceof RuntimeCode ? path : String(path));
@@ -383,8 +395,11 @@ export class TemplateState {
     }
     throwCode(type, error, accessor = this.originalAccessor) {
         this.setContext({ ValidationError, stringifyValueWithType });
-        const to = JSON.stringify(('string' === typeof type ? type : stringifyType(type)).replace(/\n/g, '').replace(/\s+/g, ' ').trim());
-        return `throw ValidationError.from([{code: 'type', path: ${collapsePath(this.path)}, message: 'Cannot convert ' + ${accessor} + ' to ' + ${to} ${error ? ` + '. ' + ${error}` : ''} }])`;
+        const to = JSON.stringify(("string" === typeof type ? type : stringifyType(type))
+            .replace(/\n/g, "")
+            .replace(/\s+/g, " ")
+            .trim());
+        return `throw ValidationError.from([{code: 'type', path: ${collapsePath(this.path)}, message: 'Cannot convert ' + ${accessor} + ' to ' + ${to} ${error ? ` + '. ' + ${error}` : ""} }])`;
     }
     /**
      * Adds template code for setting the `this.setter` variable. The expression evaluated in `code` is assigned to `this.setter`.
@@ -420,7 +435,7 @@ export class TemplateState {
      * ```
      */
     convert(callback) {
-        const converter = this.setVariable('convert', callback);
+        const converter = this.setVariable("convert", callback);
         this.addCodeForSetter(`
         try {
             ${this.setter} = ${converter}(${this.accessor});
@@ -428,7 +443,7 @@ export class TemplateState {
             if (error instanceof SerializationError) {
                 error.path = ${collapsePath(this.path)} + (error.path ? '.' + error.path : '');
             }
-            ${this.throwCode('any', 'error.message', this.accessor)};
+            ${this.throwCode("any", "error.message", this.accessor)};
         }
         `);
     }
@@ -448,7 +463,7 @@ export class TemplateState {
      * ```
      */
     touch(callback) {
-        const touch = this.setVariable('touch', callback);
+        const touch = this.setVariable("touch", callback);
         this.addCode(`${touch}(${this.setter});`);
     }
     /**
@@ -464,14 +479,14 @@ export class TemplateState {
         this.compilerContext.set(values);
     }
     addCode(code) {
-        this.template += '\n' + code;
+        this.template += "\n" + code;
     }
     /**
      * Adds template code for setting the `this.setter` variable manually, so use `${state.setter} = value`.
      * `this.accessor` will point now to `this.setter`.
      */
     addCodeForSetter(code) {
-        this.template += '\n' + code;
+        this.template += "\n" + code;
         this.accessor = String(this.setter);
     }
     hasSetterCode() {
@@ -479,7 +494,7 @@ export class TemplateState {
     }
 }
 _b = TemplateState;
-TemplateState.__type = ['template', function () { return ''; }, 'ended', function () { return false; }, () => ContainerAccessor, 'setter', function () { return ''; }, () => ContainerAccessor, 'accessor', function () { return ''; }, "strict", "loose", 'validation', () => TypeGuardRegistry, 'allSpecificalities', () => RuntimeCode, 'propertyName', 'setterDisabled', function () { return false; }, 'Type', 'parentTypes', function () { return []; }, "serialize", "deserialize", 'target', function () { return 'serialize'; }, () => AnnotationDefinition, 'handledAnnotations', function () { return []; }, () => ContainerAccessor, 'originalSetter', () => ContainerAccessor, 'originalAccessor', () => CompilerContext, 'compilerContext', () => TemplateRegistry, 'registry', () => NamingStrategy, 'namingStrategy', () => new NamingStrategy, () => JitStack, 'jitStack', () => new JitStack(), () => RuntimeCode, 'path', () => [], 'constructor', 'isValidation', "validation", 'withValidation', () => TypeGuardRegistry, 'guardRegistry', 'includeAllSpecificalities', 'replaceTemplate', () => ContainerAccessor, () => ContainerAccessor, () => RuntimeCode, () => TemplateState, 'fork', 'fullFork', () => TemplateRegistry, 'forRegistry', () => RuntimeCode, 'name', 'forPropertyName', 'disableSetter', 'enableSetter', () => AnnotationDefinition, 'annotation', 'annotationHandled', () => AnnotationDefinition, 'isAnnotationHandled', () => RuntimeCode, 'extendPath', 'code', 'message', 'assignValidationError', 'type', 'error', () => ContainerAccessor, () => _b.originalAccessor, 'throwCode', 'toString', 'addSetter', 'errorCode', 'addSetterAndReportErrorIfInvalid', 'value', '', 'callback', 'convert', 'touch', 'stop', 'setVariable', 'values', 'setContext', 'addCode', 'addCodeForSetter', 'hasSetterCode', 'TemplateState', '&3!>")3#>$P&P7%J3&>\'P&P7(J3)>*P.+.,J3-8P7.3/8P&P70J318)32>3"w4F35>6P.7.8J39>:P7;F3<<>=PP&P7>J2?:P&P7@J2A:P7B2C:P7D2E:P7F2G:>HP7I2J:>KP&P7LJF2M:>N"0OP)0PP!.Qf2-!0RPP7S2T!0UP&2!"0VPP&P7WJ2&8P&P7XJ2)8P&P7YJF2M8P7Z0[P"0\\PP7]2E"0^PP&\'+P7_J2`8!0aP!0bP!0cPP"7d2e$0fPP"7g2e)0h!!PP&P7i\'+J2M!0jP&2k&2l"0mPP"w4&J2n&2o8P&P7pJ2)>q"0rPP&PP&1sMJ2k"0tP&2u&2l&2k"0vPP"2w"/x2y"0zPP"2w$/x2y"0{P"0|P&2`"2w8&0}PP&"LM2~"0P&2k"0\u0080P&2k"0\u0081P)0\u00825w\u0083'];
+TemplateState.__type = ['template', function () { return ""; }, 'ended', function () { return false; }, () => ContainerAccessor, 'setter', function () { return ""; }, () => ContainerAccessor, 'accessor', function () { return ""; }, "strict", "loose", 'validation', () => TypeGuardRegistry, 'allSpecificalities', () => RuntimeCode, 'propertyName', 'setterDisabled', function () { return false; }, 'Type', 'parentTypes', function () { return []; }, "serialize", "deserialize", 'target', function () { return "serialize"; }, () => AnnotationDefinition, 'handledAnnotations', function () { return []; }, () => ContainerAccessor, 'originalSetter', () => ContainerAccessor, 'originalAccessor', () => CompilerContext, 'compilerContext', () => TemplateRegistry, 'registry', () => NamingStrategy, 'namingStrategy', () => new NamingStrategy(), () => JitStack, 'jitStack', () => new JitStack(), () => RuntimeCode, 'path', () => [], 'constructor', 'isValidation', "validation", 'withValidation', () => TypeGuardRegistry, 'guardRegistry', 'includeAllSpecificalities', 'replaceTemplate', () => ContainerAccessor, () => ContainerAccessor, () => RuntimeCode, () => TemplateState, 'fork', 'fullFork', () => TemplateRegistry, 'forRegistry', () => RuntimeCode, 'name', 'forPropertyName', 'disableSetter', 'enableSetter', () => AnnotationDefinition, 'annotation', 'annotationHandled', () => AnnotationDefinition, 'isAnnotationHandled', () => RuntimeCode, 'extendPath', 'code', 'message', 'assignValidationError', 'type', 'error', () => ContainerAccessor, () => _b.originalAccessor, 'throwCode', 'toString', 'addSetter', 'errorCode', 'addSetterAndReportErrorIfInvalid', 'value', '', 'callback', 'convert', 'touch', 'stop', 'setVariable', 'values', 'setContext', 'addCode', 'addCodeForSetter', 'hasSetterCode', 'TemplateState', '&3!>")3#>$P&P7%J3&>\'P&P7(J3)>*P.+.,J3-8P7.3/8P&P70J318)32>3"w4F35>6P.7.8J39>:P7;F3<<>=PP&P7>J2?:P&P7@J2A:P7B2C:P7D2E:P7F2G:>HP7I2J:>KP&P7LJF2M:>N"0OP)0PP!.Qf2-!0RPP7S2T!0UP&2!"0VPP&P7WJ2&8P&P7XJ2)8P&P7YJF2M8P7Z0[P"0\\PP7]2E"0^PP&\'+P7_J2`8!0aP!0bP!0cPP"7d2e$0fPP"7g2e)0h!!PP&P7i\'+J2M!0jP&2k&2l"0mPP"w4&J2n&2o8P&P7pJ2)>q"0rPP&PP&1sMJ2k"0tP&2u&2l&2k"0vPP"2w"/x2y"0zPP"2w$/x2y"0{P"0|P&2`"2w8&0}PP&"LM2~"0P&2k"0\u0080P&2k"0\u0081P)0\u00825w\u0083'];
 const __ΩTemplate = ['T', 'type', () => TemplateState, 'state', '', 'Template', 'b!Pe"!2"P7#2$$/%w&y'];
 export { __ΩTemplate as __ΩTemplate };
 const __ΩTemplateHook = ['Type', 'type', () => TemplateState, 'state', '', 'TemplateHook', 'P"w!2"P7#2$$/%w&y'];
@@ -514,10 +529,12 @@ export class TemplateRegistry {
             const classTemplates = this.classTemplates.get(type.classType);
             if (classTemplates && classTemplates.length)
                 return classTemplates;
-            if (type.classType === Set || type.classType === Map || binaryTypes.includes(type.classType))
+            if (type.classType === Set ||
+                type.classType === Map ||
+                binaryTypes.includes(type.classType))
                 return [];
         }
-        return (_c = this.templates)[_d = type.kind] || (_c[_d] = []);
+        return ((_c = this.templates)[_d = type.kind] || (_c[_d] = []));
     }
     getDecorator(type) {
         return this.decorator.filter(__assignType(v => v.predicate(type), ['v', '', 'P"2!"/"'])).map(__assignType(v => v.template, ['v', '', 'P"2!"/"']));
@@ -612,8 +629,8 @@ export function callExtractedFunctionIfAvailable(state, type) {
         return false;
     const withSetter = !state.setterDisabled && state.setter;
     state.addCode(`
-    //call jit=${jit.id} for setter="${state.setter}" via propertyName ${state.propertyName ? collapsePath([state.propertyName]) : ''}
-    ${withSetter ? `${state.setter} = ` : ''}${state.setVariable('jit', jit)}.fn(${state.accessor || 'undefined'}, state, ${collapsePath(state.path)});
+    //call jit=${jit.id} for setter="${state.setter}" via propertyName ${state.propertyName ? collapsePath([state.propertyName]) : ""}
+    ${withSetter ? `${state.setter} = ` : ""}${state.setVariable("jit", jit)}.fn(${state.accessor || "undefined"}, state, ${collapsePath(state.path)});
     `);
     if (withSetter)
         state.accessor = state.setter;
@@ -623,12 +640,18 @@ callExtractedFunctionIfAvailable.__type = [() => TemplateState, 'state', 'Type',
 export function extractStateToFunctionAndCallIt(state, type) {
     const prepare = state.jitStack.prepare(state.registry, type);
     callExtractedFunctionIfAvailable(state, type);
-    return { setFunction: prepare.prepare, id: prepare.id, state: state.fork('result', 'data', [new RuntimeCode('_path')]).forPropertyName(state.propertyName) };
+    return {
+        setFunction: prepare.prepare,
+        id: prepare.id,
+        state: state
+            .fork("result", "data", [new RuntimeCode("_path")])
+            .forPropertyName(state.propertyName)
+    };
 }
 extractStateToFunctionAndCallIt.__type = [() => TemplateState, 'state', 'Type', 'type', 'extractStateToFunctionAndCallIt', 'PP7!2""w#2$"/%'];
 export function buildFunction(state, type) {
-    let circularCheckBeginning = '';
-    let circularCheckEnd = '';
+    let circularCheckBeginning = "";
+    let circularCheckEnd = "";
     if (hasCircularReference(type)) {
         circularCheckBeginning = `
         if (data) {
@@ -653,13 +676,13 @@ export function buildFunction(state, type) {
 
         return result;
     `;
-    return state.compilerContext.build(code, 'data', 'state', '_path');
+    return state.compilerContext.build(code, "data", "state", "_path");
 }
 buildFunction.__type = [() => TemplateState, 'state', 'Type', 'type', () => Function, 'buildFunction', 'PP7!2""w#2$Pu%/&'];
 export function executeTemplates(state, type, withLoose = true, withCache = true) {
     state.parentTypes.push(type);
     let originalState = state;
-    if (withLoose && state.validation === 'loose' && state.allSpecificalities) {
+    if (withLoose && state.validation === "loose" && state.allSpecificalities) {
         // check if the particular type has multiple specificalities
         // if so, we need to generate a type guard that checks all specificalities.
         // e.g. string supports `'string' === typeof' but as last resort also anything else.
@@ -668,12 +691,12 @@ export function executeTemplates(state, type, withLoose = true, withCache = true
         const typeGuards = state.allSpecificalities.getSortedTemplateRegistries();
         const lines = [];
         for (const [specificality, typeGuard] of typeGuards) {
-            const next = state.fork(undefined, 'data').forRegistry(typeGuard);
+            const next = state.fork(undefined, "data").forRegistry(typeGuard);
             const fn = createTypeGuardFunction(type, next, undefined, false);
             if (!fn)
                 continue;
-            const guard = state.setVariable('guard_' + ReflectionKind[type.kind], fn);
-            const looseCheck = specificality <= 0 ? `state.loosely !== false && ` : '';
+            const guard = state.setVariable("guard_" + ReflectionKind[type.kind], fn);
+            const looseCheck = specificality <= 0 ? `state.loosely !== false && ` : "";
             lines.push(`else if (${looseCheck}${guard}(${state.accessor})) {
                 //type = ${ReflectionKind[type.kind]}, specificality=${specificality}
                 ${state.setter} = true;
@@ -681,7 +704,7 @@ export function executeTemplates(state, type, withLoose = true, withCache = true
         }
         state.template = `
             //type guard with multiple specificalities
-            if (false) {} ${lines.join(' ')}
+            if (false) {} ${lines.join(" ")}
             else {
                 ${state.setter} = false;
             }
@@ -689,10 +712,14 @@ export function executeTemplates(state, type, withLoose = true, withCache = true
     }
     else {
         let setFunction;
-        if (withCache && (type.kind === ReflectionKind.objectLiteral
-            || type.kind === ReflectionKind.array || type.kind === ReflectionKind.tuple
-            || (type.kind === ReflectionKind.class && (type.classType === Set || type.classType === Map))
-            || isCustomTypeClass(type)) && !embeddedAnnotation.getFirst(type)) {
+        if (withCache &&
+            (type.kind === ReflectionKind.objectLiteral ||
+                type.kind === ReflectionKind.array ||
+                type.kind === ReflectionKind.tuple ||
+                (type.kind === ReflectionKind.class &&
+                    (type.classType === Set || type.classType === Map)) ||
+                isCustomTypeClass(type)) &&
+            !embeddedAnnotation.getFirst(type)) {
             //wrap circular check if necessary
             if (callExtractedFunctionIfAvailable(state, type)) {
                 state.parentTypes.pop();
@@ -730,33 +757,38 @@ export function executeTemplates(state, type, withLoose = true, withCache = true
     return originalState.template;
 }
 executeTemplates.__type = [() => TemplateState, 'state', 'Type', 'type', 'withLoose', () => true, 'withCache', () => true, 'executeTemplates', 'PP7!2""w#2$)2%>&)2\'>(&/)'];
-export function createConverterJSForMember(property, state, undefinedSetterCode = '', nullSetterCode = '') {
+export function createConverterJSForMember(property, state, undefinedSetterCode = "", nullSetterCode = "") {
     const { registry, compilerContext, namingStrategy } = state;
     const type = property instanceof ReflectionProperty ? property.type : property.type;
     const p = property instanceof ReflectionProperty ? property.property : property;
     state.parentTypes.push(p);
-    undefinedSetterCode = undefinedSetterCode || executeTemplates(state.fork(), { kind: ReflectionKind.undefined });
-    nullSetterCode = nullSetterCode || executeTemplates(state.fork(), { kind: ReflectionKind.null });
+    undefinedSetterCode =
+        undefinedSetterCode ||
+            executeTemplates(state.fork(), { kind: ReflectionKind.undefined });
+    nullSetterCode =
+        nullSetterCode ||
+            executeTemplates(state.fork(), { kind: ReflectionKind.null });
     let convert = executeTemplates(state.fork(), type);
     state.parentTypes.pop();
-    let postTransform = '';
+    let postTransform = "";
     const isSerialization = registry.serializer.serializeRegistry === registry;
     const isDeserialization = registry.serializer.deserializeRegistry === registry;
     if (property instanceof ReflectionProperty) {
         if (isSerialization) {
             if (property.serializer) {
-                const fnVar = compilerContext.reserveVariable('transformer', property.serializer);
+                const fnVar = compilerContext.reserveVariable("transformer", property.serializer);
                 postTransform = `${state.setter} = ${fnVar}(${state.setter}, ${compilerContext.reserveConst(property)})`;
             }
         }
         if (isDeserialization) {
             if (property.deserializer) {
-                const fnVar = compilerContext.reserveVariable('transformer', property.deserializer);
+                const fnVar = compilerContext.reserveVariable("transformer", property.deserializer);
                 postTransform = `${state.setter} = ${fnVar}(${state.setter}, ${compilerContext.reserveConst(property)})`;
             }
         }
     }
-    const setExplicitUndefined = registry.serializer.setExplicitUndefined(type, state) && isOptional(property instanceof ReflectionProperty ? property.property : property);
+    const setExplicitUndefined = registry.serializer.setExplicitUndefined(type, state) &&
+        isOptional(property instanceof ReflectionProperty ? property.property : property);
     const nullable = isNullable(type);
     // // since JSON does not support undefined, we emulate it via using null for serialization, and convert that back to undefined when deserialization happens.
     // // note: When the value is not defined (property.name in object === false), then this code will never run.
@@ -776,9 +808,9 @@ export function createConverterJSForMember(property, state, undefinedSetterCode
                 ${undefinedSetterCode}
             }
         } else if (${state.accessor} === null) {
-            //null acts on transport layer as telling an explicitly set undefined
-            //this is to support actual undefined as value across a transport layer. Otherwise it
-            //would be impossible to set a already set value to undefined back or override default value (since JSON.stringify() omits that information)
+            // null acts on transport layer as telling an explicitly set undefined
+            // this is to support actual undefined as value across a transport layer. Otherwise it
+            // would be impossible to set a already set value to undefined back or override default value (since JSON.stringify() omits that information)
             if (${nullable}) {
                 ${nullSetterCode}
             } else {
@@ -794,7 +826,7 @@ export function createConverterJSForMember(property, state, undefinedSetterCode
 }
 createConverterJSForMember.__type = [() => ReflectionProperty, () => __ΩTypeProperty, () => __ΩTypePropertySignature, () => __ΩTypeIndexSignature, 'property', () => TemplateState, 'state', 'undefinedSetterCode', () => "", 'nullSetterCode', () => "", 'createConverterJSForMember', 'PPP7!n"n#n$J2%P7&2\'&2(>)&2*>+&/,'];
 export function inAccessor(accessor) {
-    if ('string' === typeof accessor)
+    if ("string" === typeof accessor)
         return `${accessor} !== undefined`;
     return `'object' === typeof ${accessor.container} && ${accessor.property} in ${accessor.container}`;
 }
@@ -802,14 +834,14 @@ inAccessor.__type = [() => ContainerAccessor, 'accessor', 'inAccessor', 'PPP7!&J
 export function deserializeEmbedded(type, state, container) {
     const embedded = embeddedAnnotation.getFirst(type);
     if (!embedded)
-        return '';
+        return "";
     const properties = resolveTypeMembers(type).filter(isPropertyMemberType);
     const args = [];
     const assign = [];
     const loadArgs = [];
-    const setToUndefined = state.compilerContext.reserveName('setToUndefined');
-    const params = state.compilerContext.reserveName('params');
-    const requiredSet = ['true'];
+    const setToUndefined = state.compilerContext.reserveName("setToUndefined");
+    const params = state.compilerContext.reserveName("params");
+    const requiredSet = ["true"];
     function loadProperty(setter, property) {
         if (!isOptional(property) && !hasDefaultValue(property)) {
             if (isNullable(property)) {
@@ -820,14 +852,22 @@ export function deserializeEmbedded(type, state, container) {
             }
         }
         const accessor = getEmbeddedAccessor(type, properties.length !== 1, state.accessor, state.registry.serializer, state.namingStrategy, property, embedded, container);
-        const propertyState = state.fork(setter, accessor).extendPath(String(property.name));
+        const propertyState = state
+            .fork(setter, accessor)
+            .extendPath(String(property.name));
         if (hasEmbedded(property.type)) {
             loadArgs.push(executeTemplates(propertyState, property.type));
         }
         else {
             if (accessor instanceof ContainerAccessor) {
-                const check = !containerProperty ? 'true' : isNullable(containerProperty) ? `${accessor} === undefined` : `(${accessor} === undefined || ${accessor} === null)`;
-                const setUndefined = containerProperty ? `if (${check}) { ${setToUndefined}++; }` : 'if (false) {} ';
+                const check = !containerProperty
+                    ? "true"
+                    : isNullable(containerProperty)
+                        ? `${accessor} === undefined`
+                        : `(${accessor} === undefined || ${accessor} === null)`;
+                const setUndefined = containerProperty
+                    ? `if (${check}) { ${setToUndefined}++; }`
+                    : "if (false) {} ";
                 loadArgs.push(`
                     if (${inAccessor(accessor)}) {
                         ${setUndefined} else {
@@ -844,33 +884,40 @@ export function deserializeEmbedded(type, state, container) {
     const containerProperty = getEmbeddedProperty(type);
     const constructorAssigned = [];
     for (const property of getConstructorProperties(type).parameters) {
-        if ((property.kind == ReflectionKind.property || property.kind === ReflectionKind.propertySignature) && !excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
+        if ((property.kind == ReflectionKind.property ||
+            property.kind === ReflectionKind.propertySignature) &&
+            !excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
             constructorAssigned.push(memberNameToString(property.name));
             const setter = new ContainerAccessor(params, JSON.stringify(property.name));
             loadProperty(setter, property);
             args.push(setter);
         }
         else {
-            args.push('undefined');
+            args.push("undefined");
         }
     }
     for (const property of properties) {
-        if ((property.kind == ReflectionKind.property || property.kind === ReflectionKind.propertySignature) && !excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
+        if ((property.kind == ReflectionKind.property ||
+            property.kind === ReflectionKind.propertySignature) &&
+            !excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
             if (constructorAssigned.includes(memberNameToString(property.name)))
                 continue;
             const setter = new ContainerAccessor(params, JSON.stringify(property.name));
             loadProperty(setter, property);
-            assign.push(`${new ContainerAccessor(state.setter, JSON.stringify(property.name))} = ` + setter);
+            assign.push(`${new ContainerAccessor(state.setter, JSON.stringify(property.name))} = ` +
+                setter);
         }
     }
-    const createObject = type.kind === ReflectionKind.objectLiteral ? `{}` : `new ${state.compilerContext.reserveConst(type.classType)}(${args.join(',')})`;
+    const createObject = type.kind === ReflectionKind.objectLiteral
+        ? `{}`
+        : `new ${state.compilerContext.reserveConst(type.classType)}(${args.join(",")})`;
     return `
         const ${params} = {};
         let ${setToUndefined} = 0;
-        ${loadArgs.join('\n')}
-        if (${requiredSet.join(' && ')}) {
+        ${loadArgs.join("\n")}
+        if (${requiredSet.join(" && ")}) {
             ${state.setter} = ${createObject};
-            ${assign.join(';\n')}
+            ${assign.join(";\n")}
         } else if (${setToUndefined} === ${properties.length}) {
             ${state.setter} = undefined;
         }
@@ -882,7 +929,8 @@ export function getIndexCheck(context, i, type) {
         context.set({ isNumeric: isNumeric });
         return `isNumeric(${i})`;
     }
-    else if (type.kind === ReflectionKind.string || type.kind === ReflectionKind.any) {
+    else if (type.kind === ReflectionKind.string ||
+        type.kind === ReflectionKind.any) {
         return `'string' === typeof ${i}`;
     }
     else if (type.kind === ReflectionKind.symbol) {
@@ -890,21 +938,25 @@ export function getIndexCheck(context, i, type) {
     }
     else if (type.kind === ReflectionKind.templateLiteral) {
         context.set({ extendTemplateLiteral: extendTemplateLiteral });
-        const typeVar = context.reserveVariable('type', type);
+        const typeVar = context.reserveVariable("type", type);
         return `'string' === typeof ${i} && extendTemplateLiteral({kind: ${ReflectionKind.literal}, literal: ${i}}, ${typeVar})`;
     }
     else if (type.kind === ReflectionKind.union) {
-        return '(' + type.types.map(__assignType(v => getIndexCheck(context, i, v), ['v', '', 'P"2!"/"'])).join(' || ') + ')';
+        return ("(" + type.types.map(__assignType(v => getIndexCheck(context, i, v), ['v', '', 'P"2!"/"'])).join(" || ") + ")");
     }
-    return '';
+    return "";
 }
 getIndexCheck.__type = [() => CompilerContext, 'context', 'i', 'Type', 'type', 'getIndexCheck', 'PP7!2"&2#"w$2%&/&'];
 function isLiteralType(t) {
-    return t.index.kind === ReflectionKind.literal || (t.index.kind === ReflectionKind.union && t.index.types.some(__assignType(v => v.kind === ReflectionKind.literal, ['v', '', 'P"2!"/"'])));
+    return (t.index.kind === ReflectionKind.literal ||
+        (t.index.kind === ReflectionKind.union &&
+            t.index.types.some(__assignType(v => v.kind === ReflectionKind.literal, ['v', '', 'P"2!"/"']))));
 }
 isLiteralType.__type = [() => __ΩTypeIndexSignature, 't', 'isLiteralType', 'Pn!2")/#'];
 function isNumberType(t) {
-    return t.index.kind === ReflectionKind.number || (t.index.kind === ReflectionKind.union && t.index.types.some(__assignType(v => v.kind === ReflectionKind.number, ['v', '', 'P"2!"/"'])));
+    return (t.index.kind === ReflectionKind.number ||
+        (t.index.kind === ReflectionKind.union &&
+            t.index.types.some(__assignType(v => v.kind === ReflectionKind.number, ['v', '', 'P"2!"/"']))));
 }
 isNumberType.__type = [() => __ΩTypeIndexSignature, 't', 'isNumberType', 'Pn!2")/#'];
 /**
@@ -913,10 +965,12 @@ isNumberType.__type = [() => __ΩTypeIndexSignature, 't', 'isNumberType', 'Pn!2"
  */
 export function sortSignatures(signatures) {
     signatures.sort(__assignType((a, b) => {
-        if (isLiteralType(a))
+        if (isLiteralType(a)) {
             return -1;
-        if (isNumberType(a) && !isLiteralType(b))
+        }
+        if (isNumberType(a) && !isLiteralType(b)) {
             return -1;
+        }
         return +1;
     }, ['a', 'b', '', 'P"2!"2""/#']));
 }
@@ -940,7 +994,8 @@ export function getEmbeddedProperty(type) {
     let resolved = type.parent;
     if (resolved.kind === ReflectionKind.union && resolved.parent)
         resolved = resolved.parent;
-    if (resolved.kind === ReflectionKind.propertySignature || resolved.kind === ReflectionKind.property)
+    if (resolved.kind === ReflectionKind.propertySignature ||
+        resolved.kind === ReflectionKind.property)
         return resolved;
     return;
 }
@@ -949,14 +1004,19 @@ function getEmbeddedAccessor(type, autoPrefix, accessor, serializer, namingStrat
     const containerProperty = getEmbeddedProperty(type);
     let embeddedPropertyName = JSON.stringify(namingStrategy.getPropertyName(property, serializer.name));
     if (embedded.prefix !== undefined) {
-        embeddedPropertyName = embedded.prefix ? JSON.stringify(embedded.prefix) + ' + ' + embeddedPropertyName : embeddedPropertyName;
+        embeddedPropertyName = embedded.prefix
+            ? JSON.stringify(embedded.prefix) + " + " + embeddedPropertyName
+            : embeddedPropertyName;
     }
     else if (!container && containerProperty) {
-        embeddedPropertyName = JSON.stringify(containerProperty.name) + ` + '_' + ` + embeddedPropertyName;
+        embeddedPropertyName =
+            JSON.stringify(containerProperty.name) +
+                ` + '_' + ` +
+                embeddedPropertyName;
     }
     if (container)
         return new ContainerAccessor(container, embeddedPropertyName);
-    if ((autoPrefix || embedded.prefix !== undefined)) {
+    if (autoPrefix || embedded.prefix !== undefined) {
         //if autoPrefix or a prefix is set the embeddedPropertyName is emitted in a container, either manually provided or from accessor.
         if (accessor instanceof ContainerAccessor)
             return new ContainerAccessor(accessor.container, embeddedPropertyName);
@@ -996,12 +1056,12 @@ export function serializeObjectLiteral(type, state) {
             }
             else {
                 const lines = [];
-                let pre = '';
-                let post = '';
-                let container = '';
+                let pre = "";
+                let post = "";
+                let container = "";
                 if (!(state.setter instanceof ContainerAccessor)) {
                     //create own container
-                    container = state.compilerContext.reserveName('container');
+                    container = state.compilerContext.reserveName("container");
                     pre = `let ${container} = {}`;
                     post = `${state.setter} = ${container}`;
                 }
@@ -1012,7 +1072,7 @@ export function serializeObjectLiteral(type, state) {
                 state.addCode(`
                 if (${inAccessor(state.accessor)}) {
                     ${pre}
-                    ${lines.join('\n')}
+                    ${lines.join("\n")}
                     ${post}
                 }
             `);
@@ -1021,7 +1081,7 @@ export function serializeObjectLiteral(type, state) {
         return;
     }
     state.setContext({ isGroupAllowed });
-    const v = state.compilerContext.reserveName('v');
+    const v = state.compilerContext.reserveName("v");
     const lines = [];
     const signatures = [];
     const existing = [];
@@ -1036,7 +1096,7 @@ export function serializeObjectLiteral(type, state) {
             const parameters = constructor.getParameters();
             for (const parameter of parameters) {
                 if (!parameter.isProperty()) {
-                    constructorArguments.push('undefined');
+                    constructorArguments.push("undefined");
                     continue;
                 }
                 const property = clazz.getProperty(parameter.getName());
@@ -1045,10 +1105,15 @@ export function serializeObjectLiteral(type, state) {
                 if (property.isSerializerExcluded(state.registry.serializer.name)) {
                     continue;
                 }
-                const argumentName = state.compilerContext.reserveVariable('c_' + parameter.getName());
+                const argumentName = state.compilerContext.reserveVariable("c_" + parameter.getName());
                 const readName = getNameExpression(state.namingStrategy.getPropertyName(property.property, state.registry.serializer.name), state);
-                const propertyState = state.fork(argumentName, new ContainerAccessor(state.accessor, readName)).extendPath(String(property.getName()));
-                const staticDefault = property.type.kind === ReflectionKind.literal && !property.isOptional() ? `${argumentName} = ${state.compilerContext.reserveConst(property.type.literal)};` : '';
+                const propertyState = state
+                    .fork(argumentName, new ContainerAccessor(state.accessor, readName))
+                    .extendPath(String(property.getName()));
+                const staticDefault = property.type.kind === ReflectionKind.literal &&
+                    !property.isOptional()
+                    ? `${argumentName} = ${state.compilerContext.reserveConst(property.type.literal)};`
+                    : "";
                 const embedded = property.getEmbedded();
                 if (embedded) {
                     preLines.push(executeTemplates(propertyState, property.type));
@@ -1073,7 +1138,8 @@ export function serializeObjectLiteral(type, state) {
                 continue;
             signatures.push(member);
         }
-        else if (member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.property) {
+        else if (member.kind === ReflectionKind.propertySignature ||
+            member.kind === ReflectionKind.property) {
             if (!isPropertyMemberType(member))
                 continue;
             if (excludedAnnotation.isExcluded(member.type, state.registry.serializer.name))
@@ -1085,7 +1151,9 @@ export function serializeObjectLiteral(type, state) {
             existing.push(readName);
             const writeName = getNameExpression(state.isDeserialization ? memberNameToString(member.name) : name, state);
             const setter = new ContainerAccessor(v, writeName);
-            const propertyState = state.fork(setter, new ContainerAccessor(state.accessor, readName)).extendPath(String(member.name));
+            const propertyState = state
+                .fork(setter, new ContainerAccessor(state.accessor, readName))
+                .extendPath(String(member.name));
             const staticDefault = getStaticDefaultCodeForProperty(member, setter, state);
             if (hasEmbedded(member.type)) {
                 lines.push(executeTemplates(propertyState, member.type));
@@ -1100,8 +1168,8 @@ export function serializeObjectLiteral(type, state) {
         }
     }
     if (signatures.length) {
-        const i = state.compilerContext.reserveName('i');
-        const existingCheck = existing.map(__assignType(v => `${i} === ${v}`, ['v', '', 'P"2!"/"'])).join(' || ') || 'false';
+        const i = state.compilerContext.reserveName("i");
+        const existingCheck = existing.map(__assignType(v => `${i} === ${v}`, ['v', '', 'P"2!"/"'])).join(" || ") || "false";
         const signatureLines = [];
         sortSignatures(signatures);
         for (const signature of signatures) {
@@ -1116,11 +1184,11 @@ export function serializeObjectLiteral(type, state) {
         for (const ${i} in ${state.accessor}) {
             if (!hasProperty(${state.accessor}, ${i})) continue;
             if (${existingCheck}) continue;
-            if (false) {} ${signatureLines.join(' ')}
+            if (false) {} ${signatureLines.join(" ")}
         }
         `);
     }
-    let createObject = '{}';
+    let createObject = "{}";
     const postLines = [];
     if (state.isDeserialization && type.kind === ReflectionKind.class) {
         const classType = state.compilerContext.reserveConst(type.classType);
@@ -1128,33 +1196,38 @@ export function serializeObjectLiteral(type, state) {
         if (clazz.disableConstructor) {
             createObject = `Object.create(${classType}.prototype);`;
             for (const property of clazz.getProperties()) {
-                if (property.property.kind !== ReflectionKind.property || property.property.default === undefined)
+                if (property.property.kind !== ReflectionKind.property ||
+                    property.property.default === undefined) {
                     continue;
+                }
                 const defaultFn = state.compilerContext.reserveConst(property.property.default);
                 createObject += `\n${v}.${memberNameToString(property.name)} = ${defaultFn}.apply(${v});`;
             }
         }
         else {
-            createObject = `new ${classType}(${constructorArguments.join(', ')})`;
+            createObject = `new ${classType}(${constructorArguments.join(", ")})`;
             preLines.push(`const oldCheck = typeSettings.unpopulatedCheck; typeSettings.unpopulatedCheck = UnpopulatedCheck.None;`);
             postLines.push(`typeSettings.unpopulatedCheck = oldCheck;`);
         }
     }
     state.addCode(`
         if ('object' !== typeof ${state.accessor}) ${state.throwCode(type)}
-        ${preLines.join('\n')}
+        ${preLines.join("\n")}
         let ${v} = ${createObject};
-        ${postLines.join('\n')}
-        ${lines.join('\n')}
+        ${postLines.join("\n")}
+        ${lines.join("\n")}
         ${state.setter} = ${v};
     `);
-    if (referenceAnnotation.hasAnnotations(type) && !state.isAnnotationHandled(referenceAnnotation)) {
+    if (referenceAnnotation.hasAnnotations(type) &&
+        !state.isAnnotationHandled(referenceAnnotation)) {
         state.annotationHandled(referenceAnnotation);
         state.setContext({ isObject, isReferenceInstance, isReferenceHydrated });
         const reflection = ReflectionClass.from(type);
         //the primary key is serialised for unhydrated references
         //when in deserialization a referenced is passed as is
-        const keepReference = state.isDeserialization ? `if (isReferenceInstance(${state.accessor})) {${state.setter} = ${state.accessor};} else ` : '';
+        const keepReference = state.isDeserialization
+            ? `if (isReferenceInstance(${state.accessor})) {${state.setter} = ${state.accessor};} else `
+            : "";
         state.replaceTemplate(`
         ${keepReference} if (isReferenceInstance(${state.accessor}) && !isReferenceHydrated(${state.accessor})) {
             ${executeTemplates(state.fork(state.setter, new ContainerAccessor(state.accessor, JSON.stringify(reflection.getPrimary().getName()))), reflection.getPrimary().getType())}
@@ -1169,11 +1242,16 @@ export function typeGuardEmbedded(type, state, embedded) {
     const properties = resolveTypeMembers(type).filter(isPropertyMemberType);
     if (properties.length) {
         for (const property of properties) {
-            if ((property.kind == ReflectionKind.property || property.kind === ReflectionKind.propertySignature) && !excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
+            if ((property.kind == ReflectionKind.property ||
+                property.kind === ReflectionKind.propertySignature) &&
+                !excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
                 //we pass 'data' as container, since type guards for TypeClass get their own function always and operate on `data` accessor.
                 const accessor = getEmbeddedAccessor(type, properties.length !== 1, state.accessor, state.registry.serializer, state.namingStrategy, property, embedded);
                 //note: withValidation('strict') fixes the test with current changes, but limits the use of Embedded (no new limitation added, but this made it obvious).
-                const propertyState = state.fork(state.setter, accessor).withValidation('strict').extendPath(String(property.name));
+                const propertyState = state
+                    .fork(state.setter, accessor)
+                    .withValidation("strict")
+                    .extendPath(String(property.name));
                 if (hasEmbedded(property.type)) {
                     state.addCode(executeTemplates(propertyState, property.type));
                 }
@@ -1193,10 +1271,10 @@ typeGuardEmbedded.__type = [() => __ΩTypeClass, () => __ΩTypeObjectLiteral, 't
 export function typeGuardObjectLiteral(type, state) {
     //this function is used for both, serialize and deserialization. When serializing the type of `type` is strictly correct, so checking embedded fields would lead to wrong results.
     //this embedded check is only necessary when checking types in deserializing.
-    if (state.target === 'deserialize') {
+    if (state.target === "deserialize") {
         const embedded = embeddedAnnotation.getFirst(type);
         if (embedded) {
-            state.addCode('//typeguard for embedded');
+            state.addCode("//typeguard for embedded");
             typeGuardEmbedded(type, state, embedded);
             return;
         }
@@ -1210,26 +1288,41 @@ export function typeGuardObjectLiteral(type, state) {
         if (member.kind === ReflectionKind.indexSignature) {
             signatures.push(member);
         }
-        else if (member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.property || member.kind === ReflectionKind.methodSignature || member.kind === ReflectionKind.method) {
-            if (member.kind === ReflectionKind.property || member.kind === ReflectionKind.method) {
+        else if (member.kind === ReflectionKind.propertySignature ||
+            member.kind === ReflectionKind.property ||
+            member.kind === ReflectionKind.methodSignature ||
+            member.kind === ReflectionKind.method) {
+            if (member.kind === ReflectionKind.property ||
+                member.kind === ReflectionKind.method) {
                 if (member.abstract || member.static)
                     continue;
             }
-            if (member.name === 'constructor')
+            if (member.name === "constructor")
                 continue;
-            if (state.target === 'deserialize' && (member.kind === ReflectionKind.method || member.kind === ReflectionKind.methodSignature)) {
+            if (state.target === "deserialize" &&
+                (member.kind === ReflectionKind.method ||
+                    member.kind === ReflectionKind.methodSignature)) {
                 // methods can not be part of serialized data, so we skip them.
                 continue;
             }
-            const readName = member.kind === ReflectionKind.methodSignature || member.kind === ReflectionKind.method
+            const readName = member.kind === ReflectionKind.methodSignature ||
+                member.kind === ReflectionKind.method
                 ? getNameExpression(member.name, state)
-                : getNameExpression(state.isDeserialization ? state.namingStrategy.getPropertyName(member, state.registry.serializer.name) : memberNameToString(member.name), state);
-            const checkValid = state.compilerContext.reserveName('check');
+                : getNameExpression(state.isDeserialization
+                    ? state.namingStrategy.getPropertyName(member, state.registry.serializer.name)
+                    : memberNameToString(member.name), state);
+            const checkValid = state.compilerContext.reserveName("check");
             const propertyAccessor = new ContainerAccessor(state.accessor, readName);
-            const propertyState = state.fork(checkValid, propertyAccessor).extendPath(String(member.name));
-            const isEmbedded = member.kind === ReflectionKind.property || member.kind === ReflectionKind.propertySignature
-                ? hasEmbedded(member.type) : undefined;
-            if (isEmbedded && (member.kind === ReflectionKind.property || member.kind === ReflectionKind.propertySignature)) {
+            const propertyState = state
+                .fork(checkValid, propertyAccessor)
+                .extendPath(String(member.name));
+            const isEmbedded = member.kind === ReflectionKind.property ||
+                member.kind === ReflectionKind.propertySignature
+                ? hasEmbedded(member.type)
+                : undefined;
+            if (isEmbedded &&
+                (member.kind === ReflectionKind.property ||
+                    member.kind === ReflectionKind.propertySignature)) {
                 const template = executeTemplates(propertyState, member.type);
                 if (!template)
                     throw new Error(`No template found for ${member.type.kind}`);
@@ -1237,16 +1330,25 @@ export function typeGuardObjectLiteral(type, state) {
             }
             else {
                 let optional = isOptional(member);
-                if (state.validation === 'loose' && member.kind === ReflectionKind.property && member.default) {
+                if (state.validation === "loose" &&
+                    member.kind === ReflectionKind.property &&
+                    member.default) {
                     optional = true;
                 }
                 let optionalCheck = optional
-                    ? `${propertyAccessor} !== undefined && ` + (!isNullable(member) ? `${propertyAccessor} !== null && ` : '')
-                    : '';
+                    ? `${propertyAccessor} !== undefined && ` +
+                        (!isNullable(member) ? `${propertyAccessor} !== null && ` : "")
+                    : "";
                 existing.push(readName);
                 state.setContext({ unpopulatedSymbol });
-                const forType = member.kind === ReflectionKind.methodSignature || member.kind === ReflectionKind.method
-                    ? { kind: ReflectionKind.function, name: memberNameToString(member.name), return: member.return, parameters: member.parameters }
+                const forType = member.kind === ReflectionKind.methodSignature ||
+                    member.kind === ReflectionKind.method
+                    ? {
+                        kind: ReflectionKind.function,
+                        name: memberNameToString(member.name),
+                        return: member.return,
+                        parameters: member.parameters
+                    }
                     : member.type;
                 const checkTemplate = executeTemplates(propertyState, forType).trim();
                 lines.push(`
@@ -1259,13 +1361,15 @@ export function typeGuardObjectLiteral(type, state) {
         }
     }
     if (signatures.length) {
-        const i = state.compilerContext.reserveName('i');
-        const existingCheck = existing.map(__assignType(v => `${i} === ${v}`, ['v', '', 'P"2!"/"'])).join(' || ') || 'false';
+        const i = state.compilerContext.reserveName("i");
+        const existingCheck = existing.map(__assignType(v => `${i} === ${v}`, ['v', '', 'P"2!"/"'])).join(" || ") || "false";
         const signatureLines = [];
         sortSignatures(signatures);
         for (const signature of signatures) {
-            const checkValid = state.compilerContext.reserveName('check');
-            const checkTemplate = executeTemplates(state.fork(checkValid, new ContainerAccessor(state.accessor, i)).extendPath(new RuntimeCode(i)), signature.type).trim();
+            const checkValid = state.compilerContext.reserveName("check");
+            const checkTemplate = executeTemplates(state
+                .fork(checkValid, new ContainerAccessor(state.accessor, i))
+                .extendPath(new RuntimeCode(i)), signature.type).trim();
             signatureLines.push(`else if (${getIndexCheck(state.compilerContext, i, signature.index)}) {
                 let ${checkValid} = false;
                 ${checkTemplate || `// no template found for signature.type.kind=${signature.type.kind}`}
@@ -1281,7 +1385,7 @@ export function typeGuardObjectLiteral(type, state) {
             if (${existingCheck}) continue;
             if (!${state.setter}) {
                 break;
-            } ${signatureLines.join(' ')}
+            } ${signatureLines.join(" ")}
             else {
                 ${state.setter} = false;
                 break;
@@ -1289,12 +1393,12 @@ export function typeGuardObjectLiteral(type, state) {
         }
         `);
     }
-    let customValidatorCall = '';
+    let customValidatorCall = "";
     if (type.kind === ReflectionKind.class) {
         const reflection = ReflectionClass.from(type.classType);
         if (reflection.validationMethod) {
-            const resVar = state.setVariable('validationResult');
-            const method = state.setVariable('method', reflection.validationMethod);
+            const resVar = state.setVariable("validationResult");
+            const method = state.setVariable("method", reflection.validationMethod);
             customValidatorCall = `
             if (${state.setter}) {
                 ${resVar} = ${state.accessor}[${method}]();
@@ -1307,10 +1411,10 @@ export function typeGuardObjectLiteral(type, state) {
     state.addCodeForSetter(`
         ${state.setter} = true;
         if (${state.accessor} && isObjectLiteral(${state.accessor})) {
-            ${lines.join('\n')}
+            ${lines.join("\n")}
             ${customValidatorCall}
         } else {
-            if (${state.isValidation()}) ${state.assignValidationError('type', 'Not an object')}
+            if (${state.isValidation()}) ${state.assignValidationError("type", "Not an object")}
             ${state.setter} = false;
         }
     `);
@@ -1318,10 +1422,10 @@ export function typeGuardObjectLiteral(type, state) {
 typeGuardObjectLiteral.__type = [() => __ΩTypeObjectLiteral, () => __ΩTypeClass, 'type', () => TemplateState, 'state', 'typeGuardObjectLiteral', 'PPn!n"J2#P7$2%"/&'];
 export function serializeArray(type, state) {
     state.setContext({ isIterable });
-    const v = state.compilerContext.reserveName('v');
-    const tempIterable = state.compilerContext.reserveName('tempIterable');
-    const i = state.compilerContext.reserveName('i');
-    const item = state.compilerContext.reserveName('item');
+    const v = state.compilerContext.reserveName("v");
+    const tempIterable = state.compilerContext.reserveName("tempIterable");
+    const i = state.compilerContext.reserveName("i");
+    const item = state.compilerContext.reserveName("item");
     //we just use `a.length` to check whether its array-like, because Array.isArray() is way too slow.
     state.addCodeForSetter(`
          if (isIterable(${state.accessor})) {
@@ -1340,9 +1444,9 @@ export function serializeArray(type, state) {
 serializeArray.__type = [() => __ΩTypeArray, 'type', () => TemplateState, 'state', 'serializeArray', 'Pn!2"P7#2$"/%'];
 export function typeGuardArray(elementType, state) {
     state.setContext({ isIterable, iterableSize });
-    const v = state.compilerContext.reserveName('v');
-    const i = state.compilerContext.reserveName('i');
-    const item = state.compilerContext.reserveName('item');
+    const v = state.compilerContext.reserveName("v");
+    const i = state.compilerContext.reserveName("i");
+    const item = state.compilerContext.reserveName("item");
     //we just use `a.length` to check whether its array-like, because Array.isArray() is way too slow.
     state.addCodeForSetter(`
          let ${v} = false;
@@ -1354,7 +1458,7 @@ export function typeGuardArray(elementType, state) {
                 ${i}++;
             }
          } else if (${state.isValidation()}) {
-            ${state.assignValidationError('type', 'Not an array')}
+            ${state.assignValidationError("type", "Not an array")}
          }
          ${state.setter} = ${v};
     `);
@@ -1367,8 +1471,8 @@ function serializeTuple(type, state) {
     //[number, ...string, number, string], medium
     const lines = [];
     let restEndOffset = 0;
-    const _ = state.compilerContext.reserveName('_');
-    const i = state.compilerContext.reserveName('i');
+    const _ = state.compilerContext.reserveName("_");
+    const i = state.compilerContext.reserveName("i");
     for (let i = 0; i < type.types.length; i++) {
         if (type.types[i].type.kind === ReflectionKind.rest) {
             restEndOffset = type.types.length - (i + 1);
@@ -1406,7 +1510,7 @@ function serializeTuple(type, state) {
         let ${_};
         let ${i} = 0;
         ${state.setter} = [];
-        ${lines.join('\n')}
+        ${lines.join("\n")}
     `);
 }
 serializeTuple.__type = [() => __ΩTypeTuple, 'type', () => TemplateState, 'state', 'serializeTuple', 'Pn!2"P7#2$"/%'];
@@ -1417,8 +1521,8 @@ function typeGuardTuple(type, state) {
     //[number, ...string, number, string], medium
     const lines = [];
     let restEndOffset = 0;
-    const v = state.compilerContext.reserveName('v');
-    const i = state.compilerContext.reserveName('i');
+    const v = state.compilerContext.reserveName("v");
+    const i = state.compilerContext.reserveName("i");
     for (let i = 0; i < type.types.length; i++) {
         if (type.types[i].type.kind === ReflectionKind.rest) {
             restEndOffset = type.types.length - (i + 1);
@@ -1437,7 +1541,9 @@ function typeGuardTuple(type, state) {
             `);
         }
         else {
-            const optionalCheck = member.optional ? `${state.accessor}[${i}] !== undefined` : 'true';
+            const optionalCheck = member.optional
+                ? `${state.accessor}[${i}] !== undefined`
+                : "true";
             lines.push(`
             if (${v} && ${optionalCheck}) {
                 ${executeTemplates(state.fork(v, new ContainerAccessor(state.accessor, i)).extendPath(member.name || new RuntimeCode(i)), member.type)}
@@ -1451,10 +1557,10 @@ function typeGuardTuple(type, state) {
         if (isArray(${state.accessor})) {
             let ${v} = true;
             let ${i} = 0;
-            ${lines.join('\n')}
+            ${lines.join("\n")}
             ${state.setter} = ${v};
         } else {
-            if (${state.isValidation()}) ${state.assignValidationError('type', 'Not an array')}
+            if (${state.isValidation()}) ${state.assignValidationError("type", "Not an array")}
             ${state.setter} = false;
         }
     `);
@@ -1465,9 +1571,10 @@ export function getSetTypeToArray(type) {
     if (jit.forwardSetToArray)
         return jit.forwardSetToArray;
     const value = type.arguments?.[0] || { kind: ReflectionKind.any };
-    return jit.forwardSetToArray = {
-        kind: ReflectionKind.array, type: value,
-    };
+    return (jit.forwardSetToArray = {
+        kind: ReflectionKind.array,
+        type: value
+    });
 }
 getSetTypeToArray.__type = [() => __ΩTypeClass, 'type', () => __ΩTypeArray, 'getSetTypeToArray', 'Pn!2"n#/$'];
 export function getMapTypeToArray(type) {
@@ -1477,12 +1584,14 @@ export function getMapTypeToArray(type) {
     const index = type.arguments?.[0] || { kind: ReflectionKind.any };
     const value = type.arguments?.[1] || { kind: ReflectionKind.any };
     jit.forwardMapToArray = {
-        kind: ReflectionKind.array, type: copyAndSetParent({
-            kind: ReflectionKind.tuple, types: [
-                { kind: ReflectionKind.tupleMember, name: 'key', type: index },
-                { kind: ReflectionKind.tupleMember, name: 'value', type: value },
-            ],
-        }),
+        kind: ReflectionKind.array,
+        type: copyAndSetParent({
+            kind: ReflectionKind.tuple,
+            types: [
+                { kind: ReflectionKind.tupleMember, name: "key", type: index },
+                { kind: ReflectionKind.tupleMember, name: "value", type: value }
+            ]
+        })
     };
     return jit.forwardMapToArray;
 }
@@ -1493,9 +1602,10 @@ export function getNTypeToArray(type, n) {
     if (jit[name])
         return jit[name];
     const value = type.arguments?.[n] || { kind: ReflectionKind.any };
-    return jit[name] = {
-        kind: ReflectionKind.array, type: value,
-    };
+    return (jit[name] = {
+        kind: ReflectionKind.array,
+        type: value
+    });
 }
 getNTypeToArray.__type = [() => __ΩTypeClass, 'type', 'n', () => __ΩTypeArray, 'getNTypeToArray', 'Pn!2"\'2#n$/%'];
 export function executeTypeArgumentAsArray(type, typeIndex, state) {
@@ -1512,9 +1622,11 @@ export function forwardMapToArray(type, state) {
 forwardMapToArray.__type = [() => __ΩTypeClass, 'type', () => TemplateState, 'state', 'forwardMapToArray', 'Pn!2"P7#2$"/%'];
 export function serializePropertyOrParameter(type, state) {
     if (isOptional(type)) {
-        const nullCheck = isNullable(type) ? `if (${state.accessor} === null) {
+        const nullCheck = isNullable(type)
+            ? `if (${state.accessor} === null) {
                 ${executeTemplates(state.fork(), { kind: ReflectionKind.null })}
-            } else ` : '';
+            } else `
+            : "";
         state.addCode(`
             ${nullCheck}
             if (${state.accessor} === undefined || ${state.accessor} === null) {
@@ -1533,7 +1645,7 @@ export function validatePropertyOrParameter(type, state) {
     const hasDefault = hasDefaultValue(type);
     state.addCode(`
         if (${state.accessor} === undefined) {
-            if (${!optional && !hasDefault && state.isValidation()}) ${state.assignValidationError('type', 'No value given')}
+            if (${!optional && !hasDefault && state.isValidation()}) ${state.assignValidationError("type", "No value given")}
         } else {
             ${executeTemplates(state.fork(), type.type)}
         }
@@ -1574,20 +1686,25 @@ export function handleUnion(type, state) {
     const lines = [];
     //since there are type guards that require to access the container (for example Embedded), its necessary to pass the container (if available) to the type guard function
     //and change accessor to point to `data` (argument of the type guard) + index name.
-    const property = state.accessor instanceof ContainerAccessor ? `${state.accessor.property}` : 'undefined';
+    const property = state.accessor instanceof ContainerAccessor
+        ? `${state.accessor.property}`
+        : "undefined";
     const args = `${state.accessor instanceof ContainerAccessor ? state.accessor.container : state.accessor}, state, ${collapsePath(state.path)}, ${property}`;
-    const accessor = state.accessor instanceof ContainerAccessor ? new ContainerAccessor('data', 'property') : 'data';
+    const accessor = state.accessor instanceof ContainerAccessor
+        ? new ContainerAccessor("data", "property")
+        : "data";
     const typeGuards = state.registry.serializer.typeGuards.getSortedTemplateRegistries();
     for (const [specificality, typeGuard] of typeGuards) {
         //loosely type guards are only used for deserialization
-        if (state.target === 'serialize' && specificality < 1)
+        if (state.target === "serialize" && specificality < 1)
             continue;
         //when validation=true and not all specificalities are included, we only use 1, which is used for strict validation()/is().
-        if (state.validation === 'strict' && specificality !== 1)
+        if (state.validation === "strict" && specificality !== 1)
             continue;
-        const validation = !state.validation ? 'loose' : state.validation;
+        const validation = !state.validation ? "loose" : state.validation;
         for (const t of type.types) {
-            const fn = createTypeGuardFunction(t, state.fork(undefined, accessor)
+            const fn = createTypeGuardFunction(t, state
+                .fork(undefined, accessor)
                 .forRegistry(typeGuard)
                 //if validation is not set, we are in deserialize mode, so we need to activate validation
                 //for this state.
@@ -1595,31 +1712,35 @@ export function handleUnion(type, state) {
                 .includeAllSpecificalities(state.registry.serializer.typeGuards), undefined, false);
             if (!fn)
                 continue;
-            const guard = state.setVariable('guard_' + ReflectionKind[t.kind], fn);
-            const looseCheck = specificality <= 0 ? `state.loosely !== false && ` : '';
-            const action = state.isValidation() ? `${state.setter} = true;` : executeTemplates(state.fullFork(), t);
+            const guard = state.setVariable("guard_" + ReflectionKind[t.kind], fn);
+            const looseCheck = specificality <= 0 ? `state.loosely !== false && ` : "";
+            const action = state.isValidation()
+                ? `${state.setter} = true;`
+                : executeTemplates(state.fullFork(), t);
             lines.push(`else if (${looseCheck}${guard}(${args})) {
                 //type = ${ReflectionKind[t.kind]}, specificality=${specificality}
                 ${action}
             }`);
         }
     }
-    const handleErrors = state.setter ? `
+    const handleErrors = state.setter
+        ? `
         if (state.errors) {
             ${state.setter} = false;
             state.errors = oldErrors;
         }
-    ` : '';
+    `
+        : "";
     state.addCodeForSetter(`
         {
             const oldErrors = state.errors;
             if (state.errors) state.errors = [];
 
             //type guard for union
-            if (false) {} ${lines.join(' ')}
+            if (false) {} ${lines.join(" ")}
             else {
                 ${handleErrors}
-                ${state.assignValidationError('type', 'No valid union member found. Valid: ' + stringifyResolvedType(type))}
+                ${state.assignValidationError("type", "No valid union member found. Valid: " + stringifyResolvedType(type))}
             }
             state.errors = oldErrors;
         }
@@ -1628,12 +1749,12 @@ export function handleUnion(type, state) {
 handleUnion.__type = [() => __ΩTypeUnion, 'type', () => TemplateState, 'state', 'handleUnion', 'Pn!2"P7#2$"/%'];
 export function getNameExpression(name, state) {
     if (undefined === name)
-        return 'undefined';
-    if ('string' === typeof name || 'number' === typeof name)
+        return "undefined";
+    if ("string" === typeof name || "number" === typeof name)
         return JSON.stringify(name);
     if (isType(name))
         return JSON.stringify(memberNameToString(name));
-    return state.compilerContext.reserveConst(name, 'symbolName');
+    return state.compilerContext.reserveConst(name, "symbolName");
 }
 getNameExpression.__type = ['name', () => TemplateState, 'state', 'getNameExpression', 'PP&\'+-J2!P7"2#&/$'];
 export class TypeGuardRegistry {
@@ -1668,7 +1789,7 @@ export class TypeGuardRegistry {
     getRegistry(specificality) {
         var _c;
         this.sorted = undefined;
-        return (_c = this.registry)[specificality] || (_c[specificality] = new TemplateRegistry(this.serializer));
+        return ((_c = this.registry)[specificality] || (_c[specificality] = new TemplateRegistry(this.serializer)));
     }
     /**
      * Registers a new template and replaces all existing (added via register,prepend,append).
@@ -1710,7 +1831,7 @@ TypeGuardRegistry.__type = [() => TemplateRegistry, 'registry', function () { re
  * JSONSerializer has the same but for JSON data structures.
  */
 export class Serializer {
-    constructor(name = 'json') {
+    constructor(name = "json") {
         this.name = name;
         this.serializeRegistry = new TemplateRegistry(this);
         this.deserializeRegistry = new TemplateRegistry(this);
@@ -1723,8 +1844,7 @@ export class Serializer {
     setExplicitUndefined(type, state) {
         return true;
     }
-    registerValidators() {
-    }
+    registerValidators() { }
     clear() {
         this.serializeRegistry.clear();
         this.deserializeRegistry.clear();
@@ -1749,8 +1869,8 @@ export class Serializer {
         this.serializeRegistry.register(ReflectionKind.tuple, serializeTuple);
         this.deserializeRegistry.register(ReflectionKind.union, handleUnion);
         this.serializeRegistry.register(ReflectionKind.union, handleUnion);
-        this.deserializeRegistry.register(ReflectionKind.literal, __assignType((type, state) => state.addSetter(state.setVariable('v', type.literal)), ['type', 'state', '', 'P"2!"2""/#']));
-        this.serializeRegistry.register(ReflectionKind.literal, __assignType((type, state) => state.addSetter(state.setVariable('v', type.literal)), ['type', 'state', '', 'P"2!"2""/#']));
+        this.deserializeRegistry.register(ReflectionKind.literal, __assignType((type, state) => state.addSetter(state.setVariable("v", type.literal)), ['type', 'state', '', 'P"2!"2""/#']));
+        this.serializeRegistry.register(ReflectionKind.literal, __assignType((type, state) => state.addSetter(state.setVariable("v", type.literal)), ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.register(ReflectionKind.undefined, __assignType((type, state) => state.addSetter(`null`), ['type', 'state', '', 'P"2!"2""/#']));
         this.deserializeRegistry.register(ReflectionKind.undefined, __assignType((type, state) => state.addSetter(`undefined`), ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.register(ReflectionKind.null, __assignType((type, state) => state.addSetter(`null`), ['type', 'state', '', 'P"2!"2""/#']));
@@ -1773,13 +1893,13 @@ export class Serializer {
             const v = state.accessor;
             const check = `${v}.length === 36 && ${v}[23] === '-' && ${v}[18] === '-' && ${v}[13] === '-' && ${v}[8] === '-'`;
             state.addCode(`
-                if (!(${check})) ${state.throwCode(type, JSON.stringify('Not a UUID'))}
+                if (!(${check})) ${state.throwCode(type, JSON.stringify("Not a UUID"))}
             `);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.deserializeRegistry.addDecorator(isMongoIdType, __assignType((type, state) => {
             const check = `${state.accessor}.length === 24 || ${state.accessor}.length === 0`;
             state.addCode(`
-                if (!(${check})) ${state.throwCode(type, JSON.stringify('Not a MongoId (ObjectId)'))}
+                if (!(${check})) ${state.throwCode(type, JSON.stringify("Not a MongoId (ObjectId)"))}
             `);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.register(ReflectionKind.templateLiteral, __assignType((type, state) => state.addSetter(state.accessor), ['type', 'state', '', 'P"2!"2""/#']));
@@ -1812,11 +1932,11 @@ export class Serializer {
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.register(ReflectionKind.enum, __assignType((type, state) => state.addSetter(state.accessor), ['type', 'state', '', 'P"2!"2""/#']));
         this.deserializeRegistry.register(ReflectionKind.enum, __assignType((type, state) => {
-            const valuesVar = state.setVariable('values', type.values);
-            const matcher = state.setVariable('enumMatcher', getEnumValueIndexMatcher(type));
+            const valuesVar = state.setVariable("values", type.values);
+            const matcher = state.setVariable("enumMatcher", getEnumValueIndexMatcher(type));
             state.addCodeForSetter(`
                 ${state.setter} = ${valuesVar}[${matcher}(${state.accessor})];
-                if (${valuesVar}.indexOf(${state.setter}) === -1) ${state.throwCode('enum', `'No valid value of ' + ${valuesVar}.join(', ')`)}
+                if (${valuesVar}.indexOf(${state.setter}) === -1) ${state.throwCode("enum", `'No valid value of ' + ${valuesVar}.join(', ')`)}
             `);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.register(ReflectionKind.regexp, __assignType((type, state) => state.addSetter(`${state.accessor}.toString()`), ['type', 'state', '', 'P"2!"2""/#']));
@@ -1831,7 +1951,7 @@ export class Serializer {
                     : new RegExp(${state.accessor})
                 : ${state.accessor}
             } catch (error) {
-                ${state.throwCode('regexp', 'error')}
+                ${state.throwCode("regexp", "error")}
             }
             `);
         }, ['type', 'state', '', 'P"2!"2""/#']));
@@ -1884,7 +2004,7 @@ export class Serializer {
                 return;
             }
             state.setContext({ base64ToTypedArray });
-            const typedArrayVar = state.setVariable('classType', type.classType);
+            const typedArrayVar = state.setVariable("classType", type.classType);
             state.addSetter(`${state.accessor} instanceof ${typedArrayVar} ? ${state.accessor} : base64ToTypedArray(${state.accessor}, ${typedArrayVar})`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.serializeRegistry.registerClass(Set, forwardSetToArray);
@@ -1897,20 +2017,31 @@ export class Serializer {
             forwardMapToArray(type, state);
             state.addSetter(`new Map(${state.accessor})`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.deserializeRegistry.addDecorator(__assignType(type => isReferenceType(type) || isBackReferenceType(type) || (type.parent !== undefined && isBackReferenceType(type.parent)), ['type', '', 'P"2!"/"']), __assignType((type, state) => {
-            if (type.kind !== ReflectionKind.class && type.kind !== ReflectionKind.objectLiteral)
+        this.deserializeRegistry.addDecorator(__assignType(type => isReferenceType(type) ||
+            isBackReferenceType(type) ||
+            (type.parent !== undefined && isBackReferenceType(type.parent)), ['type', '', 'P"2!"/"']), __assignType((type, state) => {
+            if (type.kind !== ReflectionKind.class &&
+                type.kind !== ReflectionKind.objectLiteral)
                 return;
             state.annotationHandled(referenceAnnotation);
-            state.setContext({ isObject, createReference, isReferenceHydrated, isReferenceInstance, getObjectKeysSize });
+            state.setContext({
+                isObject,
+                createReference,
+                isReferenceHydrated,
+                isReferenceInstance,
+                getObjectKeysSize
+            });
             const reflection = ReflectionClass.from(type);
-            const referenceClassTypeVar = state.setVariable('referenceClassType', type.kind === ReflectionKind.class ? type.classType : Object);
+            const referenceClassTypeVar = state.setVariable("referenceClassType", type.kind === ReflectionKind.class ? type.classType : Object);
             // when an object with primary key is given e.g. {id: 1} we treat it as
             // reference and assign an instance of Reference to the property.
-            const l = [`${reflection.getPrimaries().length} > 0 && getObjectKeysSize(${state.accessor}) === ${reflection.getPrimaries().length}`];
+            const l = [
+                `${reflection.getPrimaries().length} > 0 && getObjectKeysSize(${state.accessor}) === ${reflection.getPrimaries().length}`
+            ];
             for (const pk of reflection.getPrimaries()) {
                 l.push(`${JSON.stringify(pk.name)} in ${state.accessor}`);
             }
-            const checkIsPrimaryKeyOnly = l.join(' && ');
+            const checkIsPrimaryKeyOnly = l.join(" && ");
             // in deserialization a reference is created when only the primary key is provided (no object given)
             state.replaceTemplate(`
                     if (isReferenceInstance(${state.accessor})) {
@@ -1921,7 +2052,7 @@ export class Serializer {
                         ${state.template}
                     } else {
                         let pk;
-                        ${executeTemplates(state.fork('pk').extendPath(String(reflection.getPrimary().getName())), reflection.getPrimary().getType())}
+                        ${executeTemplates(state.fork("pk").extendPath(String(reflection.getPrimary().getName())), reflection.getPrimary().getType())}
                         ${state.setter} = createReference(${referenceClassTypeVar}, {${JSON.stringify(reflection.getPrimary().getName())}: pk});
                     }
                 `);
@@ -1933,10 +2064,10 @@ export class Serializer {
             if (type.parent && type.parent.kind === ReflectionKind.union) {
                 return;
             }
-            state.addSetter('true');
+            state.addSetter("true");
         }, ['type', 'state', '', 'P"2!"2""/#']));
         //if nothing else matches in a union, any matches anything
-        this.typeGuards.register(20, ReflectionKind.any, __assignType((type, state) => state.addSetter('true'), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(20, ReflectionKind.any, __assignType((type, state) => state.addSetter("true"), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, ReflectionKind.object, __assignType((type, state) => {
             state.setContext({ isObject });
             state.addSetter(`isObject(${state.accessor})`);
@@ -1947,25 +2078,27 @@ export class Serializer {
         // //and only if the property (where the embedded is placed) has no strict type guard do we look for other fields as well.
         // this.typeGuards.register(2, ReflectionKind.class, (type, state) => typeCheckClassOrObjectLiteral(type, state, true));
         this.typeGuards.register(1, ReflectionKind.string, __assignType((type, state) => {
-            state.addSetterAndReportErrorIfInvalid('type', 'Not a string', `'string' === typeof ${state.accessor}`);
+            state.addSetterAndReportErrorIfInvalid("type", "Not a string", `'string' === typeof ${state.accessor}`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.getRegistry(1).addDecorator(isUUIDType, __assignType((type, state) => {
             const v = state.originalAccessor;
             const check = `${state.setter} && ${v}.length === 36 && ${v}[23] === '-' && ${v}[18] === '-' && ${v}[13] === '-' && ${v}[8] === '-'`;
-            state.addSetterAndReportErrorIfInvalid('type', 'Not a UUID', check);
+            state.addSetterAndReportErrorIfInvalid("type", "Not a UUID", check);
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.getRegistry(1).addDecorator(isMongoIdType, __assignType((type, state) => {
-            state.addSetterAndReportErrorIfInvalid('type', 'Not a MongoId (ObjectId)', `${state.setter} && (${state.originalAccessor}.length === 24 || ${state.originalAccessor}.length === 0)`);
+        this.typeGuards
+            .getRegistry(1)
+            .addDecorator(isMongoIdType, __assignType((type, state) => {
+            state.addSetterAndReportErrorIfInvalid("type", "Not a MongoId (ObjectId)", `${state.setter} && (${state.originalAccessor}.length === 24 || ${state.originalAccessor}.length === 0)`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(50, ReflectionKind.string, __assignType((type, state) => state.addSetter(`${state.accessor} !== undefined && ${state.accessor} !== null`), ['type', 'state', '', 'P"2!"2""/#'])); //at the end, everything can be converted to string
         this.typeGuards.register(1, ReflectionKind.templateLiteral, __assignType((type, state) => {
             state.setContext({ extendTemplateLiteral: extendTemplateLiteral });
-            const typeVar = state.setVariable('type', type);
-            state.addSetterAndReportErrorIfInvalid('type', 'Invalid literal', `'string' === typeof ${state.accessor} && extendTemplateLiteral({kind: ${ReflectionKind.literal}, literal: ${state.accessor}}, ${typeVar})`);
+            const typeVar = state.setVariable("type", type);
+            state.addSetterAndReportErrorIfInvalid("type", "Invalid literal", `'string' === typeof ${state.accessor} && extendTemplateLiteral({kind: ${ReflectionKind.literal}, literal: ${state.accessor}}, ${typeVar})`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, ReflectionKind.undefined, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not undefined', `'undefined' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(1, ReflectionKind.undefined, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not undefined", `'undefined' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(2, ReflectionKind.undefined, __assignType((type, state) => state.addSetter(`null === ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, ReflectionKind.null, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not null', `null === ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(1, ReflectionKind.null, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not null", `null === ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(2, ReflectionKind.null, __assignType((type, state) => state.addSetter(`'undefined' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, ReflectionKind.propertySignature, validatePropertyOrParameter);
         this.typeGuards.register(1, ReflectionKind.property, validatePropertyOrParameter);
@@ -1979,7 +2112,9 @@ export class Serializer {
             state.addSetter(`'string' === typeof ${state.accessor} && isNumeric(${state.accessor})`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, ReflectionKind.number, __assignType((type, state) => {
-            if (type.brand !== undefined && type.brand >= TypeNumberBrand.integer && type.brand <= TypeNumberBrand.uint32) {
+            if (type.brand !== undefined &&
+                type.brand >= TypeNumberBrand.integer &&
+                type.brand <= TypeNumberBrand.uint32) {
                 state.setContext({ isInteger: isInteger });
                 let check = `'number' === typeof ${state.accessor} && isInteger(${state.accessor})`;
                 if (type.brand === TypeNumberBrand.uint8) {
@@ -2000,14 +2135,14 @@ export class Serializer {
                 else if (type.brand === TypeNumberBrand.int32) {
                     check += `&& ${state.accessor} <= 2147483647 && ${state.accessor} >= -2147483648`;
                 }
-                state.addSetterAndReportErrorIfInvalid('type', `Not a ${type.brand === undefined ? 'number' : TypeNumberBrand[type.brand]}`, check);
+                state.addSetterAndReportErrorIfInvalid("type", `Not a ${type.brand === undefined ? "number" : TypeNumberBrand[type.brand]}`, check);
             }
             else {
                 let check = `'number' === typeof ${state.accessor}`;
                 if (type.brand === TypeNumberBrand.float32) {
                     check += `&& ${state.accessor} <= 3.40282347e+38 && ${state.accessor} >= -3.40282347e+38`;
                 }
-                state.addSetterAndReportErrorIfInvalid('type', `Not a ${type.brand === undefined ? 'number' : TypeNumberBrand[type.brand]}`, check);
+                state.addSetterAndReportErrorIfInvalid("type", `Not a ${type.brand === undefined ? "number" : TypeNumberBrand[type.brand]}`, check);
             }
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(2, ReflectionKind.bigint, __assignType((type, state) => {
@@ -2018,11 +2153,13 @@ export class Serializer {
             state.setContext({ isNumeric: isNumeric });
             state.addSetter(`'string' === typeof ${state.accessor} && isNumeric(${state.accessor})`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, ReflectionKind.bigint, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a bigint', `'bigint' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, ReflectionKind.boolean, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a boolean', `'boolean' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(1, ReflectionKind.bigint, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not a bigint", `'bigint' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(1, ReflectionKind.boolean, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not a boolean", `'boolean' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(-0.9, ReflectionKind.boolean, __assignType((type, state) => {
             let handleNumeric = true;
-            if (type.parent && type.parent.kind === ReflectionKind.union && (type.parent.types.some(__assignType(v => v.kind === ReflectionKind.number || v.kind === ReflectionKind.bigint, ['v', '', 'P"2!"/"'])))) {
+            if (type.parent &&
+                type.parent.kind === ReflectionKind.union &&
+                type.parent.types.some(__assignType(v => v.kind === ReflectionKind.number || v.kind === ReflectionKind.bigint, ['v', '', 'P"2!"/"']))) {
                 handleNumeric = false;
             }
             if (handleNumeric) {
@@ -2034,26 +2171,32 @@ export class Serializer {
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, ReflectionKind.promise, __assignType((type, state) => executeTemplates(state, type.type), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, ReflectionKind.enum, __assignType((type, state) => {
-            const matcher = state.setVariable('enumMatcher', getEnumValueIndexMatcher(type));
-            state.addSetterAndReportErrorIfInvalid('type', 'Invalid enum member', `${matcher}(${state.accessor}) >= 0`);
+            const matcher = state.setVariable("enumMatcher", getEnumValueIndexMatcher(type));
+            state.addSetterAndReportErrorIfInvalid("type", "Invalid enum member", `${matcher}(${state.accessor}) >= 0`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, ReflectionKind.array, __assignType((type, state) => typeGuardArray(type.type, state), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, ReflectionKind.tuple, typeGuardTuple);
         this.typeGuards.register(1, ReflectionKind.literal, __assignType((type, state) => {
-            state.addSetterAndReportErrorIfInvalid('type', 'Invalid literal', `${state.setVariable('v', type.literal)} === ${state.accessor}`);
+            state.addSetterAndReportErrorIfInvalid("type", "Invalid literal", `${state.setVariable("v", type.literal)} === ${state.accessor}`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(-0.5, ReflectionKind.literal, __assignType((type, state) => {
             //loosely only works for number/bigint/boolean, not for symbols/regexp/string
-            if (type.literal === null || type.literal === undefined || typeof type.literal === 'number' || typeof type.literal === 'bigint' || typeof type.literal === 'boolean') {
-                state.addSetter(`'string' === typeof ${state.accessor} && ${state.setVariable('v', String(type.literal))} === ${state.accessor}`);
+            if (type.literal === null ||
+                type.literal === undefined ||
+                typeof type.literal === "number" ||
+                typeof type.literal === "bigint" ||
+                typeof type.literal === "boolean") {
+                state.addSetter(`'string' === typeof ${state.accessor} && ${state.setVariable("v", String(type.literal))} === ${state.accessor}`);
             }
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, ReflectionKind.regexp, (__assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a RegExp', `${state.accessor} instanceof RegExp`), ['type', 'state', '', 'P"2!"2""/#'])));
-        this.typeGuards.register(2, ReflectionKind.regexp, (__assignType((type, state) => state.addSetter(`'string' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#'])));
-        this.typeGuards.register(0.5, ReflectionKind.regexp, (__assignType((type, state) => state.addSetter(`'string' === typeof ${state.accessor} && ${state.accessor}[0] === '/'`), ['type', 'state', '', 'P"2!"2""/#'])));
+        this.typeGuards.register(1, ReflectionKind.regexp, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not a RegExp", `${state.accessor} instanceof RegExp`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(2, ReflectionKind.regexp, __assignType((type, state) => state.addSetter(`'string' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards.register(0.5, ReflectionKind.regexp, __assignType((type, state) => state.addSetter(`'string' === typeof ${state.accessor} && ${state.accessor}[0] === '/'`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.getRegistry(1).registerClass(Set, forwardSetToArray);
         this.typeGuards.getRegistry(1).registerClass(Map, forwardMapToArray);
-        this.typeGuards.getRegistry(1).registerClass(Date, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a Date', `${state.accessor} instanceof Date`), ['type', 'state', '', 'P"2!"2""/#']));
+        this.typeGuards
+            .getRegistry(1)
+            .registerClass(Date, __assignType((type, state) => state.addSetterAndReportErrorIfInvalid("type", "Not a Date", `${state.accessor} instanceof Date`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.getRegistry(0.5).registerClass(Date, __assignType((type, state) => {
             state.addSetter(`'string' === typeof ${state.accessor} && new Date(${state.accessor}).toString() !== 'Invalid Date'`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
@@ -2061,9 +2204,9 @@ export class Serializer {
         this.typeGuards.getRegistry(1.5).registerClass(Date, __assignType((type, state) => {
             state.addSetter(`'number' === typeof ${state.accessor}`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.register(1, ReflectionKind.function, (__assignType((type, state) => {
+        this.typeGuards.register(1, ReflectionKind.function, __assignType((type, state) => {
             state.setContext({ isFunction, isExtendable, resolveRuntimeType });
-            const t = state.setVariable('type', type);
+            const t = state.setVariable("type", type);
             state.addCodeForSetter(`
                 if (isFunction(${state.accessor})) {
                     if ('__type' in ${state.accessor}) {
@@ -2072,21 +2215,23 @@ export class Serializer {
                         ${state.setter} = true;
                     }
                 } else {
-                    if (${state.isValidation()}) ${state.assignValidationError('type', 'Not a function')}
+                    if (${state.isValidation()}) ${state.assignValidationError("type", "Not a function")}
                     ${state.setter} = false;
                 }
             `);
-        }, ['type', 'state', '', 'P"2!"2""/#'])));
+        }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(1, ReflectionKind.regexp, __assignType((type, state) => state.addSetter(`${state.accessor} instanceof RegExp`), ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.register(2, ReflectionKind.regexp, __assignType((type, state) => state.addSetter(`'string' === typeof ${state.accessor}`), ['type', 'state', '', 'P"2!"2""/#']));
-        this.typeGuards.getRegistry(1).addPostHook(__assignType((type, state) => {
+        this.typeGuards
+            .getRegistry(1)
+            .addPostHook(__assignType((type, state) => {
             for (const validation of validationAnnotation.getAnnotations(type)) {
                 const name = validation.name;
                 const args = validation.args;
-                if (name === 'function') {
+                if (name === "function") {
                     state.setContext({ ValidationErrorItem: ValidationErrorItem });
                     assertType(args[0], ReflectionKind.function);
-                    const validatorVar = state.setVariable('validator', args[0].function);
+                    const validatorVar = state.setVariable("validator", args[0].function);
                     let optionVar = undefined;
                     if (args[1]) {
                         const optionParameter = args[0].parameters[2];
@@ -2105,7 +2250,7 @@ export class Serializer {
                     }
                     state.addCode(`
                         {
-                            let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, 'type')}, ${optionVar ? optionVar : 'undefined'});
+                            let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, "type")}, ${optionVar ? optionVar : "undefined"});
                             if (error) {
                                 ${state.setter} = false;
                                 if (state.errors) state.errors.push(new ValidationErrorItem(${collapsePath(state.path)}, error.code, error.message, ${state.originalAccessor}));
@@ -2117,10 +2262,10 @@ export class Serializer {
                     const validator = validators[name];
                     if (validator) {
                         state.setContext({ ValidationErrorItem: ValidationErrorItem });
-                        const validatorVar = state.setVariable('validator', validator(...args));
+                        const validatorVar = state.setVariable("validator", validator(...args));
                         state.addCode(`
                             {
-                                let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, 'type')});
+                                let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, "type")});
                                 if (error) {
                                     ${state.setter} = false;
                                     if (state.errors) state.errors.push(new ValidationErrorItem(${collapsePath(state.path)}, error.code, error.message, ${state.originalAccessor}));
@@ -2133,7 +2278,7 @@ export class Serializer {
         }, ['Type', 'type', () => TemplateState, 'state', '', 'P"w!2"P7#2$"/%']));
         this.typeGuards.register(1, ReflectionKind.union, handleUnion);
         this.typeGuards.registerBinary(1, __assignType((type, state) => {
-            state.addSetter(`${state.accessor} instanceof ${state.setVariable('classType', type.classType)}`);
+            state.addSetter(`${state.accessor} instanceof ${state.setVariable("classType", type.classType)}`);
         }, ['type', 'state', '', 'P"2!"2""/#']));
         this.typeGuards.registerBinary(10, __assignType((type, state) => {
             state.addSetter(`'string' === typeof ${state.accessor}`);
@@ -2168,14 +2313,13 @@ export const serializableKinds = [
     ReflectionKind.array,
     ReflectionKind.tuple,
     ReflectionKind.regexp,
-    ReflectionKind.objectLiteral,
+    ReflectionKind.objectLiteral
 ];
 export class EmptySerializer extends Serializer {
-    constructor(name = 'empty') {
+    constructor(name = "empty") {
         super(name);
     }
-    registerValidators() {
-    }
+    registerValidators() { }
     registerSerializers() {
         for (const kind of serializableKinds)
             this.serializeRegistry.register(kind, assignAccessorTemplate);
diff --git a/dist/esm/src/serializer.js.map b/dist/esm/src/serializer.js.map
index 14538894f0df75795acfd574fcd4f20098d90fd4..e79486177ba35a2a391439e9951163e0c348ea95 100644
--- a/dist/esm/src/serializer.js.map
+++ b/dist/esm/src/serializer.js.map
@@ -1 +1 @@
-{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../src/serializer.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../src/serializer.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/src/type-serialization.d.ts b/dist/esm/src/type-serialization.d.ts
index 2a793ae891fbae1f452fc2ae58c7957eca2ff863..4a0f54795589fbec07c67f3d8617ce2d2a07a9fb 100644
--- a/dist/esm/src/type-serialization.d.ts
+++ b/dist/esm/src/type-serialization.d.ts
@@ -1,4 +1,4 @@
-import { EntityOptions, ReflectionKind, ReflectionVisibility, Type } from './reflection/type.js';
+import { EntityOptions, ReflectionKind, ReflectionVisibility, TagsReflection, Type } from "./reflection/type.js";
 export interface SerializedTypeAnnotations {
     entityOptions?: EntityOptions;
     typeName?: string;
@@ -9,11 +9,12 @@ export interface SerializedTypeAnnotations {
     };
     decorators?: SerializedTypeReference[];
 }
-interface SerializedTypeObjectLiteral extends SerializedTypeAnnotations {
+export interface SerializedTypeObjectLiteral extends SerializedTypeAnnotations {
     kind: ReflectionKind.objectLiteral;
     types: SerializedTypeReference[];
+    tags?: TagsReflection;
 }
-interface SerializedTypeClassType extends SerializedTypeAnnotations {
+export interface SerializedTypeClassType extends SerializedTypeAnnotations {
     kind: ReflectionKind.class;
     name?: string;
     globalObject?: true;
@@ -22,36 +23,38 @@ interface SerializedTypeClassType extends SerializedTypeAnnotations {
     arguments?: SerializedTypeReference[];
     superClass?: SerializedTypeReference;
     types: SerializedTypeReference[];
+    tags?: TagsReflection;
 }
-interface SerializedTypeFunction extends SerializedTypeAnnotations {
+export interface SerializedTypeFunction extends SerializedTypeAnnotations {
     kind: ReflectionKind.function;
     name?: number | string | symbol;
     parameters: SerializedTypeParameter[];
     return: SerializedTypeReference;
+    tags?: TagsReflection;
 }
-type SerializedTypeReference = number;
-interface SimpleSerializedType extends SerializedTypeAnnotations {
+export type SerializedTypeReference = number;
+export interface SimpleSerializedType extends SerializedTypeAnnotations {
     kind: ReflectionKind.never | ReflectionKind.any | ReflectionKind.unknown | ReflectionKind.void | ReflectionKind.object | ReflectionKind.string | ReflectionKind.number | ReflectionKind.boolean | ReflectionKind.symbol | ReflectionKind.bigint | ReflectionKind.null | ReflectionKind.undefined | ReflectionKind.regexp;
     origin?: SerializedTypeReference;
 }
-interface SerializedTypeLiteral extends SerializedTypeAnnotations {
+export interface SerializedTypeLiteral extends SerializedTypeAnnotations {
     kind: ReflectionKind.literal;
     literal: {
-        type: 'symbol';
+        type: "symbol";
         name: string;
     } | string | number | boolean | {
-        type: 'bigint';
+        type: "bigint";
         value: string;
     } | {
-        type: 'regex';
+        type: "regex";
         regex: string;
     };
 }
-interface SerializedTypeTemplateLiteral extends SerializedTypeAnnotations {
+export interface SerializedTypeTemplateLiteral extends SerializedTypeAnnotations {
     kind: ReflectionKind.templateLiteral;
     types: SerializedTypeReference[];
 }
-interface SerializedTypeParameter extends SerializedTypeAnnotations {
+export interface SerializedTypeParameter extends SerializedTypeAnnotations {
     kind: ReflectionKind.parameter;
     name: string;
     type: SerializedTypeReference;
@@ -61,13 +64,15 @@ interface SerializedTypeParameter extends SerializedTypeAnnotations {
     /**
      * Set when the parameter has a default value aka initializer.
      */
-    default?: true;
+    default?: any;
+    tags?: TagsReflection;
 }
 export interface SerializedTypeBaseMember extends SerializedTypeAnnotations {
     visibility: ReflectionVisibility;
     abstract?: true;
     optional?: true;
     readonly?: true;
+    tags?: TagsReflection;
 }
 export interface SerializedTypeMethod extends SerializedTypeBaseMember {
     kind: ReflectionKind.method;
@@ -78,7 +83,7 @@ export interface SerializedTypeMethod extends SerializedTypeBaseMember {
     abstract?: true;
     return: SerializedTypeReference;
 }
-interface SerializedTypeProperty extends SerializedTypeBaseMember {
+export interface SerializedTypeProperty extends SerializedTypeBaseMember {
     kind: ReflectionKind.property;
     visibility: ReflectionVisibility;
     name: number | string | symbol;
@@ -90,19 +95,20 @@ interface SerializedTypeProperty extends SerializedTypeBaseMember {
     /**
      * Set when the property has a default value aka initializer.
      */
-    default?: true;
+    default?: any;
 }
-interface SerializedTypePromise extends SerializedTypeAnnotations {
+export interface SerializedTypePromise extends SerializedTypeAnnotations {
     kind: ReflectionKind.promise;
     type: SerializedTypeReference;
 }
-interface SerializedTypeEnum extends SerializedTypeAnnotations {
+export interface SerializedTypeEnum extends SerializedTypeAnnotations {
     kind: ReflectionKind.enum;
     enum: {
         [name: string]: string | number | undefined | null;
     };
     values: (string | number | undefined | null)[];
     indexType: SerializedTypeReference;
+    tags?: TagsReflection;
 }
 export interface SerializedTypeUnion extends SerializedTypeAnnotations {
     kind: ReflectionKind.union;
@@ -112,48 +118,59 @@ export interface SerializedTypeIntersection extends SerializedTypeAnnotations {
     kind: ReflectionKind.intersection;
     types: SerializedTypeReference[];
 }
-interface SerializedTypeArray extends SerializedTypeAnnotations {
+export interface SerializedTypeArray extends SerializedTypeAnnotations {
     kind: ReflectionKind.array;
     type: SerializedTypeReference;
+    tags?: TagsReflection;
 }
-interface SerializedTypeIndexSignature extends SerializedTypeAnnotations {
+export interface SerializedTypeIndexSignature extends SerializedTypeAnnotations {
     kind: ReflectionKind.indexSignature;
     index: SerializedTypeReference;
     type: SerializedTypeReference;
+    /**
+     * Set when the parameter has a default value aka initializer.
+     */
+    default?: any;
 }
-interface SerializedTypePropertySignature extends SerializedTypeAnnotations {
+export interface SerializedTypePropertySignature extends SerializedTypeAnnotations {
     kind: ReflectionKind.propertySignature;
     name: number | string | symbol;
     optional?: true;
     readonly?: true;
     description?: string;
     type: SerializedTypeReference;
+    /**
+     * Set when the parameter has a default value aka initializer.
+     */
+    default?: any;
+    tags?: TagsReflection;
 }
-interface SerializedTypeMethodSignature extends SerializedTypeAnnotations {
+export interface SerializedTypeMethodSignature extends SerializedTypeAnnotations {
     kind: ReflectionKind.methodSignature;
     name: number | string | symbol;
     optional?: true;
     parameters: SerializedTypeParameter[];
     return: SerializedTypeReference;
+    tags?: TagsReflection;
 }
 export interface SerializedTypeTypeParameter extends SerializedTypeAnnotations {
     kind: ReflectionKind.typeParameter;
     name: string;
 }
-interface SerializedTypeInfer extends SerializedTypeAnnotations {
+export interface SerializedTypeInfer extends SerializedTypeAnnotations {
     kind: ReflectionKind.infer;
 }
-interface SerializedTypeTupleMember extends SerializedTypeAnnotations {
+export interface SerializedTypeTupleMember extends SerializedTypeAnnotations {
     kind: ReflectionKind.tupleMember;
     type: SerializedTypeReference;
     optional?: true;
     name?: string;
 }
-interface SerializedTypeTuple extends SerializedTypeAnnotations {
+export interface SerializedTypeTuple extends SerializedTypeAnnotations {
     kind: ReflectionKind.tuple;
     types: SerializedTypeTupleMember[];
 }
-interface SerializedTypeRest extends SerializedTypeAnnotations {
+export interface SerializedTypeRest extends SerializedTypeAnnotations {
     kind: ReflectionKind.rest;
     type: SerializedTypeReference;
 }
@@ -182,11 +199,30 @@ interface DeserializeState {
 export declare function deserializeType(types?: SerializedTypes, state?: Partial<DeserializeState>): Type;
 export {};
 export declare type __ΩSerializedTypeAnnotations = any[];
+export declare type __ΩSerializedTypeObjectLiteral = any[];
+export declare type __ΩSerializedTypeClassType = any[];
+export declare type __ΩSerializedTypeFunction = any[];
+export declare type __ΩSerializedTypeReference = any[];
+export declare type __ΩSimpleSerializedType = any[];
+export declare type __ΩSerializedTypeLiteral = any[];
+export declare type __ΩSerializedTypeTemplateLiteral = any[];
+export declare type __ΩSerializedTypeParameter = any[];
 export declare type __ΩSerializedTypeBaseMember = any[];
 export declare type __ΩSerializedTypeMethod = any[];
+export declare type __ΩSerializedTypeProperty = any[];
+export declare type __ΩSerializedTypePromise = any[];
+export declare type __ΩSerializedTypeEnum = any[];
 export declare type __ΩSerializedTypeUnion = any[];
 export declare type __ΩSerializedTypeIntersection = any[];
+export declare type __ΩSerializedTypeArray = any[];
+export declare type __ΩSerializedTypeIndexSignature = any[];
+export declare type __ΩSerializedTypePropertySignature = any[];
+export declare type __ΩSerializedTypeMethodSignature = any[];
 export declare type __ΩSerializedTypeTypeParameter = any[];
+export declare type __ΩSerializedTypeInfer = any[];
+export declare type __ΩSerializedTypeTupleMember = any[];
+export declare type __ΩSerializedTypeTuple = any[];
+export declare type __ΩSerializedTypeRest = any[];
 export declare type __ΩSerializedType = any[];
 export declare type __ΩSerializedTypes = any[];
 export declare type __ΩSerializerState = any[];
diff --git a/dist/esm/src/type-serialization.js b/dist/esm/src/type-serialization.js
index 536ffe5619002c30bd1f84cd5712e7e24eeee45a..798af54f7f23d75a4fbe543be94addd18bed4c5f 100644
--- a/dist/esm/src/type-serialization.js
+++ b/dist/esm/src/type-serialization.js
@@ -1,52 +1,73 @@
 const __ΩPartial = ['T', 'Partial', 'l+e#!e"!fRb!Pde"!gN#"w"y'];
 /*@ts-ignore*/
-import { __ΩTypeClass } from './reflection/type.js';
+import { __ΩTypeClass } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩTypeObjectLiteral } from './reflection/type.js';
+import { __ΩTypeObjectLiteral } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩEntityOptions } from './reflection/type.js';
+import { __ΩEntityOptions } from "./reflection/type.js";
 /*@ts-ignore*/
-import { __ΩReflectionVisibility } from './reflection/type.js';
+import { __ΩTagsReflection } from "./reflection/type.js";
+/*@ts-ignore*/
+import { __ΩReflectionVisibility } from "./reflection/type.js";
 function __assignType(fn, args) {
     fn.__type = args;
     return fn;
 }
-import { entityAnnotation, findMember, isSameType, isTypeIncluded, isWithAnnotations, ReflectionKind, typeDecorators } from './reflection/type.js';
-import { getClassName, getParentClass } from '@deepkit/core';
-import { reflect, ReflectionClass, typeOf } from './reflection/reflection.js';
-import { typeSettings } from './core.js';
-import { regExpFromString } from './utils.js';
+import { getClassName, getParentClass } from "@deepkit/core";
+import { typeSettings } from "./core.js";
+import { reflect, ReflectionClass, typeOf } from "./reflection/reflection.js";
+import { entityAnnotation, findMember, isSameType, isTypeIncluded, isWithAnnotations, ReflectionKind, typeDecorators } from "./reflection/type.js";
+import { regExpFromString } from "./utils.js";
 const __ΩSerializedTypeAnnotations = [() => __ΩEntityOptions, 'entityOptions', 'typeName', () => __ΩSerializedTypeReference, 'typeArguments', () => __ΩSerializedTypeReference, 'container', () => __ΩSerializedTypeReference, 'index', 'indexAccessOrigin', () => __ΩSerializedTypeReference, 'decorators', 'SerializedTypeAnnotations', 'Pn!4"8&4#8n$F4%8Pn&4\'n(4)M4*8n+F4,8Mw-y'];
 export { __ΩSerializedTypeAnnotations as __ΩSerializedTypeAnnotations };
-const __ΩSerializedTypeObjectLiteral = [() => __ΩSerializedTypeAnnotations, 30, 'kind', () => __ΩSerializedTypeReference, 'types', 'SerializedTypeObjectLiteral', 'Pn!a"4#n$F4%Mw&y'];
-const __ΩSerializedTypeClassType = [() => __ΩSerializedTypeAnnotations, 20, 'kind', 'name', true, 'globalObject', 'classType', () => __ΩSerializedTypeReference, 'extendsArguments', () => __ΩSerializedTypeReference, 'arguments', () => __ΩSerializedTypeReference, 'superClass', () => __ΩSerializedTypeReference, 'types', 'SerializedTypeClassType', 'Pn!a"4#&4$8.%4&8&4\'n(F4)8n*F4+8n,4-8n.F4/Mw0y'];
-const __ΩSerializedTypeFunction = [() => __ΩSerializedTypeAnnotations, 17, 'kind', 'name', () => __ΩSerializedTypeParameter, 'parameters', () => __ΩSerializedTypeReference, 'return', 'SerializedTypeFunction', 'Pn!a"4#P\'&+J4$8n%F4&n\'4(Mw)y'];
+const __ΩSerializedTypeObjectLiteral = [() => __ΩSerializedTypeAnnotations, 30, 'kind', () => __ΩSerializedTypeReference, 'types', () => __ΩTagsReflection, 'tags', 'SerializedTypeObjectLiteral', 'Pn!a"4#n$F4%n&4\'8Mw(y'];
+export { __ΩSerializedTypeObjectLiteral as __ΩSerializedTypeObjectLiteral };
+const __ΩSerializedTypeClassType = [() => __ΩSerializedTypeAnnotations, 20, 'kind', 'name', true, 'globalObject', 'classType', () => __ΩSerializedTypeReference, 'extendsArguments', () => __ΩSerializedTypeReference, 'arguments', () => __ΩSerializedTypeReference, 'superClass', () => __ΩSerializedTypeReference, 'types', () => __ΩTagsReflection, 'tags', 'SerializedTypeClassType', 'Pn!a"4#&4$8.%4&8&4\'n(F4)8n*F4+8n,4-8n.F4/n0418Mw2y'];
+export { __ΩSerializedTypeClassType as __ΩSerializedTypeClassType };
+const __ΩSerializedTypeFunction = [() => __ΩSerializedTypeAnnotations, 17, 'kind', 'name', () => __ΩSerializedTypeParameter, 'parameters', () => __ΩSerializedTypeReference, 'return', () => __ΩTagsReflection, 'tags', 'SerializedTypeFunction', 'Pn!a"4#P\'&+J4$8n%F4&n\'4(n)4*8Mw+y'];
+export { __ΩSerializedTypeFunction as __ΩSerializedTypeFunction };
 const __ΩSerializedTypeReference = ['SerializedTypeReference', '\'w!y'];
+export { __ΩSerializedTypeReference as __ΩSerializedTypeReference };
 const __ΩSimpleSerializedType = [() => __ΩSerializedTypeAnnotations, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 'kind', () => __ΩSerializedTypeReference, 'origin', 'SimpleSerializedType', 'Pn!Pa"a#a$a%a&a\'a(a)a*a+a,a-a.J4/n0418Mw2y'];
+export { __ΩSimpleSerializedType as __ΩSimpleSerializedType };
 const __ΩSerializedTypeLiteral = [() => __ΩSerializedTypeAnnotations, 13, 'kind', "symbol", 'type', 'name', "bigint", 'value', "regex", 'regex', 'literal', 'SerializedTypeLiteral', 'Pn!a"4#PP.$4%&4&M&\')P.\'4%&4(MP.)4%&4*MJ4+Mw,y'];
+export { __ΩSerializedTypeLiteral as __ΩSerializedTypeLiteral };
 const __ΩSerializedTypeTemplateLiteral = [() => __ΩSerializedTypeAnnotations, 14, 'kind', () => __ΩSerializedTypeReference, 'types', 'SerializedTypeTemplateLiteral', 'Pn!a"4#n$F4%Mw&y'];
-const __ΩSerializedTypeParameter = [() => __ΩSerializedTypeAnnotations, 18, 'kind', 'name', () => __ΩSerializedTypeReference, 'type', () => __ΩReflectionVisibility, 'visibility', true, 'readonly', true, 'optional', true, 'default', 'SerializedTypeParameter', 'Pn!a"4#&4$n%4&n\'4(8.)4*8.+4,8.-4.8Mw/y'];
-const __ΩSerializedTypeBaseMember = [() => __ΩSerializedTypeAnnotations, () => __ΩReflectionVisibility, 'visibility', true, 'abstract', true, 'optional', true, 'readonly', 'SerializedTypeBaseMember', 'Pn!n"4#.$4%8.&4\'8.(4)8Mw*y'];
+export { __ΩSerializedTypeTemplateLiteral as __ΩSerializedTypeTemplateLiteral };
+const __ΩSerializedTypeParameter = [() => __ΩSerializedTypeAnnotations, 18, 'kind', 'name', () => __ΩSerializedTypeReference, 'type', () => __ΩReflectionVisibility, 'visibility', true, 'readonly', true, 'optional', 'default', () => __ΩTagsReflection, 'tags', 'SerializedTypeParameter', 'Pn!a"4#&4$n%4&n\'4(8.)4*8.+4,8"4-8n.4/8Mw0y'];
+export { __ΩSerializedTypeParameter as __ΩSerializedTypeParameter };
+const __ΩSerializedTypeBaseMember = [() => __ΩSerializedTypeAnnotations, () => __ΩReflectionVisibility, 'visibility', true, 'abstract', true, 'optional', true, 'readonly', () => __ΩTagsReflection, 'tags', 'SerializedTypeBaseMember', 'Pn!n"4#.$4%8.&4\'8.(4)8n*4+8Mw,y'];
 export { __ΩSerializedTypeBaseMember as __ΩSerializedTypeBaseMember };
 const __ΩSerializedTypeMethod = [() => __ΩSerializedTypeBaseMember, 16, 'kind', () => __ΩReflectionVisibility, 'visibility', 'name', () => __ΩSerializedTypeParameter, 'parameters', true, 'optional', true, 'abstract', () => __ΩSerializedTypeReference, 'return', 'SerializedTypeMethod', 'Pn!a"4#n$4%P\'&+J4&n\'F4(.)4*8.+4,8n-4.Mw/y'];
 export { __ΩSerializedTypeMethod as __ΩSerializedTypeMethod };
-const __ΩSerializedTypeProperty = [() => __ΩSerializedTypeBaseMember, 15, 'kind', () => __ΩReflectionVisibility, 'visibility', 'name', true, 'optional', true, 'readonly', true, 'abstract', 'description', () => __ΩSerializedTypeReference, 'type', true, 'default', 'SerializedTypeProperty', 'Pn!a"4#n$4%P\'&+J4&.\'4(8.)4*8.+4,8&4-8n.4/.0418Mw2y'];
+const __ΩSerializedTypeProperty = [() => __ΩSerializedTypeBaseMember, 15, 'kind', () => __ΩReflectionVisibility, 'visibility', 'name', true, 'optional', true, 'readonly', true, 'abstract', 'description', () => __ΩSerializedTypeReference, 'type', 'default', 'SerializedTypeProperty', 'Pn!a"4#n$4%P\'&+J4&.\'4(8.)4*8.+4,8&4-8n.4/"408Mw1y'];
+export { __ΩSerializedTypeProperty as __ΩSerializedTypeProperty };
 const __ΩSerializedTypePromise = [() => __ΩSerializedTypeAnnotations, 19, 'kind', () => __ΩSerializedTypeReference, 'type', 'SerializedTypePromise', 'Pn!a"4#n$4%Mw&y'];
-const __ΩSerializedTypeEnum = [() => __ΩSerializedTypeAnnotations, 22, 'kind', 'enum', 'values', () => __ΩSerializedTypeReference, 'indexType', 'SerializedTypeEnum', 'Pn!a"4#P&P&\'-,JLM4$P&\'-,JF4%n&4\'Mw(y'];
+export { __ΩSerializedTypePromise as __ΩSerializedTypePromise };
+const __ΩSerializedTypeEnum = [() => __ΩSerializedTypeAnnotations, 22, 'kind', 'enum', 'values', () => __ΩSerializedTypeReference, 'indexType', () => __ΩTagsReflection, 'tags', 'SerializedTypeEnum', 'Pn!a"4#P&P&\'-,JLM4$P&\'-,JF4%n&4\'n(4)8Mw*y'];
+export { __ΩSerializedTypeEnum as __ΩSerializedTypeEnum };
 const __ΩSerializedTypeUnion = [() => __ΩSerializedTypeAnnotations, 23, 'kind', () => __ΩSerializedTypeReference, 'types', 'SerializedTypeUnion', 'Pn!a"4#n$F4%Mw&y'];
 export { __ΩSerializedTypeUnion as __ΩSerializedTypeUnion };
 const __ΩSerializedTypeIntersection = [() => __ΩSerializedTypeAnnotations, 24, 'kind', () => __ΩSerializedTypeReference, 'types', 'SerializedTypeIntersection', 'Pn!a"4#n$F4%Mw&y'];
 export { __ΩSerializedTypeIntersection as __ΩSerializedTypeIntersection };
-const __ΩSerializedTypeArray = [() => __ΩSerializedTypeAnnotations, 25, 'kind', () => __ΩSerializedTypeReference, 'type', 'SerializedTypeArray', 'Pn!a"4#n$4%Mw&y'];
-const __ΩSerializedTypeIndexSignature = [() => __ΩSerializedTypeAnnotations, 31, 'kind', () => __ΩSerializedTypeReference, 'index', () => __ΩSerializedTypeReference, 'type', 'SerializedTypeIndexSignature', 'Pn!a"4#n$4%n&4\'Mw(y'];
-const __ΩSerializedTypePropertySignature = [() => __ΩSerializedTypeAnnotations, 32, 'kind', 'name', true, 'optional', true, 'readonly', 'description', () => __ΩSerializedTypeReference, 'type', 'SerializedTypePropertySignature', 'Pn!a"4#P\'&+J4$.%4&8.\'4(8&4)8n*4+Mw,y'];
-const __ΩSerializedTypeMethodSignature = [() => __ΩSerializedTypeAnnotations, 33, 'kind', 'name', true, 'optional', () => __ΩSerializedTypeParameter, 'parameters', () => __ΩSerializedTypeReference, 'return', 'SerializedTypeMethodSignature', 'Pn!a"4#P\'&+J4$.%4&8n\'F4(n)4*Mw+y'];
+const __ΩSerializedTypeArray = [() => __ΩSerializedTypeAnnotations, 25, 'kind', () => __ΩSerializedTypeReference, 'type', () => __ΩTagsReflection, 'tags', 'SerializedTypeArray', 'Pn!a"4#n$4%n&4\'8Mw(y'];
+export { __ΩSerializedTypeArray as __ΩSerializedTypeArray };
+const __ΩSerializedTypeIndexSignature = [() => __ΩSerializedTypeAnnotations, 31, 'kind', () => __ΩSerializedTypeReference, 'index', () => __ΩSerializedTypeReference, 'type', 'default', 'SerializedTypeIndexSignature', 'Pn!a"4#n$4%n&4\'"4(8Mw)y'];
+export { __ΩSerializedTypeIndexSignature as __ΩSerializedTypeIndexSignature };
+const __ΩSerializedTypePropertySignature = [() => __ΩSerializedTypeAnnotations, 32, 'kind', 'name', true, 'optional', true, 'readonly', 'description', () => __ΩSerializedTypeReference, 'type', 'default', () => __ΩTagsReflection, 'tags', 'SerializedTypePropertySignature', 'Pn!a"4#P\'&+J4$.%4&8.\'4(8&4)8n*4+"4,8n-4.8Mw/y'];
+export { __ΩSerializedTypePropertySignature as __ΩSerializedTypePropertySignature };
+const __ΩSerializedTypeMethodSignature = [() => __ΩSerializedTypeAnnotations, 33, 'kind', 'name', true, 'optional', () => __ΩSerializedTypeParameter, 'parameters', () => __ΩSerializedTypeReference, 'return', () => __ΩTagsReflection, 'tags', 'SerializedTypeMethodSignature', 'Pn!a"4#P\'&+J4$.%4&8n\'F4(n)4*n+4,8Mw-y'];
+export { __ΩSerializedTypeMethodSignature as __ΩSerializedTypeMethodSignature };
 const __ΩSerializedTypeTypeParameter = [() => __ΩSerializedTypeAnnotations, 21, 'kind', 'name', 'SerializedTypeTypeParameter', 'Pn!a"4#&4$Mw%y'];
 export { __ΩSerializedTypeTypeParameter as __ΩSerializedTypeTypeParameter };
 const __ΩSerializedTypeInfer = [() => __ΩSerializedTypeAnnotations, 34, 'kind', 'SerializedTypeInfer', 'Pn!a"4#Mw$y'];
+export { __ΩSerializedTypeInfer as __ΩSerializedTypeInfer };
 const __ΩSerializedTypeTupleMember = [() => __ΩSerializedTypeAnnotations, 27, 'kind', () => __ΩSerializedTypeReference, 'type', true, 'optional', 'name', 'SerializedTypeTupleMember', 'Pn!a"4#n$4%.&4\'8&4(8Mw)y'];
+export { __ΩSerializedTypeTupleMember as __ΩSerializedTypeTupleMember };
 const __ΩSerializedTypeTuple = [() => __ΩSerializedTypeAnnotations, 26, 'kind', () => __ΩSerializedTypeTupleMember, 'types', 'SerializedTypeTuple', 'Pn!a"4#n$F4%Mw&y'];
+export { __ΩSerializedTypeTuple as __ΩSerializedTypeTuple };
 const __ΩSerializedTypeRest = [() => __ΩSerializedTypeAnnotations, 29, 'kind', () => __ΩSerializedTypeReference, 'type', 'SerializedTypeRest', 'Pn!a"4#n$4%Mw&y'];
+export { __ΩSerializedTypeRest as __ΩSerializedTypeRest };
 const __ΩSerializedType = [() => __ΩSimpleSerializedType, () => __ΩSerializedTypeLiteral, () => __ΩSerializedTypeTemplateLiteral, () => __ΩSerializedTypeParameter, () => __ΩSerializedTypeFunction, () => __ΩSerializedTypeMethod, () => __ΩSerializedTypeProperty, () => __ΩSerializedTypePromise, () => __ΩSerializedTypeClassType, () => __ΩSerializedTypeEnum, () => __ΩSerializedTypeUnion, () => __ΩSerializedTypeIntersection, () => __ΩSerializedTypeArray, () => __ΩSerializedTypeObjectLiteral, () => __ΩSerializedTypeIndexSignature, () => __ΩSerializedTypePropertySignature, () => __ΩSerializedTypeMethodSignature, () => __ΩSerializedTypeTypeParameter, () => __ΩSerializedTypeInfer, () => __ΩSerializedTypeTuple, () => __ΩSerializedTypeTupleMember, () => __ΩSerializedTypeRest, 'SerializedType', 'Pn!n"n#n$n%n&n\'n(n)n*n+n,n-n.n/n0n1n2n3n4n5n6Jw7y'];
 export { __ΩSerializedType as __ΩSerializedType };
 const __ΩSerializedTypes = [() => __ΩSerializedType, 'SerializedTypes', 'n!Fw"y'];
@@ -63,7 +84,9 @@ isWithSerializedAnnotations.__type = ['type', 'isWithSerializedAnnotations', 'P"
 const __ΩSerializerState = [() => __ΩSerializedTypes, 'types', true, 'disableMethods', 'Type', 'refs', 'SerializerState', 'Pn!4".#4$8"w%\'E4&Mw\'y'];
 export { __ΩSerializerState as __ΩSerializerState };
 function filterRemoveFunctions(v) {
-    return v.kind !== ReflectionKind.function && v.kind !== ReflectionKind.method && v.kind !== ReflectionKind.methodSignature;
+    return (v.kind !== ReflectionKind.function &&
+        v.kind !== ReflectionKind.method &&
+        v.kind !== ReflectionKind.methodSignature);
 }
 filterRemoveFunctions.__type = ['Type', 'v', 'filterRemoveFunctions', 'P"w!2")/#'];
 function exportEntityOptions(type, result) {
@@ -112,7 +135,8 @@ function assignEntityOptions(type, serialized) {
     if (serialized.entityOptions.collection !== undefined)
         entity.collection = serialized.entityOptions.collection;
     if (serialized.entityOptions.singleTableInheritance !== undefined)
-        entity.singleTableInheritance = serialized.entityOptions.singleTableInheritance;
+        entity.singleTableInheritance =
+            serialized.entityOptions.singleTableInheritance;
     if (serialized.entityOptions.indexes !== undefined)
         entity.indexes = serialized.entityOptions.indexes;
     entityAnnotation.replaceType(type, [entity]);
@@ -131,7 +155,8 @@ function serialize(type, state) {
     if (type.decorators)
         result.decorators = type.decorators.map(__assignType(v => serialize(v, state), ['v', '', 'P"2!"/"']));
     if (type.typeArguments)
-        result.typeArguments = type.typeArguments.map(__assignType(v => serialize(v, state), ['v', '', 'P"2!"/"']));
+        result.typeArguments =
+            type.typeArguments.map(__assignType(v => serialize(v, state), ['v', '', 'P"2!"/"']));
     if (type.indexAccessOrigin)
         result.indexAccessOrigin = {
             index: serialize(type.indexAccessOrigin.index, state),
@@ -139,34 +164,39 @@ function serialize(type, state) {
         };
     switch (type.kind) {
         case ReflectionKind.objectLiteral: {
-            if (type.typeName && type.typeName.startsWith('Type')) {
+            if (type.typeName && type.typeName.startsWith("Type")) {
                 //make sure that Type types are not serialized, as they are way too expensive and
                 //there is no need to actually serialize them.
                 const typeType = typeOf([], ['Type', '"w!']);
-                if (typeType.kind === ReflectionKind.union && isTypeIncluded(typeType.types, type)) {
+                if (typeType.kind === ReflectionKind.union &&
+                    isTypeIncluded(typeType.types, type)) {
                     Object.assign(result, {
-                        kind: ReflectionKind.any,
+                        kind: ReflectionKind.any
                     });
                     break;
                 }
             }
-            const types = state.disableMethods ? type.types.filter(filterRemoveFunctions) : type.types;
+            const types = state.disableMethods
+                ? type.types.filter(filterRemoveFunctions)
+                : type.types;
             Object.assign(result, {
                 kind: ReflectionKind.objectLiteral,
                 types: types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])),
+                tags: type.tags
             });
             exportEntityOptions(type, result);
             break;
         }
         case ReflectionKind.class: {
-            const types = state.disableMethods ? type.types.filter(filterRemoveFunctions) : type.types;
+            const types = state.disableMethods
+                ? type.types.filter(filterRemoveFunctions)
+                : type.types;
             const parent = getParentClass(type.classType);
             let superClass = undefined;
             try {
                 superClass = parent ? serialize(reflect(parent), state) : undefined;
             }
-            catch {
-            }
+            catch { }
             const classType = getClassName(type.classType);
             const globalObject = envGlobal && envGlobal[classType] === type.classType;
             Object.assign(result, {
@@ -175,9 +205,14 @@ function serialize(type, state) {
                 name: ReflectionClass.from(type.classType).name,
                 globalObject: globalObject ? true : undefined,
                 classType,
-                arguments: type.arguments ? type.arguments.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])) : undefined,
-                extendsArguments: type.extendsArguments ? type.extendsArguments.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])) : undefined,
+                arguments: type.arguments
+                    ? type.arguments.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"']))
+                    : undefined,
+                extendsArguments: type.extendsArguments
+                    ? type.extendsArguments.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"']))
+                    : undefined,
                 superClass,
+                tags: type.tags
             });
             exportEntityOptions(type, result);
             break;
@@ -185,50 +220,60 @@ function serialize(type, state) {
         case ReflectionKind.literal: {
             Object.assign(result, {
                 kind: ReflectionKind.literal,
-                literal: 'symbol' === typeof type.literal ? { type: 'symbol', name: type.literal.toString().slice(7, -1) } :
-                    'bigint' === typeof type.literal ? { type: 'bigint', value: String(type.literal) } :
-                        type.literal instanceof RegExp ? { type: 'regex', regex: String(type.literal) } :
-                            type.literal
+                literal: "symbol" === typeof type.literal
+                    ? { type: "symbol", name: type.literal.toString().slice(7, -1) }
+                    : "bigint" === typeof type.literal
+                        ? { type: "bigint", value: String(type.literal) }
+                        : type.literal instanceof RegExp
+                            ? { type: "regex", regex: String(type.literal) }
+                            : type.literal
             });
             break;
         }
         case ReflectionKind.tuple: {
             Object.assign(result, {
                 kind: ReflectionKind.tuple,
-                types: type.types.map(__assignType(member => ({ ...member, jit: undefined, parent: undefined, type: serialize(member.type, state) }), ['member', '', 'P"2!"/"'])),
+                types: type.types.map(__assignType(member => ({
+                    ...member,
+                    jit: undefined,
+                    parent: undefined,
+                    type: serialize(member.type, state)
+                }), ['member', '', 'P"2!"/"']))
             });
             break;
         }
         case ReflectionKind.union: {
-            if (type.typeName && type.typeName.startsWith('Type')) {
+            if (type.typeName && type.typeName.startsWith("Type")) {
                 //make sure that Type types are not serialized, as they are way too expensive and
                 //there is no need to actually serialize them.
                 const typeType = typeOf([], ['Type', '"w!']);
                 if (isSameType(typeType, type)) {
                     Object.assign(result, {
-                        kind: ReflectionKind.any,
+                        kind: ReflectionKind.any
                     });
                     break;
                 }
             }
-            const types = state.disableMethods ? type.types.filter(filterRemoveFunctions) : type.types;
+            const types = state.disableMethods
+                ? type.types.filter(filterRemoveFunctions)
+                : type.types;
             Object.assign(result, {
                 kind: ReflectionKind.union,
-                types: types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])),
+                types: types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"']))
             });
             break;
         }
         case ReflectionKind.intersection: {
             Object.assign(result, {
                 kind: ReflectionKind.intersection,
-                types: type.types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])),
+                types: type.types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"']))
             });
             break;
         }
         case ReflectionKind.templateLiteral: {
             Object.assign(result, {
                 kind: ReflectionKind.templateLiteral,
-                types: type.types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"'])),
+                types: type.types.map(__assignType(member => serialize(member, state), ['member', '', 'P"2!"/"']))
             });
             break;
         }
@@ -256,7 +301,8 @@ function serialize(type, state) {
                     type: serialize(v.type, state),
                     default: v.default !== undefined ? true : undefined
                 }), ['v', '', 'P"2!"/"'])),
-                return: serialize(type.return, state)
+                return: serialize(type.return, state),
+                tags: type.tags
             });
             break;
         }
@@ -276,7 +322,8 @@ function serialize(type, state) {
                     type: serialize(v.type, state),
                     default: v.default !== undefined ? true : undefined
                 }), ['v', '', 'P"2!"/"'])),
-                return: serialize(type.return, state)
+                return: serialize(type.return, state),
+                tags: type.tags
             });
             break;
         }
@@ -305,7 +352,7 @@ function serialize(type, state) {
                 ...type,
                 jit: undefined,
                 parent: undefined,
-                type: serialize(type.type, state),
+                type: serialize(type.type, state)
             });
             break;
         }
@@ -314,8 +361,7 @@ function serialize(type, state) {
                 ...type,
                 jit: undefined,
                 parent: undefined,
-                default: type.default !== undefined ? true : undefined,
-                type: serialize(type.type, state),
+                type: serialize(type.type, state)
             });
             break;
         }
@@ -323,20 +369,21 @@ function serialize(type, state) {
             Object.assign(result, {
                 kind: ReflectionKind.array,
                 type: serialize(type.type, state),
+                tags: type.tags
             });
             break;
         }
         case ReflectionKind.promise: {
             Object.assign(result, {
                 kind: ReflectionKind.promise,
-                type: serialize(type.type, state),
+                type: serialize(type.type, state)
             });
             break;
         }
         case ReflectionKind.rest: {
             Object.assign(result, {
                 kind: ReflectionKind.rest,
-                type: serialize(type.type, state),
+                type: serialize(type.type, state)
             });
             break;
         }
@@ -345,6 +392,7 @@ function serialize(type, state) {
                 kind: ReflectionKind.indexSignature,
                 index: serialize(type.index, state),
                 type: serialize(type.type, state),
+                default: type.default
             });
             break;
         }
@@ -354,6 +402,7 @@ function serialize(type, state) {
                 enum: type.enum,
                 values: type.values,
                 indexType: serialize(type.indexType, state),
+                tags: type.tags
             });
             break;
         }
@@ -366,7 +415,7 @@ serialize.__type = ['Type', 'type', () => __ΩSerializerState, 'state', () => __
  */
 export function serializeType(type, state = {}) {
     const types = [];
-    const serializedState = { types, refs: new Map, ...state };
+    const serializedState = { types, refs: new Map(), ...state };
     serialize(type, serializedState);
     return types;
 }
@@ -376,7 +425,7 @@ const __ΩDeserializeState = [() => __ΩSerializedTypes, 'types', 'disableReuse'
  * @reflection never
  */
 function deserialize(type, state, parent) {
-    if ('number' === typeof type) {
+    if ("number" === typeof type) {
         if (!state.types[type])
             return { kind: ReflectionKind.unknown };
         const typeState = state.deserialized[type];
@@ -416,7 +465,8 @@ function deserialize(type, state, parent) {
         case ReflectionKind.objectLiteral: {
             Object.assign(result, {
                 kind: ReflectionKind.objectLiteral,
-                types: type.types.map(v => deserialize(v, state, result))
+                types: type.types.map(v => deserialize(v, state, result)),
+                tags: type.tags
             });
             assignEntityOptions(result, type);
             break;
@@ -429,11 +479,17 @@ function deserialize(type, state, parent) {
                     break;
                 }
             }
-            const newClass = !type.globalObject && state.disableReuse === true || (!type.name || !typeSettings.registeredEntities[type.name]);
-            const args = type.arguments ? type.arguments.map(v => deserialize(v, state, result)) : undefined;
-            const extendsArguments = type.extendsArguments ? type.extendsArguments.map(v => deserialize(v, state, result)) : undefined;
+            const newClass = (!type.globalObject && state.disableReuse === true) ||
+                !type.name ||
+                !typeSettings.registeredEntities[type.name];
+            const args = type.arguments
+                ? type.arguments.map(v => deserialize(v, state, result))
+                : undefined;
+            const extendsArguments = type.extendsArguments
+                ? type.extendsArguments.map(v => deserialize(v, state, result))
+                : undefined;
             const types = type.types.map(v => deserialize(v, state, result));
-            const constructor = findMember('constructor', types);
+            const constructor = findMember("constructor", types);
             const initialize = [];
             if (constructor && constructor.kind === ReflectionKind.method) {
                 for (let i = 0; i < constructor.parameters.length; i++) {
@@ -442,23 +498,33 @@ function deserialize(type, state, parent) {
                     }
                 }
             }
-            const classType = type.globalObject ? envGlobal[type.classType] : newClass
-                ? (type.superClass ? class extends deserialize(type.superClass, state).classType {
-                    constructor(...args) {
-                        super(...args);
-                        for (const init of initialize) {
-                            this[init.name] = args[init.index];
+            const classType = type.globalObject
+                ? envGlobal[type.classType]
+                : newClass
+                    ? type.superClass
+                        ? class extends deserialize(type.superClass, state)
+                            .classType {
+                            constructor(...args) {
+                                super(...args);
+                                for (const init of initialize) {
+                                    this[init.name] = args[init.index];
+                                }
+                            }
                         }
-                    }
-                } : class {
-                    constructor(...args) {
-                        for (const init of initialize) {
-                            this[init.name] = args[init.index];
+                        : class {
+                            constructor(...args) {
+                                for (const init of initialize) {
+                                    this[init.name] = args[init.index];
+                                }
+                            }
                         }
-                    }
-                }) : typeSettings.registeredEntities[type.name];
+                    : typeSettings.registeredEntities[type.name];
             if (newClass && !type.globalObject) {
-                Object.defineProperty(classType, 'name', { value: type.classType, writable: true, enumerable: false });
+                Object.defineProperty(classType, "name", {
+                    value: type.classType,
+                    writable: true,
+                    enumerable: false
+                });
                 if (!classType.__type) {
                     classType.__type = [];
                     classType.__type.__type = result;
@@ -470,6 +536,7 @@ function deserialize(type, state, parent) {
                 arguments: args,
                 extendsArguments,
                 types,
+                tags: type.tags
             });
             assignEntityOptions(result, type);
             break;
@@ -477,8 +544,19 @@ function deserialize(type, state, parent) {
         case ReflectionKind.literal: {
             Object.assign(result, {
                 kind: ReflectionKind.literal,
-                literal: 'string' === typeof type.literal ? type.literal : 'number' === typeof type.literal ? type.literal : 'boolean' === typeof type.literal ? type.literal :
-                    'symbol' === type.literal.type ? Symbol(type.literal.name) : 'bigint' === type.literal.type ? BigInt(type.literal.value) : 'regex' === type.literal.type ? regExpFromString(type.literal.regex) : false
+                literal: "string" === typeof type.literal
+                    ? type.literal
+                    : "number" === typeof type.literal
+                        ? type.literal
+                        : "boolean" === typeof type.literal
+                            ? type.literal
+                            : "symbol" === type.literal.type
+                                ? Symbol(type.literal.name)
+                                : "bigint" === type.literal.type
+                                    ? BigInt(type.literal.value)
+                                    : "regex" === type.literal.type
+                                        ? regExpFromString(type.literal.regex)
+                                        : false
             });
             break;
         }
@@ -552,7 +630,8 @@ function deserialize(type, state, parent) {
             Object.assign(result, {
                 name: type.name,
                 parameters,
-                return: deserialize(type.return, state, result)
+                return: deserialize(type.return, state, result),
+                tags: type.tags
             });
             break;
         }
@@ -560,8 +639,7 @@ function deserialize(type, state, parent) {
         case ReflectionKind.propertySignature: {
             Object.assign(result, {
                 ...type,
-                default: type.kind === ReflectionKind.property ? type.default ? () => undefined : undefined : undefined,
-                type: deserialize(type.type, state, result),
+                type: deserialize(type.type, state, result)
             });
             break;
         }
@@ -585,11 +663,14 @@ function deserialize(type, state, parent) {
                 enum: type.enum,
                 values: type.values,
                 indexType: deserialize(type.indexType, state, result),
+                tags: type.tags
             });
             break;
         }
     }
-    if (isWithSerializedAnnotations(type) && isWithAnnotations(result) && type.decorators) {
+    if (isWithSerializedAnnotations(type) &&
+        isWithAnnotations(result) &&
+        type.decorators) {
         result.annotations || (result.annotations = {});
         for (const scheduledDecorator of type.decorators) {
             for (const decorator of typeDecorators) {
diff --git a/dist/esm/src/type-serialization.js.map b/dist/esm/src/type-serialization.js.map
index b932f8a5a84c32b1d243e5c2bbcc543bc90b2d2a..2fa6847df2f691f428817396a269c4ae9be263f6 100644
--- a/dist/esm/src/type-serialization.js.map
+++ b/dist/esm/src/type-serialization.js.map
@@ -1 +1 @@
-{"version":3,"file":"type-serialization.js","sourceRoot":"","sources":["../../../src/type-serialization.ts"],"names":[],"mappings":";;6BAuBO,sBAAsB;;qCAAtB,sBAAsB;;iCAAtB,sBAAsB;;wCAAtB,sBAAsB;;;;;AAvB7B,OAAO,EACH,gBAAgB,EAEhB,UAAU,EACV,UAAU,EACV,cAAc,EACd,iBAAiB,EACjB,cAAc,EAKd,cAAc,EAWjB,MAAM,sBAAsB,CAAC;AAC9B,OAAO,EAAE,YAAY,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,MAAM,4BAA4B,CAAC;AAC9E,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AACzC,OAAO,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmN9C,MAAM,SAAS,GAAQ,OAAO,UAAU,KAAK,WAAW;IACpD,CAAC,CAAC,UAAU;IACZ,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW;QAC/B,CAAC,CAAC,MAAM;QACR,CAAC,CAAC,MAAM,CAAC;AAEb,SAAS,2BAA2B,CAAC,IAAS;IAC1C,OAAO,iBAAiB,CAAC,IAAI,CAAC,CAAC;AACnC,CAAC;;;;AAQD,SAAS,qBAAqB,CAAC,CAAO;IAClC,OAAO,CAAC,CAAC,IAAI,KAAK,cAAc,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,KAAK,cAAc,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,cAAc,CAAC,eAAe,CAAC;AAC/H,CAAC;;AAED,SAAS,mBAAmB,CAAC,IAAmC,EAAE,MAAsB;IACpF,MAAM,UAAU,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE9C,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,MAAM,gBAAgB,GAAkB,EAAE,CAAC;IAC3C,IAAI,UAAU,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;QAChC,OAAO,GAAG,IAAI,CAAC;QACf,gBAAgB,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;IAC5C,CAAC;IACD,IAAI,UAAU,CAAC,WAAW,EAAE,CAAC;QACzB,OAAO,GAAG,IAAI,CAAC;QACf,gBAAgB,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;IAC1D,CAAC;IACD,IAAI,UAAU,CAAC,kBAAkB,KAAK,SAAS,EAAE,CAAC;QAC9C,OAAO,GAAG,IAAI,CAAC;QACf,gBAAgB,CAAC,QAAQ,GAAG,UAAU,CAAC,kBAAkB,CAAC;IAC9D,CAAC;IACD,IAAI,UAAU,CAAC,cAAc,KAAK,SAAS,EAAE,CAAC;QAC1C,OAAO,GAAG,IAAI,CAAC;QACf,gBAAgB,CAAC,UAAU,GAAG,UAAU,CAAC,cAAc,CAAC;IAC5D,CAAC;IACD,IAAI,UAAU,CAAC,sBAAsB,EAAE,CAAC;QACpC,OAAO,GAAG,IAAI,CAAC;QACf,gBAAgB,CAAC,sBAAsB,GAAG,UAAU,CAAC,sBAAsB,CAAC;IAChF,CAAC;IACD,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC5B,OAAO,GAAG,IAAI,CAAC;QACf,gBAAgB,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;IAClD,CAAC;IAED,IAAI,OAAO,EAAE,CAAC;QACV,MAAM,CAAC,aAAa,GAAG,gBAAgB,CAAC;IAC5C,CAAC;AACL,CAAC;;AAED,SAAS,mBAAmB,CAAC,IAAmC,EAAE,UAA0B;IACxF,IAAI,CAAC,UAAU,CAAC,aAAa;QAAE,OAAO;IACtC,MAAM,MAAM,GAAG,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAErD,IAAI,UAAU,CAAC,aAAa,CAAC,IAAI,KAAK,SAAS;QAAE,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC;IAC7F,IAAI,UAAU,CAAC,aAAa,CAAC,WAAW,KAAK,SAAS;QAAE,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC;IAClH,IAAI,UAAU,CAAC,aAAa,CAAC,QAAQ,KAAK,SAAS;QAAE,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC;IACzG,IAAI,UAAU,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS;QAAE,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;IAC/G,IAAI,UAAU,CAAC,aAAa,CAAC,sBAAsB,KAAK,SAAS;QAAE,MAAM,CAAC,sBAAsB,GAAG,UAAU,CAAC,aAAa,CAAC,sBAAsB,CAAC;IACnJ,IAAI,UAAU,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS;QAAE,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC;IAEtG,gBAAgB,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACjD,CAAC;;AAED,SAAS,SAAS,CAAC,IAAU,EAAE,KAAsB;IACjD,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,UAAU;QAAE,OAAO,UAAU,CAAC;IAElC,MAAM,MAAM,GAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAoB,CAAC;IAErE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACrC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAE5B,IAAI,IAAI,CAAC,QAAQ;QAAE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACnD,IAAI,IAAI,CAAC,UAAU;QAAG,MAAoC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,cAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,wBAAC,CAAC;IACtH,IAAI,IAAI,CAAC,aAAa;QAAG,MAAoC,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,cAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,wBAAC,CAAC;IAC/H,IAAI,IAAI,CAAC,iBAAiB;QAAG,MAAoC,CAAC,iBAAiB,GAAG;YAClF,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC;YACrD,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,KAAK,CAAC;SAChE,CAAC;IAEF,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,KAAK,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;gBACpD,iFAAiF;gBACjF,8CAA8C;gBAC9C,MAAM,QAAQ,GAAG,MAAM,qBAAQ,CAAC;gBAChC,IAAI,QAAQ,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,IAAI,cAAc,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC;oBACjF,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;wBAClB,IAAI,EAAE,cAAc,CAAC,GAAG;qBAC3B,CAAC,CAAC;oBACH,MAAM;gBACV,CAAC;YACL,CAAC;YAED,MAAM,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;YAC3F,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,aAAa;gBAClC,KAAK,EAAE,KAAK,CAAC,GAAG,cAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,6BAAC;aACxB,CAAC,CAAC;YAClC,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAClC,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,MAAM,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;YAC3F,MAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,UAAU,GAAwC,SAAS,CAAC;YAChE,IAAI,CAAC;gBACD,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACxE,CAAC;YAAC,MAAM,CAAC;YACT,CAAC;YAED,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/C,MAAM,YAAY,GAAY,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC;YAEnF,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,KAAK;gBAC1B,KAAK,EAAE,KAAK,CAAC,GAAG,cAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,6BAAC;gBACpD,IAAI,EAAE,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI;gBAC/C,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;gBAC7C,SAAS;gBACT,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,cAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,6BAAC,CAAC,CAAC,CAAC,SAAS;gBAC9F,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,cAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,6BAAC,CAAC,CAAC,CAAC,SAAS;gBACnH,UAAU;aACc,CAAC,CAAC;YAC9B,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAClC,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,OAAO;gBAC5B,OAAO,EAAE,QAAQ,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBACxG,QAAQ,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;wBAChF,IAAI,CAAC,OAAO,YAAY,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;4BAC7E,IAAI,CAAC,OAAO;aACF,CAAC,CAAC;YAC5B,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,KAAK;gBAC1B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,cAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,6BAAC;aAEpG,CAAC,CAAC;YAC1B,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;gBACpD,iFAAiF;gBACjF,8CAA8C;gBAC9C,MAAM,QAAQ,GAAG,MAAM,qBAAQ,CAAC;gBAChC,IAAI,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC;oBAC7B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;wBAClB,IAAI,EAAE,cAAc,CAAC,GAAG;qBAC3B,CAAC,CAAC;oBACH,MAAM;gBACV,CAAC;YACL,CAAC;YAED,MAAM,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;YAC3F,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,KAAK;gBAC1B,KAAK,EAAE,KAAK,CAAC,GAAG,cAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,6BAAC;aAEhC,CAAC,CAAC;YAC1B,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,YAAY;gBACjC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,cAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,6BAAC;aAE9B,CAAC,CAAC;YACjC,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,eAAe;gBACpC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,cAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,6BAAC;aAE3B,CAAC,CAAC;YACpC,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,MAAM,CAAC;QAC3B,KAAK,cAAc,CAAC,MAAM,CAAC;QAC3B,KAAK,cAAc,CAAC,OAAO,CAAC;QAC5B,KAAK,cAAc,CAAC,MAAM,CAAC;QAC3B,KAAK,cAAc,CAAC,MAAM,CAAC;QAC3B,KAAK,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;YACzB,IAAI,IAAI,CAAC,MAAM;gBAAG,MAA+B,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YACzF,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3B,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,GAAG,cAAc,CAAC,KAAK,CAAC;gBACnC,MAAM;YACV,CAAC;YACD,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,QAAQ;gBAC7B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,cAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBAClC,GAAG,CAAC;oBACJ,GAAG,EAAE,SAAS;oBACd,MAAM,EAAE,SAAS;oBACjB,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC;oBAC9B,OAAO,EAAE,CAAC,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;iBACtD,CAAC,wBAAC;gBACH,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;aACd,CAAC,CAAC;YAC7B,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;YACzB,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,GAAG,cAAc,CAAC,KAAK,CAAC;gBACnC,MAAM;YACV,CAAC;YACD,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,GAAG,IAAI;gBACP,GAAG,EAAE,SAAS;gBACd,MAAM,EAAE,SAAS;gBACjB,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,cAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBAClC,GAAG,CAAC;oBACJ,GAAG,EAAE,SAAS;oBACd,MAAM,EAAE,SAAS;oBACjB,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC;oBAC9B,OAAO,EAAE,CAAC,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;iBAC1B,CAAA,wBAAC;gBAC9B,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;aAChB,CAAC,CAAC;YAC3B,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;YAClC,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,GAAG,cAAc,CAAC,KAAK,CAAC;gBACnC,MAAM;YACV,CAAC;YACD,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,GAAG,IAAI;gBACP,GAAG,EAAE,SAAS;gBACd,MAAM,EAAE,SAAS;gBACjB,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,cAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBAClC,GAAG,CAAC;oBACJ,GAAG,EAAE,SAAS;oBACd,MAAM,EAAE,SAAS;oBACjB,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC;oBAC9B,OAAO,EAAE,CAAC,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;iBAC1B,CAAA,wBAAC;gBAC9B,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;aACP,CAAC,CAAC;YACpC,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,GAAG,IAAI;gBACP,GAAG,EAAE,SAAS;gBACd,MAAM,EAAE,SAAS;gBACjB,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;aACD,CAAC,CAAC;YACtC,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,GAAG,IAAI;gBACP,GAAG,EAAE,SAAS;gBACd,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,IAAI,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;gBACtD,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;aACV,CAAC,CAAC;YAC7B,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,KAAK;gBAC1B,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;aACb,CAAC,CAAC;YAC1B,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,OAAO;gBAC5B,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;aACX,CAAC,CAAC;YAC5B,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,IAAI;gBACzB,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;aACd,CAAC,CAAC;YACzB,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,cAAc;gBACnC,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;gBACnC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;aACJ,CAAC,CAAC;YACnC,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,IAAI;gBACzB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;aACxB,CAAC,CAAC;YACzB,MAAM;QACV,CAAC;IACL,CAAC;IAED,OAAO,KAAK,CAAC;AACjB,CAAC;;AAED;;GAEG;AACH,MAAM,UAAU,aAAa,CAAC,IAAU,EAAE,QAAkC,EAAE;IAC1E,MAAM,KAAK,GAAoB,EAAE,CAAC;IAClC,MAAM,eAAe,GAAoB,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,GAAG,EAAE,GAAG,KAAK,EAAE,CAAC;IAC5E,SAAS,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;IACjC,OAAO,KAAK,CAAC;AACjB,CAAC;;;AAQD;;GAEG;AACH,SAAS,WAAW,CAAC,IAA8C,EAAE,KAAuB,EAAE,MAAa;IACvG,IAAI,QAAQ,KAAK,OAAO,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;YAAE,OAAO,EAAE,IAAI,EAAE,cAAc,CAAC,OAAO,EAAE,CAAC;QAChE,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,MAAM,GAAS,EAAE,IAAI,EAAE,cAAc,CAAC,OAAO,EAAE,CAAC;QAEpD,IAAI,SAAS,EAAE,CAAC;YACZ,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;gBACnB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAChC,CAAC;iBAAM,CAAC;gBACJ,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC;YAC5B,CAAC;QACL,CAAC;aAAM,CAAC;YACJ,MAAM,SAAS,GAAG,EAAE,IAAI,EAAE,MAAc,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;YACnE,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;YACrC,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;YACvD,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;YACzB,KAAK,MAAM,GAAG,IAAI,SAAS,CAAC,IAAI;gBAAE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;YACrE,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC;QAC5B,CAAC;QACD,IAAI,MAAM;YAAE,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;QAErD,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,MAAM,MAAM,GAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAU,CAAC;IAEjD,IAAI,IAAI,CAAC,QAAQ;QAAE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACnD,IAAI,IAAI,CAAC,aAAa;QAAE,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,CAAW,CAAC;IAC5G,IAAI,IAAI,CAAC,iBAAiB;QAAE,MAAM,CAAC,iBAAiB,GAAG;YACnD,KAAK,EAAE,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAS;YAC/D,SAAS,EAAE,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,KAAK,CAAkC;SACnG,CAAC;IAEF,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,KAAK,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,aAAa;gBAClC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;aACvC,CAAC,CAAC;YACxB,mBAAmB,CAAC,MAA2B,EAAE,IAAI,CAAC,CAAC;YACvD,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;gBACnC,MAAM,QAAQ,GAAG,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5D,IAAI,QAAQ,EAAE,CAAC;oBACX,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC3D,MAAM;gBACV,CAAC;YACL,CAAC;YAED,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAElI,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACjG,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC3H,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;YACjE,MAAM,WAAW,GAAG,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YACrD,MAAM,UAAU,GAAsC,EAAE,CAAC;YACzD,IAAI,WAAW,IAAI,WAAW,CAAC,IAAI,KAAK,cAAc,CAAC,MAAM,EAAE,CAAC;gBAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrD,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;wBACrD,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;oBACxE,CAAC;gBACL,CAAC;YACL,CAAC;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ;gBACtE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAM,SAAS,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAe,CAAC,SAAS;oBAC3F,YAAY,GAAG,IAAW;wBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;wBACf,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE,CAAC;4BAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACvC,CAAC;oBACL,CAAC;iBACJ,CAAC,CAAC,CAAC;oBACA,YAAY,GAAG,IAAW;wBACtB,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE,CAAC;4BAC3B,IAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAChD,CAAC;oBACL,CAAC;iBACJ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAK,CAAC,CAAC;YAErD,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;gBACjC,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;gBACvG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;oBACpB,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC;oBACtB,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrC,CAAC;YACL,CAAC;YAED,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,KAAK;gBAC1B,SAAS;gBACT,SAAS,EAAE,IAAI;gBACf,gBAAgB;gBAChB,KAAK;aACK,CAAC,CAAC;YAChB,mBAAmB,CAAC,MAAmB,EAAE,IAAI,CAAC,CAAC;YAC/C,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,OAAO;gBAC5B,OAAO,EAAE,QAAQ,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC3J,QAAQ,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK;aAC/L,CAAC,CAAC;YAClB,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,cAAc,CAAC,KAAK;gBAC1B,KAAK,EAAE,EAAE;aACC,CAAC,CAAC;YAChB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBAC9B,MAAM,kBAAkB,GAAoB;oBACxC,GAAG,MAAM;oBACT,aAAa,EAAE,SAAS;oBACxB,iBAAiB,EAAE,SAAS;oBAC5B,UAAU,EAAE,SAAS;oBACrB,MAAM,EAAE,MAAmB;oBAC3B,IAAI,EAAE,EAAE,IAAI,EAAE,cAAc,CAAC,OAAO,EAAE;iBACzC,CAAC;gBACF,kBAAkB,CAAC,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,kBAAkB,CAAC,CAAC;gBAC7E,MAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACzD,CAAC;YACD,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,eAAe,CAAC;QACpC,KAAK,cAAc,CAAC,YAAY,CAAC;QACjC,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;aACtE,CAAC,CAAC;YACH,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,MAAM,CAAC;QAC3B,KAAK,cAAc,CAAC,MAAM,CAAC;QAC3B,KAAK,cAAc,CAAC,MAAM,CAAC;QAC3B,KAAK,cAAc,CAAC,MAAM,CAAC;QAC3B,KAAK,cAAc,CAAC,MAAM,CAAC;QAC3B,KAAK,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACxB,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;oBAClB,MAAM,EAAE,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;iBAClD,CAAC,CAAC;YACP,CAAC;YACD,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,GAAG,CAAC;QACxB,KAAK,cAAc,CAAC,OAAO,CAAC;QAC5B,KAAK,cAAc,CAAC,IAAI,CAAC;QACzB,KAAK,cAAc,CAAC,SAAS,CAAC;QAC9B,KAAK,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACvB,eAAe;YACf,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,eAAe,CAAC;QACpC,KAAK,cAAc,CAAC,MAAM,CAAC;QAC3B,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3B,MAAM,UAAU,GAAoB,EAAE,CAAC;YACvC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBAC9B,MAAM,SAAS,GAAkB;oBAC7B,GAAG,CAAC;oBACJ,aAAa,EAAE,SAAS;oBACxB,iBAAiB,EAAE,SAAS;oBAC5B,UAAU,EAAE,SAAS;oBACrB,MAAM,EAAE,MAAsB;oBAC9B,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;oBAChD,IAAI,EAAE,EAAE,IAAI,EAAE,cAAc,CAAC,OAAO,EAAE;iBACzC,CAAC;gBACF,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAS,CAAC;gBAC/D,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,CAAC;YACD,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,UAAU;gBACV,MAAM,EAAE,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;aAClC,CAAC,CAAC;YACnB,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,QAAQ,CAAC;QAC7B,KAAK,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,GAAG,IAAI;gBACP,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;gBACvG,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;aAC9B,CAAC,CAAC;YACnB,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,KAAK,CAAC;QAC1B,KAAK,cAAc,CAAC,OAAO,CAAC;QAC5B,KAAK,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;aACP,CAAC,CAAC;YAC1C,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,KAAK,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;gBAC7C,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;aACxB,CAAC,CAAC;YACzB,MAAM;QACV,CAAC;QACD,KAAK,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,SAAS,EAAE,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC;aAC5C,CAAC,CAAC;YACf,MAAM;QACV,CAAC;IACL,CAAC;IAED,IAAI,2BAA2B,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;QACpF,MAAM,CAAC,WAAW,KAAlB,MAAM,CAAC,WAAW,GAAK,EAAE,EAAC;QAC1B,KAAK,MAAM,kBAAkB,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YAC/C,KAAK,MAAM,SAAS,IAAI,cAAc,EAAE,CAAC;gBACrC,MAAM,GAAG,GAAG,WAAW,CAAC,kBAAkB,EAAE,KAAK,CAAsB,CAAC;gBACxE,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;YACvC,CAAC;QACL,CAAC;IACL,CAAC;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,KAAuB,EAAE,QAAmC,EAAE;IAC1F,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,EAAE,IAAI,EAAE,cAAc,CAAC,OAAO,EAAE,CAAC;IAC1E,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,EAAE,YAAY,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;AACxE,CAAC"}
\ No newline at end of file
+{"version":3,"file":"type-serialization.js","sourceRoot":"","sources":["../../../src/type-serialization.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/tsconfig.esm.tsbuildinfo b/dist/esm/tsconfig.esm.tsbuildinfo
index b487e5d8b00f224cebe0493c54828ac8cae622b5..80edf9da5c320ca8ec2f01f50468fae97538a671 100644
--- a/dist/esm/tsconfig.esm.tsbuildinfo
+++ b/dist/esm/tsconfig.esm.tsbuildinfo
@@ -1 +1 @@
-{"fileNames":["../../../../node_modules/typescript/lib/lib.es5.d.ts","../../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../../node_modules/typescript/lib/lib.dom.d.ts","../../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../../node_modules/typescript/lib/lib.dom.asynciterable.d.ts","../../../../node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../../../node_modules/typescript/lib/lib.scripthost.d.ts","../../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../../node_modules/typescript/lib/lib.es2020.full.d.ts","../../../core/dist/cjs/src/core.d.ts","../../../core/dist/cjs/src/decorators.d.ts","../../../core/dist/cjs/src/enum.d.ts","../../../core/dist/cjs/src/iterators.d.ts","../../../core/dist/cjs/src/timer.d.ts","../../../core/dist/cjs/src/process-locker.d.ts","../../../core/dist/cjs/src/network.d.ts","../../../core/dist/cjs/src/perf.d.ts","../../../core/dist/cjs/src/compiler.d.ts","../../../core/dist/cjs/src/string.d.ts","../../../core/dist/cjs/src/emitter.d.ts","../../../core/dist/cjs/src/reactive.d.ts","../../../core/dist/cjs/src/reflection.d.ts","../../../core/dist/cjs/src/url.d.ts","../../../core/dist/cjs/src/array.d.ts","../../../core/dist/cjs/src/types.d.ts","../../../core/dist/cjs/src/buffer.d.ts","../../../core/dist/cjs/src/path.d.ts","../../../core/dist/cjs/index.d.ts","../../src/changes.ts","../../../../node_modules/buffer/index.d.ts","../../src/core.ts","../../../type-spec/dist/cjs/src/type.d.ts","../../../type-spec/dist/cjs/index.d.ts","../../src/decorator-builder.ts","../../src/reference.ts","../../src/validators.ts","../../src/serializer.ts","../../../../node_modules/@types/uuid/index.d.ts","../../src/utils.ts","../../src/typeguard.ts","../../src/validator.ts","../../src/decorator.ts","../../src/reflection/state.ts","../../src/debug.ts","../../src/reflection/processor.ts","../../src/reflection/extends.ts","../../src/reflection/type.ts","../../src/inheritance.ts","../../src/type-serialization.ts","../../src/reflection/reflection.ts","../../src/snapshot.ts","../../src/change-detector.ts","../../src/default.ts","../../src/mixin.ts","../../src/path.ts","../../src/registry.ts","../../src/serializer-facade.ts","../../src/types.ts","../../index.ts","../../../../node_modules/@types/lz-string/index.d.ts","../../../../node_modules/@types/node/compatibility/disposable.d.ts","../../../../node_modules/@types/node/compatibility/indexable.d.ts","../../../../node_modules/@types/node/compatibility/iterators.d.ts","../../../../node_modules/@types/node/compatibility/index.d.ts","../../../../node_modules/@types/node/globals.typedarray.d.ts","../../../../node_modules/@types/node/buffer.buffer.d.ts","../../../../node_modules/undici-types/header.d.ts","../../../../node_modules/undici-types/readable.d.ts","../../../../node_modules/undici-types/file.d.ts","../../../../node_modules/undici-types/fetch.d.ts","../../../../node_modules/undici-types/formdata.d.ts","../../../../node_modules/undici-types/connector.d.ts","../../../../node_modules/undici-types/client.d.ts","../../../../node_modules/undici-types/errors.d.ts","../../../../node_modules/undici-types/dispatcher.d.ts","../../../../node_modules/undici-types/global-dispatcher.d.ts","../../../../node_modules/undici-types/global-origin.d.ts","../../../../node_modules/undici-types/pool-stats.d.ts","../../../../node_modules/undici-types/pool.d.ts","../../../../node_modules/undici-types/handlers.d.ts","../../../../node_modules/undici-types/balanced-pool.d.ts","../../../../node_modules/undici-types/agent.d.ts","../../../../node_modules/undici-types/mock-interceptor.d.ts","../../../../node_modules/undici-types/mock-agent.d.ts","../../../../node_modules/undici-types/mock-client.d.ts","../../../../node_modules/undici-types/mock-pool.d.ts","../../../../node_modules/undici-types/mock-errors.d.ts","../../../../node_modules/undici-types/proxy-agent.d.ts","../../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../../node_modules/undici-types/retry-handler.d.ts","../../../../node_modules/undici-types/retry-agent.d.ts","../../../../node_modules/undici-types/api.d.ts","../../../../node_modules/undici-types/interceptors.d.ts","../../../../node_modules/undici-types/util.d.ts","../../../../node_modules/undici-types/cookies.d.ts","../../../../node_modules/undici-types/patch.d.ts","../../../../node_modules/undici-types/websocket.d.ts","../../../../node_modules/undici-types/eventsource.d.ts","../../../../node_modules/undici-types/filereader.d.ts","../../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../../node_modules/undici-types/content-type.d.ts","../../../../node_modules/undici-types/cache.d.ts","../../../../node_modules/undici-types/index.d.ts","../../../../node_modules/@types/node/globals.d.ts","../../../../node_modules/@types/node/assert.d.ts","../../../../node_modules/@types/node/assert/strict.d.ts","../../../../node_modules/@types/node/async_hooks.d.ts","../../../../node_modules/@types/node/buffer.d.ts","../../../../node_modules/@types/node/child_process.d.ts","../../../../node_modules/@types/node/cluster.d.ts","../../../../node_modules/@types/node/console.d.ts","../../../../node_modules/@types/node/constants.d.ts","../../../../node_modules/@types/node/crypto.d.ts","../../../../node_modules/@types/node/dgram.d.ts","../../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../../node_modules/@types/node/dns.d.ts","../../../../node_modules/@types/node/dns/promises.d.ts","../../../../node_modules/@types/node/domain.d.ts","../../../../node_modules/@types/node/dom-events.d.ts","../../../../node_modules/@types/node/events.d.ts","../../../../node_modules/@types/node/fs.d.ts","../../../../node_modules/@types/node/fs/promises.d.ts","../../../../node_modules/@types/node/http.d.ts","../../../../node_modules/@types/node/http2.d.ts","../../../../node_modules/@types/node/https.d.ts","../../../../node_modules/@types/node/inspector.d.ts","../../../../node_modules/@types/node/module.d.ts","../../../../node_modules/@types/node/net.d.ts","../../../../node_modules/@types/node/os.d.ts","../../../../node_modules/@types/node/path.d.ts","../../../../node_modules/@types/node/perf_hooks.d.ts","../../../../node_modules/@types/node/process.d.ts","../../../../node_modules/@types/node/punycode.d.ts","../../../../node_modules/@types/node/querystring.d.ts","../../../../node_modules/@types/node/readline.d.ts","../../../../node_modules/@types/node/readline/promises.d.ts","../../../../node_modules/@types/node/repl.d.ts","../../../../node_modules/@types/node/sea.d.ts","../../../../node_modules/@types/node/sqlite.d.ts","../../../../node_modules/@types/node/stream.d.ts","../../../../node_modules/@types/node/stream/promises.d.ts","../../../../node_modules/@types/node/stream/consumers.d.ts","../../../../node_modules/@types/node/stream/web.d.ts","../../../../node_modules/@types/node/string_decoder.d.ts","../../../../node_modules/@types/node/test.d.ts","../../../../node_modules/@types/node/timers.d.ts","../../../../node_modules/@types/node/timers/promises.d.ts","../../../../node_modules/@types/node/tls.d.ts","../../../../node_modules/@types/node/trace_events.d.ts","../../../../node_modules/@types/node/tty.d.ts","../../../../node_modules/@types/node/url.d.ts","../../../../node_modules/@types/node/util.d.ts","../../../../node_modules/@types/node/v8.d.ts","../../../../node_modules/@types/node/vm.d.ts","../../../../node_modules/@types/node/wasi.d.ts","../../../../node_modules/@types/node/worker_threads.d.ts","../../../../node_modules/@types/node/zlib.d.ts","../../../../node_modules/@types/node/index.d.ts"],"fileIdsList":[[108,150],[108,147,150],[108,149,150],[150],[108,150,155,185],[108,150,151,156,162,163,170,182,193],[108,150,151,152,162,170],[103,104,105,108,150],[108,150,153,194],[108,150,154,155,163,171],[108,150,155,182,190],[108,150,156,158,162,170],[108,149,150,157],[108,150,158,159],[108,150,162],[108,150,160,162],[108,149,150,162],[108,150,162,163,164,182,193],[108,150,162,163,164,177,182,185],[108,145,150,198],[108,145,150,158,162,165,170,182,193],[108,150,162,163,165,166,170,182,190,193],[108,150,165,167,182,190,193],[106,107,108,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],[108,150,162,168],[108,150,169,193],[108,150,158,162,170,182],[108,150,171],[108,150,172],[108,149,150,173],[108,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],[108,150,175],[108,150,176],[108,150,162,177,178],[108,150,177,179,194,196],[108,150,162,182,183,184,185],[108,150,182,184],[108,150,182,183],[108,150,185],[108,150,186],[108,147,150,182],[108,150,162,188,189],[108,150,188,189],[108,150,155,170,182,190],[108,150,191],[108,150,170,192],[108,150,165,176,193],[108,150,155,194],[108,150,182,195],[108,150,169,196],[108,150,197],[108,150,155,162,164,173,182,193,196,198],[108,150,182,199],[108,117,121,150,193],[108,117,150,182,193],[108,112,150],[108,114,117,150,190,193],[108,150,170,190],[108,150,200],[108,112,150,200],[108,114,117,150,170,193],[108,109,110,113,116,150,162,182,193],[108,117,124,150],[108,109,115,150],[108,117,138,139,150],[108,113,117,150,185,193,200],[108,138,150,200],[108,111,112,150,200],[108,117,150],[108,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,150],[108,117,132,150],[108,117,124,125,150],[108,115,117,125,126,150],[108,116,150],[108,109,112,117,150],[108,117,121,125,126,150],[108,121,150],[108,115,117,120,150,193],[108,109,114,117,124,150],[108,150,182],[108,112,117,138,150,198,200],[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,108,150],[52,108,150],[74,108,150],[71,73,75,76,77,78,79,81,82,83,84,87,88,89,91,92,93,94,95,96,97,98,99,100,108,150],[70,71,79,89,92,93,108,150],[70,108,150],[70,73,76,83,89,92,108,150],[89,108,150],[89,92,108,150],[70,92,108,150],[70,79,89,92,108,150],[70,73,89,92,108,150],[70,87,89,108,150],[70,75,84,85,86,88,89,92,108,150],[70,81,83,84,87,89,90,91,108,150],[70,75,85,87,88,92,108,150],[70,89,108,150],[70,71,79,81,82,87,89,92,108,150],[70,73,75,77,78,83,87,88,89,92,108,150],[70,73,79,89,92,108,150],[70,73,81,89,92,108,150],[79,81,83,89,92,108,150],[83,89,108,150],[80,108,150],[70,79,82,84,89,92,108,150],[70,83,89,108,150]],"fileInfos":[{"version":"e41c290ef7dd7dab3493e6cbe5909e0148edf4a8dad0271be08edec368a0f7b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"4fd3f3422b2d2a3dfd5cdd0f387b3a8ec45f006c6ea896a4cb41264c2100bb2c","affectsGlobalScope":true,"impliedFormat":1},{"version":"69e65d976bf166ce4a9e6f6c18f94d2424bf116e90837ace179610dbccad9b42","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7a3c8b952931daebdfc7a2897c53c0a1c73624593fa070e46bd537e64dcd20a","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"62bb211266ee48b2d0edf0d8d1b191f0c24fc379a82bd4c1692a082c540bc6b1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"f1e2a172204962276504466a6393426d2ca9c54894b1ad0a6c9dad867a65f876","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1305d1e76ca44e30fb8b2b8075fa522b83f60c0bcf5d4326a9d2cf79b53724f8","impliedFormat":1},"2d2f730d138ade6912bd4fed19e5c75a3e86583b34cedaca803ab6ba92f9e410","9d3032643946a4ef7baf0bb9edf42f30c25ba9228da79feef68228273aee9641","2abbb3d628f1339724c106de13d12ce02288a45d3cb9230493cb63870c529bb9","fac6ddbc83bfa1d31f4b0a42b60093b02bfd5adafb451d84bfd3314f88c0e833","743ca12939a64a2076fa4307e581ac5465dc7605ac2d3ac920d13409ad5c46c8","6494edf2dbfeb859e9f15bac22852403015e1750b4f38faa7aac66a9f6bfce14","2223005c545706fb961cff0a034c46db73e5de6a1dac8ededae914f91756de3d","738a2fdd9c4a45fd181cdbe6c08273ab3d48619427f1953a43b291447a3917c1","dff478c6deb08f527c1782e16f7f0f43fd1c9485657784c8db5aa6a7c915b6ef","7e120366e7e55879c2d553f5fccf65be0201e2d876036eb81a7ae9a77c575d15","d5d9077c9c94596545f3494ca8bba34a301e55f4ac18717d63be89250a923f4c","b7705a32ea5d02641973e63b7d9971d75c5e15b86eb1782d13172beddd9b8a61","3daaffb9f2a1707232f4e4010fb1a385567589af0ebd92754d2ded57be86922c","7a4474497db8a2d1f9f3df66a21340be32b82afcdfe68754124a0e7817afae1b","ad11ad24465c6f7823e5d663e304c02a1985c97c3488d76ce3bd70d096afd3e0","d895673753aaca60a30929a7091ffe24c64930f1cbdefd88442110945ba58361","f1d49060ba422ed8a04a9e9ca704bdf588586325148207e53cb5818d074edd06","953f809f570a5bbffbd79b112d62ba9b81fc087d5dd207394c5bc900168b3c38","c1cd135d63fceefb66a71c57a319665735fbd6cd483b03de3b124cbd2b6b2ab4",{"version":"2bc4130f217369e12cc52f16e919fa4c57573533bd798d21b9effea8326b8d27","signature":"675e716c3874127949f521c0b0cdaf915bdc6c8603182a91fa19368023f63a26"},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"117329d3d655e485c8c562857f8267947d4ee6c4c7f9e88cdd4099b8d4d53ad4","signature":"bf3c71db9b5129a4e89d63ab300db5dcf59865b2ed1ec46599280974478d19df"},"04ad7f4a76339aff3e37651d3777b1b065b19c3f5d368e44633da92b3b72ade3","bd8305ea3955dad684e52167c0c6f0bf7970cb8a9a3c9e73fc4d597120d5ec27",{"version":"9119c2aa61ee1e10e270cb6452b4e0d4ed8625e024a825e846ba7d2f60970f36","signature":"6a4836a90aaa4c1cd0c37c54b3a86118304b0712d882b05e10474cd550a0b051"},{"version":"6808648728044b53cfecd2de713e7e6170d9478ff79cbde0611bfc99280c01ee","signature":"c5bff92d878a705afaa4c8e4fc580d6f327dc10a524c3f29e8f3bfa6526df8a9"},{"version":"56d3dc3a2cce7a9dba1cfca60557f9c544c4ab281d3af79acb6c1d7ecfe3eabc","signature":"f8e577a314928a70842ef72a953646642963b37b01491fc8e6ac6d05ecccdade"},{"version":"75c0f4716f2c8b8d912321263b925567fea6a697a17e1b4a83b26fec7159a12b","signature":"3802a296c35fae6a4664a969dd6347f5f16250ff71f738eb42f6a6104c7f55e3"},{"version":"fab58e600970e66547644a44bc9918e3223aa2cbd9e8763cec004b2cfb48827e","impliedFormat":1},{"version":"241354ad210f27a8dfb2d029cedfd5f8bd9f4ef63ea32354e0773b03c89fb060","signature":"f7f321cd51fb551f4d066470d210e79e2a9421a46b6c5de87fc02bcb75969c5f"},{"version":"1dd2f1d12a412124eb51e56a34e0c0d26586467d83302cbabfc38433817af016","signature":"948a3a9c0f8e2cdb9f189d80d58c01f6860ca06c19f409df41755653a5f536e0"},{"version":"531e301b66501437feeb7bf1293c239f922e00bb2254a7bdda3895a70c4b57c2","signature":"17bc0aadbb22dfc455cbef6dba44a225446f1312f5f9d8b68d586446904af08c"},{"version":"311d67e1872fc88f327d317ff28a03844be85eadbe7f6c46158bfe04db082daf","signature":"2bf53f531a10d0c65e0ff80581c91e35238042a8fcdbd352a749db3239f5fe66"},{"version":"0b6e874ac7c9fb87799c4952011435b8b0076e4f28b69e040bb8704a8779bb13","signature":"baede161a93d0a075a764cc61f24e079380e72ad34a2a8d6b78b4593b4643f29"},{"version":"d1b511ca204df4b2d8c8a9631237575b2e389e23c3533cec038da2876d53b253","signature":"6c0d5fb372ac7ba32e66304b31d3536f0bbe2a9599e67d4ecfbee7be59d6fa2d"},{"version":"84ed12b557e3f1401d69233a45998ab5caeb89b7437be47a6b9a7e00ceff3651","signature":"5cc3f152303ec19087192e740fe949503b5ec237d53bc01eefb6872a5606fd28"},{"version":"62df1293986f0fe90cd6b395f322e11f475cebc735322f71e2135c2dc2b8e4bc","signature":"25df1fbc0261eee6fdf8f6f2849284d3e027c1cf947e5b97886cb1e31e65f64b"},{"version":"83cda386f2df57e65fe6a5271af31e0187bee96077c39747b1f1e58fa3def432","signature":"d8425fff263540ea5756cbb183e808900ed80ff82c883d631f2a8eeec6d902b9"},{"version":"6841bf60be1e3be83fcae18f8f7f1708c873ff34f0a23678ac30de7529a84fda","signature":"fb6c179fea3ee0a207cc2a7ac74fcadae7331e3eedd7a8c90f2231d74eeffaf2"},{"version":"65b221247cb9d255037a1c153ceddaf4a9a9aaf95e1d583ebec39a443138f98c","signature":"029c91ecbc1463e79270a6f5fbb135a2be5cabc0e423170c9bc7b08623076932"},{"version":"14cd1c178163f2e15668ba8a6225aac7294b1e887a7183d11ce45f5c46c9edda","signature":"f7b680228cd4b50a200944fd660defef0ea0f792d4075f154540cd8e4708d975"},{"version":"3909693964433384bc21e047b64283e979da0fb17c8b6b1fdba0d9944463de06","signature":"86cb4a7ffd778d2608bd95dab41491a61df4bd5605d342d58ab18c3331fe3404"},{"version":"e0336a1ef188982e7bec83b812717e58447446ec0ca25f2b97898ab45be0a764","signature":"ba9f99e43b4c52eab63104a34f84af4a1a468e072b947901e04c6d731121df65"},{"version":"5ae32d70b5588c623b616fcdbac6e97b006fbf0486629dc87255e3072bfe3e5e","signature":"1d3a96304dc44546f75be7a0d5991a18c5dd96679af608e99e917295271e93d1"},{"version":"15101befbe344b26c6e6018dcc883390ca72c150555ed66b1d3132c4aaa7143a","signature":"f512273c515b874795a768864d530178bf3ed4d06ae6e679c19893d7b5c7d78b"},{"version":"4f56d6e331fb56edddc45713301b688dff04fae5defe553afbc464998e0995c5","signature":"42ea987fb72f4c8267d8cca356c4fa54392b89efee45611bce960b20bfc6dfa9"},{"version":"7b5b145f480fb154170d735fcda9cc5a2aea3e158aee7a548ff2007194fe4db9","signature":"746ec452f42702f93c78e6740ddcc29d439a00771c34c57838e2c7059a89c066"},{"version":"3254a855916f9c12b518ceaa231fb62055e80b7520df1dcada37928e2cd02304","signature":"5b2aeee88a120adac456de7ca0be45b4bac8fe96199c4d009da6fedb6ec43c96"},{"version":"07002d4c369d31da3e478e3cafbf46747e8189366d45397b09afcabf87f46291","signature":"38f35d4b099e2b7d297c1d3633cd873d3b7c2ebbd57ca7b2390ea61c6c025c48"},{"version":"f8aa3e6998ebe802b0266c5900f37d67e922450dbfc5f814101f17a103653d10","signature":"c8f7be34ff957e325b674931e6b713f1a3dcb864389d5be70bdb66a08f69c4ee"},{"version":"a72d313bb91d97bca7fba7da3681cb8ee00cd2bf98d9a545727f91f0345330c9","impliedFormat":1},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"13af9e8fb6757946c48117315866177b95e554d1e773577bb6ca6e40083b6d73","affectsGlobalScope":true,"impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"d2bc987ae352271d0d615a420dcf98cc886aa16b87fb2b569358c1fe0ca0773d","affectsGlobalScope":true,"impliedFormat":1},{"version":"f550093acc8ad4f64ad1c7e96153615f3351b81919dae5473375b81e1e8f272c","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"76103716ba397bbb61f9fa9c9090dca59f39f9047cb1352b2179c5d8e7f4e8d0","impliedFormat":1},{"version":"53eac70430b30089a3a1959d8306b0f9cfaf0de75224b68ef25243e0b5ad1ca3","affectsGlobalScope":true,"impliedFormat":1},{"version":"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","impliedFormat":1},{"version":"115971d64632ea4742b5b115fb64ed04bcaae2c3c342f13d9ba7e3f9ee39c4e7","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb","impliedFormat":1},{"version":"86956cc2eb9dd371d6fab493d326a574afedebf76eef3fa7833b8e0d9b52d6f1","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"e6f5a38687bebe43a4cef426b69d34373ef68be9a6b1538ec0a371e69f309354","impliedFormat":1},{"version":"a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","impliedFormat":1},{"version":"e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1ff5a53a58e756d2661b73ba60ffe274231a4432d21f7a2d0d9e4f6aa99f4283","impliedFormat":1},{"version":"1e289f30a48126935a5d408a91129a13a59c9b0f8c007a816f9f16ef821e144e","impliedFormat":1},{"version":"2ea254f944dfe131df1264d1fb96e4b1f7d110195b21f1f5dbb68fdd394e5518","impliedFormat":1},{"version":"5135bdd72cc05a8192bd2e92f0914d7fc43ee077d1293dc622a049b7035a0afb","impliedFormat":1},{"version":"4f80de3a11c0d2f1329a72e92c7416b2f7eab14f67e92cac63bb4e8d01c6edc8","impliedFormat":1},{"version":"6d386bc0d7f3afa1d401afc3e00ed6b09205a354a9795196caed937494a713e6","impliedFormat":1},{"version":"fcc4b974b1cf7eca347490f11143ab2f5bc3c449b2073eb4d9494f6a16651e75","affectsGlobalScope":true,"impliedFormat":1},{"version":"23459c1915878a7c1e86e8bdb9c187cddd3aea105b8b1dfce512f093c969bc7e","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true,"impliedFormat":1},{"version":"5f6f1d54779d0b9ed152b0516b0958cd34889764c1190434bbf18e7a8bb884cd","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"c6b4e0a02545304935ecbf7de7a8e056a31bb50939b5b321c9d50a405b5a0bba","impliedFormat":1},{"version":"fab29e6d649aa074a6b91e3bdf2bff484934a46067f6ee97a30fcd9762ae2213","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"1cbae62b67f180291d211f0e1045fb923a8ec800cfbf9caa13223d769013dae2","impliedFormat":1},{"version":"553870e516f8c772b89f3820576152ebc70181d7994d96917bb943e37da7f8a7","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633","impliedFormat":1},{"version":"745c4240220559bd340c8aeb6e3c5270a709d3565e934dc22a69c304703956bc","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"92949391eab12082218333a61b9070996f404ad662ff488d48ebb09564963d2b","affectsGlobalScope":true,"impliedFormat":1},{"version":"bef91efa0baea5d0e0f0f27b574a8bc100ce62a6d7e70220a0d58af6acab5e89","affectsGlobalScope":true,"impliedFormat":1},{"version":"282fd2a1268a25345b830497b4b7bf5037a5e04f6a9c44c840cb605e19fea841","impliedFormat":1},{"version":"5360a27d3ebca11b224d7d3e38e3e2c63f8290cb1fcf6c3610401898f8e68bc3","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true,"impliedFormat":1},{"version":"cb094bb347d7df3380299eb69836c2c8758626ecf45917577707c03cf816b6f4","affectsGlobalScope":true,"impliedFormat":1},{"version":"f689c4237b70ae6be5f0e4180e8833f34ace40529d1acc0676ab8fb8f70457d7","impliedFormat":1},{"version":"ae25afbbf1ed5df63a177d67b9048bf7481067f1b8dc9c39212e59db94fc9fc6","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"52a8e7e8a1454b6d1b5ad428efae3870ffc56f2c02d923467f2940c454aa9aec","affectsGlobalScope":true,"impliedFormat":1},{"version":"78dc0513cc4f1642906b74dda42146bcbd9df7401717d6e89ea6d72d12ecb539","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1}],"root":[71,73,[76,79],[81,101]],"options":{"composite":true,"declaration":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"module":6,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"outDir":"./","sourceMap":true,"strict":true,"target":7},"referencedMap":[[102,1],[147,2],[148,2],[149,3],[108,4],[150,5],[151,6],[152,7],[103,1],[106,8],[104,1],[105,1],[153,9],[154,10],[155,11],[156,12],[157,13],[158,14],[159,14],[161,15],[160,16],[162,17],[163,18],[164,19],[146,20],[107,1],[165,21],[166,22],[167,23],[200,24],[168,25],[169,26],[170,27],[171,28],[172,29],[173,30],[174,31],[175,32],[176,33],[177,34],[178,34],[179,35],[180,1],[181,1],[182,36],[184,37],[183,38],[185,39],[186,40],[187,41],[188,42],[189,43],[190,44],[191,45],[192,46],[193,47],[194,48],[195,49],[196,50],[197,51],[198,52],[199,53],[80,1],[72,1],[49,1],[50,1],[10,1],[8,1],[9,1],[14,1],[13,1],[2,1],[15,1],[16,1],[17,1],[18,1],[19,1],[20,1],[21,1],[22,1],[3,1],[23,1],[24,1],[4,1],[25,1],[29,1],[26,1],[27,1],[28,1],[30,1],[31,1],[32,1],[5,1],[33,1],[34,1],[35,1],[36,1],[6,1],[40,1],[37,1],[38,1],[39,1],[41,1],[7,1],[42,1],[51,1],[47,1],[48,1],[43,1],[44,1],[45,1],[46,1],[1,1],[12,1],[11,1],[124,54],[134,55],[123,54],[144,56],[115,57],[114,58],[143,59],[137,60],[142,61],[117,62],[131,63],[116,64],[140,65],[112,66],[111,59],[141,67],[113,68],[118,69],[119,1],[122,69],[109,1],[145,70],[135,71],[126,72],[127,73],[129,74],[125,75],[128,76],[138,59],[120,77],[121,78],[130,79],[110,80],[133,71],[132,69],[136,1],[139,81],[70,82],[66,1],[68,1],[60,1],[52,1],[53,1],[62,1],[54,1],[55,1],[58,1],[69,1],[59,1],[57,1],[63,1],[64,83],[61,1],[56,1],[67,1],[65,1],[75,84],[74,1],[101,85],[94,86],[71,87],[73,87],[86,1],[76,87],[84,88],[95,89],[90,90],[96,91],[97,92],[77,93],[88,94],[87,95],[92,96],[85,1],[89,97],[98,98],[99,99],[79,100],[93,101],[91,102],[82,103],[100,104],[81,105],[83,106],[78,107]],"latestChangedDtsFile":"./index.d.ts","version":"5.7.3"}
\ No newline at end of file
+{"fileNames":["../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es5.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.asynciterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.scripthost.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.core.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.date.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.object.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.array.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.object.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.date.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.number.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.decorators.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.full.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/core.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/decorators.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/enum.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/iterators.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/timer.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/process-locker.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/network.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/perf.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/compiler.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/string.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/emitter.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/reactive.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/reflection.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/url.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/array.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/types.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/buffer.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/src/path.d.ts","../../../../../.pnpm/@deepkit+core@1.0.5_patch_hash=8c3beca4372c6a8941162780ddd0f977ef3d461c2018f0809f86f416260ba440/node_modules/@deepkit/core/dist/cjs/index.d.ts","../../src/changes.ts","../../../../../.pnpm/buffer@5.7.1/node_modules/buffer/index.d.ts","../../src/core.ts","../../src/decorator-builder.ts","../../../../../.pnpm/@deepkit+type-spec@1.0.1_patch_hash=f3c3a4fd486751022d78f17d39a5a79f493bca20b185964ca1aba41fbfc93244/node_modules/@deepkit/type-spec/dist/cjs/src/type.d.ts","../../../../../.pnpm/@deepkit+type-spec@1.0.1_patch_hash=f3c3a4fd486751022d78f17d39a5a79f493bca20b185964ca1aba41fbfc93244/node_modules/@deepkit/type-spec/dist/cjs/index.d.ts","../../src/debug.ts","../../src/reflection/state.ts","../../src/reflection/processor.ts","../../src/reflection/extends.ts","../../src/reflection/type.ts","../../src/reference.ts","../../src/validators.ts","../../src/serializer.ts","../../../../../.pnpm/@types+uuid@8.3.4/node_modules/@types/uuid/index.d.ts","../../src/utils.ts","../../src/typeguard.ts","../../src/validator.ts","../../src/decorator.ts","../../src/inheritance.ts","../../src/type-serialization.ts","../../src/reflection/reflection.ts","../../src/snapshot.ts","../../src/change-detector.ts","../../src/default.ts","../../src/mixin.ts","../../src/path.ts","../../src/registry.ts","../../src/serializer-facade.ts","../../src/types.ts","../../index.ts","../../../../../.pnpm/lz-string@1.5.0/node_modules/lz-string/typings/lz-string.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/compatibility/disposable.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/compatibility/indexable.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/compatibility/iterators.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/compatibility/index.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/globals.typedarray.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/buffer.buffer.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/header.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/readable.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/file.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/fetch.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/formdata.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/connector.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/client.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/errors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/dispatcher.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/global-dispatcher.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/global-origin.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/pool-stats.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/handlers.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/balanced-pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-interceptor.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-client.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-errors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/proxy-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/env-http-proxy-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/retry-handler.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/retry-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/api.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/interceptors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/util.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/cookies.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/patch.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/websocket.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/eventsource.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/filereader.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/diagnostics-channel.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/content-type.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/cache.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/index.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/globals.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/assert.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/assert/strict.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/async_hooks.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/buffer.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/child_process.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/cluster.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/console.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/constants.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/crypto.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/dgram.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/diagnostics_channel.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/dns.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/dns/promises.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/domain.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/dom-events.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/events.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/fs.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/fs/promises.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/http.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/http2.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/https.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/inspector.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/module.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/net.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/os.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/path.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/perf_hooks.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/decode.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/encode.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/index.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/process.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/punycode.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/querystring.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/readline.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/readline/promises.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/repl.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/sea.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/sqlite.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/stream.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/stream/promises.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/stream/consumers.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/stream/web.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/string_decoder.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/test.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/timers.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/timers/promises.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/tls.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/trace_events.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/tty.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/url.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/util.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/v8.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/vm.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/wasi.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/worker_threads.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/zlib.d.ts","../../../../../.pnpm/@types+node@22.16.2/node_modules/@types/node/index.d.ts"],"fileIdsList":[[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,108,150],[108,150],[52,108,150],[75,108,150],[108,147,150],[108,149,150],[150],[108,150,155,188],[108,150,151,156,162,163,170,185,196],[108,150,151,152,162,170],[103,104,105,108,150],[108,150,153,197],[108,150,154,155,163,171],[108,150,155,185,193],[108,150,156,158,162,170],[108,149,150,157],[108,150,158,159],[108,150,160,162],[108,149,150,162],[108,150,162,163,164,185,196],[108,150,162,163,164,180,185,188],[108,145,150],[108,145,150,158,162,165,170,185,196],[108,150,162,163,165,166,170,185,193,196],[108,150,165,167,185,193,196],[106,107,108,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],[108,150,162,168],[108,150,169,196],[108,150,158,162,170,185],[108,150,171],[108,150,172],[108,149,150,173],[108,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],[108,150,178],[108,150,179],[108,150,162,180,181],[108,150,180,182,197,199],[108,150,162,185,186,188],[108,150,187,188],[108,150,185,186],[108,150,188],[108,150,189],[108,147,150,185,190],[108,150,162,191,192],[108,150,191,192],[108,150,155,170,185,193],[108,150,194],[108,150,170,195],[108,150,165,179,196],[108,150,155,197],[108,150,185,198],[108,150,169,199],[108,150,200],[108,150,162,164,173,185,188,196,198,199,201],[108,150,185,202],[108,150,174,175],[108,117,121,150,196],[108,117,150,185,196],[108,112,150],[108,114,117,150,193,196],[108,150,170,193],[108,150,203],[108,112,150,203],[108,114,117,150,170,196],[108,109,110,113,116,150,162,185,196],[108,117,124,150],[108,109,115,150],[108,117,138,139,150],[108,113,117,150,188,196,203],[108,138,150,203],[108,111,112,150,203],[108,117,150],[108,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,150],[108,117,132,150],[108,117,124,125,150],[108,115,117,125,126,150],[108,116,150],[108,109,112,117,150],[108,117,121,125,126,150],[108,121,150],[108,115,117,120,150,196],[108,109,114,117,124,150],[108,150,185],[108,112,117,138,150,201,203],[71,73,74,76,79,80,81,82,83,84,86,87,88,89,91,92,93,94,95,96,97,98,99,100,108,150],[70,71,81,84,92,93,108,150],[70,108,150],[70,73,74,81,88,92,108,150],[81,108,150],[81,92,108,150],[70,92,108,150],[70,81,84,92,108,150],[70,73,81,92,108,150],[70,79,81,108,150],[70,76,77,78,80,81,89,92,108,150],[70,79,81,86,88,89,90,91,108,150],[70,76,78,79,80,92,108,150],[70,81,108,150],[70,71,79,81,84,86,87,92,108,150],[70,73,76,79,80,81,82,83,88,92,108,150],[70,73,81,84,92,108,150],[70,73,81,86,92,108,150],[81,84,86,88,92,108,150],[81,88,108,150],[85,108,150],[70,81,84,87,89,92,108,150],[70,81,88,108,150]],"fileInfos":[{"version":"c430d44666289dae81f30fa7b2edebf186ecc91a2d4c71266ea6ae76388792e1","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"080941d9f9ff9307f7e27a83bcd888b7c8270716c39af943532438932ec1d0b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2e80ee7a49e8ac312cc11b77f1475804bee36b3b2bc896bead8b6e1266befb43","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7a3c8b952931daebdfc7a2897c53c0a1c73624593fa070e46bd537e64dcd20a","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"fb0f136d372979348d59b3f5020b4cdb81b5504192b1cacff5d1fbba29378aa1","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"a680117f487a4d2f30ea46f1b4b7f58bef1480456e18ba53ee85c2746eeca012","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1305d1e76ca44e30fb8b2b8075fa522b83f60c0bcf5d4326a9d2cf79b53724f8","impliedFormat":1},{"version":"2d2f730d138ade6912bd4fed19e5c75a3e86583b34cedaca803ab6ba92f9e410","impliedFormat":1},{"version":"9d3032643946a4ef7baf0bb9edf42f30c25ba9228da79feef68228273aee9641","impliedFormat":1},{"version":"2abbb3d628f1339724c106de13d12ce02288a45d3cb9230493cb63870c529bb9","impliedFormat":1},{"version":"fac6ddbc83bfa1d31f4b0a42b60093b02bfd5adafb451d84bfd3314f88c0e833","impliedFormat":1},{"version":"743ca12939a64a2076fa4307e581ac5465dc7605ac2d3ac920d13409ad5c46c8","impliedFormat":1},{"version":"6494edf2dbfeb859e9f15bac22852403015e1750b4f38faa7aac66a9f6bfce14","impliedFormat":1},{"version":"2223005c545706fb961cff0a034c46db73e5de6a1dac8ededae914f91756de3d","impliedFormat":1},{"version":"738a2fdd9c4a45fd181cdbe6c08273ab3d48619427f1953a43b291447a3917c1","impliedFormat":1},{"version":"dff478c6deb08f527c1782e16f7f0f43fd1c9485657784c8db5aa6a7c915b6ef","impliedFormat":1},{"version":"7e120366e7e55879c2d553f5fccf65be0201e2d876036eb81a7ae9a77c575d15","impliedFormat":1},{"version":"d5d9077c9c94596545f3494ca8bba34a301e55f4ac18717d63be89250a923f4c","impliedFormat":1},{"version":"b7705a32ea5d02641973e63b7d9971d75c5e15b86eb1782d13172beddd9b8a61","impliedFormat":1},{"version":"3daaffb9f2a1707232f4e4010fb1a385567589af0ebd92754d2ded57be86922c","impliedFormat":1},{"version":"7a4474497db8a2d1f9f3df66a21340be32b82afcdfe68754124a0e7817afae1b","impliedFormat":1},{"version":"ad11ad24465c6f7823e5d663e304c02a1985c97c3488d76ce3bd70d096afd3e0","impliedFormat":1},{"version":"d895673753aaca60a30929a7091ffe24c64930f1cbdefd88442110945ba58361","impliedFormat":1},{"version":"f1d49060ba422ed8a04a9e9ca704bdf588586325148207e53cb5818d074edd06","impliedFormat":1},{"version":"953f809f570a5bbffbd79b112d62ba9b81fc087d5dd207394c5bc900168b3c38","impliedFormat":1},{"version":"c1cd135d63fceefb66a71c57a319665735fbd6cd483b03de3b124cbd2b6b2ab4","impliedFormat":1},{"version":"2bc4130f217369e12cc52f16e919fa4c57573533bd798d21b9effea8326b8d27","signature":"675e716c3874127949f521c0b0cdaf915bdc6c8603182a91fa19368023f63a26","impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"1ebffd76885e72d90226d6a0180b97cd151a516761701c39d15315f1ab810057","signature":"1b17636675ab90a22eee0d62d336da771e85b39d35cfdc859615bfdc7d1fad4c","impliedFormat":1},{"version":"9119c2aa61ee1e10e270cb6452b4e0d4ed8625e024a825e846ba7d2f60970f36","signature":"6a4836a90aaa4c1cd0c37c54b3a86118304b0712d882b05e10474cd550a0b051","impliedFormat":1},{"version":"320217defa5f5efc928f9dd07135cc90086a76f56305174a4748ac24a42fa033","impliedFormat":1},{"version":"bd8305ea3955dad684e52167c0c6f0bf7970cb8a9a3c9e73fc4d597120d5ec27","impliedFormat":1},{"version":"d1b511ca204df4b2d8c8a9631237575b2e389e23c3533cec038da2876d53b253","signature":"6c0d5fb372ac7ba32e66304b31d3536f0bbe2a9599e67d4ecfbee7be59d6fa2d","impliedFormat":1},{"version":"0b6e874ac7c9fb87799c4952011435b8b0076e4f28b69e040bb8704a8779bb13","signature":"baede161a93d0a075a764cc61f24e079380e72ad34a2a8d6b78b4593b4643f29","impliedFormat":1},{"version":"61b57e507124078ab94a0a1bf292f99df666318d3b677b618a78b727d71cd480","signature":"6ad72f23a1ef6bf1f62fee28d58b6301beef379350ef5d61c91f56e24f266bc2","impliedFormat":1},{"version":"62df1293986f0fe90cd6b395f322e11f475cebc735322f71e2135c2dc2b8e4bc","signature":"25df1fbc0261eee6fdf8f6f2849284d3e027c1cf947e5b97886cb1e31e65f64b","impliedFormat":1},{"version":"61dc26afbecbafb9b84cdf840699b3611d9fe0b539c1bf303e8484c1e99550b7","signature":"83e93109dedfcd2f66a736421843a0070420789df720bef1a5d78181974f3ea5","impliedFormat":1},{"version":"6808648728044b53cfecd2de713e7e6170d9478ff79cbde0611bfc99280c01ee","signature":"c5bff92d878a705afaa4c8e4fc580d6f327dc10a524c3f29e8f3bfa6526df8a9","impliedFormat":1},{"version":"56d3dc3a2cce7a9dba1cfca60557f9c544c4ab281d3af79acb6c1d7ecfe3eabc","signature":"f8e577a314928a70842ef72a953646642963b37b01491fc8e6ac6d05ecccdade","impliedFormat":1},{"version":"a28584b66f802ef3d0d286e4a3d6020a6c20ac4adbda84049cd858d7f60bd406","signature":"66408117a4788d5799bc9ecdf81b8e7ebd52cf2c6f22b43e55aedca41f5f5fc8","impliedFormat":1},{"version":"fab58e600970e66547644a44bc9918e3223aa2cbd9e8763cec004b2cfb48827e","impliedFormat":1},{"version":"241354ad210f27a8dfb2d029cedfd5f8bd9f4ef63ea32354e0773b03c89fb060","signature":"f7f321cd51fb551f4d066470d210e79e2a9421a46b6c5de87fc02bcb75969c5f","impliedFormat":1},{"version":"1dd2f1d12a412124eb51e56a34e0c0d26586467d83302cbabfc38433817af016","signature":"948a3a9c0f8e2cdb9f189d80d58c01f6860ca06c19f409df41755653a5f536e0","impliedFormat":1},{"version":"531e301b66501437feeb7bf1293c239f922e00bb2254a7bdda3895a70c4b57c2","signature":"17bc0aadbb22dfc455cbef6dba44a225446f1312f5f9d8b68d586446904af08c","impliedFormat":1},{"version":"311d67e1872fc88f327d317ff28a03844be85eadbe7f6c46158bfe04db082daf","signature":"2bf53f531a10d0c65e0ff80581c91e35238042a8fcdbd352a749db3239f5fe66","impliedFormat":1},{"version":"6841bf60be1e3be83fcae18f8f7f1708c873ff34f0a23678ac30de7529a84fda","signature":"fb6c179fea3ee0a207cc2a7ac74fcadae7331e3eedd7a8c90f2231d74eeffaf2","impliedFormat":1},{"version":"dc3073d04ddd6d656aa2654d791e70f20a031a517664fde933c88f50a66bc420","signature":"d020b84c67bdd73f228910a0ca322b03e1da30badbe713615546262a371d26a2","impliedFormat":1},{"version":"caf0f5eee0f8421ce9d9924d0b39fa0ed9bd20b6fd3ee2ea064b9c795489eec4","signature":"e946023a72e2036fe75aa43e7039f5af8ac2dd03b02c2c3db0011582829d49ea","impliedFormat":1},{"version":"3909693964433384bc21e047b64283e979da0fb17c8b6b1fdba0d9944463de06","signature":"86cb4a7ffd778d2608bd95dab41491a61df4bd5605d342d58ab18c3331fe3404","impliedFormat":1},{"version":"e0336a1ef188982e7bec83b812717e58447446ec0ca25f2b97898ab45be0a764","signature":"ba9f99e43b4c52eab63104a34f84af4a1a468e072b947901e04c6d731121df65","impliedFormat":1},{"version":"32c2d70903357ae029bf8c70e76f22d6a9229dbc94e0402d4ae2cbe010a2627d","signature":"1a687d9913dcc5b03f2686037a28894c52c388bf281bf582c76d6098036ffe48","impliedFormat":1},{"version":"15101befbe344b26c6e6018dcc883390ca72c150555ed66b1d3132c4aaa7143a","signature":"f512273c515b874795a768864d530178bf3ed4d06ae6e679c19893d7b5c7d78b","impliedFormat":1},{"version":"4f56d6e331fb56edddc45713301b688dff04fae5defe553afbc464998e0995c5","signature":"42ea987fb72f4c8267d8cca356c4fa54392b89efee45611bce960b20bfc6dfa9","impliedFormat":1},{"version":"508503b0ca81a683fc5cd7ed6438bef42a28014cb8583f175fc2728bdee9bcc5","signature":"f54df125e9bce8031371280526f305802709177c821377ad0b0acab94f6f532a","impliedFormat":1},{"version":"3254a855916f9c12b518ceaa231fb62055e80b7520df1dcada37928e2cd02304","signature":"5b2aeee88a120adac456de7ca0be45b4bac8fe96199c4d009da6fedb6ec43c96","impliedFormat":1},{"version":"07002d4c369d31da3e478e3cafbf46747e8189366d45397b09afcabf87f46291","signature":"38f35d4b099e2b7d297c1d3633cd873d3b7c2ebbd57ca7b2390ea61c6c025c48","impliedFormat":1},{"version":"cc39071e339f89d79cbc34defbda81c11f798e8fef4922958d0ffbcd732bcbbd","signature":"026f9269b0967d54bdcbd1d810d200d42417242c306bc776d8e7d905db487aed","impliedFormat":1},{"version":"5a9ffc0682aeb335925a4a676d0a15130ae678f198aac62d8436bdfd9c266bf8","impliedFormat":1},{"version":"6c7176368037af28cb72f2392010fa1cef295d6d6744bca8cfb54985f3a18c3e","affectsGlobalScope":true,"impliedFormat":1},{"version":"ab41ef1f2cdafb8df48be20cd969d875602483859dc194e9c97c8a576892c052","affectsGlobalScope":true,"impliedFormat":1},{"version":"437e20f2ba32abaeb7985e0afe0002de1917bc74e949ba585e49feba65da6ca1","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"d802f0e6b5188646d307f070d83512e8eb94651858de8a82d1e47f60fb6da4e2","affectsGlobalScope":true,"impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"763fe0f42b3d79b440a9b6e51e9ba3f3f91352469c1e4b3b67bfa4ff6352f3f4","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"7f182617db458e98fc18dfb272d40aa2fff3a353c44a89b2c0ccb3937709bfb5","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"a12d953aa755b14ac1d28ecdc1e184f3285b01d6d1e58abc11bf1826bc9d80e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"a38efe83ff77c34e0f418a806a01ca3910c02ee7d64212a59d59bca6c2c38fa1","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"2b06b93fd01bcd49d1a6bd1f9b65ddcae6480b9a86e9061634d6f8e354c1468f","impliedFormat":1},{"version":"fac88fbdde5ae2c50fe0a490d63ef7662509271d3c7d00543de8cdd82df2949a","affectsGlobalScope":true,"impliedFormat":1},{"version":"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","impliedFormat":1},{"version":"e9b97d69510658d2f4199b7d384326b7c4053b9e6645f5c19e1c2a54ede427fc","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"f478f6f5902dc144c0d6d7bdc919c5177cac4d17a8ca8653c2daf6d7dc94317f","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"9855e02d837744303391e5623a531734443a5f8e6e8755e018c41d63ad797db2","impliedFormat":1},{"version":"bdba81959361810be44bcfdd283f4d601e406ab5ad1d2bdff0ed480cf983c9d7","impliedFormat":1},{"version":"836a356aae992ff3c28a0212e3eabcb76dd4b0cc06bcb9607aeef560661b860d","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true,"impliedFormat":1},{"version":"b326f4813b90d230ec3950f66bd5b5ce3971aac5fac67cfafc54aa07b39fd07f","affectsGlobalScope":true,"impliedFormat":1},{"version":"25d130083f833251b5b4c2794890831b1b8ce2ead24089f724181576cf9d7279","impliedFormat":1},{"version":"ffe66ee5c9c47017aca2136e95d51235c10e6790753215608bff1e712ff54ec6","impliedFormat":1},{"version":"2b0439104c87ea2041f0f41d7ed44447fe87b5bd4d31535233176fa19882e800","impliedFormat":1},{"version":"017caf5d2a8ef581cf94f678af6ce7415e06956317946315560f1487b9a56167","impliedFormat":1},{"version":"528b62e4272e3ddfb50e8eed9e359dedea0a4d171c3eb8f337f4892aac37b24b","impliedFormat":1},{"version":"d71535813e39c23baa113bc4a29a0e187b87d1105ccc8c5a6ebaca38d9a9bff2","impliedFormat":1},{"version":"d83f86427b468176fbacb28ef302f152ad3d2d127664c627216e45cfa06fbf7e","affectsGlobalScope":true,"impliedFormat":1},{"version":"f72bc8fe16da67e4e3268599295797b202b95e54bd215a03f97e925dd1502a36","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"915e18c559321c0afaa8d34674d3eb77e1ded12c3e85bf2a9891ec48b07a1ca5","affectsGlobalScope":true,"impliedFormat":1},{"version":"ad7e61eca7f2f8bf47e72695f9f6663b75e41d87ef49abdb17c0cb843862f8aa","impliedFormat":1},{"version":"ecba2e44af95b0599c269a92628cec22e752868bce37396740deb51a5c547a26","impliedFormat":1},{"version":"46a9fb41a8f3bc7539eeebc15a6e04b9e55d7537a081615ad3614220d34c3e0f","impliedFormat":1},{"version":"a2f3aa60aece790303a62220456ff845a1b980899bdc2e81646b8e33d9d9cc15","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"933921f0bb0ec12ef45d1062a1fc0f27635318f4d294e4d99de9a5493e618ca2","impliedFormat":1},{"version":"71a0f3ad612c123b57239a7749770017ecfe6b66411488000aba83e4546fde25","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"4f9d8ca0c417b67b69eeb54c7ca1bedd7b56034bb9bfd27c5d4f3bc4692daca7","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"0be405730b99eee7dbb051d74f6c3c0f1f8661d86184a7122b82c2bfb0991922","impliedFormat":1},{"version":"199c8269497136f3a0f4da1d1d90ab033f899f070e0dd801946f2a241c8abba2","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"edbb3546af6a57fa655860fef11f4109390f4a2f1eab4a93f548ccc21d604a56","impliedFormat":1},{"version":"f0be1b8078cd549d91f37c30c222c2a187ac1cf981d994fb476a1adc61387b14","affectsGlobalScope":true,"impliedFormat":1},{"version":"0aaed1d72199b01234152f7a60046bc947f1f37d78d182e9ae09c4289e06a592","impliedFormat":1},{"version":"98ffdf93dfdd206516971d28e3e473f417a5cfd41172e46b4ce45008f640588e","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true,"impliedFormat":1},{"version":"27c45985c94b8b342110506d89ac2c145e1eaaac62fa4baae471c603ef3dda90","affectsGlobalScope":true,"impliedFormat":1},{"version":"0f7e00beefa952297cde4638b2124d2d9a1eed401960db18edcadaa8500c78eb","impliedFormat":1},{"version":"3a051941721a7f905544732b0eb819c8d88333a96576b13af08b82c4f17581e4","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"a4568ec1888b5306bbde6d9ede5c4a81134635fa8aad7eaad15752760eb9783f","affectsGlobalScope":true,"impliedFormat":1},{"version":"3797dd6f4ea3dc15f356f8cdd3128bfa18122213b38a80d6c1f05d8e13cbdad8","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1}],"root":[71,73,74,[77,84],[86,101]],"options":{"composite":true,"declaration":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"module":6,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"outDir":"./","sourceMap":true,"strict":true,"target":7},"referencedMap":[[70,1],[66,2],[68,2],[60,2],[52,2],[53,2],[62,2],[54,2],[55,2],[58,2],[69,2],[59,2],[57,2],[63,2],[64,3],[61,2],[56,2],[67,2],[65,2],[76,4],[75,2],[147,5],[148,5],[149,6],[108,7],[150,8],[151,9],[152,10],[103,2],[106,11],[104,2],[105,2],[153,12],[154,13],[155,14],[156,15],[157,16],[158,17],[159,17],[161,2],[160,18],[162,19],[163,20],[164,21],[146,22],[107,2],[165,23],[166,24],[167,25],[203,26],[168,27],[169,28],[170,29],[171,30],[172,31],[173,32],[177,33],[178,34],[179,35],[180,36],[181,36],[182,37],[183,2],[184,2],[185,38],[187,39],[186,40],[188,41],[189,42],[190,43],[191,44],[192,45],[193,46],[194,47],[195,48],[196,49],[197,50],[198,51],[199,52],[200,53],[201,54],[202,55],[85,2],[72,2],[102,2],[174,2],[175,2],[176,56],[49,2],[50,2],[10,2],[8,2],[9,2],[14,2],[13,2],[2,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[3,2],[23,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[51,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[1,2],[12,2],[11,2],[124,57],[134,58],[123,57],[144,59],[115,60],[114,61],[143,62],[137,63],[142,64],[117,65],[131,66],[116,67],[140,68],[112,69],[111,62],[141,70],[113,71],[118,72],[119,2],[122,72],[109,2],[145,73],[135,74],[126,75],[127,76],[129,77],[125,78],[128,79],[138,62],[120,80],[121,81],[130,82],[110,83],[133,74],[132,72],[136,2],[139,84],[101,85],[94,86],[71,87],[73,87],[77,2],[74,87],[89,88],[95,89],[90,90],[96,91],[97,92],[82,93],[80,94],[79,95],[92,96],[78,2],[81,97],[98,98],[99,99],[84,100],[93,101],[91,102],[87,103],[100,104],[86,105],[88,106],[83,107]],"latestChangedDtsFile":"./index.d.ts","version":"5.9.2"}
\ No newline at end of file
diff --git a/index.ts b/index.ts
index 1cb00a99841a110d0ad8114707d87fc5d2fef3fb..745e31726f20e5c2ff99722c1ea37072f28c8265 100644
--- a/index.ts
+++ b/index.ts
@@ -8,32 +8,32 @@
  * You should have received a copy of the MIT License along with this program.
  */
 
-export * from './src/core.js';
-export * from './src/changes.js';
-export * from './src/decorator.js';
-export * from './src/decorator-builder.js';
-export * from './src/reference.js';
-export * from './src/serializer.js';
-export * from './src/serializer-facade.js';
-export * from './src/typeguard.js';
-export * from './src/types.js';
-export * from './src/utils.js';
-export * from './src/validator.js';
-export * from './src/validators.js';
-export * from './src/snapshot.js';
-export * from './src/change-detector.js';
-export * from './src/path.js';
-export * from './src/type-serialization.js';
-export * from './src/registry.js';
-export * from './src/default.js';
-export * from './src/mixin.js';
+export * from "./src/change-detector.js";
+export * from "./src/changes.js";
+export * from "./src/core.js";
+export * from "./src/decorator-builder.js";
+export * from "./src/decorator.js";
+export * from "./src/default.js";
+export * from "./src/mixin.js";
+export * from "./src/path.js";
+export * from "./src/reference.js";
+export * from "./src/registry.js";
+export * from "./src/serializer-facade.js";
+export * from "./src/serializer.js";
+export * from "./src/snapshot.js";
+export * from "./src/type-serialization.js";
+export * from "./src/typeguard.js";
+export * from "./src/types.js";
+export * from "./src/utils.js";
+export * from "./src/validator.js";
+export * from "./src/validators.js";
 
-export * from './src/reflection/type.js';
-export { typeAnnotation as metaAnnotation } from './src/reflection/type.js';
+export * from "./src/reflection/type.js";
+export { typeAnnotation as metaAnnotation } from "./src/reflection/type.js";
 
-export * from './src/reflection/processor.js';
-export * from './src/reflection/type.js';
-export * from './src/reflection/extends.js';
-export * from './src/reflection/reflection.js';
+export * from "./src/reflection/extends.js";
+export * from "./src/reflection/processor.js";
+export * from "./src/reflection/reflection.js";
+export * from "./src/reflection/type.js";
 
-export { TypeNumberBrand } from '@deepkit/type-spec';
+export { TypeNumberBrand } from "@deepkit/type-spec";
diff --git a/package.json b/package.json
index 503db044471d44c4f5195d7e45af07d0273959bd..e2e55d35e280d4f44fe8f56e299494462e25b10a 100644
--- a/package.json
+++ b/package.json
@@ -2,7 +2,6 @@
   "name": "@deepkit/type",
   "version": "1.0.5",
   "description": "@deepkit/type, the fastest universal TypeScript serializer and validator with JIT engine for frontend, backend, http-transport, RPC, and database, with built-in validations, for Browser/NodeJS.",
-  "type": "commonjs",
   "main": "./dist/cjs/index.js",
   "module": "./dist/esm/index.js",
   "types": "./dist/cjs/index.d.ts",
@@ -18,23 +17,20 @@
     "access": "public"
   },
   "scripts": {
-    "build": "echo '{\"type\": \"module\"}' > ./dist/esm/package.json"
+    "build": "echo '{\"type\": \"module\"}' > ./dist/esm/package.json && echo '{\"type\": \"commonjs\"}' > ./dist/cjs/package.json"
   },
   "repository": "https://github.com/deepkit/deepkit-framework",
   "author": "Marc J. Schmidt <marc@marcjschmidt.de>",
   "license": "MIT",
-  "peerDependencies": {
-    "@deepkit/core": "^1.0.1"
-  },
   "dependencies": {
-    "@deepkit/type-spec": "^1.0.1",
+    "@deepkit/type-spec": "1.0.1",
     "@types/uuid": "^8.3.0",
     "buffer": "^5.2.1",
     "uuid": "^8.3.2"
   },
   "devDependencies": {
-    "@deepkit/core": "^1.0.5",
-    "@deepkit/type-compiler": "^1.0.5",
+    "@deepkit/core": "1.0.5",
+    "@deepkit/type-compiler": "1.0.5",
     "@types/lz-string": "^1.3.34",
     "@types/node": "^22.13.1",
     "@typescript/vfs": "^1.5.0",
diff --git a/src/core.ts b/src/core.ts
index 710b1732866e8f827f4ecb6cf02b9dec54500342..128233d40341be6a44e422a31854a930fe39621d 100644
--- a/src/core.ts
+++ b/src/core.ts
@@ -8,60 +8,70 @@
  * You should have received a copy of the MIT License along with this program.
  */
 
-import { Buffer } from 'buffer';
-import { ClassType } from '@deepkit/core';
+import { ClassType } from "@deepkit/core";
+import { Buffer } from "buffer";
 
 //on unpopulated properties access
 export enum UnpopulatedCheck {
-    None, //returns undefined
-    Throw, //throws regular error
-    ReturnSymbol, //returns `unpopulatedSymbol`
+  None, //returns undefined
+  Throw, //throws regular error
+  ReturnSymbol //returns `unpopulatedSymbol`
 }
 
-export const unpopulatedSymbol = Symbol('unpopulated');
+export const unpopulatedSymbol = Symbol("unpopulated");
 
 export interface TypeSettings {
-    registeredEntities: { [name: string]: ClassType };
-    unpopulatedCheck: UnpopulatedCheck;
+  registeredEntities: { [name: string]: ClassType };
+  unpopulatedCheck: UnpopulatedCheck;
 }
 
-export const typeSettings: TypeSettings = { registeredEntities: {}, unpopulatedCheck: UnpopulatedCheck.Throw };
+export const typeSettings: TypeSettings = {
+  registeredEntities: {},
+  unpopulatedCheck: UnpopulatedCheck.Throw
+};
 
 export interface TypedArrayClassType<T> {
-    new(...args: any[]): T;
+  new (...args: any[]): T;
 
-    readonly BYTES_PER_ELEMENT: number;
+  readonly BYTES_PER_ELEMENT: number;
 }
 
 export interface TypedArray {
-    /**
-     * The size in bytes of each element in the array.
-     */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-     * The ArrayBuffer instance referenced by the array.
-     */
-    readonly buffer: ArrayBufferLike;
-
-    /**
-     * The length of the array.
-     */
-    readonly length: number;
-
-    /**
-     * The length in bytes of the array.
-     */
-    readonly byteLength: number;
-
-    /**
-     * The offset in bytes of the array.
-     */
-    readonly byteOffset: number;
+  /**
+   * The size in bytes of each element in the array.
+   */
+  readonly BYTES_PER_ELEMENT: number;
+
+  /**
+   * The ArrayBuffer instance referenced by the array.
+   */
+  readonly buffer: ArrayBufferLike;
+
+  /**
+   * The length of the array.
+   */
+  readonly length: number;
+
+  /**
+   * The length in bytes of the array.
+   */
+  readonly byteLength: number;
+
+  /**
+   * The offset in bytes of the array.
+   */
+  readonly byteOffset: number;
 }
 
-export function nodeBufferToTypedArray<K>(buf: Buffer, type: TypedArrayClassType<K>): K {
-    return new type(buf.buffer, buf.byteOffset, buf.length / type.BYTES_PER_ELEMENT);
+export function nodeBufferToTypedArray<K>(
+  buf: Buffer,
+  type: TypedArrayClassType<K>
+): K {
+  return new type(
+    buf.buffer,
+    buf.byteOffset,
+    buf.length / type.BYTES_PER_ELEMENT
+  );
 }
 
 /**
@@ -69,14 +79,14 @@ export function nodeBufferToTypedArray<K>(buf: Buffer, type: TypedArrayClassType
  * using `Buffer.from` by the `buffer.js` library.
  */
 function base64ToUint8ArrayAtoB(base64: string): Uint8Array {
-    const raw = atob(base64);
-    const rawLength = raw.length;
-    const array = new Uint8Array(new ArrayBuffer(rawLength));
-
-    for (let i = 0; i < rawLength; i++) {
-        array[i] = raw.charCodeAt(i);
-    }
-    return array;
+  const raw = atob(base64);
+  const rawLength = raw.length;
+  const array = new Uint8Array(new ArrayBuffer(rawLength));
+
+  for (let i = 0; i < rawLength; i++) {
+    array[i] = raw.charCodeAt(i);
+  }
+  return array;
 }
 
 /**
@@ -87,12 +97,15 @@ function base64ToUint8ArrayAtoB(base64: string): Uint8Array {
  * to use byteLength/byeOffset correctly or use typedArrayToArrayBuffer() if you want to use
  * a raw ArrayBuffer that represents the actual data correctly.
  */
-export function base64ToTypedArray<K>(base64: string, type: TypedArrayClassType<K>): K {
-    if ('function' === typeof atob) {
-        return new type(base64ToUint8ArrayAtoB(base64).buffer);
-    }
-
-    return nodeBufferToTypedArray(Buffer.from(base64, 'base64'), type);
+export function base64ToTypedArray<K>(
+  base64: string,
+  type: TypedArrayClassType<K>
+): K {
+  if ("function" === typeof atob) {
+    return new type(base64ToUint8ArrayAtoB(base64).buffer);
+  }
+
+  return nodeBufferToTypedArray(Buffer.from(base64, "base64"), type);
 }
 
 /**
@@ -101,11 +114,11 @@ export function base64ToTypedArray<K>(base64: string, type: TypedArrayClassType<
  * sure a copy happens and the ArrayBuffer is not shared.
  */
 export function base64ToArrayBuffer(base64: string): ArrayBuffer {
-    if ('function' === typeof atob) {
-        return base64ToUint8ArrayAtoB(base64).buffer;
-    }
+  if ("function" === typeof atob) {
+    return base64ToUint8ArrayAtoB(base64).buffer as ArrayBuffer;
+  }
 
-    return nodeBufferToArrayBuffer(Buffer.from(base64, 'base64'));
+  return nodeBufferToArrayBuffer(Buffer.from(base64, "base64"));
 }
 
 /**
@@ -114,9 +127,15 @@ export function base64ToArrayBuffer(base64: string): ArrayBuffer {
  *
  * This makes a copy.
  */
-export function nodeBufferToArrayBuffer<K>(buf: Uint8Array | ArrayBuffer): ArrayBuffer {
-    if (ArrayBuffer.isView(buf)) return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
-    return buf;
+export function nodeBufferToArrayBuffer<K>(
+  buf: Uint8Array | ArrayBuffer
+): ArrayBuffer {
+  if (ArrayBuffer.isView(buf))
+    return buf.buffer.slice(
+      buf.byteOffset,
+      buf.byteOffset + buf.byteLength
+    ) as ArrayBuffer;
+  return buf;
 }
 
 /**
@@ -125,28 +144,35 @@ export function nodeBufferToArrayBuffer<K>(buf: Uint8Array | ArrayBuffer): Array
  * the given TypedArray.
  */
 export function typedArrayToBuffer<K>(typedArray: TypedArray): Buffer {
-    if (typedArray instanceof Buffer) return typedArray;
-    return Buffer.from(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
+  if (typedArray instanceof Buffer) return typedArray;
+  return Buffer.from(
+    typedArray.buffer,
+    typedArray.byteOffset,
+    typedArray.byteLength
+  );
 }
 
 export function arrayBufferToBase64(arrayBuffer: ArrayBuffer): string {
-    return Buffer.from(arrayBuffer).toString('base64');
+  return Buffer.from(arrayBuffer).toString("base64");
 }
 
 export function typedArrayToBase64(typedArray: TypedArray): string {
-    return typedArrayToBuffer(typedArray).toString('base64');
+  return typedArrayToBuffer(typedArray).toString("base64");
 }
 
 /**
  * Same as Buffer.from() but creates a ArrayBuffer that is not shared.
  */
 export function arrayBufferFrom(data: string, encoding?: string): ArrayBuffer {
-    return nodeBufferToArrayBuffer(Buffer.from(data, encoding as any));
+  return nodeBufferToArrayBuffer(Buffer.from(data, encoding as any));
 }
 
 /**
  * Same as Buffer.from(arrayBuffer).toString(encoding), but more in line with the current API.
  */
-export function arrayBufferTo(arrayBuffer: ArrayBuffer, encoding?: string | 'utf8' | 'base64' | 'ascii') {
-    return Buffer.from(arrayBuffer).toString(encoding as any);
+export function arrayBufferTo(
+  arrayBuffer: ArrayBuffer,
+  encoding?: string | "utf8" | "base64" | "ascii"
+) {
+  return Buffer.from(arrayBuffer).toString(encoding as any);
 }
diff --git a/src/default.ts b/src/default.ts
index 4671b16a3b84df7198e079cd94085a3172ed2042..080690ccc9eec065658812f3e9cb0a0eede06f07 100644
--- a/src/default.ts
+++ b/src/default.ts
@@ -1,88 +1,108 @@
-import { binaryTypes, ReflectionKind, resolveTypeMembers, Type } from './reflection/type.js';
+import {
+  binaryTypes,
+  ReflectionKind,
+  resolveTypeMembers,
+  Type
+} from "./reflection/type.js";
 
 /**
  * Returns a sensible default value for a given type.
  * Sensible means it satisfies the type checker, but not necessarily attached validators.
  */
 export function defaultValue(type: Type): any {
-    switch (type.kind) {
-        case ReflectionKind.void:
-        case ReflectionKind.any:
-        case ReflectionKind.never:
-        case ReflectionKind.unknown:
-        case ReflectionKind.undefined:
-            return undefined;
-        case ReflectionKind.null:
-            return null;
-        case ReflectionKind.string:
-            return '';
-        case ReflectionKind.number:
-            return 0;
-        case ReflectionKind.boolean:
-            return false;
-        case ReflectionKind.bigint:
-            return BigInt(0);
-        case ReflectionKind.object:
-            return {};
-        case ReflectionKind.union: {
-            if (type.types.length) return defaultValue(type.types[0]);
-            break;
-        }
-        case ReflectionKind.promise:
-            return defaultValue(type.type);
-        case ReflectionKind.array:
-            return [];
-        case ReflectionKind.rest: {
-            return [defaultValue(type.type)];
-        }
-        case ReflectionKind.tupleMember: {
-            if (type.optional) return;
-            return defaultValue(type.type);
-        }
-        case ReflectionKind.tuple: {
-            const result: any[] = [];
-            for (const sub of type.types) {
-                const value = defaultValue(sub);
-                if (value === undefined) continue;
-                if (sub.type.kind === ReflectionKind.rest) {
-                    result.push(...value);
-                } else {
-                    result.push(value);
-                }
-            }
-            return result;
-        }
-        case ReflectionKind.enum: {
-            return type.values[0];
+  switch (type.kind) {
+    case ReflectionKind.void:
+    case ReflectionKind.any:
+    case ReflectionKind.never:
+    case ReflectionKind.unknown:
+    case ReflectionKind.undefined:
+      return undefined;
+    case ReflectionKind.null:
+      return null;
+    case ReflectionKind.string:
+      return "";
+    case ReflectionKind.number:
+      return 0;
+    case ReflectionKind.boolean:
+      return false;
+    case ReflectionKind.bigint:
+      return BigInt(0);
+    case ReflectionKind.object:
+      return {};
+    case ReflectionKind.union: {
+      if (type.types.length) return defaultValue(type.types[0]);
+      break;
+    }
+    case ReflectionKind.promise:
+      return defaultValue(type.type);
+    case ReflectionKind.array:
+      return [];
+    case ReflectionKind.rest: {
+      return [defaultValue(type.type)];
+    }
+    case ReflectionKind.tupleMember: {
+      if (type.optional) return;
+      return defaultValue(type.type);
+    }
+    case ReflectionKind.tuple: {
+      const result: any[] = [];
+      for (const sub of type.types) {
+        const value = defaultValue(sub);
+        if (value === undefined) continue;
+        if (sub.type.kind === ReflectionKind.rest) {
+          result.push(...value);
+        } else {
+          result.push(value);
         }
-        case ReflectionKind.objectLiteral: {
-            const result: any = {};
-            const types = resolveTypeMembers(type);
-            for (const type of types) {
-                if (type.kind === ReflectionKind.propertySignature) {
-                    if (type.optional) continue;
-                    result[type.name] = defaultValue(type.type);
-                }
-            }
+      }
 
-            return result;
+      return result;
+    }
+    case ReflectionKind.enum: {
+      return type.values[0];
+    }
+    case ReflectionKind.objectLiteral: {
+      const result: any = {};
+      const types = resolveTypeMembers(type);
+      for (const type of types) {
+        if (type.kind === ReflectionKind.propertySignature) {
+          if (type.optional) {
+            continue;
+          }
+
+          result[type.name] = defaultValue(type.type);
         }
-        case ReflectionKind.class: {
-            if (type.classType === Date) return new Date;
-            if (type.classType === Set) return new Set;
-            if (type.classType === Map) return new Map;
-            if (binaryTypes.includes(type.classType)) return new type.classType;
+      }
 
-            const result: any = {};
-            const types = resolveTypeMembers(type);
-            for (const type of types) {
-                if (type.kind === ReflectionKind.property) {
-                    if (type.optional) continue;
-                    result[type.name] = defaultValue(type.type);
-                }
-            }
+      return result;
+    }
+    case ReflectionKind.class: {
+      if (type.classType === Date) {
+        return new Date();
+      }
+      if (type.classType === Set) {
+        return new Set();
+      }
+      if (type.classType === Map) {
+        return new Map();
+      }
+      if (binaryTypes.includes(type.classType)) {
+        return new type.classType();
+      }
+
+      const result: any = {};
+      const types = resolveTypeMembers(type);
+      for (const type of types) {
+        if (type.kind === ReflectionKind.property) {
+          if (type.optional) {
+            continue;
+          }
 
-            return result;
+          result[type.name] = defaultValue(type.type);
         }
+      }
+
+      return result;
     }
+  }
 }
diff --git a/src/reflection/processor.ts b/src/reflection/processor.ts
index 158281a0679659a3e54c11f3ecbe2006c86529c7..80a5291ae4308206593262bab4438daf5d4046af 100644
--- a/src/reflection/processor.ts
+++ b/src/reflection/processor.ts
@@ -9,115 +9,134 @@
  */
 
 import {
-    Annotations,
-    applyScheduledAnnotations,
-    CartesianProduct,
-    copyAndSetParent,
-    defaultAnnotation,
-    flattenUnionTypes,
-    getAnnotations,
-    getMember,
-    indexAccess,
-    isMember,
-    isPrimitive,
-    isSameType,
-    isType,
-    isTypeIncluded,
-    isWithAnnotations,
-    merge,
-    narrowOriginalLiteral,
-    ReflectionKind,
-    ReflectionVisibility,
-    stringifyType,
-    Type,
-    TypeBaseMember,
-    TypeCallSignature,
-    TypeClass,
-    typeDecorators,
-    TypeEnumMember,
-    TypeFunction,
-    TypeIndexSignature,
-    TypeInfer,
-    TypeLiteral,
-    TypeMethod,
-    TypeMethodSignature,
-    TypeObjectLiteral,
-    TypeParameter,
-    TypePromise,
-    TypeProperty,
-    TypePropertySignature,
-    TypeTemplateLiteral,
-    TypeTupleMember,
-    TypeUnion,
-    unboxUnion,
-    validationAnnotation,
-    widenLiteral,
-} from './type.js';
-import { MappedModifier, ReflectionOp } from '@deepkit/type-spec';
-import { isExtendable } from './extends.js';
-import { ClassType, isArray, isClass, isFunction, stringifyValueWithType } from '@deepkit/core';
-import { isWithDeferredDecorators } from '../decorator.js';
-import { ReflectionClass, TData } from './reflection.js';
-import { state } from './state.js';
-import { debug } from '../debug.js';
-
-export type RuntimeStackEntry = Type | Object | (() => ClassType | Object) | string | number | boolean | bigint;
-
-export type Packed = (RuntimeStackEntry | string)[] & { __is?: (data: any) => boolean } & { __type?: Type } & { __unpack?: PackStruct };
+  ClassType,
+  isArray,
+  isClass,
+  isFunction,
+  stringifyValueWithType
+} from "@deepkit/core";
+import { MappedModifier, ReflectionOp } from "@deepkit/type-spec";
+import { debug } from "../debug.js";
+import { isWithDeferredDecorators } from "../decorator.js";
+import { isExtendable } from "./extends.js";
+import { ReflectionClass, TData } from "./reflection.js";
+import { state } from "./state.js";
+import {
+  Annotations,
+  applyScheduledAnnotations,
+  CartesianProduct,
+  copyAndSetParent,
+  defaultAnnotation,
+  flattenUnionTypes,
+  getAnnotations,
+  getMember,
+  indexAccess,
+  isMember,
+  isPrimitive,
+  isSameType,
+  isType,
+  isTypeIncluded,
+  isWithAnnotations,
+  merge,
+  narrowOriginalLiteral,
+  ReflectionKind,
+  ReflectionVisibility,
+  stringifyType,
+  TagsReflection,
+  Type,
+  TypeBaseMember,
+  TypeCallSignature,
+  TypeClass,
+  typeDecorators,
+  TypeEnumMember,
+  TypeFunction,
+  TypeIndexSignature,
+  TypeInfer,
+  TypeLiteral,
+  TypeMethod,
+  TypeMethodSignature,
+  TypeObjectLiteral,
+  TypeParameter,
+  TypePromise,
+  TypeProperty,
+  TypePropertySignature,
+  TypeTemplateLiteral,
+  TypeTupleMember,
+  TypeUnion,
+  unboxUnion,
+  validationAnnotation,
+  widenLiteral
+} from "./type.js";
+
+export type RuntimeStackEntry =
+  | Type
+  | Object
+  | (() => ClassType | Object)
+  | string
+  | number
+  | boolean
+  | bigint;
+
+export type Packed = (RuntimeStackEntry | string)[] & {
+  __is?: (data: any) => boolean;
+} & { __type?: Type } & { __unpack?: PackStruct };
 
 export class PackStruct {
-    constructor(
-        public ops: ReflectionOp[] = [],
-        public stack: RuntimeStackEntry[] = [],
-    ) {
-    }
+  constructor(
+    public ops: ReflectionOp[] = [],
+    public stack: RuntimeStackEntry[] = []
+  ) {}
 }
 
 function unpackOps(decodedOps: ReflectionOp[], encodedOPs: string): void {
-    for (let i = 0; i < encodedOPs.length; i++) {
-        decodedOps.push(encodedOPs.charCodeAt(i) - 33);
-    }
+  for (let i = 0; i < encodedOPs.length; i++) {
+    decodedOps.push(encodedOPs.charCodeAt(i) - 33);
+  }
 }
 
 export function encodeOps(ops: ReflectionOp[]): string {
-    return ops.map(v => String.fromCharCode(v + 33)).join('');
+  return ops.map(v => String.fromCharCode(v + 33)).join("");
 }
 
 /**
  * Pack a pack structure (op instructions + pre-defined stack) and create a encoded version of it.
  */
 export function pack(packOrOps: PackStruct | ReflectionOp[]): Packed {
-    const ops = isArray(packOrOps) ? packOrOps : packOrOps.ops;
-    const encodedOps = encodeOps(ops);
+  const ops = isArray(packOrOps) ? packOrOps : packOrOps.ops;
+  const encodedOps = encodeOps(ops);
 
-    if (!isArray(packOrOps)) {
-        if (packOrOps.stack.length) {
-            return [...packOrOps.stack as RuntimeStackEntry[], encodedOps];
-        }
+  if (!isArray(packOrOps)) {
+    if (packOrOps.stack.length) {
+      return [...(packOrOps.stack as RuntimeStackEntry[]), encodedOps];
     }
+  }
 
-    return [encodedOps];
+  return [encodedOps];
 }
 
 export function unpack(pack: Packed): PackStruct {
-    const ops: ReflectionOp[] = [];
+  const ops: ReflectionOp[] = [];
 
-    const encodedOPs = pack[pack.length - 1];
+  const encodedOPs = pack[pack.length - 1];
 
-    //the end has always to be a string
-    if ('string' !== typeof encodedOPs) return { ops: [], stack: [] };
+  //the end has always to be a string
+  if ("string" !== typeof encodedOPs) return { ops: [], stack: [] };
 
-    unpackOps(ops, encodedOPs);
+  unpackOps(ops, encodedOPs);
 
-    return { ops, stack: pack.length > 1 ? pack.slice(0, -1) : [] };
+  return { ops, stack: pack.length > 1 ? pack.slice(0, -1) : [] };
 }
 
-export function resolvePacked(type: Packed, args: any[] = [], options?: ReflectOptions): Type {
-    return resolveRuntimeType(type, args, options) as Type;
+export function resolvePacked(
+  type: Packed,
+  args: any[] = [],
+  options?: ReflectOptions
+): Type {
+  return resolveRuntimeType(type, args, options) as Type;
 }
 
 function isPack(o: any): o is Packed {
-    return isArray(o);
+  return isArray(o);
 }
 
 /**
@@ -125,1849 +144,2488 @@ function isPack(o: any): o is Packed {
  * This is the slow path, using the full type virtual machine to resolve the type.
  * If you want to handle some fast paths (including cache), try using resolveReceiveType() instead.
  */
-export function resolveRuntimeType(o: ClassType | Function | Packed | any, args: any[] = [], options?: ReflectOptions): Type {
-    const type = Processor.get().reflect(o, args, options || { reuseCached: true });
-
-    if (isType(type)) {
-        return type as Type;
-    }
-
-    throw new Error('No type returned from runtime type program');
+export function resolveRuntimeType(
+  o: ClassType | Function | Packed | any,
+  args: any[] = [],
+  options?: ReflectOptions
+): Type {
+  const type = Processor.get().reflect(
+    o,
+    args,
+    options || { reuseCached: true }
+  );
+
+  if (isType(type)) {
+    return type as Type;
+  }
+
+  throw new Error("No type returned from runtime type program");
 }
 
 interface Frame {
-    index: number; //just the general frame index
-    startIndex: number; //when the frame started, index of the stack
-    variables: number;
-    inputs: RuntimeStackEntry[];
-    previous?: Frame;
-    mappedType?: Loop;
-    distributiveLoop?: Loop;
+  index: number; //just the general frame index
+  startIndex: number; //when the frame started, index of the stack
+  variables: number;
+  inputs: RuntimeStackEntry[];
+  previous?: Frame;
+  mappedType?: Loop;
+  distributiveLoop?: Loop;
 }
 
 class Loop {
-    private types: Type[] = [];
-    private i: number = 0;
-
-    constructor(public fromType: Type) {
-        if (fromType.kind === ReflectionKind.union) {
-            this.types = fromType.types;
-        } else {
-            this.types = [fromType];
-        }
+  private types: Type[] = [];
+  private i: number = 0;
+
+  constructor(public fromType: Type) {
+    if (fromType.kind === ReflectionKind.union) {
+      this.types = fromType.types;
+    } else {
+      this.types = [fromType];
     }
+  }
 
-    next(): Type | undefined {
-        return this.types[this.i++];
-    }
+  next(): Type | undefined {
+    return this.types[this.i++];
+  }
 }
 
 interface Program {
-    frame: Frame;
-    active: boolean;
-    stack: (RuntimeStackEntry | Type)[];
-    stackPointer: number; //pointer to the stack
-    program: number; //pointer to the current op
-    depth: number;
-    initialStack: (RuntimeStackEntry | Type)[];
-    resultType: Type;
-    ops: ReflectionOp[];
-    end: number;
-    inputs: RuntimeStackEntry[];
-    resultTypes?: Type[];
-    started: number;
-    typeParameters?: Type[];
-    previous?: Program;
-    //don't operate on newly created ref resultType but return whatever is on the stack directly
-    //used in inline-only programs like `typeOf<MyAlias>()` where we want the type of (cached) MyAlias and not a new reference.
-    directReturn?: boolean;
-    object?: ClassType | Function | Packed | any;
+  frame: Frame;
+  active: boolean;
+  stack: (RuntimeStackEntry | Type)[];
+  stackPointer: number; //pointer to the stack
+  program: number; //pointer to the current op
+  depth: number;
+  initialStack: (RuntimeStackEntry | Type)[];
+  resultType: Type;
+  ops: ReflectionOp[];
+  end: number;
+  inputs: RuntimeStackEntry[];
+  resultTypes?: Type[];
+  started: number;
+  typeParameters?: Type[];
+  previous?: Program;
+  //don't operate on newly created ref resultType but return whatever is on the stack directly
+  //used in inline-only programs like `typeOf<MyAlias>()` where we want the type of (cached) MyAlias and not a new reference.
+  directReturn?: boolean;
+  object?: ClassType | Function | Packed | any;
 }
 
-function assignResult<T extends Type>(ref: Type, result: T, assignParents: boolean): T {
-    Object.assign(ref, result);
-
-    if (assignParents) {
-        // if (ref.kind === ReflectionKind.class && ref.arguments) {
-        //     for (const member of ref.arguments) member.parent = ref;
-        // }
-
-        if (ref.kind === ReflectionKind.function || ref.kind === ReflectionKind.method || ref.kind === ReflectionKind.methodSignature) {
-            ref.return.parent = ref;
-            for (const member of ref.parameters) member.parent = ref as any;
-        }
+function assignResult<T extends Type>(
+  ref: Type,
+  result: T,
+  assignParents: boolean
+): T {
+  Object.assign(ref, result);
+
+  if (assignParents) {
+    // if (ref.kind === ReflectionKind.class && ref.arguments) {
+    //     for (const member of ref.arguments) member.parent = ref;
+    // }
+
+    if (
+      ref.kind === ReflectionKind.function ||
+      ref.kind === ReflectionKind.method ||
+      ref.kind === ReflectionKind.methodSignature
+    ) {
+      ref.return.parent = ref;
+      for (const member of ref.parameters) member.parent = ref as any;
+    }
 
-        if ('types' in ref) {
-            for (const member of ref.types) {
-                member.parent = ref;
-            }
-        }
+    if ("types" in ref) {
+      for (const member of ref.types) {
+        member.parent = ref;
+      }
     }
+  }
 
-    return ref as T;
+  return ref as T;
 }
 
 function isConditionTruthy(condition: Type | number): boolean {
-    if ('number' === typeof condition) return condition !== 0;
-    return !!(condition.kind === ReflectionKind.literal && condition.literal);
+  if ("number" === typeof condition) return condition !== 0;
+  return !!(condition.kind === ReflectionKind.literal && condition.literal);
 }
 
-function createProgram(options: Partial<Program>, inputs?: RuntimeStackEntry[]): Program {
-    const program: Program = {
-        active: true,
-        frame: { index: 0, startIndex: -1, inputs: inputs || [], variables: 0, previous: undefined },
-        stack: options.stack || [],
-        stackPointer: options.stackPointer ?? -1,
-        program: 0,
-        depth: 0,
-        initialStack: options.initialStack || [],
-        resultType: options.resultType || { kind: ReflectionKind.unknown },
-        ops: options.ops || [],
-        end: options.end ?? (options.ops ? options.ops.length : 0),
-        inputs: inputs || [],
-        started: Date.now(),
-        // resultTypes: [],
-        // typeParameters: [],
-        // previous: undefined,
-        object: options.object,
-    };
-
-    if (options.initialStack) for (let i = 0; i < options.initialStack.length; i++) {
-        if (i < program.stack.length) {
-            program.stack[i] = options.initialStack[i];
-        } else {
-            program.stack.push(options.initialStack[i]);
-        }
+function createProgram(
+  options: Partial<Program>,
+  inputs?: RuntimeStackEntry[]
+): Program {
+  const program: Program = {
+    active: true,
+    frame: {
+      index: 0,
+      startIndex: -1,
+      inputs: inputs || [],
+      variables: 0,
+      previous: undefined
+    },
+    stack: options.stack || [],
+    stackPointer: options.stackPointer ?? -1,
+    program: 0,
+    depth: 0,
+    initialStack: options.initialStack || [],
+    resultType: options.resultType || { kind: ReflectionKind.unknown },
+    ops: options.ops || [],
+    end: options.end ?? (options.ops ? options.ops.length : 0),
+    inputs: inputs || [],
+    started: Date.now(),
+    // resultTypes: [],
+    // typeParameters: [],
+    // previous: undefined,
+    object: options.object
+  };
+
+  if (options.initialStack)
+    for (let i = 0; i < options.initialStack.length; i++) {
+      if (i < program.stack.length) {
+        program.stack[i] = options.initialStack[i];
+      } else {
+        program.stack.push(options.initialStack[i]);
+      }
     }
 
-    program.stackPointer = options.initialStack ? options.initialStack.length - 1 : -1;
-    program.frame.startIndex = program.stackPointer;
+  program.stackPointer = options.initialStack
+    ? options.initialStack.length - 1
+    : -1;
+  program.frame.startIndex = program.stackPointer;
 
-    return program;
+  return program;
 }
 
-function isValidCacheEntry(current: Program, object: ClassType | Function | Packed | any, inputs: RuntimeStackEntry[] = []): Program | undefined {
-    if (current.object === object) {
-        //issue a new reference if inputs are the same
-        //todo: when a function has a default, this is not set in current.inputs, and could fail when it differs to given inputs
-        let sameInputs = current.inputs.length === inputs.length;
-        if (sameInputs) {
-            for (let i = 0; i < current.inputs.length; i++) {
-                if (!inputs[i] || !isSameType(current.inputs[i] as Type, inputs[i] as Type)) {
-                    sameInputs = false;
-                    break;
-                }
-            }
-            if (sameInputs) {
-                return current;
-            }
+function isValidCacheEntry(
+  current: Program,
+  object: ClassType | Function | Packed | any,
+  inputs: RuntimeStackEntry[] = []
+): Program | undefined {
+  if (current.object === object) {
+    //issue a new reference if inputs are the same
+    //todo: when a function has a default, this is not set in current.inputs, and could fail when it differs to given inputs
+    let sameInputs = current.inputs.length === inputs.length;
+    if (sameInputs) {
+      for (let i = 0; i < current.inputs.length; i++) {
+        if (
+          !inputs[i] ||
+          !isSameType(current.inputs[i] as Type, inputs[i] as Type)
+        ) {
+          sameInputs = false;
+          break;
         }
+      }
+      if (sameInputs) {
+        return current;
+      }
     }
-    return;
+  }
+  return;
 }
 
-function findExistingProgram(current: Program | undefined, object: ClassType | Function | Packed | any, inputs: RuntimeStackEntry[] = []) {
-    let checks = 0;
-    while (current) {
-        if (current.object === object) {
-            checks++;
-            //as safety check to never go into an endless loop, we return just this program if objects matches and we are 1000 programs deep.
-            if (checks > 1000) return current;
-
-            //issue a new reference if inputs are the same
-            //todo: when a function has a default, this is not set in current.inputs, and could fail when it differs to given inputs
-            let sameInputs = current.inputs.length === inputs.length;
-            if (sameInputs) {
-                for (let i = 0; i < current.inputs.length; i++) {
-                    if (!inputs[i] || !isSameType(current.inputs[i] as Type, inputs[i] as Type)) {
-                        sameInputs = false;
-                        break;
-                    }
-                }
-                if (sameInputs) return current;
-            }
+function findExistingProgram(
+  current: Program | undefined,
+  object: ClassType | Function | Packed | any,
+  inputs: RuntimeStackEntry[] = []
+) {
+  let checks = 0;
+  while (current) {
+    if (current.object === object) {
+      checks++;
+      //as safety check to never go into an endless loop, we return just this program if objects matches and we are 1000 programs deep.
+      if (checks > 1000) return current;
+
+      //issue a new reference if inputs are the same
+      //todo: when a function has a default, this is not set in current.inputs, and could fail when it differs to given inputs
+      let sameInputs = current.inputs.length === inputs.length;
+      if (sameInputs) {
+        for (let i = 0; i < current.inputs.length; i++) {
+          if (
+            !inputs[i] ||
+            !isSameType(current.inputs[i] as Type, inputs[i] as Type)
+          ) {
+            sameInputs = false;
+            break;
+          }
         }
-
-        current = current.previous;
+        if (sameInputs) return current;
+      }
     }
 
-    return;
+    current = current.previous;
+  }
+
+  return;
 }
 
 function createRef(current: Program): Type {
-    if (!current.resultTypes) current.resultTypes = [];
-    const ref: Type = { ...current.resultType };
-    current.resultTypes.push(ref);
-    return ref;
+  if (!current.resultTypes) current.resultTypes = [];
+  const ref: Type = { ...current.resultType };
+  current.resultTypes.push(ref);
+  return ref;
 }
 
 export interface ReflectOptions {
-    /**
-     *
-     */
-    reuseCached?: boolean;
+  /**
+   *
+   */
+  reuseCached?: boolean;
 
-    inline?: boolean;
+  inline?: boolean;
 
-    typeName?: string;
+  typeName?: string;
 }
 
 /**
  * @reflection never
  */
 export class Processor {
-    static typeProcessor?: Processor;
+  static typeProcessor?: Processor;
+
+  static get(): Processor {
+    return (Processor.typeProcessor ||= new Processor());
+  }
+
+  private cache: Program[] = [];
+
+  /**
+   * Linked list of programs to execute. For each external call to external program will this be changed.
+   */
+  protected program: Program = {
+    active: false,
+    frame: { index: 0, startIndex: -1, inputs: [], variables: 0 },
+    stack: [],
+    stackPointer: -1,
+    program: 0,
+    depth: 0,
+    initialStack: [],
+    resultType: { kind: ReflectionKind.unknown },
+    // resultTypes: [],
+    inputs: [],
+    end: 0,
+    ops: [],
+    started: 0
+    // previous: undefined,
+    // object: undefined,
+  };
+
+  reflect(
+    object: ClassType | Function | Packed | any,
+    inputs: RuntimeStackEntry[] = [],
+    options: ReflectOptions = {}
+  ): Type {
+    const start = Date.now();
+    const result = this._reflect(object, inputs, options);
+
+    const took = Date.now() - start;
+    if (took > 100) {
+      console.warn(
+        `Type computation took very long ${took}ms for ${stringifyType(result)}`
+      );
+    }
+    return result;
+  }
+
+  _reflect(
+    object: ClassType | Function | Packed | any,
+    inputs: RuntimeStackEntry[] = [],
+    options: ReflectOptions = {}
+  ): Type {
+    const packed: Packed | undefined = isPack(object) ? object : object.__type;
+    if (!packed) {
+      if (isFunction(object) && object.length === 0) {
+        //functions without any type annotations do not have the overhead of an assigned __type
+        return {
+          kind: ReflectionKind.function,
+          function: object,
+          name: object.name,
+          parameters: [],
+          return: { kind: ReflectionKind.any }
+        };
+      }
+      throw new Error(
+        `No valid runtime type for ${stringifyValueWithType(object)} given. Is @deepkit/type-compiler correctly installed? Execute deepkit-type-install to check`
+      );
+    }
 
-    static get(): Processor {
-        return Processor.typeProcessor ||= new Processor();
+    for (let i = 0; i < inputs.length; i++) {
+      if (isClass(inputs[i])) inputs[i] = resolveRuntimeType(inputs[i]);
     }
 
-    private cache: Program[] = [];
-
-    /**
-     * Linked list of programs to execute. For each external call to external program will this be changed.
-     */
-    protected program: Program = {
-        active: false,
-        frame: { index: 0, startIndex: -1, inputs: [], variables: 0 },
-        stack: [],
-        stackPointer: -1,
-        program: 0,
-        depth: 0,
-        initialStack: [],
-        resultType: { kind: ReflectionKind.unknown },
-        // resultTypes: [],
-        inputs: [],
-        end: 0,
-        ops: [],
-        started: 0,
-        // previous: undefined,
-        // object: undefined,
-    };
+    //this checks if there is an active program still running for given packed. if so, issue a new reference.
+    //this reference is changed (its content only via Object.assign(reference, computedValues)) once the program finished.
+    //this is independent of reuseCache since it's the cache for the current 'run', not a global cache
+    const found = findExistingProgram(this.program, object, inputs);
+    if (found) {
+      const result = createRef(found);
+      result.typeName ||= options.typeName;
+      return result;
+    }
 
-    reflect(object: ClassType | Function | Packed | any, inputs: RuntimeStackEntry[] = [], options: ReflectOptions = {}): Type {
-        const start = Date.now();
-        const result = this._reflect(object, inputs, options);
+    //the cache of already computed types is stored on the Packed (the array of the type program) because it's a static object that never changes
+    //and will be GC correctly (and with it this cache). Its crucial that not all reflect() calls cache the content, otherwise it would pollute the
+    //memory with useless types. For example a global type Partial<> would hold all its instances, what we do not want.
+    //We cache only direct non-generic (inputs empty) types passed to typeOf<>() or resolveRuntimeType(). all other reflect() calls do not use this cache.
+    //make sure the same type is returned if already known.
+    //packed.length === 0 for deserialized TypeClass with reconstructed classes.
+    if (
+      (options.reuseCached || packed.length === 0) &&
+      packed.__type &&
+      inputs.length === 0
+    ) {
+      return packed.__type;
+    }
 
-        const took = Date.now() - start;
-        if (took > 100) {
-            console.warn(`Type computation took very long ${took}ms for ${stringifyType(result)}`);
-        }
+    //all computed types should be cached until the program terminates, otherwise a lot of types will be computed
+    //way too often. This means we have a much bigger array cache and put everything in there, even for generics,
+    //and clear the cache once the program terminates. findExistingProgram will be replaced by that.
+    //with this change we could also remove the linked structure of Program and put it into an array as well.
+    for (const cache of this.cache) {
+      if (isValidCacheEntry(cache, object, inputs)) {
+        //if program is still active, create new ref otherwise copy computed type
+        const result = cache.active
+          ? createRef(cache)
+          : copyAndSetParent(cache.resultType);
+        result.typeName ||= options.typeName;
         return result;
+      }
     }
 
-    _reflect(object: ClassType | Function | Packed | any, inputs: RuntimeStackEntry[] = [], options: ReflectOptions = {}): Type {
-        const packed: Packed | undefined = isPack(object) ? object : object.__type;
-        if (!packed) {
-            if (isFunction(object) && object.length === 0) {
-                //functions without any type annotations do not have the overhead of an assigned __type
-                return {
-                    kind: ReflectionKind.function,
-                    function: object, name: object.name,
-                    parameters: [], return: { kind: ReflectionKind.any },
-                };
-            }
-            throw new Error(`No valid runtime type for ${stringifyValueWithType(object)} given. Is @deepkit/type-compiler correctly installed? Execute deepkit-type-install to check`);
-        }
-
-        for (let i = 0; i < inputs.length; i++) {
-            if (isClass(inputs[i])) inputs[i] = resolveRuntimeType(inputs[i]);
-        }
-
-        //this checks if there is an active program still running for given packed. if so, issue a new reference.
-        //this reference is changed (its content only via Object.assign(reference, computedValues)) once the program finished.
-        //this is independent of reuseCache since it's the cache for the current 'run', not a global cache
-        const found = findExistingProgram(this.program, object, inputs);
-        if (found) {
-            const result = createRef(found);
-            result.typeName ||= options.typeName;
-            return result;
-        }
-
-        //the cache of already computed types is stored on the Packed (the array of the type program) because it's a static object that never changes
-        //and will be GC correctly (and with it this cache). Its crucial that not all reflect() calls cache the content, otherwise it would pollute the
-        //memory with useless types. For example a global type Partial<> would hold all its instances, what we do not want.
-        //We cache only direct non-generic (inputs empty) types passed to typeOf<>() or resolveRuntimeType(). all other reflect() calls do not use this cache.
-        //make sure the same type is returned if already known.
-        //packed.length === 0 for deserialized TypeClass with reconstructed classes.
-        if ((options.reuseCached || packed.length === 0) && packed.__type && inputs.length === 0) {
-            return packed.__type;
-        }
-
-        //all computed types should be cached until the program terminates, otherwise a lot of types will be computed
-        //way too often. This means we have a much bigger array cache and put everything in there, even for generics,
-        //and clear the cache once the program terminates. findExistingProgram will be replaced by that.
-        //with this change we could also remove the linked structure of Program and put it into an array as well.
-        for (const cache of this.cache) {
-            if (isValidCacheEntry(cache, object, inputs)) {
-                //if program is still active, create new ref otherwise copy computed type
-                const result = cache.active ? createRef(cache) : copyAndSetParent(cache.resultType);
-                result.typeName ||= options.typeName;
-                return result;
-            }
-        }
-
-        //if reuseCached is disabled but there is already a computed type, we return that as shallow clone
-        if (!options.reuseCached && packed.__type && inputs.length === 0) {
-            const result = copyAndSetParent(packed.__type);
-            result.typeName ||= options.typeName;
-            if (options.inline) result.inlined = true;
-            return result;
-        }
-
-        // process.stdout.write(`${options.reuseCached} Cache miss ${stringifyValueWithType(object)}(...${inputs.length})\n`);
-        const pack = packed.__unpack ||= unpack(packed);
-        const program = createProgram({ ops: pack.ops, initialStack: pack.stack, object }, inputs);
-        const type = this.runProgram(program);
-        type.typeName ||= options.typeName;
-
-        if (inputs.length === 0) {
-            packed.__type = type;
-        }
-
-        if (options.inline === true) {
-            //when inline was used, we do not return the original type, because inline means it's part of another type
-            //and its properties will change depending on the context (e.g. parent), which should not propagate to the original type.
-            const result = createRef(program);
-            result.typeName ||= options.typeName;
-            result.inlined = true;
-            return result;
-        }
-
-        return type;
+    //if reuseCached is disabled but there is already a computed type, we return that as shallow clone
+    if (!options.reuseCached && packed.__type && inputs.length === 0) {
+      const result = copyAndSetParent(packed.__type);
+      result.typeName ||= options.typeName;
+      if (options.inline) result.inlined = true;
+      return result;
     }
 
-    run(ops: ReflectionOp[], initialStack: RuntimeStackEntry[], inputs: RuntimeStackEntry[] = [], object?: ClassType | Function | Packed | any): Type {
-        return this.runProgram(createProgram({ ops, initialStack, object }, inputs));
+    // process.stdout.write(`${options.reuseCached} Cache miss ${stringifyValueWithType(object)}(...${inputs.length})\n`);
+    const pack = (packed.__unpack ||= unpack(packed));
+    const program = createProgram(
+      { ops: pack.ops, initialStack: pack.stack, object },
+      inputs
+    );
+    const type = this.runProgram(program);
+    type.typeName ||= options.typeName;
+
+    if (inputs.length === 0) {
+      packed.__type = type;
     }
 
-    runProgram(program: Program): Type {
-        const loopRunning = this.program.end !== 0;
-        program.previous = this.program;
-        program.depth = this.program.depth + 1;
-        this.program = program;
-        this.cache.push(program);
-
-        // process.stdout.write(`jump to program: ${stringifyValueWithType(program.object)}\n`);
-        if (!loopRunning) {
-            return this.loop(program) as Type;
-        }
-
-        return program.resultType;
+    if (options.inline === true) {
+      //when inline was used, we do not return the original type, because inline means it's part of another type
+      //and its properties will change depending on the context (e.g. parent), which should not propagate to the original type.
+      const result = createRef(program);
+      result.typeName ||= options.typeName;
+      result.inlined = true;
+      return result;
     }
 
-    /**
-     * Semantic is important here: This triggers true only for the very last op of a program.
-     * If it is checked in OP inline then it could be true or false:
-     *
-     * type t<T> = T; => false since we have nominal past the inline op
-     * typeOf<T>() => true since we have no nominal past the inline op
-     */
-    protected isEnded(): boolean {
-        return this.program.program + 1 >= this.program.end;
+    return type;
+  }
+
+  run(
+    ops: ReflectionOp[],
+    initialStack: RuntimeStackEntry[],
+    inputs: RuntimeStackEntry[] = [],
+    object?: ClassType | Function | Packed | any
+  ): Type {
+    return this.runProgram(
+      createProgram({ ops, initialStack, object }, inputs)
+    );
+  }
+
+  runProgram(program: Program): Type {
+    const loopRunning = this.program.end !== 0;
+    program.previous = this.program;
+    program.depth = this.program.depth + 1;
+    this.program = program;
+    this.cache.push(program);
+
+    // process.stdout.write(`jump to program: ${stringifyValueWithType(program.object)}\n`);
+    if (!loopRunning) {
+      return this.loop(program) as Type;
     }
 
-    /**
-     * Runs all scheduled programs until termination.
-     */
-    protected loop(until?: Program): Type | RuntimeStackEntry {
-        let result = this.program.stack[0];
-
-        programLoop:
-            while (this.program.active) {
-                const program = this.program;
-                // process.stdout.write(`jump to program: ${stringifyValueWithType(program.object)}\n`);
-                for (; program.program < program.end; program.program++) {
-                    const op = program.ops[program.program];
-
-                    // process.stdout.write(`[${program.depth}:${program.frame.index}] step ${program.program} ${ReflectionOp[op]}\n`);
-                    switch (op) {
-                        case ReflectionOp.string:
-                            this.pushType({ kind: ReflectionKind.string });
-                            break;
-                        case ReflectionOp.number:
-                            this.pushType({ kind: ReflectionKind.number });
-                            break;
-                        case ReflectionOp.numberBrand:
-                            const ref = this.eatParameter() as number;
-                            this.pushType({ kind: ReflectionKind.number, brand: ref });
-                            break;
-                        case ReflectionOp.boolean:
-                            this.pushType({ kind: ReflectionKind.boolean });
-                            break;
-                        case ReflectionOp.void:
-                            this.pushType({ kind: ReflectionKind.void });
-                            break;
-                        case ReflectionOp.unknown:
-                            this.pushType({ kind: ReflectionKind.unknown });
-                            break;
-                        case ReflectionOp.object:
-                            this.pushType({ kind: ReflectionKind.object });
-                            break;
-                        case ReflectionOp.never:
-                            this.pushType({ kind: ReflectionKind.never });
-                            break;
-                        case ReflectionOp.undefined:
-                            this.pushType({ kind: ReflectionKind.undefined });
-                            break;
-                        case ReflectionOp.bigint:
-                            this.pushType({ kind: ReflectionKind.bigint });
-                            break;
-                        case ReflectionOp.symbol:
-                            this.pushType({ kind: ReflectionKind.symbol });
-                            break;
-                        case ReflectionOp.null:
-                            this.pushType({ kind: ReflectionKind.null });
-                            break;
-                        case ReflectionOp.any:
-                            this.pushType({ kind: ReflectionKind.any });
-                            break;
-                        case ReflectionOp.literal: {
-                            const ref = this.eatParameter() as number;
-                            this.pushType({ kind: ReflectionKind.literal, literal: program.stack[ref] as string | number | boolean | bigint });
-                            break;
-                        }
-                        case ReflectionOp.templateLiteral: {
-                            this.handleTemplateLiteral();
-                            break;
-                        }
-                        case ReflectionOp.date:
-                            this.pushType({ kind: ReflectionKind.class, classType: Date, types: [] });
-                            break;
-                        case ReflectionOp.uint8Array:
-                            this.pushType({ kind: ReflectionKind.class, classType: Uint8Array, types: [] });
-                            break;
-                        case ReflectionOp.int8Array:
-                            this.pushType({ kind: ReflectionKind.class, classType: Int8Array, types: [] });
-                            break;
-                        case ReflectionOp.uint8ClampedArray:
-                            this.pushType({ kind: ReflectionKind.class, classType: Uint8ClampedArray, types: [] });
-                            break;
-                        case ReflectionOp.uint16Array:
-                            this.pushType({ kind: ReflectionKind.class, classType: Uint16Array, types: [] });
-                            break;
-                        case ReflectionOp.int16Array:
-                            this.pushType({ kind: ReflectionKind.class, classType: Int16Array, types: [] });
-                            break;
-                        case ReflectionOp.uint32Array:
-                            this.pushType({ kind: ReflectionKind.class, classType: Uint32Array, types: [] });
-                            break;
-                        case ReflectionOp.int32Array:
-                            this.pushType({ kind: ReflectionKind.class, classType: Int32Array, types: [] });
-                            break;
-                        case ReflectionOp.float32Array:
-                            this.pushType({ kind: ReflectionKind.class, classType: Float32Array, types: [] });
-                            break;
-                        case ReflectionOp.float64Array:
-                            this.pushType({ kind: ReflectionKind.class, classType: Float64Array, types: [] });
-                            break;
-                        case ReflectionOp.bigInt64Array:
-                            this.pushType({
-                                kind: ReflectionKind.class,
-                                classType: 'undefined' !== typeof BigInt64Array ? BigInt64Array : class BigInt64ArrayNotAvailable {
-                                },
-                                types: [],
-                            });
-                            break;
-                        case ReflectionOp.arrayBuffer:
-                            this.pushType({ kind: ReflectionKind.class, classType: ArrayBuffer, types: [] });
-                            break;
-                        case ReflectionOp.class: {
-                            const types = this.popFrame() as Type[];
-                            let t = { kind: ReflectionKind.class, id: state.nominalId++, classType: Object, types: [] } as TypeClass;
-
-                            function add(member: Type) {
-                                if (member.kind === ReflectionKind.propertySignature) {
-                                    member = {
-                                        ...member,
-                                        parent: t,
-                                        visibility: ReflectionVisibility.public,
-                                        kind: ReflectionKind.property,
-                                    } as TypeProperty;
-                                } else if (member.kind === ReflectionKind.methodSignature) {
-                                    member = {
-                                        ...member,
-                                        parent: t,
-                                        visibility: ReflectionVisibility.public,
-                                        kind: ReflectionKind.method,
-                                    } as TypeMethod;
-                                }
-
-                                switch (member.kind) {
-                                    case ReflectionKind.indexSignature: {
-                                        //todo, replace the old one?
-                                        t.types.push(member);
-                                        break;
-                                    }
-                                    case ReflectionKind.property:
-                                    case ReflectionKind.method: {
-                                        const existing = t.types.findIndex(v => (v.kind === ReflectionKind.property || v.kind === ReflectionKind.method) && v.name === (member as TypeProperty | TypeMethod).name);
-                                        if (existing !== -1) {
-                                            //remove entry, since we replace it
-                                            t.types.splice(existing, 1);
-                                        }
-                                        t.types.push(member);
-
-                                        if (member.kind === ReflectionKind.method && member.name === 'constructor') {
-                                            for (const parameter of member.parameters) {
-                                                if (parameter.visibility !== undefined || parameter.readonly) {
-                                                    const property = {
-                                                        kind: ReflectionKind.property,
-                                                        name: parameter.name,
-                                                        visibility: parameter.visibility,
-                                                        default: parameter.default,
-                                                        type: parameter.type,
-                                                    } as TypeProperty;
-                                                    if (parameter.optional) property.optional = true;
-                                                    if (parameter.readonly) property.readonly = true;
-                                                    parameter.type.parent = property;
-                                                    add(property);
-                                                }
-                                            }
-                                        }
-                                        break;
-                                    }
-                                }
-                            }
-
-                            for (const member of types) {
-                                switch (member.kind) {
-                                    case ReflectionKind.objectLiteral:
-                                    case ReflectionKind.class: {
-                                        for (const sub of member.types) add(sub);
-                                        break;
-                                    }
-                                    case ReflectionKind.indexSignature:
-                                    case ReflectionKind.property:
-                                    case ReflectionKind.method: {
-                                        add(member);
-                                    }
-                                }
-                                // if (member.kind === ReflectionKind.property) member.type = widenLiteral(member.type);
-                            }
-                            const args = program.frame.inputs.filter(isType);
-
-                            for (const member of t.types) member.parent = t;
-                            if (t.arguments) for (const member of t.arguments) member.parent = t;
-
-                            if (args.length) t.arguments = args;
-                            t.typeArguments = program.typeParameters;
-
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.widen: {
-                            const current = (program.stack[program.stackPointer] as Type);
-                            if (current.kind === ReflectionKind.literal) {
-                                this.pushType(widenLiteral(this.pop() as TypeLiteral));
-                            }
-                            break;
-                        }
-                        case ReflectionOp.classExtends: {
-                            const argsNumber = this.eatParameter() as number;
-                            const typeArguments: Type[] = [];
-                            for (let i = 0; i < argsNumber; i++) {
-                                typeArguments.push(this.pop() as Type);
-                            }
-
-                            (program.stack[program.stackPointer] as TypeClass).extendsArguments = typeArguments;
-
-                            break;
-                        }
-                        case ReflectionOp.implements: {
-                            const argsNumber = this.eatParameter() as number;
-                            const types: Type[] = [];
-                            for (let i = 0; i < argsNumber; i++) {
-                                types.push(this.pop() as Type);
-                            }
-
-                            (program.stack[program.stackPointer] as TypeClass).implements = types;
-
-                            break;
-                        }
-                        case ReflectionOp.parameter: {
-                            const ref = this.eatParameter() as number;
-                            const t: Type = { kind: ReflectionKind.parameter, parent: undefined as any, name: program.stack[ref] as string, type: this.pop() as Type };
-                            t.type.parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.functionReference:
-                        case ReflectionOp.classReference: {
-                            const ref = this.eatParameter() as number;
-                            const classOrFunction = resolveFunction(program.stack[ref] as Function, program.object);
-                            const inputs = this.popFrame() as Type[];
-                            if (!classOrFunction) {
-                                this.pushType({ kind: ReflectionKind.unknown });
-                                break;
-                            }
-
-                            if (!classOrFunction.__type) {
-                                if (op === ReflectionOp.classReference) {
-                                    this.pushType({ kind: ReflectionKind.class, classType: classOrFunction, typeArguments: inputs, types: [] });
-                                } else if (op === ReflectionOp.functionReference) {
-                                    this.pushType({ kind: ReflectionKind.function, function: classOrFunction, parameters: [], return: { kind: ReflectionKind.unknown } });
-                                }
-                            } else {
-                                //when it's just a simple reference resolution like typeOf<Class>() then enable cache re-use (so always the same type is returned)
-                                const directReference = !!(this.isEnded() && program.previous && program.previous.end === 0);
-                                const result = this.reflect(classOrFunction, inputs, { inline: !directReference, reuseCached: directReference });
-                                if (directReference) program.directReturn = true;
-                                this.push(result, program);
-
-                                if (isWithAnnotations(result) && inputs.length) {
-                                    result.typeArguments = result.typeArguments || [];
-                                    for (let i = 0; i < inputs.length; i++) {
-                                        result.typeArguments[i] = inputs[i];
-                                    }
-                                }
-
-                                //this.reflect/run might create another program onto the stack. switch to it if so
-                                if (this.program !== program) {
-                                    //continue to next this.program.
-                                    program.program++; //manual increment as the for loop would normally do that
-                                    continue programLoop;
-                                }
-                            }
-                            break;
-                        }
-                        case ReflectionOp.enum: {
-                            const types = this.popFrame() as TypeEnumMember[];
-                            const enumType: { [name: string]: string | number } = {};
-
-                            let i = 0;
-                            for (const type of types) {
-                                if (type.default) {
-                                    const v = type.default();
-                                    enumType[type.name] = v;
-                                    if ('number' === typeof v) {
-                                        i = v + 1;
-                                    }
-                                } else {
-                                    enumType[type.name] = i++;
-                                }
-                            }
-                            const values = Object.values(enumType);
-                            const t: Type = { kind: ReflectionKind.enum, enum: enumType, values, indexType: getEnumType(values) };
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.enumMember: {
-                            const name = program.stack[this.eatParameter() as number] as string | (() => string);
-                            this.pushType({
-                                kind: ReflectionKind.enumMember,
-                                parent: undefined as any,
-                                name: isFunction(name) ? name() : name,
-                            });
-                            break;
-                        }
-                        case ReflectionOp.tuple: {
-                            this.handleTuple();
-                            break;
-                        }
-                        case ReflectionOp.tupleMember: {
-                            const t: TypeTupleMember = {
-                                kind: ReflectionKind.tupleMember, type: this.pop() as Type,
-                                parent: undefined as any,
-                            };
-                            t.type.parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.namedTupleMember: {
-                            const name = program.stack[this.eatParameter() as number] as string;
-                            const t: Type = {
-                                kind: ReflectionKind.tupleMember, type: this.pop() as Type,
-                                parent: undefined as any,
-                                name: isFunction(name) ? name() : name,
-                            };
-                            t.type.parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.rest: {
-                            const t: Type = {
-                                kind: ReflectionKind.rest,
-                                parent: undefined as any,
-                                type: this.pop() as Type,
-                            };
-                            t.type.parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.regexp: {
-                            this.pushType({ kind: ReflectionKind.regexp });
-                            break;
-                        }
-                        case ReflectionOp.typeParameter:
-                        case ReflectionOp.typeParameterDefault: {
-                            const nameRef = this.eatParameter() as number;
-                            program.typeParameters = program.typeParameters || [];
-                            let type = program.frame.inputs[program.frame.variables++];
-
-                            if (op === ReflectionOp.typeParameterDefault) {
-                                const defaultValue = this.pop();
-                                if (type === undefined) {
-                                    type = defaultValue;
-                                }
-                            }
-
-                            if (type === undefined) {
-                                //generic not instantiated
-                                program.typeParameters.push({ kind: ReflectionKind.any, typeParameter: true } as any);
-                                this.pushType({ kind: ReflectionKind.typeParameter, name: program.stack[nameRef] as string });
-                            } else {
-                                program.typeParameters.push(type as Type);
-                                this.pushType(type as Type);
-                            }
-                            break;
-                        }
-                        case ReflectionOp.set: {
-                            const t: Type = { kind: ReflectionKind.class, classType: Set, arguments: [this.pop() as Type], types: [] };
-                            t.arguments![0].parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.map: {
-                            const value = this.pop() as Type;
-                            const key = this.pop() as Type;
-                            const t: TypeClass = { kind: ReflectionKind.class, classType: Map, arguments: [key, value], types: [] };
-                            t.arguments![0].parent = t;
-                            t.arguments![1].parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.promise: {
-                            const type = this.pop() as Type;
-                            const t: TypePromise = { kind: ReflectionKind.promise, type };
-                            t.type.parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.union: {
-                            const types = this.popFrame() as Type[];
-                            const flattened = flattenUnionTypes(types);
-                            const t: Type = unboxUnion({ kind: ReflectionKind.union, types: flattened });
-                            if (t.kind === ReflectionKind.union) {
-                                for (const member of t.types) {
-                                    member.parent = t;
-                                }
-                            }
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.intersection: {
-                            let t = this.handleIntersection();
-                            if (t) this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.callSignature:
-                        case ReflectionOp.function: {
-                            const types = this.popFrame() as Type[];
-                            let name = program.stack[this.eatParameter() as number] as string;
-
-                            const returnType = types.length > 0 ? types[types.length - 1] as Type : { kind: ReflectionKind.any } as Type;
-                            const parameters = types.length > 1 ? types.slice(0, -1) as TypeParameter[] : [];
-                            if (isFunction(name)) name = name();
-
-                            let t = op === ReflectionOp.callSignature ? {
-                                kind: ReflectionKind.callSignature,
-                                return: returnType,
-                                parameters,
-                            } as TypeCallSignature : {
-                                kind: ReflectionKind.function,
-                                name: name || undefined,
-                                return: returnType,
-                                parameters,
-                            } as TypeFunction;
-                            t.return.parent = t;
-                            for (const member of t.parameters) member.parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.array: {
-                            const t: Type = { kind: ReflectionKind.array, type: this.pop() as Type };
-                            t.type.parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.property:
-                        case ReflectionOp.propertySignature: {
-                            const name = program.stack[this.eatParameter() as number] as number | string | symbol | (() => symbol);
-                            let type = this.pop() as Type;
-                            let isOptional = false;
-
-                            if (type.kind === ReflectionKind.union && type.types.length === 2) {
-                                const undefinedType = type.types.find(v => v.kind === ReflectionKind.undefined);
-                                const restType = type.types.find(v => v.kind !== ReflectionKind.null && v.kind !== ReflectionKind.undefined);
-                                if (restType && undefinedType) {
-                                    type = restType;
-                                    isOptional = true;
-                                }
-                            }
-
-                            const property = {
-                                kind: op === ReflectionOp.propertySignature ? ReflectionKind.propertySignature : ReflectionKind.property,
-                                type,
-                                name: isFunction(name) ? name() : name,
-                            } as TypeProperty | TypePropertySignature;
-
-                            if (isOptional) {
-                                property.optional = true;
-                            }
-
-                            if (op === ReflectionOp.property) {
-                                (property as TypeProperty).visibility = ReflectionVisibility.public;
-                            }
-
-                            property.type.parent = property;
-                            this.pushType(property);
-                            break;
-                        }
-                        case ReflectionOp.method:
-                        case ReflectionOp.methodSignature: {
-                            let name = program.stack[this.eatParameter() as number] as number | string | symbol | (() => symbol);
-                            const types = this.popFrame() as Type[];
-                            const returnType = types.length > 0 ? types[types.length - 1] as Type : { kind: ReflectionKind.any } as Type;
-                            const parameters: TypeParameter[] = types.length > 1 ? types.slice(0, -1) as TypeParameter[] : [];
-                            if (isFunction(name)) name = name();
-
-                            let t: TypeMethod | TypeMethodSignature = op === ReflectionOp.method
-                                ? { kind: ReflectionKind.method, parent: undefined as any, visibility: ReflectionVisibility.public, name, return: returnType, parameters }
-                                : { kind: ReflectionKind.methodSignature, parent: undefined as any, name, return: returnType, parameters };
-                            t.return.parent = t;
-                            for (const member of t.parameters) member.parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.optional:
-                            (program.stack[program.stackPointer] as TypeBaseMember | TypeTupleMember).optional = true;
-                            break;
-                        case ReflectionOp.readonly:
-                            (program.stack[program.stackPointer] as TypeBaseMember).readonly = true;
-                            break;
-                        case ReflectionOp.public:
-                            (program.stack[program.stackPointer] as TypeBaseMember).visibility = ReflectionVisibility.public;
-                            break;
-                        case ReflectionOp.protected:
-                            (program.stack[program.stackPointer] as TypeBaseMember).visibility = ReflectionVisibility.protected;
-                            break;
-                        case ReflectionOp.private:
-                            (program.stack[program.stackPointer] as TypeBaseMember).visibility = ReflectionVisibility.private;
-                            break;
-                        case ReflectionOp.abstract:
-                            (program.stack[program.stackPointer] as TypeBaseMember).abstract = true;
-                            break;
-                        case ReflectionOp.static:
-                            (program.stack[program.stackPointer] as TypeBaseMember).static = true;
-                            break;
-                        case ReflectionOp.defaultValue:
-                            (program.stack[program.stackPointer] as TypeProperty | TypeEnumMember | TypeParameter).default = program.stack[this.eatParameter() as number] as () => any;
-                            break;
-                        case ReflectionOp.description:
-                            (program.stack[program.stackPointer] as TypeProperty).description = program.stack[this.eatParameter() as number] as string;
-                            break;
-                        case ReflectionOp.typeName: {
-                            const type = (program.stack[program.stackPointer] as Type);
-                            const name = program.stack[this.eatParameter() as number] as string;
-                            if (type.typeName) {
-                                type.originTypes = [{ typeName: type.typeName, typeArguments: type.typeArguments }, ...(type.originTypes || [])];
-                                type.typeArguments = undefined;
-                            }
-                            type.typeName = name;
-                            break;
-                        }
-                        case ReflectionOp.indexSignature: {
-                            const type = this.pop() as Type;
-                            const index = this.pop() as Type;
-                            const t: Type = { kind: ReflectionKind.indexSignature, parent: undefined as any, index, type };
-                            t.type.parent = t;
-                            t.index.parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        case ReflectionOp.objectLiteral: {
-                            let t = {
-                                kind: ReflectionKind.objectLiteral,
-                                id: state.nominalId++,
-                                types: [],
-                            } as TypeObjectLiteral;
-
-                            const frameTypes = this.popFrame() as (TypeIndexSignature | TypePropertySignature | TypeMethodSignature | TypeObjectLiteral | TypeCallSignature)[];
-                            pushObjectLiteralTypes(t, frameTypes);
-                            for (const member of t.types) member.parent = t;
-                            this.pushType(t);
-                            break;
-                        }
-                        // case ReflectionOp.pointer: {
-                        //     this.push(program.stack[this.eatParameter() as number]);
-                        //     break;
-                        // }
-                        case ReflectionOp.distribute: {
-                            this.handleDistribute(program);
-                            break;
-                        }
-                        case ReflectionOp.condition: {
-                            const right = this.pop() as Type;
-                            const left = this.pop() as Type;
-                            const condition = this.pop() as Type | number;
-                            this.popFrame();
-                            isConditionTruthy(condition) ? this.pushType(left) : this.pushType(right);
-                            break;
-                        }
-                        case ReflectionOp.jumpCondition: {
-                            const leftProgram = this.eatParameter() as number;
-                            const rightProgram = this.eatParameter() as number;
-                            const condition = this.pop() as Type | number;
-                            const truthy = isConditionTruthy(condition);
-                            this.call(truthy ? leftProgram : rightProgram);
-                            break;
-                        }
-                        case ReflectionOp.infer: {
-                            const frameOffset = this.eatParameter() as number;
-                            const stackEntryIndex = this.eatParameter() as number;
-                            const frame = program.frame;
-
-                            let last: Type = { kind: ReflectionKind.unknown };
-                            this.push({
-                                kind: ReflectionKind.infer, set: (type: Type) => {
-                                    if (last.kind !== ReflectionKind.unknown) {
-                                        if (last.kind === ReflectionKind.union || last.kind === ReflectionKind.intersection) {
-                                            if (!isTypeIncluded(last.types, type)) {
-                                                last.types.push(type);
-                                            }
-                                        } else {
-                                            if (type.parent && type.parent.kind === ReflectionKind.parameter) {
-                                                last = { kind: ReflectionKind.intersection, types: [last, type] };
-                                            } else {
-                                                last = { kind: ReflectionKind.union, types: [last, type] };
-                                            }
-                                        }
-                                    } else {
-                                        last = type;
-                                    }
-
-                                    if (frameOffset === 0) {
-                                        program.stack[frame.startIndex + 1 + stackEntryIndex] = last;
-                                    } else if (frameOffset === 1) {
-                                        program.stack[frame.previous!.startIndex + 1 + stackEntryIndex] = last;
-                                    } else if (frameOffset === 2) {
-                                        program.stack[frame.previous!.previous!.startIndex + 1 + stackEntryIndex] = last;
-                                    } else if (frameOffset === 3) {
-                                        program.stack[frame.previous!.previous!.previous!.startIndex + 1 + stackEntryIndex] = last;
-                                    } else if (frameOffset === 4) {
-                                        program.stack[frame.previous!.previous!.previous!.previous!.startIndex + 1 + stackEntryIndex] = last;
-                                    } else {
-                                        let current = frame;
-                                        for (let i = 0; i < frameOffset; i++) current = current.previous!;
-                                        program.stack[current.startIndex + 1 + stackEntryIndex] = last;
-                                    }
-                                },
-                            } as TypeInfer);
-                            break;
-                        }
-                        case ReflectionOp.extends: {
-                            const right = this.pop() as string | number | boolean | Type;
-                            const left = this.pop() as string | number | boolean | Type;
-                            const result = isExtendable(left, right);
-                            this.pushType({ kind: ReflectionKind.literal, literal: result });
-                            break;
-                        }
-                        case ReflectionOp.indexAccess: {
-                            this.handleIndexAccess();
-                            break;
-                        }
-                        case ReflectionOp.typeof: {
-                            const param1 = this.eatParameter() as number;
-                            const fn = program.stack[param1] as () => any;
-                            const value = fn();
-
-                            //typeInfer calls Processor.run() and changes this.program, so handle it correctly
-                            const result = typeInfer(value);
-                            this.push(result, program);
-
-                            //this.reflect/run might create another program onto the stack. switch to it if so
-                            if (this.program !== program) {
-                                //continue to next this.program.
-                                program.program++; //manual increment as the for loop would normally do that
-                                continue programLoop;
-                            }
-                            break;
-                        }
-                        case ReflectionOp.keyof: {
-                            this.handleKeyOf();
-                            break;
-                        }
-                        case ReflectionOp.var: {
-                            this.push({ kind: ReflectionKind.unknown, var: true });
-                            program.frame.variables++;
-                            break;
-                        }
-                        case ReflectionOp.mappedType2: {
-                            this.handleMappedType(program, true);
-                            break;
-                        }
-                        case ReflectionOp.mappedType: {
-                            this.handleMappedType(program);
-                            break;
-                        }
-                        case ReflectionOp.loads: {
-                            const frameOffset = this.eatParameter() as number;
-                            const stackEntryIndex = this.eatParameter() as number;
-                            if (frameOffset === 0) {
-                                this.push(program.stack[program.frame.startIndex + 1 + stackEntryIndex]);
-                            } else if (frameOffset === 1) {
-                                this.push(program.stack[program.frame.previous!.startIndex + 1 + stackEntryIndex]);
-                            } else if (frameOffset === 2) {
-                                this.push(program.stack[program.frame.previous!.previous!.startIndex + 1 + stackEntryIndex]);
-                            } else if (frameOffset === 3) {
-                                this.push(program.stack[program.frame.previous!.previous!.previous!.startIndex + 1 + stackEntryIndex]);
-                            } else if (frameOffset === 4) {
-                                this.push(program.stack[program.frame.previous!.previous!.previous!.previous!.startIndex + 1 + stackEntryIndex]);
-                            } else {
-                                let current = program.frame;
-                                for (let i = 0; i < frameOffset; i++) current = current.previous!;
-                                this.push(program.stack[current.startIndex + 1 + stackEntryIndex]);
-                            }
-                            break;
-                        }
-                        case ReflectionOp.arg: {
-                            //used by InlineRuntimeType too
-                            const arg = this.eatParameter() as number;
-                            const t = program.stack[arg] as Type | ReflectionClass<any> | number | string | boolean | bigint;
-                            if (t instanceof ReflectionClass) {
-                                this.push({ ...t.type, typeName: t.getClassName() });
-                            } else if ('string' === typeof t || 'number' === typeof t || 'boolean' === typeof t || 'bigint' === typeof t) {
-                                this.push({ kind: ReflectionKind.literal, literal: t });
-                            } else {
-                                this.push(t);
-                            }
-                            break;
-                        }
-                        case ReflectionOp.return: {
-                            this.returnFrame();
-                            break;
-                        }
-                        case ReflectionOp.frame: {
-                            this.pushFrame();
-                            break;
-                        }
-                        case ReflectionOp.moveFrame: {
-                            const type = this.pop();
-                            this.popFrame();
-                            if (type) this.push(type);
-                            break;
-                        }
-                        case ReflectionOp.jump: {
-                            const arg = this.eatParameter() as number;
-                            program.program = arg - 1; //-1 because next iteration does program++
-                            break;
-                        }
-                        case ReflectionOp.call: {
-                            const programPointer = this.eatParameter() as number;
-                            this.call(programPointer);
-                            break;
-                        }
-                        case ReflectionOp.nominal: {
-                            const t = program.stack[program.stackPointer] as Type;
-                            //program ended, so assign new nominal id to objectLiteral or class
-                            t.id = state.nominalId++;
-                            break;
-                        }
-                        case ReflectionOp.inline: {
-                            const pPosition = this.eatParameter() as number;
-                            const pOrFn = program.stack[pPosition] as number | Packed | (() => Packed);
-                            const p = isFunction(pOrFn) ? pOrFn() : pOrFn;
-                            if (p === undefined) {
-                                debug(`Failed runtime inlining of ${pOrFn.toString()}. Value is undefined, probably because of a circular reference or failed import.`);
-                                this.push({ kind: ReflectionKind.unknown });
-                            } else if ('number' === typeof p) {
-                                //self circular reference, usually a 0, which indicates we put the result of the current program as the type on the stack.
-                                this.push(program.resultType);
-                            } else {
-                                //when it's just a simple reference resolution like typeOf<Class>() then don't issue a new reference (no inline: true)
-                                const directReference = !!(this.isEnded() && program.previous && program.previous.end === 0);
-                                const result = this.reflect(p, [], { inline: !directReference, reuseCached: directReference });
-                                if (directReference) program.directReturn = true;
-                                this.push(result, program);
-
-                                //this.reflect/run might create another program onto the stack. switch to it if so
-                                if (this.program !== program) {
-                                    //continue to next this.program.
-                                    program.program++; //manual increment as the for loop would normally do that
-                                    continue programLoop;
-                                }
-                            }
-                            break;
-                        }
-                        case ReflectionOp.inlineCall: {
-                            const pPosition = this.eatParameter() as number;
-                            const argumentSize = this.eatParameter() as number;
-                            const inputs: Type[] = [];
-                            for (let i = 0; i < argumentSize; i++) {
-                                let input = this.pop() as Type;
-                                if ((input.kind === ReflectionKind.never || input.kind === ReflectionKind.unknown) && program.inputs[i]) input = program.inputs[i] as Type;
-                                inputs.unshift(input);
-                            }
-                            const pOrFn = program.stack[pPosition] as number | Packed | (() => Packed);
-                            const p = isFunction(pOrFn) ? pOrFn() : pOrFn;
-                            if (p === undefined) {
-                                debug(`Failed runtime inlining call of ${pOrFn.toString()}. Value is undefined, probably because of a circular reference or failed import.`);
-                                this.push({ kind: ReflectionKind.unknown });
-                            } else if ('number' === typeof p) {
-                                if (argumentSize === 0) {
-                                    //self circular reference, usually a 0, which indicates we put the result of the current program as the type on the stack.
-                                    this.push(program.resultType);
-                                } else {
-                                    const found = findExistingProgram(this.program, program.object, inputs);
-                                    if (found) {
-                                        this.push(createRef(found), program);
-                                    } else {
-                                        // process.stdout.write(`Cache miss ${pOrFn.toString()}(...${inputs.length})\n`);
-                                        //execute again the current program
-                                        const nextProgram = createProgram({
-                                            ops: program.ops,
-                                            initialStack: program.initialStack,
-                                        }, inputs);
-                                        this.push(this.runProgram(nextProgram), program);
-
-                                        //continue to next this.program that was assigned by runProgram()
-                                        program.program++; //manual increment as the for loop would normally do that
-                                        continue programLoop;
-                                    }
-                                }
-                            } else {
-                                const result = this.reflect(p, inputs);
-
-                                if (isWithAnnotations(result) && inputs.length) {
-                                    result.typeArguments = result.typeArguments || [];
-                                    for (let i = 0; i < inputs.length; i++) {
-                                        result.typeArguments[i] = inputs[i];
-                                    }
-                                }
-
-                                this.push(result, program);
-
-                                //this.reflect/run might create another program onto the stack. switch to it if so
-                                if (this.program !== program) {
-                                    //continue to next this.program.
-                                    program.program++; //manual increment as the for loop would normally do that
-                                    continue programLoop;
-                                }
-                            }
-                            break;
-                        }
-                    }
+    return program.resultType;
+  }
+
+  /**
+   * Semantic is important here: This triggers true only for the very last op of a program.
+   * If it is checked in OP inline then it could be true or false:
+   *
+   * type t<T> = T; => false since we have nominal past the inline op
+   * typeOf<T>() => true since we have no nominal past the inline op
+   */
+  protected isEnded(): boolean {
+    return this.program.program + 1 >= this.program.end;
+  }
+
+  /**
+   * Runs all scheduled programs until termination.
+   */
+  protected loop(until?: Program): Type | RuntimeStackEntry {
+    let result = this.program.stack[0];
+
+    programLoop: while (this.program.active) {
+      const program = this.program;
+      // process.stdout.write(`jump to program: ${stringifyValueWithType(program.object)}\n`);
+      for (; program.program < program.end; program.program++) {
+        const op = program.ops[program.program];
+
+        // process.stdout.write(`[${program.depth}:${program.frame.index}] step ${program.program} ${ReflectionOp[op]}\n`);
+        switch (op) {
+          case ReflectionOp.string:
+            this.pushType({ kind: ReflectionKind.string });
+            break;
+          case ReflectionOp.number:
+            this.pushType({ kind: ReflectionKind.number });
+            break;
+          case ReflectionOp.numberBrand:
+            const ref = this.eatParameter() as number;
+            this.pushType({ kind: ReflectionKind.number, brand: ref });
+            break;
+          case ReflectionOp.boolean:
+            this.pushType({ kind: ReflectionKind.boolean });
+            break;
+          case ReflectionOp.void:
+            this.pushType({ kind: ReflectionKind.void });
+            break;
+          case ReflectionOp.unknown:
+            this.pushType({ kind: ReflectionKind.unknown });
+            break;
+          case ReflectionOp.object:
+            this.pushType({ kind: ReflectionKind.object });
+            break;
+          case ReflectionOp.never:
+            this.pushType({ kind: ReflectionKind.never });
+            break;
+          case ReflectionOp.undefined:
+            this.pushType({ kind: ReflectionKind.undefined });
+            break;
+          case ReflectionOp.bigint:
+            this.pushType({ kind: ReflectionKind.bigint });
+            break;
+          case ReflectionOp.symbol:
+            this.pushType({ kind: ReflectionKind.symbol });
+            break;
+          case ReflectionOp.null:
+            this.pushType({ kind: ReflectionKind.null });
+            break;
+          case ReflectionOp.any:
+            this.pushType({ kind: ReflectionKind.any });
+            break;
+          case ReflectionOp.literal: {
+            const ref = this.eatParameter() as number;
+            this.pushType({
+              kind: ReflectionKind.literal,
+              literal: program.stack[ref] as string | number | boolean | bigint
+            });
+            break;
+          }
+          case ReflectionOp.templateLiteral: {
+            this.handleTemplateLiteral();
+            break;
+          }
+          case ReflectionOp.date:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: Date,
+              types: []
+            });
+            break;
+          case ReflectionOp.uint8Array:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: Uint8Array,
+              types: []
+            });
+            break;
+          case ReflectionOp.int8Array:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: Int8Array,
+              types: []
+            });
+            break;
+          case ReflectionOp.uint8ClampedArray:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: Uint8ClampedArray,
+              types: []
+            });
+            break;
+          case ReflectionOp.uint16Array:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: Uint16Array,
+              types: []
+            });
+            break;
+          case ReflectionOp.int16Array:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: Int16Array,
+              types: []
+            });
+            break;
+          case ReflectionOp.uint32Array:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: Uint32Array,
+              types: []
+            });
+            break;
+          case ReflectionOp.int32Array:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: Int32Array,
+              types: []
+            });
+            break;
+          case ReflectionOp.float32Array:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: Float32Array,
+              types: []
+            });
+            break;
+          case ReflectionOp.float64Array:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: Float64Array,
+              types: []
+            });
+            break;
+          case ReflectionOp.bigInt64Array:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType:
+                "undefined" !== typeof BigInt64Array
+                  ? BigInt64Array
+                  : class BigInt64ArrayNotAvailable {},
+              types: []
+            });
+            break;
+          case ReflectionOp.arrayBuffer:
+            this.pushType({
+              kind: ReflectionKind.class,
+              classType: ArrayBuffer,
+              types: []
+            });
+            break;
+          case ReflectionOp.class: {
+            const types = this.popFrame() as Type[];
+            let t = {
+              kind: ReflectionKind.class,
+              id: state.nominalId++,
+              classType: Object,
+              types: []
+            } as TypeClass;
+
+            function add(member: Type) {
+              if (member.kind === ReflectionKind.propertySignature) {
+                member = {
+                  ...member,
+                  parent: t,
+                  visibility: ReflectionVisibility.public,
+                  kind: ReflectionKind.property
+                } as TypeProperty;
+              } else if (member.kind === ReflectionKind.methodSignature) {
+                member = {
+                  ...member,
+                  parent: t,
+                  visibility: ReflectionVisibility.public,
+                  kind: ReflectionKind.method
+                } as TypeMethod;
+              }
+
+              switch (member.kind) {
+                case ReflectionKind.indexSignature: {
+                  //todo, replace the old one?
+                  t.types.push(member);
+                  break;
                 }
-
-                result = narrowOriginalLiteral(program.stack[program.stackPointer] as Type);
-                // process.stdout.write(`Done ${program.depth} in ${Date.now() - program.started}ms with ${stringifyValueWithType(program.object)} -> ${stringifyShortResolvedType(result as Type)}\n`);
-
-                if (isType(result)) {
-                    if (program.object) {
-                        if (result.kind === ReflectionKind.class && result.classType === Object) {
-                            result.classType = program.object;
-                            applyClassDecorators(result);
+                case ReflectionKind.property:
+                case ReflectionKind.method: {
+                  const existing = t.types.findIndex(
+                    v =>
+                      (v.kind === ReflectionKind.property ||
+                        v.kind === ReflectionKind.method) &&
+                      v.name === (member as TypeProperty | TypeMethod).name
+                  );
+                  if (existing !== -1) {
+                    //remove entry, since we replace it
+                    t.types.splice(existing, 1);
+                  }
+                  t.types.push(member);
+
+                  if (
+                    member.kind === ReflectionKind.method &&
+                    member.name === "constructor"
+                  ) {
+                    for (const parameter of member.parameters) {
+                      if (
+                        parameter.visibility !== undefined ||
+                        parameter.readonly
+                      ) {
+                        const property = {
+                          kind: ReflectionKind.property,
+                          name: parameter.name,
+                          visibility: parameter.visibility,
+                          default: parameter.default,
+                          type: parameter.type
+                        } as TypeProperty;
+                        if (parameter.optional) {
+                          property.optional = true;
                         }
-                        if (result.kind === ReflectionKind.function && !result.function) {
-                            result.function = program.object;
+                        if (parameter.readonly) {
+                          property.readonly = true;
                         }
+
+                        parameter.type.parent = property;
+                        add(property);
+                      }
                     }
-                    if (!program.directReturn) {
-                        result = assignResult(program.resultType, result as Type, !result.inlined);
-                        applyScheduledAnnotations(program.resultType);
-                    }
+                  }
+                  break;
                 }
+              }
+            }
 
-                program.active = false;
-                if (program.previous) this.program = program.previous;
-
-                if (program.resultTypes) for (const ref of program.resultTypes) {
-                    assignResult(ref, result as Type, false);
-                    applyScheduledAnnotations(ref);
+            for (const member of types) {
+              switch (member.kind) {
+                case ReflectionKind.objectLiteral:
+                case ReflectionKind.class: {
+                  for (const sub of member.types) add(sub);
+                  break;
                 }
-                if (until === program) {
-                    this.cache = [];
-                    return result;
+                case ReflectionKind.indexSignature:
+                case ReflectionKind.property:
+                case ReflectionKind.method: {
+                  add(member);
                 }
+              }
+              // if (member.kind === ReflectionKind.property) member.type = widenLiteral(member.type);
             }
-
-        this.cache = [];
-        return result;
-    }
-
-    private handleTuple() {
-        const types: TypeTupleMember[] = [];
-        const stackTypes = this.popFrame() as Type[];
-        for (const type of stackTypes) {
-            const resolved: TypeTupleMember = type.kind === ReflectionKind.tupleMember ? type : {
-                kind: ReflectionKind.tupleMember,
-                parent: undefined as any,
-                type,
-            };
-            type.parent = resolved;
-            if (resolved.type.kind === ReflectionKind.rest) {
-                if (resolved.type.type.kind === ReflectionKind.tuple) {
-                    for (const sub of resolved.type.type.types) {
-                        types.push(sub);
-                    }
-                } else {
-                    types.push(resolved);
-                }
-            } else {
-                types.push(resolved);
+            const args = program.frame.inputs.filter(isType);
+
+            for (const member of t.types) member.parent = t;
+            if (t.arguments)
+              for (const member of t.arguments) member.parent = t;
+
+            if (args.length) t.arguments = args;
+            t.typeArguments = program.typeParameters;
+
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.widen: {
+            const current = program.stack[program.stackPointer] as Type;
+            if (current.kind === ReflectionKind.literal) {
+              this.pushType(widenLiteral(this.pop() as TypeLiteral));
             }
-        }
-        const t: Type = { kind: ReflectionKind.tuple, types };
-        for (const member of t.types) member.parent = t;
-        this.pushType(t);
-    }
-
-    private handleIntersection() {
-        const types = this.popFrame() as Type[];
-        let result: Type | undefined = { kind: ReflectionKind.unknown };
-        if (!types.length) {
-            this.pushType({ kind: ReflectionKind.never });
-            return;
-        }
-        const annotations: Annotations = {};
-        const decorators: TypeObjectLiteral[] = [];
-        const defaultDecorators: Type[] = [];
-
-        function appendAnnotations(a: Type) {
-            if (a.annotations === annotations) return;
-            if (a.annotations) Object.assign(annotations, a.annotations);
-            if (a.decorators) decorators.push(...a.decorators as TypeObjectLiteral[]);
-        }
-
-        function handleUnion(a: Type, unionType: TypeUnion): Type {
-            if (a.kind === ReflectionKind.objectLiteral || a.kind === ReflectionKind.class) {
-                return unboxUnion({ kind: ReflectionKind.union, types: unionType.types.map(v => collapse(v, a)).filter(v => v.kind !== ReflectionKind.never) });
+            break;
+          }
+          case ReflectionOp.classExtends: {
+            const argsNumber = this.eatParameter() as number;
+            const typeArguments: Type[] = [];
+            for (let i = 0; i < argsNumber; i++) {
+              typeArguments.push(this.pop() as Type);
             }
-            return unboxUnion({ kind: ReflectionKind.union, types: unionType.types.filter(v => isExtendable(v, a)) });
-        }
-
-        function handleAndObject(a: Type, objectType: TypeObjectLiteral): Type {
-            if (objectType.types.length === 0) {
-                return isExtendable(a, objectType) ? a : { kind: ReflectionKind.never };
-            }
-            defaultDecorators.push(objectType);
-            annotations[defaultAnnotation.symbol] = defaultDecorators;
-            return a;
-        }
-
-        function collapse(a: Type, b: Type): Type {
-            if (a.kind === ReflectionKind.any) return a;
-            if (b.kind === ReflectionKind.any) return b;
 
-            if (a.kind === ReflectionKind.union) {
-                return handleUnion(b, a);
+            (
+              program.stack[program.stackPointer] as TypeClass
+            ).extendsArguments = typeArguments;
+
+            break;
+          }
+          case ReflectionOp.implements: {
+            const argsNumber = this.eatParameter() as number;
+            const types: Type[] = [];
+            for (let i = 0; i < argsNumber; i++) {
+              types.push(this.pop() as Type);
             }
 
-            if (b.kind === ReflectionKind.union) {
-                return handleUnion(a, b);
+            (program.stack[program.stackPointer] as TypeClass).implements =
+              types;
+
+            break;
+          }
+          case ReflectionOp.parameter: {
+            const ref = this.eatParameter() as number;
+            const t: Type = {
+              kind: ReflectionKind.parameter,
+              parent: undefined as any,
+              name: program.stack[ref] as string,
+              type: this.pop() as Type
+            };
+            t.type.parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.functionReference:
+          case ReflectionOp.classReference: {
+            const ref = this.eatParameter() as number;
+            const classOrFunction = resolveFunction(
+              program.stack[ref] as Function,
+              program.object
+            );
+            const inputs = this.popFrame() as Type[];
+            if (!classOrFunction) {
+              this.pushType({ kind: ReflectionKind.unknown });
+              break;
             }
 
-            if ((a.kind === ReflectionKind.objectLiteral || a.kind === ReflectionKind.class) && (b.kind === ReflectionKind.objectLiteral || b.kind === ReflectionKind.class)) {
-                appendAnnotations(a);
-                appendAnnotations(b);
-                return merge([a, b]);
+            if (!classOrFunction.__type) {
+              if (op === ReflectionOp.classReference) {
+                this.pushType({
+                  kind: ReflectionKind.class,
+                  classType: classOrFunction,
+                  typeArguments: inputs,
+                  types: []
+                });
+              } else if (op === ReflectionOp.functionReference) {
+                this.pushType({
+                  kind: ReflectionKind.function,
+                  function: classOrFunction,
+                  parameters: [],
+                  return: { kind: ReflectionKind.unknown }
+                });
+              }
+            } else {
+              //when it's just a simple reference resolution like typeOf<Class>() then enable cache re-use (so always the same type is returned)
+              const directReference = !!(
+                this.isEnded() &&
+                program.previous &&
+                program.previous.end === 0
+              );
+              const result = this.reflect(classOrFunction, inputs, {
+                inline: !directReference,
+                reuseCached: directReference
+              });
+              if (directReference) program.directReturn = true;
+              this.push(result, program);
+
+              if (isWithAnnotations(result) && inputs.length) {
+                result.typeArguments = result.typeArguments || [];
+                for (let i = 0; i < inputs.length; i++) {
+                  result.typeArguments[i] = inputs[i];
+                }
+              }
+
+              //this.reflect/run might create another program onto the stack. switch to it if so
+              if (this.program !== program) {
+                //continue to next this.program.
+                program.program++; //manual increment as the for loop would normally do that
+                continue programLoop;
+              }
             }
+            break;
+          }
+          case ReflectionOp.enum: {
+            const types = this.popFrame() as TypeEnumMember[];
+            const enumType: { [name: string]: string | number } = {};
 
-            // object & {then() ...}
-            if (a.kind === ReflectionKind.object && b.kind === ReflectionKind.objectLiteral) {
-                return b;
-            }
-            if (b.kind === ReflectionKind.object && a.kind === ReflectionKind.objectLiteral) {
-                return a;
+            let i = 0;
+            for (const type of types) {
+              if (type.default !== undefined) {
+                const v =
+                  typeof type.default === "function"
+                    ? type.default()
+                    : type.default;
+                enumType[type.name] = v;
+                if ("number" === typeof v) {
+                  i = v + 1;
+                }
+              } else {
+                enumType[type.name] = i++;
+              }
             }
-
-            if (isPrimitive(a) && b.kind === ReflectionKind.objectLiteral) {
-                return handleAndObject(a, b);
+            const values = Object.values(enumType);
+            const t: Type = {
+              kind: ReflectionKind.enum,
+              enum: enumType,
+              values,
+              indexType: getEnumType(values)
+            };
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.enumMember: {
+            const name = program.stack[this.eatParameter() as number] as
+              | string
+              | (() => string);
+            this.pushType({
+              kind: ReflectionKind.enumMember,
+              parent: undefined as any,
+              name: isFunction(name) ? name() : name
+            });
+            break;
+          }
+          case ReflectionOp.tuple: {
+            this.handleTuple();
+            break;
+          }
+          case ReflectionOp.tupleMember: {
+            const t: TypeTupleMember = {
+              kind: ReflectionKind.tupleMember,
+              type: this.pop() as Type,
+              parent: undefined as any
+            };
+            t.type.parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.namedTupleMember: {
+            const name = program.stack[this.eatParameter() as number] as string;
+            const t: Type = {
+              kind: ReflectionKind.tupleMember,
+              type: this.pop() as Type,
+              parent: undefined as any,
+              name: isFunction(name) ? name() : name
+            };
+            t.type.parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.rest: {
+            const t: Type = {
+              kind: ReflectionKind.rest,
+              parent: undefined as any,
+              type: this.pop() as Type
+            };
+            t.type.parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.regexp: {
+            this.pushType({ kind: ReflectionKind.regexp });
+            break;
+          }
+          case ReflectionOp.typeParameter:
+          case ReflectionOp.typeParameterDefault: {
+            const nameRef = this.eatParameter() as number;
+            program.typeParameters = program.typeParameters || [];
+            let type = program.frame.inputs[program.frame.variables++];
+
+            if (op === ReflectionOp.typeParameterDefault) {
+              const defaultValue = this.pop();
+              if (type === undefined) {
+                type = defaultValue;
+              }
             }
 
-            if (isPrimitive(b) && a.kind === ReflectionKind.objectLiteral) {
-                return handleAndObject(b, a);
+            if (type === undefined) {
+              //generic not instantiated
+              program.typeParameters.push({
+                kind: ReflectionKind.any,
+                typeParameter: true
+              } as any);
+              this.pushType({
+                kind: ReflectionKind.typeParameter,
+                name: program.stack[nameRef] as string
+              });
+            } else {
+              program.typeParameters.push(type as Type);
+              this.pushType(type as Type);
             }
-
-            //1 & number => 1
-            //number & 1 => 1
-            //'2' & string => '2'
-            //string & '2' => '2'
-            //2 & string => never
-            //string & 2 => never
-            //'b' & number => never
-            //number & 'b' => never
-            if (isPrimitive(a) && b.kind === ReflectionKind.literal) {
-                return isExtendable(b, a) ? b : { kind: ReflectionKind.never };
+            break;
+          }
+          case ReflectionOp.set: {
+            const t: Type = {
+              kind: ReflectionKind.class,
+              classType: Set,
+              arguments: [this.pop() as Type],
+              types: []
+            };
+            t.arguments![0].parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.map: {
+            const value = this.pop() as Type;
+            const key = this.pop() as Type;
+            const t: TypeClass = {
+              kind: ReflectionKind.class,
+              classType: Map,
+              arguments: [key, value],
+              types: []
+            };
+            t.arguments![0].parent = t;
+            t.arguments![1].parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.promise: {
+            const type = this.pop() as Type;
+            const t: TypePromise = { kind: ReflectionKind.promise, type };
+            t.type.parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.union: {
+            const types = this.popFrame() as Type[];
+            const flattened = flattenUnionTypes(types);
+            const t: Type = unboxUnion({
+              kind: ReflectionKind.union,
+              types: flattened
+            });
+            if (t.kind === ReflectionKind.union) {
+              for (const member of t.types) {
+                member.parent = t;
+              }
             }
-            if (isPrimitive(b) && a.kind === ReflectionKind.literal) {
-                return isExtendable(a, b) ? a : { kind: ReflectionKind.never };
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.intersection: {
+            let t = this.handleIntersection();
+            if (t) this.pushType(t);
+            break;
+          }
+          case ReflectionOp.callSignature:
+          case ReflectionOp.function: {
+            const types = this.popFrame() as Type[];
+            let name = program.stack[this.eatParameter() as number] as string;
+
+            const returnType =
+              types.length > 0
+                ? (types[types.length - 1] as Type)
+                : ({ kind: ReflectionKind.any } as Type);
+            const parameters =
+              types.length > 1 ? (types.slice(0, -1) as TypeParameter[]) : [];
+            if (isFunction(name)) name = name();
+
+            let t =
+              op === ReflectionOp.callSignature
+                ? ({
+                    kind: ReflectionKind.callSignature,
+                    return: returnType,
+                    parameters
+                  } as TypeCallSignature)
+                : ({
+                    kind: ReflectionKind.function,
+                    name: name || undefined,
+                    return: returnType,
+                    parameters
+                  } as TypeFunction);
+            t.return.parent = t;
+            for (const member of t.parameters) member.parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.array: {
+            const t: Type = {
+              kind: ReflectionKind.array,
+              type: this.pop() as Type
+            };
+            t.type.parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.property:
+          case ReflectionOp.propertySignature: {
+            const name = program.stack[this.eatParameter() as number] as
+              | number
+              | string
+              | symbol
+              | (() => symbol);
+            let type = this.pop() as Type;
+            let isOptional = false;
+
+            if (type.kind === ReflectionKind.union && type.types.length === 2) {
+              const undefinedType = type.types.find(
+                v => v.kind === ReflectionKind.undefined
+              );
+              const restType = type.types.find(
+                v =>
+                  v.kind !== ReflectionKind.null &&
+                  v.kind !== ReflectionKind.undefined
+              );
+              if (restType && undefinedType) {
+                type = restType;
+                isOptional = true;
+              }
             }
 
-            // two different primitives always return never
-            if (isPrimitive(a) && isPrimitive(b) && a.kind !== b.kind) {
-                return { kind: ReflectionKind.never }
+            const property = {
+              kind:
+                op === ReflectionOp.propertySignature
+                  ? ReflectionKind.propertySignature
+                  : ReflectionKind.property,
+              type,
+              name: isFunction(name) ? name() : name
+            } as TypeProperty | TypePropertySignature;
+
+            if (isOptional) {
+              property.optional = true;
             }
 
-            if (a.kind === ReflectionKind.objectLiteral || a.kind === ReflectionKind.class || a.kind === ReflectionKind.never || a.kind === ReflectionKind.unknown) return b;
-
-            if (b.annotations) {
-                Object.assign(annotations, b.annotations);
+            if (op === ReflectionOp.property) {
+              (property as TypeProperty).visibility =
+                ReflectionVisibility.public;
             }
 
-            return a;
-        }
-
-        outer:
-            for (const type of types) {
-                if (type.kind === ReflectionKind.never) continue;
-                if (type.kind === ReflectionKind.objectLiteral) {
-                    for (const decorator of typeDecorators) {
-                        if (decorator(annotations, type)) {
-                            decorators.push(type);
-                            continue outer;
-                        }
+            property.type.parent = property;
+            this.pushType(property);
+            break;
+          }
+          case ReflectionOp.method:
+          case ReflectionOp.methodSignature: {
+            let name = program.stack[this.eatParameter() as number] as
+              | number
+              | string
+              | symbol
+              | (() => symbol);
+            const types = this.popFrame() as Type[];
+            const returnType =
+              types.length > 0
+                ? (types[types.length - 1] as Type)
+                : ({ kind: ReflectionKind.any } as Type);
+            const parameters: TypeParameter[] =
+              types.length > 1 ? (types.slice(0, -1) as TypeParameter[]) : [];
+            if (isFunction(name)) name = name();
+
+            let t: TypeMethod | TypeMethodSignature =
+              op === ReflectionOp.method
+                ? {
+                    kind: ReflectionKind.method,
+                    parent: undefined as any,
+                    visibility: ReflectionVisibility.public,
+                    name,
+                    return: returnType,
+                    parameters
+                  }
+                : {
+                    kind: ReflectionKind.methodSignature,
+                    parent: undefined as any,
+                    name,
+                    return: returnType,
+                    parameters
+                  };
+            t.return.parent = t;
+            for (const member of t.parameters) member.parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.optional:
+            (
+              program.stack[program.stackPointer] as
+                | TypeBaseMember
+                | TypeTupleMember
+            ).optional = true;
+            break;
+          case ReflectionOp.readonly:
+            (program.stack[program.stackPointer] as TypeBaseMember).readonly =
+              true;
+            break;
+          case ReflectionOp.public:
+            (program.stack[program.stackPointer] as TypeBaseMember).visibility =
+              ReflectionVisibility.public;
+            break;
+          case ReflectionOp.protected:
+            (program.stack[program.stackPointer] as TypeBaseMember).visibility =
+              ReflectionVisibility.protected;
+            break;
+          case ReflectionOp.private:
+            (program.stack[program.stackPointer] as TypeBaseMember).visibility =
+              ReflectionVisibility.private;
+            break;
+          case ReflectionOp.abstract:
+            (program.stack[program.stackPointer] as TypeBaseMember).abstract =
+              true;
+            break;
+          case ReflectionOp.static:
+            (program.stack[program.stackPointer] as TypeBaseMember).static =
+              true;
+            break;
+          case ReflectionOp.defaultValue:
+            const stackDefaultValue = program.stack[program.stackPointer] as
+              | TypeProperty
+              | TypeEnumMember
+              | TypeParameter;
+
+            stackDefaultValue.default =
+              program.stack[this.eatParameter() as number];
+            break;
+          case ReflectionOp.description:
+            const stackDescription = program.stack[program.stackPointer] as
+              | TypeProperty
+              | TypeEnumMember
+              | TypeParameter
+              | TypeClass
+              | TypeMethod
+              | TypeFunction
+              | TypePropertySignature
+              | TypeMethodSignature
+              | TypeObjectLiteral;
+
+            stackDescription.description = program.stack[
+              this.eatParameter() as number
+            ] as string;
+            break;
+
+          case ReflectionOp.tags:
+            const stackTags = program.stack[program.stackPointer] as
+              | TypeProperty
+              | TypeEnumMember
+              | TypeParameter
+              | TypeClass
+              | TypeMethod
+              | TypeFunction
+              | TypePropertySignature
+              | TypeMethodSignature
+              | TypeObjectLiteral
+              | TypeCallSignature;
+
+            stackTags.tags = program.stack[
+              this.eatParameter() as number
+            ] as TagsReflection;
+            break;
+
+          case ReflectionOp.typeName: {
+            const type = program.stack[program.stackPointer] as Type;
+            const name = program.stack[this.eatParameter() as number] as string;
+            if (type.typeName) {
+              type.originTypes = [
+                { typeName: type.typeName, typeArguments: type.typeArguments },
+                ...(type.originTypes || [])
+              ];
+              type.typeArguments = undefined;
+            }
+            type.typeName = name;
+            break;
+          }
+          case ReflectionOp.indexSignature: {
+            const type = this.pop() as Type;
+            const index = this.pop() as Type;
+            const t: Type = {
+              kind: ReflectionKind.indexSignature,
+              parent: undefined as any,
+              index,
+              type
+            };
+            t.type.parent = t;
+            t.index.parent = t;
+            this.pushType(t);
+            break;
+          }
+          case ReflectionOp.objectLiteral: {
+            let t = {
+              kind: ReflectionKind.objectLiteral,
+              id: state.nominalId++,
+              types: []
+            } as TypeObjectLiteral;
+
+            const frameTypes = this.popFrame() as (
+              | TypeIndexSignature
+              | TypePropertySignature
+              | TypeMethodSignature
+              | TypeObjectLiteral
+              | TypeCallSignature
+            )[];
+            pushObjectLiteralTypes(t, frameTypes);
+            for (const member of t.types) member.parent = t;
+            this.pushType(t);
+            break;
+          }
+          // case ReflectionOp.pointer: {
+          //     this.push(program.stack[this.eatParameter() as number]);
+          //     break;
+          // }
+          case ReflectionOp.distribute: {
+            this.handleDistribute(program);
+            break;
+          }
+          case ReflectionOp.condition: {
+            const right = this.pop() as Type;
+            const left = this.pop() as Type;
+            const condition = this.pop() as Type | number;
+            this.popFrame();
+            isConditionTruthy(condition)
+              ? this.pushType(left)
+              : this.pushType(right);
+            break;
+          }
+          case ReflectionOp.jumpCondition: {
+            const leftProgram = this.eatParameter() as number;
+            const rightProgram = this.eatParameter() as number;
+            const condition = this.pop() as Type | number;
+            const truthy = isConditionTruthy(condition);
+            this.call(truthy ? leftProgram : rightProgram);
+            break;
+          }
+          case ReflectionOp.infer: {
+            const frameOffset = this.eatParameter() as number;
+            const stackEntryIndex = this.eatParameter() as number;
+            const frame = program.frame;
+
+            let last: Type = { kind: ReflectionKind.unknown };
+            this.push({
+              kind: ReflectionKind.infer,
+              set: (type: Type) => {
+                if (last.kind !== ReflectionKind.unknown) {
+                  if (
+                    last.kind === ReflectionKind.union ||
+                    last.kind === ReflectionKind.intersection
+                  ) {
+                    if (!isTypeIncluded(last.types, type)) {
+                      last.types.push(type);
+                    }
+                  } else {
+                    if (
+                      type.parent &&
+                      type.parent.kind === ReflectionKind.parameter
+                    ) {
+                      last = {
+                        kind: ReflectionKind.intersection,
+                        types: [last, type]
+                      };
+                    } else {
+                      last = {
+                        kind: ReflectionKind.union,
+                        types: [last, type]
+                      };
                     }
+                  }
+                } else {
+                  last = type;
                 }
-                if (result.kind === ReflectionKind.never) {
-                    result = { kind: ReflectionKind.never };
-                    break;
-                } else if (result.kind === ReflectionKind.unknown) {
-                    result = type;
-                    appendAnnotations(type);
+
+                if (frameOffset === 0) {
+                  program.stack[frame.startIndex + 1 + stackEntryIndex] = last;
+                } else if (frameOffset === 1) {
+                  program.stack[
+                    frame.previous!.startIndex + 1 + stackEntryIndex
+                  ] = last;
+                } else if (frameOffset === 2) {
+                  program.stack[
+                    frame.previous!.previous!.startIndex + 1 + stackEntryIndex
+                  ] = last;
+                } else if (frameOffset === 3) {
+                  program.stack[
+                    frame.previous!.previous!.previous!.startIndex +
+                      1 +
+                      stackEntryIndex
+                  ] = last;
+                } else if (frameOffset === 4) {
+                  program.stack[
+                    frame.previous!.previous!.previous!.previous!.startIndex +
+                      1 +
+                      stackEntryIndex
+                  ] = last;
                 } else {
-                    result = collapse(result, type);
+                  let current = frame;
+                  for (let i = 0; i < frameOffset; i++)
+                    current = current.previous!;
+                  program.stack[current.startIndex + 1 + stackEntryIndex] =
+                    last;
                 }
+              }
+            } as TypeInfer);
+            break;
+          }
+          case ReflectionOp.extends: {
+            const right = this.pop() as string | number | boolean | Type;
+            const left = this.pop() as string | number | boolean | Type;
+            const result = isExtendable(left, right);
+            this.pushType({ kind: ReflectionKind.literal, literal: result });
+            break;
+          }
+          case ReflectionOp.indexAccess: {
+            this.handleIndexAccess();
+            break;
+          }
+          case ReflectionOp.typeof: {
+            const param1 = this.eatParameter() as number;
+            const fn = program.stack[param1] as () => any;
+            const value = fn();
+
+            //typeInfer calls Processor.run() and changes this.program, so handle it correctly
+            const result = typeInfer(value);
+            this.push(result, program);
+
+            //this.reflect/run might create another program onto the stack. switch to it if so
+            if (this.program !== program) {
+              //continue to next this.program.
+              program.program++; //manual increment as the for loop would normally do that
+              continue programLoop;
             }
-
-        if (result.kind === ReflectionKind.unknown) {
-            //type not calculated yet, so schedule annotations. Those will be applied once the type is fully computed.
-            result.scheduleDecorators = decorators;
-        } else {
-            //copy so the original type is not modified
-            result = copyAndSetParent(result);
-            result.annotations = result.annotations || {};
-            if (decorators.length) result.decorators = decorators;
-            Object.assign(result.annotations, annotations);
-        }
-        return result;
-    }
-
-    private handleDistribute(program: Program) {
-        const programPointer = this.eatParameter() as number;
-
-        if (program.frame.distributiveLoop) {
-            const type = this.pop() as Type;
-
-            if (type.kind === ReflectionKind.never) {
-                //we ignore never, to filter them out
+            break;
+          }
+          case ReflectionOp.keyof: {
+            this.handleKeyOf();
+            break;
+          }
+          case ReflectionOp.var: {
+            this.push({ kind: ReflectionKind.unknown, var: true });
+            program.frame.variables++;
+            break;
+          }
+          case ReflectionOp.mappedType2: {
+            this.handleMappedType(program, true);
+            break;
+          }
+          case ReflectionOp.mappedType: {
+            this.handleMappedType(program);
+            break;
+          }
+          case ReflectionOp.loads: {
+            const frameOffset = this.eatParameter() as number;
+            const stackEntryIndex = this.eatParameter() as number;
+            if (frameOffset === 0) {
+              this.push(
+                program.stack[program.frame.startIndex + 1 + stackEntryIndex]
+              );
+            } else if (frameOffset === 1) {
+              this.push(
+                program.stack[
+                  program.frame.previous!.startIndex + 1 + stackEntryIndex
+                ]
+              );
+            } else if (frameOffset === 2) {
+              this.push(
+                program.stack[
+                  program.frame.previous!.previous!.startIndex +
+                    1 +
+                    stackEntryIndex
+                ]
+              );
+            } else if (frameOffset === 3) {
+              this.push(
+                program.stack[
+                  program.frame.previous!.previous!.previous!.startIndex +
+                    1 +
+                    stackEntryIndex
+                ]
+              );
+            } else if (frameOffset === 4) {
+              this.push(
+                program.stack[
+                  program.frame.previous!.previous!.previous!.previous!
+                    .startIndex +
+                    1 +
+                    stackEntryIndex
+                ]
+              );
             } else {
-                this.push(type);
-            }
-        } else {
-            //start loop
-            const distributeOver = this.pop() as Type;
-            program.frame.distributiveLoop = new Loop(distributeOver);
-        }
-
-        const next = program.frame.distributiveLoop.next();
-        if (next === undefined) {
-            //end
-            const types = this.popFrame() as Type[];
-            const result: TypeUnion = { kind: ReflectionKind.union, types: flattenUnionTypes(types) };
-            const t: Type = unboxUnion(result);
-            if (t.kind === ReflectionKind.union) for (const member of t.types) member.parent = t;
-            this.push(t);
-        } else {
-            program.stack[program.frame.startIndex + 1] = next;
-            this.call(programPointer, -1); //-1=jump back to this very same position, to be able to loop
-        }
-    }
-
-    private handleIndexAccess() {
-        const right = this.pop() as Type;
-        const left = this.pop() as Type;
-
-        if (!isType(left)) {
-            this.push({ kind: ReflectionKind.never });
-        } else {
-            const t: Type = indexAccess(left, right);
-            if (isWithAnnotations(t)) {
-                t.indexAccessOrigin = { container: left as TypeObjectLiteral, index: right as Type };
+              let current = program.frame;
+              for (let i = 0; i < frameOffset; i++) current = current.previous!;
+              this.push(
+                program.stack[current.startIndex + 1 + stackEntryIndex]
+              );
             }
-            this.push(copyAndSetParent(t));
-        }
-    }
-
-    private handleKeyOf() {
-        const type = this.pop() as Type;
-        if (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) {
-            const union = { kind: ReflectionKind.union, origin: type, types: [] } as TypeUnion;
-            for (const member of type.types) {
-                if ((member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.property) && member.name !== 'new') {
-                    union.types.push({ kind: ReflectionKind.literal, literal: member.name, parent: union, origin: member } as TypeLiteral);
-                } else if ((member.kind === ReflectionKind.methodSignature || member.kind === ReflectionKind.method) && member.name !== 'constructor') {
-                    union.types.push({ kind: ReflectionKind.literal, literal: member.name, parent: union, origin: member } as TypeLiteral);
-                }
+            break;
+          }
+          case ReflectionOp.arg: {
+            //used by InlineRuntimeType too
+            const arg = this.eatParameter() as number;
+            const t = program.stack[arg] as
+              | Type
+              | ReflectionClass<any>
+              | number
+              | string
+              | boolean
+              | bigint;
+            if (t instanceof ReflectionClass) {
+              this.push({ ...t.type, typeName: t.getClassName() });
+            } else if (
+              "string" === typeof t ||
+              "number" === typeof t ||
+              "boolean" === typeof t ||
+              "bigint" === typeof t
+            ) {
+              this.push({ kind: ReflectionKind.literal, literal: t });
+            } else {
+              this.push(t);
             }
-            this.push(union);
-        } else if (type.kind === ReflectionKind.tuple) {
-            const union = { kind: ReflectionKind.union, origin: type, types: [] } as TypeUnion;
-            for (let i = 0; i < type.types.length; i++) {
-                union.types.push({ kind: ReflectionKind.literal, literal: i, parent: union } as TypeLiteral);
+            break;
+          }
+          case ReflectionOp.return: {
+            this.returnFrame();
+            break;
+          }
+          case ReflectionOp.frame: {
+            this.pushFrame();
+            break;
+          }
+          case ReflectionOp.moveFrame: {
+            const type = this.pop();
+            this.popFrame();
+            if (type) this.push(type);
+            break;
+          }
+          case ReflectionOp.jump: {
+            const arg = this.eatParameter() as number;
+            program.program = arg - 1; //-1 because next iteration does program++
+            break;
+          }
+          case ReflectionOp.call: {
+            const programPointer = this.eatParameter() as number;
+            this.call(programPointer);
+            break;
+          }
+          case ReflectionOp.nominal: {
+            const t = program.stack[program.stackPointer] as Type;
+            //program ended, so assign new nominal id to objectLiteral or class
+            t.id = state.nominalId++;
+            break;
+          }
+          case ReflectionOp.inline: {
+            const pPosition = this.eatParameter() as number;
+            const pOrFn = program.stack[pPosition] as
+              | number
+              | Packed
+              | (() => Packed);
+            const p = isFunction(pOrFn) ? pOrFn() : pOrFn;
+            if (p === undefined) {
+              debug(
+                `Failed runtime inlining of ${pOrFn.toString()}. Value is undefined, probably because of a circular reference or failed import.`
+              );
+              this.push({ kind: ReflectionKind.unknown });
+            } else if ("number" === typeof p) {
+              //self circular reference, usually a 0, which indicates we put the result of the current program as the type on the stack.
+              this.push(program.resultType);
+            } else {
+              //when it's just a simple reference resolution like typeOf<Class>() then don't issue a new reference (no inline: true)
+              const directReference = !!(
+                this.isEnded() &&
+                program.previous &&
+                program.previous.end === 0
+              );
+              const result = this.reflect(p, [], {
+                inline: !directReference,
+                reuseCached: directReference
+              });
+              if (directReference) program.directReturn = true;
+              this.push(result, program);
+
+              //this.reflect/run might create another program onto the stack. switch to it if so
+              if (this.program !== program) {
+                //continue to next this.program.
+                program.program++; //manual increment as the for loop would normally do that
+                continue programLoop;
+              }
             }
-            this.push(union);
-        } else if (type.kind === ReflectionKind.any) {
-            this.push({ kind: ReflectionKind.union, types: [{ kind: ReflectionKind.string }, { kind: ReflectionKind.number }, { kind: ReflectionKind.symbol }] });
-        } else {
-            this.push({ kind: ReflectionKind.never });
-        }
-    }
-
-    private handleMappedType(program: Program, withName = false) {
-        const functionPointer = this.eatParameter() as number;
-        const modifier = this.eatParameter() as number;
-
-        function isSimpleIndex(index: Type): boolean {
-            if (index.kind === ReflectionKind.string || index.kind === ReflectionKind.number || index.kind === ReflectionKind.symbol) return true;
-            if (index.kind === ReflectionKind.union) {
-                const types = index.types.filter(v => isSimpleIndex(v));
-                return types.length === 0;
+            break;
+          }
+          case ReflectionOp.inlineCall: {
+            const pPosition = this.eatParameter() as number;
+            const argumentSize = this.eatParameter() as number;
+            const inputs: Type[] = [];
+            for (let i = 0; i < argumentSize; i++) {
+              let input = this.pop() as Type;
+              if (
+                (input.kind === ReflectionKind.never ||
+                  input.kind === ReflectionKind.unknown) &&
+                program.inputs[i]
+              )
+                input = program.inputs[i] as Type;
+              inputs.unshift(input);
             }
-            return false;
-        }
-
-        if (program.frame.mappedType) {
-            let type = this.pop() as Type;
-            let index: Type | string | boolean | symbol | number | bigint = program.stack[program.frame.startIndex + 1] as Type;
-            if (withName) {
-                if (type.kind === ReflectionKind.tuple) {
-                    index = type.types[1].type;
-                    type = type.types[0].type;
+            const pOrFn = program.stack[pPosition] as
+              | number
+              | Packed
+              | (() => Packed);
+            const p = isFunction(pOrFn) ? pOrFn() : pOrFn;
+            if (p === undefined) {
+              debug(
+                `Failed runtime inlining call of ${pOrFn.toString()}. Value is undefined, probably because of a circular reference or failed import.`
+              );
+              this.push({ kind: ReflectionKind.unknown });
+            } else if ("number" === typeof p) {
+              if (argumentSize === 0) {
+                //self circular reference, usually a 0, which indicates we put the result of the current program as the type on the stack.
+                this.push(program.resultType);
+              } else {
+                const found = findExistingProgram(
+                  this.program,
+                  program.object,
+                  inputs
+                );
+                if (found) {
+                  this.push(createRef(found), program);
                 } else {
-                    throw new Error('Tuple expect');
+                  // process.stdout.write(`Cache miss ${pOrFn.toString()}(...${inputs.length})\n`);
+                  //execute again the current program
+                  const nextProgram = createProgram(
+                    {
+                      ops: program.ops,
+                      initialStack: program.initialStack
+                    },
+                    inputs
+                  );
+                  this.push(this.runProgram(nextProgram), program);
+
+                  //continue to next this.program that was assigned by runProgram()
+                  program.program++; //manual increment as the for loop would normally do that
+                  continue programLoop;
                 }
-            }
-            const fromType = program.frame.mappedType.fromType;
-            const isTuple = fromType.origin && fromType.origin.kind === ReflectionKind.tuple;
-
-            if (index.kind === ReflectionKind.never) {
-                //ignore
-            } else if (index.kind === ReflectionKind.any || isSimpleIndex(index)) {
-                const t: TypeIndexSignature = { kind: ReflectionKind.indexSignature, type, index, parent: undefined as any };
-                t.type.parent = t;
-                t.index.parent = t;
-                this.push(t);
+              }
             } else {
-                let optional: true | undefined = undefined;
-                let readonly: true | undefined = undefined;
-
-                if (index.kind === ReflectionKind.literal && !(index.literal instanceof RegExp)) {
-                    optional = !!index.origin && isMember(index.origin) && index.origin.optional ? true : undefined;
-                    index = index.literal;
-                }
+              const result = this.reflect(p, inputs);
 
-                // If the type was a property, then grab the optional modifier from the property itself.
-                // Note: This is inconsistent with TS official behaviour, as
-                // mapped types only preserve modifiers when its homomorphic
-                // https://github.com/microsoft/TypeScript/pull/12563
-                if (type.parent && (type.parent.kind === ReflectionKind.propertySignature || type.parent.kind === ReflectionKind.property)) {
-                    if (type.parent.optional) optional = true;
-                    if (type.parent.readonly) readonly = true;
+              if (isWithAnnotations(result) && inputs.length) {
+                result.typeArguments = result.typeArguments || [];
+                for (let i = 0; i < inputs.length; i++) {
+                  result.typeArguments[i] = inputs[i];
                 }
+              }
 
-                const property: TypeProperty | TypePropertySignature | TypeTupleMember = type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property || type.kind === ReflectionKind.tupleMember
-                    ? type
-                    : { kind: isTuple ? ReflectionKind.tupleMember : ReflectionKind.propertySignature, name: index, type } as TypePropertySignature;
+              this.push(result, program);
 
-                if (optional) {
-                    property.optional = true;
-                }
-                if (readonly && property.kind !== ReflectionKind.tupleMember) property.readonly = true;
-
-                if (property !== type) type.parent = property;
-                if (property.type.kind !== ReflectionKind.never) {
-                    //never is filtered out
-                    if (modifier !== 0) {
-                        if (modifier & MappedModifier.optional) {
-                            property.optional = true;
-                        }
-                        if (modifier & MappedModifier.removeOptional && property.optional) {
-                            property.optional = undefined;
-                        }
-                        if (property.kind !== ReflectionKind.tupleMember) {
-                            if (modifier & MappedModifier.readonly) {
-                                property.readonly = true;
-                            }
-                            if (modifier & MappedModifier.removeReadonly && property.readonly) {
-                                property.readonly = undefined;
-                            }
-                        }
-                    }
-                    this.push(property);
-                }
+              //this.reflect/run might create another program onto the stack. switch to it if so
+              if (this.program !== program) {
+                //continue to next this.program.
+                program.program++; //manual increment as the for loop would normally do that
+                continue programLoop;
+              }
             }
-        } else {
-            program.frame.mappedType = new Loop(this.pop() as Type);
+            break;
+          }
         }
-
-        let next = program.frame.mappedType.next();
-        if (next === undefined) {
-            //end
-            const fromType = program.frame.mappedType.fromType;
-            const members = this.popFrame() as Type[];
-            let t: Type;
-
-            if (fromType.origin && fromType.origin.kind === ReflectionKind.tuple) {
-                t = { kind: ReflectionKind.tuple, types: members as any[] };
-            } else {
-                t = { kind: ReflectionKind.objectLiteral, id: state.nominalId++, types: members as any[] };
-            }
-
-            this.push(t);
-        } else {
-            if (isMember(next)) {
-                next = { kind: ReflectionKind.literal, literal: next.name };
-            }
-            program.stack[program.frame.startIndex + 1] = next; //change the mapped type parameter
-            this.call(functionPointer, -2);
+      }
+
+      result = narrowOriginalLiteral(
+        program.stack[program.stackPointer] as Type
+      );
+      // process.stdout.write(`Done ${program.depth} in ${Date.now() - program.started}ms with ${stringifyValueWithType(program.object)} -> ${stringifyShortResolvedType(result as Type)}\n`);
+
+      if (isType(result)) {
+        if (program.object) {
+          if (
+            result.kind === ReflectionKind.class &&
+            result.classType === Object
+          ) {
+            result.classType = program.object;
+            applyClassDecorators(result);
+          }
+          if (result.kind === ReflectionKind.function && !result.function) {
+            result.function = program.object;
+          }
         }
-    }
-
-    private handleTemplateLiteral() {
-        const types = this.popFrame() as Type[];
-        const result: TypeUnion = { kind: ReflectionKind.union, types: [] };
-        const cartesian = new CartesianProduct();
-        for (const type of types) {
-            cartesian.add(type);
+        if (!program.directReturn) {
+          result = assignResult(
+            program.resultType,
+            result as Type,
+            !result.inlined
+          );
+          applyScheduledAnnotations(program.resultType);
         }
-        const product = cartesian.calculate();
-
-        outer:
-            for (const combination of product) {
-                const template: TypeTemplateLiteral = { kind: ReflectionKind.templateLiteral, types: [] };
-                let hasPlaceholder = false;
-                let lastLiteral: { kind: ReflectionKind.literal, literal: string, parent?: Type } | undefined = undefined;
-                //merge a combination of types, e.g. [string, 'abc', '3'] as template literal => `${string}abc3`.
-                for (const item of combination) {
-                    if (item.kind === ReflectionKind.never) {
-                        //template literals that contain a never like `prefix.${never}` are completely ignored
-                        continue outer;
-                    }
+      }
 
-                    if (item.kind === ReflectionKind.literal) {
-                        if (lastLiteral) {
-                            lastLiteral.literal += item.literal as string + '';
-                        } else {
-                            lastLiteral = { kind: ReflectionKind.literal, literal: item.literal as string + '', parent: template };
-                            template.types.push(lastLiteral);
-                        }
-                    } else {
-                        hasPlaceholder = true;
-                        lastLiteral = undefined;
-                        item.parent = template;
-                        template.types.push(item as TypeTemplateLiteral['types'][number]);
-                    }
-                }
+      program.active = false;
+      if (program.previous) this.program = program.previous;
 
-                if (hasPlaceholder) {
-                    if (template.types.length === 1 && template.types[0].kind === ReflectionKind.string) {
-                        template.types[0].parent = result;
-                        result.types.push(template.types[0]);
-                    } else {
-                        template.parent = result;
-                        result.types.push(template);
-                    }
-                } else if (lastLiteral) {
-                    lastLiteral.parent = result;
-                    result.types.push(lastLiteral);
-                }
-            }
-        const t: Type = unboxUnion(result);
-        if (t.kind === ReflectionKind.union) for (const member of t.types) member.parent = t;
-        this.pushType(t);
+      if (program.resultTypes)
+        for (const ref of program.resultTypes) {
+          assignResult(ref, result as Type, false);
+          applyScheduledAnnotations(ref);
+        }
+      if (until === program) {
+        this.cache = [];
+        return result;
+      }
     }
 
-    protected push(entry: RuntimeStackEntry, program: Program = this.program): void {
-        const i = ++program.stackPointer;
-
-        if (i < program.stack.length) {
-            program.stack[i] = entry;
+    this.cache = [];
+    return result;
+  }
+
+  private handleTuple() {
+    const types: TypeTupleMember[] = [];
+    const stackTypes = this.popFrame() as Type[];
+    for (const type of stackTypes) {
+      const resolved: TypeTupleMember =
+        type.kind === ReflectionKind.tupleMember
+          ? type
+          : {
+              kind: ReflectionKind.tupleMember,
+              parent: undefined as any,
+              type
+            };
+      type.parent = resolved;
+      if (resolved.type.kind === ReflectionKind.rest) {
+        if (resolved.type.type.kind === ReflectionKind.tuple) {
+          for (const sub of resolved.type.type.types) {
+            types.push(sub);
+          }
         } else {
-            program.stack.push(entry);
+          types.push(resolved);
         }
+      } else {
+        types.push(resolved);
+      }
+    }
+    const t: Type = { kind: ReflectionKind.tuple, types };
+    for (const member of t.types) member.parent = t;
+    this.pushType(t);
+  }
+
+  private handleIntersection() {
+    const types = this.popFrame() as Type[];
+    let result: Type | undefined = { kind: ReflectionKind.unknown };
+    if (!types.length) {
+      this.pushType({ kind: ReflectionKind.never });
+      return;
+    }
+    const annotations: Annotations = {};
+    const decorators: TypeObjectLiteral[] = [];
+    const defaultDecorators: Type[] = [];
+
+    function appendAnnotations(a: Type) {
+      if (a.annotations === annotations) return;
+      if (a.annotations) Object.assign(annotations, a.annotations);
+      if (a.decorators)
+        decorators.push(...(a.decorators as TypeObjectLiteral[]));
     }
 
-    protected pop(): RuntimeStackEntry {
-        if (this.program.stackPointer < 0) throw new Error('Stack empty');
-        // return this.program.stack.pop()!;
-        return this.program.stack[this.program.stackPointer--];
+    function handleUnion(a: Type, unionType: TypeUnion): Type {
+      if (
+        a.kind === ReflectionKind.objectLiteral ||
+        a.kind === ReflectionKind.class
+      ) {
+        return unboxUnion({
+          kind: ReflectionKind.union,
+          types: unionType.types
+            .map(v => collapse(v, a))
+            .filter(v => v.kind !== ReflectionKind.never)
+        });
+      }
+      return unboxUnion({
+        kind: ReflectionKind.union,
+        types: unionType.types.filter(v => isExtendable(v, a))
+      });
     }
 
-    protected pushFrame(): void {
-        this.program.frame = {
-            index: this.program.frame.index + 1,
-            startIndex: this.program.stackPointer,
-            inputs: [],
-            variables: 0,
-            previous: this.program.frame,
-        };
+    function handleAndObject(a: Type, objectType: TypeObjectLiteral): Type {
+      if (objectType.types.length === 0) {
+        return isExtendable(a, objectType) ? a : { kind: ReflectionKind.never };
+      }
+      defaultDecorators.push(objectType);
+      annotations[defaultAnnotation.symbol] = defaultDecorators;
+      return a;
     }
 
-    protected popFrame(): RuntimeStackEntry[] {
-        const result = this.program.stack.slice(this.program.frame.startIndex + this.program.frame.variables + 1, this.program.stackPointer + 1);
-        this.program.stackPointer = this.program.frame.startIndex;
-        if (this.program.frame.previous) this.program.frame = this.program.frame.previous;
-        return result;
+    function collapse(a: Type, b: Type): Type {
+      if (a.kind === ReflectionKind.any) return a;
+      if (b.kind === ReflectionKind.any) return b;
+
+      if (a.kind === ReflectionKind.union) {
+        return handleUnion(b, a);
+      }
+
+      if (b.kind === ReflectionKind.union) {
+        return handleUnion(a, b);
+      }
+
+      if (
+        (a.kind === ReflectionKind.objectLiteral ||
+          a.kind === ReflectionKind.class) &&
+        (b.kind === ReflectionKind.objectLiteral ||
+          b.kind === ReflectionKind.class)
+      ) {
+        appendAnnotations(a);
+        appendAnnotations(b);
+        return merge([a, b]);
+      }
+
+      // object & {then() ...}
+      if (
+        a.kind === ReflectionKind.object &&
+        b.kind === ReflectionKind.objectLiteral
+      ) {
+        return b;
+      }
+      if (
+        b.kind === ReflectionKind.object &&
+        a.kind === ReflectionKind.objectLiteral
+      ) {
+        return a;
+      }
+
+      if (isPrimitive(a) && b.kind === ReflectionKind.objectLiteral) {
+        return handleAndObject(a, b);
+      }
+
+      if (isPrimitive(b) && a.kind === ReflectionKind.objectLiteral) {
+        return handleAndObject(b, a);
+      }
+
+      //1 & number => 1
+      //number & 1 => 1
+      //'2' & string => '2'
+      //string & '2' => '2'
+      //2 & string => never
+      //string & 2 => never
+      //'b' & number => never
+      //number & 'b' => never
+      if (isPrimitive(a) && b.kind === ReflectionKind.literal) {
+        return isExtendable(b, a) ? b : { kind: ReflectionKind.never };
+      }
+      if (isPrimitive(b) && a.kind === ReflectionKind.literal) {
+        return isExtendable(a, b) ? a : { kind: ReflectionKind.never };
+      }
+
+      // two different primitives always return never
+      if (isPrimitive(a) && isPrimitive(b) && a.kind !== b.kind) {
+        return { kind: ReflectionKind.never };
+      }
+
+      if (
+        a.kind === ReflectionKind.objectLiteral ||
+        a.kind === ReflectionKind.class ||
+        a.kind === ReflectionKind.never ||
+        a.kind === ReflectionKind.unknown
+      )
+        return b;
+
+      if (b.annotations) {
+        Object.assign(annotations, b.annotations);
+      }
+
+      return a;
     }
 
-    /**
-     * Create a new stack frame with the calling convention.
-     */
-    protected call(program: number, jumpBackTo: number = 1): void {
-        this.push(this.program.program + jumpBackTo); //the `return address`
-        this.pushFrame();
-        // process.stdout.write(`[${this.program.frame.index}] call ${program}\n`);
-        this.program.program = program - 1; //-1 because next iteration does program++
+    outer: for (const type of types) {
+      if (type.kind === ReflectionKind.never) continue;
+      if (type.kind === ReflectionKind.objectLiteral) {
+        for (const decorator of typeDecorators) {
+          if (decorator(annotations, type)) {
+            decorators.push(type);
+            continue outer;
+          }
+        }
+      }
+      if (result.kind === ReflectionKind.never) {
+        result = { kind: ReflectionKind.never };
+        break;
+      } else if (result.kind === ReflectionKind.unknown) {
+        result = type;
+        appendAnnotations(type);
+      } else {
+        result = collapse(result, type);
+      }
     }
 
-    /**
-     * Removes the stack frame, and puts the latest entry on the stack.
-     */
-    protected returnFrame(): void {
-        const returnValue = this.pop(); //latest entry on the stack is the return value
-        const returnAddress = this.program.stack[this.program.frame.startIndex]; //startIndex points the to new frame - 1 position, which is the `return address`.
-        // process.stdout.write(`[${this.program.frame.index}] return ${returnAddress}\n`);
-        this.program.stackPointer = this.program.frame.startIndex - 1; //-1 because call convention adds `return address` before entering new frame
-        this.push(returnValue);
-        if ('number' === typeof returnAddress) this.program.program = returnAddress - 1; //-1 because iteration does program++
-        if (this.program.frame.previous) this.program.frame = this.program.frame.previous;
+    if (result.kind === ReflectionKind.unknown) {
+      //type not calculated yet, so schedule annotations. Those will be applied once the type is fully computed.
+      result.scheduleDecorators = decorators;
+    } else {
+      //copy so the original type is not modified
+      result = copyAndSetParent(result);
+      result.annotations = result.annotations || {};
+      if (decorators.length) result.decorators = decorators;
+      Object.assign(result.annotations, annotations);
     }
+    return result;
+  }
 
-    protected pushType(type: Type): void {
+  private handleDistribute(program: Program) {
+    const programPointer = this.eatParameter() as number;
+
+    if (program.frame.distributiveLoop) {
+      const type = this.pop() as Type;
+
+      if (type.kind === ReflectionKind.never) {
+        //we ignore never, to filter them out
+      } else {
         this.push(type);
+      }
+    } else {
+      //start loop
+      const distributeOver = this.pop() as Type;
+      program.frame.distributiveLoop = new Loop(distributeOver);
     }
 
-    protected eatParameter(): RuntimeStackEntry {
-        return this.program.ops[++this.program.program];
+    const next = program.frame.distributiveLoop.next();
+    if (next === undefined) {
+      //end
+      const types = this.popFrame() as Type[];
+      const result: TypeUnion = {
+        kind: ReflectionKind.union,
+        types: flattenUnionTypes(types)
+      };
+      const t: Type = unboxUnion(result);
+      if (t.kind === ReflectionKind.union)
+        for (const member of t.types) member.parent = t;
+      this.push(t);
+    } else {
+      program.stack[program.frame.startIndex + 1] = next;
+      this.call(programPointer, -1); //-1=jump back to this very same position, to be able to loop
     }
-}
-
-function typeInferFromContainer(container: Iterable<any>): Type {
-    const union: TypeUnion = { kind: ReflectionKind.union, types: [] };
-    for (const item of container) {
-        const type = widenLiteral(typeInfer(item));
-        if (!isTypeIncluded(union.types, type)) union.types.push(type);
+  }
+
+  private handleIndexAccess() {
+    const right = this.pop() as Type;
+    const left = this.pop() as Type;
+
+    if (!isType(left)) {
+      this.push({ kind: ReflectionKind.never });
+    } else {
+      const t: Type = indexAccess(left, right);
+      if (isWithAnnotations(t)) {
+        t.indexAccessOrigin = {
+          container: left as TypeObjectLiteral,
+          index: right as Type
+        };
+      }
+      this.push(copyAndSetParent(t));
     }
+  }
 
-    return union.types.length === 0 ? { kind: ReflectionKind.any } : union.types.length === 1 ? union.types[0] : union;
-}
-
-export function typeInfer(value: any): Type {
-    if ('string' === typeof value || 'number' === typeof value || 'boolean' === typeof value || 'bigint' === typeof value || 'symbol' === typeof value) {
-        return { kind: ReflectionKind.literal, literal: value };
-    } else if (null === value) {
-        return { kind: ReflectionKind.null };
-    } else if (undefined === value) {
-        return { kind: ReflectionKind.undefined };
-    } else if (value instanceof RegExp) {
-        return { kind: ReflectionKind.literal, literal: value };
-    } else if ('function' === typeof value) {
-        if (isArray(value.__type)) {
-            //with emitted types: function or class
-            //don't use resolveRuntimeType since we don't allow cache here
-            // console.log('typeInfer of', value.name);
-            return Processor.get().reflect(value, undefined, { inline: true }) as Type;
+  private handleKeyOf() {
+    const type = this.pop() as Type;
+    if (
+      type.kind === ReflectionKind.objectLiteral ||
+      type.kind === ReflectionKind.class
+    ) {
+      const union = {
+        kind: ReflectionKind.union,
+        origin: type,
+        types: []
+      } as TypeUnion;
+      for (const member of type.types) {
+        if (
+          (member.kind === ReflectionKind.propertySignature ||
+            member.kind === ReflectionKind.property) &&
+          member.name !== "new"
+        ) {
+          union.types.push({
+            kind: ReflectionKind.literal,
+            literal: member.name,
+            parent: union,
+            origin: member
+          } as TypeLiteral);
+        } else if (
+          (member.kind === ReflectionKind.methodSignature ||
+            member.kind === ReflectionKind.method) &&
+          member.name !== "constructor"
+        ) {
+          union.types.push({
+            kind: ReflectionKind.literal,
+            literal: member.name,
+            parent: union,
+            origin: member
+          } as TypeLiteral);
         }
+      }
+      this.push(union);
+    } else if (type.kind === ReflectionKind.tuple) {
+      const union = {
+        kind: ReflectionKind.union,
+        origin: type,
+        types: []
+      } as TypeUnion;
+      for (let i = 0; i < type.types.length; i++) {
+        union.types.push({
+          kind: ReflectionKind.literal,
+          literal: i,
+          parent: union
+        } as TypeLiteral);
+      }
+      this.push(union);
+    } else if (type.kind === ReflectionKind.any) {
+      this.push({
+        kind: ReflectionKind.union,
+        types: [
+          { kind: ReflectionKind.string },
+          { kind: ReflectionKind.number },
+          { kind: ReflectionKind.symbol }
+        ]
+      });
+    } else {
+      this.push({ kind: ReflectionKind.never });
+    }
+  }
+
+  private handleMappedType(program: Program, withName = false) {
+    const functionPointer = this.eatParameter() as number;
+    const modifier = this.eatParameter() as number;
+
+    function isSimpleIndex(index: Type): boolean {
+      if (
+        index.kind === ReflectionKind.string ||
+        index.kind === ReflectionKind.number ||
+        index.kind === ReflectionKind.symbol
+      )
+        return true;
+      if (index.kind === ReflectionKind.union) {
+        const types = index.types.filter(v => isSimpleIndex(v));
+        return types.length === 0;
+      }
+      return false;
+    }
 
-        if (isClass(value)) {
-            //unknown class
-            return { kind: ReflectionKind.class, classType: value as ClassType, types: [] };
+    if (program.frame.mappedType) {
+      let type = this.pop() as Type;
+      let index: Type | string | boolean | symbol | number | bigint = program
+        .stack[program.frame.startIndex + 1] as Type;
+      if (withName) {
+        if (type.kind === ReflectionKind.tuple) {
+          index = type.types[1].type;
+          type = type.types[0].type;
+        } else {
+          throw new Error("Tuple expect");
+        }
+      }
+      const fromType = program.frame.mappedType.fromType;
+      const isTuple =
+        fromType.origin && fromType.origin.kind === ReflectionKind.tuple;
+
+      if (index.kind === ReflectionKind.never) {
+        //ignore
+      } else if (index.kind === ReflectionKind.any || isSimpleIndex(index)) {
+        const t: TypeIndexSignature = {
+          kind: ReflectionKind.indexSignature,
+          type,
+          index,
+          parent: undefined as any
+        };
+        t.type.parent = t;
+        t.index.parent = t;
+        this.push(t);
+      } else {
+        let optional: true | undefined = undefined;
+        let readonly: true | undefined = undefined;
+
+        if (
+          index.kind === ReflectionKind.literal &&
+          !(index.literal instanceof RegExp)
+        ) {
+          optional =
+            !!index.origin && isMember(index.origin) && index.origin.optional
+              ? true
+              : undefined;
+          index = index.literal;
         }
 
-        return { kind: ReflectionKind.function, function: value, name: value.name, return: { kind: ReflectionKind.any }, parameters: [] };
-    } else if (isArray(value)) {
-        return { kind: ReflectionKind.array, type: typeInferFromContainer(value) };
-    } else if ('object' === typeof value) {
-        const constructor = value.constructor;
-        if ('function' === typeof constructor && constructor !== Object && isArray(constructor.__type)) {
-            //with emitted types
-            //don't use resolveRuntimeType since we don't allow cache here
-            return Processor.get().reflect(constructor, undefined, { inline: true }) as Type;
+        // If the type was a property, then grab the optional modifier from the property itself.
+        // Note: This is inconsistent with TS official behaviour, as
+        // mapped types only preserve modifiers when its homomorphic
+        // https://github.com/microsoft/TypeScript/pull/12563
+        if (
+          type.parent &&
+          (type.parent.kind === ReflectionKind.propertySignature ||
+            type.parent.kind === ReflectionKind.property)
+        ) {
+          if (type.parent.optional) optional = true;
+          if (type.parent.readonly) readonly = true;
         }
 
-        if (constructor === RegExp) return { kind: ReflectionKind.regexp };
-        if (constructor === Date) return { kind: ReflectionKind.class, classType: Date, types: [] };
-        if (constructor === Set) {
-            const type = typeInferFromContainer(value);
-            return { kind: ReflectionKind.class, classType: Set, arguments: [type], types: [] };
+        const property: TypeProperty | TypePropertySignature | TypeTupleMember =
+          type.kind === ReflectionKind.propertySignature ||
+          type.kind === ReflectionKind.property ||
+          type.kind === ReflectionKind.tupleMember
+            ? type
+            : ({
+                kind: isTuple
+                  ? ReflectionKind.tupleMember
+                  : ReflectionKind.propertySignature,
+                name: index,
+                type
+              } as TypePropertySignature);
+
+        if (optional) {
+          property.optional = true;
         }
+        if (readonly && property.kind !== ReflectionKind.tupleMember)
+          property.readonly = true;
+
+        if (property !== type) type.parent = property;
+        if (property.type.kind !== ReflectionKind.never) {
+          //never is filtered out
+          if (modifier !== 0) {
+            if (modifier & MappedModifier.optional) {
+              property.optional = true;
+            }
+            if (modifier & MappedModifier.removeOptional && property.optional) {
+              property.optional = undefined;
+            }
+            if (property.kind !== ReflectionKind.tupleMember) {
+              if (modifier & MappedModifier.readonly) {
+                property.readonly = true;
+              }
+              if (
+                modifier & MappedModifier.removeReadonly &&
+                property.readonly
+              ) {
+                property.readonly = undefined;
+              }
+            }
+          }
+          this.push(property);
+        }
+      }
+    } else {
+      program.frame.mappedType = new Loop(this.pop() as Type);
+    }
 
-        if (constructor === Map) {
-            const keyType = typeInferFromContainer((value as Map<any, any>).keys());
-            const valueType = typeInferFromContainer((value as Map<any, any>).values());
-            return { kind: ReflectionKind.class, classType: Map, arguments: [keyType, valueType], types: [] };
+    let next = program.frame.mappedType.next();
+    if (next === undefined) {
+      //end
+      const fromType = program.frame.mappedType.fromType;
+      const members = this.popFrame() as Type[];
+      let t: Type;
+
+      if (fromType.origin && fromType.origin.kind === ReflectionKind.tuple) {
+        t = { kind: ReflectionKind.tuple, types: members as any[] };
+      } else {
+        t = {
+          kind: ReflectionKind.objectLiteral,
+          id: state.nominalId++,
+          types: members as any[]
+        };
+      }
+
+      this.push(t);
+    } else {
+      if (isMember(next)) {
+        next = { kind: ReflectionKind.literal, literal: next.name };
+      }
+      program.stack[program.frame.startIndex + 1] = next; //change the mapped type parameter
+      this.call(functionPointer, -2);
+    }
+  }
+
+  private handleTemplateLiteral() {
+    const types = this.popFrame() as Type[];
+    const result: TypeUnion = { kind: ReflectionKind.union, types: [] };
+    const cartesian = new CartesianProduct();
+    for (const type of types) {
+      cartesian.add(type);
+    }
+    const product = cartesian.calculate();
+
+    outer: for (const combination of product) {
+      const template: TypeTemplateLiteral = {
+        kind: ReflectionKind.templateLiteral,
+        types: []
+      };
+      let hasPlaceholder = false;
+      let lastLiteral:
+        | { kind: ReflectionKind.literal; literal: string; parent?: Type }
+        | undefined = undefined;
+      //merge a combination of types, e.g. [string, 'abc', '3'] as template literal => `${string}abc3`.
+      for (const item of combination) {
+        if (item.kind === ReflectionKind.never) {
+          //template literals that contain a never like `prefix.${never}` are completely ignored
+          continue outer;
         }
 
-        //generate a new program that builds a objectLiteral. This is necessary since typeInfer() with its Processor.reflect() calls might return immediately TypeAny if
-        //the execution was scheduled (if we are in an executing program) so we can not depend on the result directly.
-        //each part of the program of a value[i] is executed after the current OP, so we have to schedule new OPs doing the same as
-        //in this loop here and construct the objectLiteral in the VM.
-        const resultType: TypeObjectLiteral = { kind: ReflectionKind.objectLiteral, id: state.nominalId++, types: [] };
-        const ops: ReflectionOp[] = [];
-        const stack: RuntimeStackEntry[] = [];
-
-        for (const i in value) {
-            const indexTypeOfArg = stack.length;
-            stack.push(() => value[i]);
-            ops.push(ReflectionOp.typeof, indexTypeOfArg, ReflectionOp.widen);
-
-            const indexName = stack.length;
-            stack.push(i);
-            ops.push(ReflectionOp.propertySignature, indexName);
+        if (item.kind === ReflectionKind.literal) {
+          if (lastLiteral) {
+            lastLiteral.literal += (item.literal as string) + "";
+          } else {
+            lastLiteral = {
+              kind: ReflectionKind.literal,
+              literal: (item.literal as string) + "",
+              parent: template
+            };
+            template.types.push(lastLiteral);
+          }
+        } else {
+          hasPlaceholder = true;
+          lastLiteral = undefined;
+          item.parent = template;
+          template.types.push(item as TypeTemplateLiteral["types"][number]);
+        }
+      }
+
+      if (hasPlaceholder) {
+        if (
+          template.types.length === 1 &&
+          template.types[0].kind === ReflectionKind.string
+        ) {
+          template.types[0].parent = result;
+          result.types.push(template.types[0]);
+        } else {
+          template.parent = result;
+          result.types.push(template);
         }
+      } else if (lastLiteral) {
+        lastLiteral.parent = result;
+        result.types.push(lastLiteral);
+      }
+    }
+    const t: Type = unboxUnion(result);
+    if (t.kind === ReflectionKind.union)
+      for (const member of t.types) member.parent = t;
+    this.pushType(t);
+  }
+
+  protected push(
+    entry: RuntimeStackEntry,
+    program: Program = this.program
+  ): void {
+    const i = ++program.stackPointer;
+
+    if (i < program.stack.length) {
+      program.stack[i] = entry;
+    } else {
+      program.stack.push(entry);
+    }
+  }
+
+  protected pop(): RuntimeStackEntry {
+    if (this.program.stackPointer < 0) throw new Error("Stack empty");
+    // return this.program.stack.pop()!;
+    return this.program.stack[this.program.stackPointer--];
+  }
+
+  protected pushFrame(): void {
+    this.program.frame = {
+      index: this.program.frame.index + 1,
+      startIndex: this.program.stackPointer,
+      inputs: [],
+      variables: 0,
+      previous: this.program.frame
+    };
+  }
+
+  protected popFrame(): RuntimeStackEntry[] {
+    const result = this.program.stack.slice(
+      this.program.frame.startIndex + this.program.frame.variables + 1,
+      this.program.stackPointer + 1
+    );
+    this.program.stackPointer = this.program.frame.startIndex;
+    if (this.program.frame.previous)
+      this.program.frame = this.program.frame.previous;
+    return result;
+  }
+
+  /**
+   * Create a new stack frame with the calling convention.
+   */
+  protected call(program: number, jumpBackTo: number = 1): void {
+    this.push(this.program.program + jumpBackTo); //the `return address`
+    this.pushFrame();
+    // process.stdout.write(`[${this.program.frame.index}] call ${program}\n`);
+    this.program.program = program - 1; //-1 because next iteration does program++
+  }
+
+  /**
+   * Removes the stack frame, and puts the latest entry on the stack.
+   */
+  protected returnFrame(): void {
+    const returnValue = this.pop(); //latest entry on the stack is the return value
+    const returnAddress = this.program.stack[this.program.frame.startIndex]; //startIndex points the to new frame - 1 position, which is the `return address`.
+    // process.stdout.write(`[${this.program.frame.index}] return ${returnAddress}\n`);
+    this.program.stackPointer = this.program.frame.startIndex - 1; //-1 because call convention adds `return address` before entering new frame
+    this.push(returnValue);
+    if ("number" === typeof returnAddress)
+      this.program.program = returnAddress - 1; //-1 because iteration does program++
+    if (this.program.frame.previous)
+      this.program.frame = this.program.frame.previous;
+  }
+
+  protected pushType(type: Type): void {
+    this.push(type);
+  }
+
+  protected eatParameter(): RuntimeStackEntry {
+    return this.program.ops[++this.program.program];
+  }
+}
 
-        ops.push(ReflectionOp.objectLiteral);
+function typeInferFromContainer(container: Iterable<any>): Type {
+  const union: TypeUnion = { kind: ReflectionKind.union, types: [] };
+  for (const item of container) {
+    const type = widenLiteral(typeInfer(item));
+    if (!isTypeIncluded(union.types, type)) union.types.push(type);
+  }
+
+  return union.types.length === 0
+    ? { kind: ReflectionKind.any }
+    : union.types.length === 1
+      ? union.types[0]
+      : union;
+}
 
-        return Processor.get().runProgram(createProgram({ ops, stack, resultType })) as Type;
+export function typeInfer(value: any): Type {
+  if (
+    "string" === typeof value ||
+    "number" === typeof value ||
+    "boolean" === typeof value ||
+    "bigint" === typeof value ||
+    "symbol" === typeof value
+  ) {
+    return { kind: ReflectionKind.literal, literal: value };
+  } else if (null === value) {
+    return { kind: ReflectionKind.null };
+  } else if (undefined === value) {
+    return { kind: ReflectionKind.undefined };
+  } else if (value instanceof RegExp) {
+    return { kind: ReflectionKind.literal, literal: value };
+  } else if ("function" === typeof value) {
+    if (isArray(value.__type)) {
+      //with emitted types: function or class
+      //don't use resolveRuntimeType since we don't allow cache here
+      // console.log('typeInfer of', value.name);
+      return Processor.get().reflect(value, undefined, {
+        inline: true
+      }) as Type;
     }
-    return { kind: ReflectionKind.any };
-}
 
-function applyClassDecorators(type: TypeClass) {
-    if (!isWithDeferredDecorators(type.classType)) return;
+    if (isClass(value)) {
+      //unknown class
+      return {
+        kind: ReflectionKind.class,
+        classType: value as ClassType,
+        types: []
+      };
+    }
 
-    for (const decorator of type.classType.__decorators) {
-        const { data, property, parameterIndexOrDescriptor } = decorator;
+    return {
+      kind: ReflectionKind.function,
+      function: value,
+      name: value.name,
+      return: { kind: ReflectionKind.any },
+      parameters: []
+    };
+  } else if (isArray(value)) {
+    return { kind: ReflectionKind.array, type: typeInferFromContainer(value) };
+  } else if ("object" === typeof value) {
+    const constructor = value.constructor;
+    if (
+      "function" === typeof constructor &&
+      constructor !== Object &&
+      isArray(constructor.__type)
+    ) {
+      //with emitted types
+      //don't use resolveRuntimeType since we don't allow cache here
+      return Processor.get().reflect(constructor, undefined, {
+        inline: true
+      }) as Type;
+    }
 
-        if (property !== undefined) {
-            const member = getMember(type, property);
-            if (!member) continue;
+    if (constructor === RegExp) return { kind: ReflectionKind.regexp };
+    if (constructor === Date)
+      return { kind: ReflectionKind.class, classType: Date, types: [] };
+    if (constructor === Set) {
+      const type = typeInferFromContainer(value);
+      return {
+        kind: ReflectionKind.class,
+        classType: Set,
+        arguments: [type],
+        types: []
+      };
+    }
 
-            if (member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.property) {
-                applyPropertyDecorator(member.type, data);
-            }
+    if (constructor === Map) {
+      const keyType = typeInferFromContainer((value as Map<any, any>).keys());
+      const valueType = typeInferFromContainer(
+        (value as Map<any, any>).values()
+      );
+      return {
+        kind: ReflectionKind.class,
+        classType: Map,
+        arguments: [keyType, valueType],
+        types: []
+      };
+    }
 
-            if ('number' === typeof parameterIndexOrDescriptor && (member.kind === ReflectionKind.method || member.kind === ReflectionKind.methodSignature)) {
-                const param = member.parameters[parameterIndexOrDescriptor];
-                if (param) {
-                    applyPropertyDecorator(param.type, data);
-                }
-            }
+    //generate a new program that builds a objectLiteral. This is necessary since typeInfer() with its Processor.reflect() calls might return immediately TypeAny if
+    //the execution was scheduled (if we are in an executing program) so we can not depend on the result directly.
+    //each part of the program of a value[i] is executed after the current OP, so we have to schedule new OPs doing the same as
+    //in this loop here and construct the objectLiteral in the VM.
+    const resultType: TypeObjectLiteral = {
+      kind: ReflectionKind.objectLiteral,
+      id: state.nominalId++,
+      types: []
+    };
+    const ops: ReflectionOp[] = [];
+    const stack: RuntimeStackEntry[] = [];
+
+    for (const i in value) {
+      const indexTypeOfArg = stack.length;
+      stack.push(() => value[i]);
+      ops.push(ReflectionOp.typeof, indexTypeOfArg, ReflectionOp.widen);
+
+      const indexName = stack.length;
+      stack.push(i);
+      ops.push(ReflectionOp.propertySignature, indexName);
+    }
+
+    ops.push(ReflectionOp.objectLiteral);
+
+    return Processor.get().runProgram(
+      createProgram({ ops, stack, resultType })
+    ) as Type;
+  }
+  return { kind: ReflectionKind.any };
+}
+
+function applyClassDecorators(type: TypeClass) {
+  if (!isWithDeferredDecorators(type.classType)) return;
+
+  for (const decorator of type.classType.__decorators) {
+    const { data, property, parameterIndexOrDescriptor } = decorator;
+
+    if (property !== undefined) {
+      const member = getMember(type, property);
+      if (!member) continue;
+
+      if (
+        member.kind === ReflectionKind.propertySignature ||
+        member.kind === ReflectionKind.property
+      ) {
+        applyPropertyDecorator(member.type, data);
+      }
+
+      if (
+        "number" === typeof parameterIndexOrDescriptor &&
+        (member.kind === ReflectionKind.method ||
+          member.kind === ReflectionKind.methodSignature)
+      ) {
+        const param = member.parameters[parameterIndexOrDescriptor];
+        if (param) {
+          applyPropertyDecorator(param.type, data);
         }
+      }
     }
+  }
 }
 
 function applyPropertyDecorator(type: Type, data: TData) {
-    //map @t.validate to Validate<>
-    if (data.validators.length && isWithAnnotations(type)) {
-        const annotations = getAnnotations(type);
-        for (const validator of data.validators) {
-            validationAnnotation.register(annotations, {
-                name: 'function',
-                args: [{ kind: ReflectionKind.function, function: validator, parameters: [], return: { kind: ReflectionKind.any } }],
-            });
-        }
+  //map @t.validate to Validate<>
+  if (data.validators.length && isWithAnnotations(type)) {
+    const annotations = getAnnotations(type);
+    for (const validator of data.validators) {
+      validationAnnotation.register(annotations, {
+        name: "function",
+        args: [
+          {
+            kind: ReflectionKind.function,
+            function: validator,
+            parameters: [],
+            return: { kind: ReflectionKind.any }
+          }
+        ]
+      });
     }
+  }
 }
 
-function collapseFunctionToMethod(member: TypePropertySignature | TypeMethodSignature): member is TypePropertySignature & { type: TypeMethodSignature } {
-    return member.kind === ReflectionKind.propertySignature && member.type.kind === ReflectionKind.function && member.type.function !== Function;
+function collapseFunctionToMethod(
+  member: TypePropertySignature | TypeMethodSignature
+): member is TypePropertySignature & { type: TypeMethodSignature } {
+  return (
+    member.kind === ReflectionKind.propertySignature &&
+    member.type.kind === ReflectionKind.function &&
+    member.type.function !== Function
+  );
 }
 
 function pushObjectLiteralTypes(
-    type: TypeObjectLiteral,
-    types: (TypeIndexSignature | TypePropertySignature | TypeMethodSignature | TypeObjectLiteral | TypeCallSignature)[],
+  type: TypeObjectLiteral,
+  types: (
+    | TypeIndexSignature
+    | TypePropertySignature
+    | TypeMethodSignature
+    | TypeObjectLiteral
+    | TypeCallSignature
+  )[]
 ) {
-    let annotations: Annotations = {};
-    const decorators: Type[] = [];
-
-    outer:
-        for (const member of types) {
-            if (member.kind === ReflectionKind.propertySignature && member.type.kind === ReflectionKind.never) continue;
-
-            if (member.kind === ReflectionKind.objectLiteral) {
-                //all `extends T` expression land at the beginning of the stack frame, and are always an objectLiteral.
-                //we use it as base and move its types first into types
-
-                //it might be a decorator
-                for (const decorator of typeDecorators) {
-                    if (decorator(annotations, member)) {
-                        decorators.push(member);
-                        continue outer;
-                    }
-                }
-
-                type.implements ||= [];
-                type.implements.push(member);
-
-                pushObjectLiteralTypes(type, member.types);
-
-                //redirect decorators
-                if (member.decorators) {
-                    decorators.push(...member.decorators);
-                }
-                if (member.annotations) {
-                    annotations = Object.assign(member.annotations, annotations);
-                }
-            } else if (member.kind === ReflectionKind.indexSignature) {
-                //note: is it possible to overwrite an index signature?
-                type.types.push(member);
-            } else if (member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.methodSignature) {
-                const toAdd = collapseFunctionToMethod(member) ? {
-                    kind: ReflectionKind.methodSignature,
-                    name: member.name,
-                    optional: member.optional,
-                    parameters: member.type.parameters,
-                    return: member.type.return,
-                } as TypeMethodSignature : member;
-
-                const existing = type.types.findIndex(v => (v.kind === ReflectionKind.propertySignature || v.kind === ReflectionKind.methodSignature) && v.name === toAdd.name);
-                if (existing !== -1) {
-                    //remove entry, since we replace it
-                    type.types.splice(existing, 1, toAdd);
-                } else {
-                    type.types.push(toAdd);
-                }
-            } else if (member.kind === ReflectionKind.callSignature) {
-                type.types.push(member);
-            }
+  let annotations: Annotations = {};
+  const decorators: Type[] = [];
+
+  outer: for (const member of types) {
+    if (
+      member.kind === ReflectionKind.propertySignature &&
+      member.type.kind === ReflectionKind.never
+    )
+      continue;
+
+    if (member.kind === ReflectionKind.objectLiteral) {
+      //all `extends T` expression land at the beginning of the stack frame, and are always an objectLiteral.
+      //we use it as base and move its types first into types
+
+      //it might be a decorator
+      for (const decorator of typeDecorators) {
+        if (decorator(annotations, member)) {
+          decorators.push(member);
+          continue outer;
         }
+      }
+
+      type.implements ||= [];
+      type.implements.push(member);
+
+      pushObjectLiteralTypes(type, member.types);
+
+      //redirect decorators
+      if (member.decorators) {
+        decorators.push(...member.decorators);
+      }
+      if (member.annotations) {
+        annotations = Object.assign(member.annotations, annotations);
+      }
+    } else if (member.kind === ReflectionKind.indexSignature) {
+      //note: is it possible to overwrite an index signature?
+      type.types.push(member);
+    } else if (
+      member.kind === ReflectionKind.propertySignature ||
+      member.kind === ReflectionKind.methodSignature
+    ) {
+      const toAdd = collapseFunctionToMethod(member)
+        ? ({
+            kind: ReflectionKind.methodSignature,
+            name: member.name,
+            optional: member.optional,
+            parameters: member.type.parameters,
+            return: member.type.return
+          } as TypeMethodSignature)
+        : member;
+
+      const existing = type.types.findIndex(
+        v =>
+          (v.kind === ReflectionKind.propertySignature ||
+            v.kind === ReflectionKind.methodSignature) &&
+          v.name === toAdd.name
+      );
+      if (existing !== -1) {
+        //remove entry, since we replace it
+        type.types.splice(existing, 1, toAdd);
+      } else {
+        type.types.push(toAdd);
+      }
+    } else if (member.kind === ReflectionKind.callSignature) {
+      type.types.push(member);
+    }
+  }
 
-    type.annotations = type.annotations || {};
-    if (decorators.length) type.decorators = decorators;
+  type.annotations = type.annotations || {};
+  if (decorators.length) type.decorators = decorators;
 
-    Object.assign(type.annotations, annotations);
+  Object.assign(type.annotations, annotations);
 }
 
 export function getEnumType(values: any[]): Type {
-    let allowUndefined = false;
-    let allowNull = false;
-    let allowString = false;
-    let allowNumber = false;
-
-    for (const v of values) {
-        if (v === undefined) allowUndefined = true;
-        if (v === null) allowNull = true;
-        if (typeof v === 'number') allowNumber = true;
-        if (typeof v === 'string') allowString = true;
-    }
-
-    const union: TypeUnion = { kind: ReflectionKind.union, types: [] };
-    if (allowString) union.types.push({ kind: ReflectionKind.string });
-    if (allowNumber) union.types.push({ kind: ReflectionKind.number });
-    if (allowNull) union.types.push({ kind: ReflectionKind.null });
-    if (allowUndefined) union.types.push({ kind: ReflectionKind.undefined });
-
-    return unboxUnion(union);
+  let allowUndefined = false;
+  let allowNull = false;
+  let allowString = false;
+  let allowNumber = false;
+
+  for (const v of values) {
+    if (v === undefined) allowUndefined = true;
+    if (v === null) allowNull = true;
+    if (typeof v === "number") allowNumber = true;
+    if (typeof v === "string") allowString = true;
+  }
+
+  const union: TypeUnion = { kind: ReflectionKind.union, types: [] };
+  if (allowString) union.types.push({ kind: ReflectionKind.string });
+  if (allowNumber) union.types.push({ kind: ReflectionKind.number });
+  if (allowNull) union.types.push({ kind: ReflectionKind.null });
+  if (allowUndefined) union.types.push({ kind: ReflectionKind.undefined });
+
+  return unboxUnion(union);
 }
 
 function resolveFunction<T extends Function>(fn: T, forObject: any): any {
-    try {
-        return fn();
-    } catch (error) {
-        return undefined;
-        // throw new Error(`Could not resolve function of object ${getClassName(forObject)} via ${fn.toString()}: ${error}`);
-    }
+  try {
+    return fn();
+  } catch (error) {
+    return undefined;
+    // throw new Error(`Could not resolve function of object ${getClassName(forObject)} via ${fn.toString()}: ${error}`);
+  }
 }
diff --git a/src/reflection/reflection.ts b/src/reflection/reflection.ts
index 0cad76e9133bb808da3e4df40881929b737fc515..4e573f1fd8dbcea608dcba57d0d950609dfb5352 100644
--- a/src/reflection/reflection.ts
+++ b/src/reflection/reflection.ts
@@ -9,65 +9,66 @@
  */
 
 import {
-    assertType,
-    autoIncrementAnnotation,
-    BackReferenceOptionsResolved,
-    clearTypeJitContainer,
-    copyAndSetParent,
-    dataAnnotation,
-    databaseAnnotation,
-    DatabaseFieldOptions,
-    embeddedAnnotation,
-    entityAnnotation,
-    EntityOptions,
-    excludedAnnotation,
-    getBackReferenceType,
-    getClassType,
-    getReferenceType,
-    getTypeJitContainer,
-    groupAnnotation,
-    hasMember,
-    indexAnnotation,
-    IndexOptions,
-    isBackReferenceType,
-    isReferenceType,
-    isType,
-    memberNameToString,
-    primaryKeyAnnotation,
-    ReferenceOptions,
-    ReflectionKind,
-    ReflectionVisibility,
-    stringifyResolvedType,
-    stringifyType,
-    Type,
-    TypeClass,
-    TypeFunction,
-    TypeMethod,
-    TypeMethodSignature,
-    TypeObjectLiteral,
-    TypeParameter,
-    TypeProperty,
-    TypePropertySignature,
-    TypeTemplateLiteral,
-} from './type.js';
+  AbstractClassType,
+  arrayRemoveItem,
+  ClassType,
+  getClassName,
+  isArray,
+  isClass,
+  isFunction,
+  isGlobalClass,
+  isPrototypeOfBase,
+  stringifyValueWithType
+} from "@deepkit/core";
+import { isWithDeferredDecorators } from "../decorator.js";
+import { findCommonLiteral } from "../inheritance.js";
+import { SerializedTypes, serializeType } from "../type-serialization.js";
+import { NoTypeReceived } from "../utils.js";
+import type { ValidateFunction } from "../validator.js";
+import { Packed, resolvePacked, resolveRuntimeType } from "./processor.js";
 import {
-    AbstractClassType,
-    arrayRemoveItem,
-    ClassType,
-    getClassName,
-    isArray,
-    isClass,
-    isFunction,
-    isGlobalClass,
-    isPrototypeOfBase,
-    stringifyValueWithType,
-} from '@deepkit/core';
-import { Packed, resolvePacked, resolveRuntimeType } from './processor.js';
-import { NoTypeReceived } from '../utils.js';
-import { findCommonLiteral } from '../inheritance.js';
-import type { ValidateFunction } from '../validator.js';
-import { isWithDeferredDecorators } from '../decorator.js';
-import { SerializedTypes, serializeType } from '../type-serialization.js';
+  assertType,
+  autoIncrementAnnotation,
+  BackReferenceOptionsResolved,
+  clearTypeJitContainer,
+  copyAndSetParent,
+  dataAnnotation,
+  databaseAnnotation,
+  DatabaseFieldOptions,
+  embeddedAnnotation,
+  entityAnnotation,
+  EntityOptions,
+  excludedAnnotation,
+  getBackReferenceType,
+  getClassType,
+  getReferenceType,
+  getTypeJitContainer,
+  groupAnnotation,
+  hasMember,
+  indexAnnotation,
+  IndexOptions,
+  isBackReferenceType,
+  isReferenceType,
+  isType,
+  memberNameToString,
+  primaryKeyAnnotation,
+  ReferenceOptions,
+  ReflectionKind,
+  ReflectionVisibility,
+  stringifyResolvedType,
+  stringifyType,
+  TagsReflection,
+  Type,
+  TypeClass,
+  TypeFunction,
+  TypeMethod,
+  TypeMethodSignature,
+  TypeObjectLiteral,
+  TypeParameter,
+  TypeProperty,
+  TypePropertySignature,
+  TypeTemplateLiteral
+} from "./type.js";
 
 /**
  * Receives the runtime type of template argument.
@@ -84,1427 +85,2060 @@ import { SerializedTypes, serializeType } from '../type-serialization.js';
  */
 export type ReceiveType<T> = Packed | Type | ClassType<T>;
 
-export function resolveReceiveType(type?: Packed | Type | ClassType | AbstractClassType | ReflectionClass<any>): Type {
-    if (!type) throw new NoTypeReceived();
-    let typeFn: Function | undefined = undefined;
-
-    if (isArray(type)) {
-        if (type.__type) return type.__type;
-        // this is fast path for simple references to a type, e.g. cast<User>(), so that User is directly handled
-        // instead of running the VM to resolve to User first.
-        if (type[type.length - 1] === 'n!' || type[type.length - 1] === 'P7!') {
-            //n! represents a simple inline: [Op.inline, 0]
-            //P7! represents a class reference: [Op.Frame, Op.classReference, 0] (Op.Frame seems unnecessary)
-            typeFn = (type as any)[0] as Function | any;
-            type = (isFunction(typeFn) ? typeFn() : typeFn) as Packed | Type | ClassType | AbstractClassType | ReflectionClass<any> | undefined;
-            if (!type) {
-                throw new Error(`No type resolved for ${String(typeFn)}. Circular import or no runtime type available.`);
-            }
-        }
-    }
-
-    if (type instanceof ReflectionClass) return type.type;
-    if (isArray(type) && type.__type) return type.__type;
-    if (isType(type)) return type as Type;
-    if (isClass(type) || isGlobalClass(type)) {
-        if (!('__type' in type)) {
-            if ((type as any).__cached_type) return (type as any).__cached_type;
-            // disabled reflection for this class, so we return shallow TypeClass
-            return (type as any).__cached_type = {
-                kind: ReflectionKind.class,
-                classType: type as any,
-                types: [],
-            } as any;
-        }
-        return resolveRuntimeType(type) as Type;
-    }
-    return resolvePacked(type, undefined, { reuseCached: true });
+export function resolveReceiveType(
+  type?: Packed | Type | ClassType | AbstractClassType | ReflectionClass<any>
+): Type {
+  if (!type) throw new NoTypeReceived();
+  let typeFn: Function | undefined = undefined;
+
+  if (isArray(type)) {
+    if (type.__type) return type.__type;
+    // this is fast path for simple references to a type, e.g. cast<User>(), so that User is directly handled
+    // instead of running the VM to resolve to User first.
+    if (type[type.length - 1] === "n!" || type[type.length - 1] === "P7!") {
+      //n! represents a simple inline: [Op.inline, 0]
+      //P7! represents a class reference: [Op.Frame, Op.classReference, 0] (Op.Frame seems unnecessary)
+      typeFn = (type as any)[0] as Function | any;
+      type = (isFunction(typeFn) ? typeFn() : typeFn) as
+        | Packed
+        | Type
+        | ClassType
+        | AbstractClassType
+        | ReflectionClass<any>
+        | undefined;
+      if (!type) {
+        throw new Error(
+          `No type resolved for ${String(typeFn)}. Circular import or no runtime type available.`
+        );
+      }
+    }
+  }
+
+  if (type instanceof ReflectionClass) return type.type;
+  if (isArray(type) && type.__type) return type.__type;
+  if (isType(type)) return type as Type;
+  if (isClass(type) || isGlobalClass(type)) {
+    if (!("__type" in type)) {
+      if ((type as any).__cached_type) return (type as any).__cached_type;
+      // disabled reflection for this class, so we return shallow TypeClass
+      return ((type as any).__cached_type = {
+        kind: ReflectionKind.class,
+        classType: type as any,
+        types: []
+      } as any);
+    }
+    return resolveRuntimeType(type) as Type;
+  }
+  return resolvePacked(type, undefined, { reuseCached: true });
 }
 
 export function reflect(o: any, ...args: any[]): Type {
-    return resolveRuntimeType(o, args) as Type;
+  return resolveRuntimeType(o, args) as Type;
 }
 
 export function reflectOrUndefined(o: any, ...args: any[]): Type | undefined {
-    try {
-        return resolveRuntimeType(o, args) as Type;
-    } catch (error: any) {
-        return undefined;
-    }
+  try {
+    return resolveRuntimeType(o, args) as Type;
+  } catch (error: any) {
+    return undefined;
+  }
 }
 
-export function valuesOf<T>(args: any[] = [], p?: ReceiveType<T>): (string | number | symbol | Type)[] {
-    const type = typeOf(args, p);
-    if (type.kind === ReflectionKind.union) {
-        return type.types.map(v => {
-            if (v.kind === ReflectionKind.literal) return v.literal;
-            return v;
-        }) as (string | number | symbol | Type)[];
-    }
-    if (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) {
-        return type.types.map(v => {
-            if (v.kind === ReflectionKind.method) return v;
-            if (v.kind === ReflectionKind.property) return v.type;
-            if (v.kind === ReflectionKind.propertySignature) return v.type;
-            if (v.kind === ReflectionKind.methodSignature) return v;
-            return v;
-        }) as (string | number | symbol | Type)[];
-    }
-    return [];
+export function valuesOf<T>(
+  args: any[] = [],
+  p?: ReceiveType<T>
+): (string | number | symbol | Type)[] {
+  const type = typeOf(args, p);
+  if (type.kind === ReflectionKind.union) {
+    return type.types.map(v => {
+      if (v.kind === ReflectionKind.literal) return v.literal;
+      return v;
+    }) as (string | number | symbol | Type)[];
+  }
+  if (
+    type.kind === ReflectionKind.objectLiteral ||
+    type.kind === ReflectionKind.class
+  ) {
+    return type.types.map(v => {
+      if (v.kind === ReflectionKind.method) return v;
+      if (v.kind === ReflectionKind.property) return v.type;
+      if (v.kind === ReflectionKind.propertySignature) return v.type;
+      if (v.kind === ReflectionKind.methodSignature) return v;
+      return v;
+    }) as (string | number | symbol | Type)[];
+  }
+  return [];
 }
 
-export function propertiesOf<T>(args: any[] = [], p?: ReceiveType<T>): (string | number | symbol | Type)[] {
-    const type = typeOf(args, p);
-    if (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) {
-        return type.types.map(v => {
-            if (v.kind === ReflectionKind.method) return v.name;
-            if (v.kind === ReflectionKind.property) return v.name;
-            if (v.kind === ReflectionKind.propertySignature) return v.name;
-            if (v.kind === ReflectionKind.methodSignature) return v.name;
-            return v;
-        }) as (string | number | symbol | Type)[];
-    }
-    return [];
+export function propertiesOf<T>(
+  args: any[] = [],
+  p?: ReceiveType<T>
+): (string | number | symbol | Type)[] {
+  const type = typeOf(args, p);
+  if (
+    type.kind === ReflectionKind.objectLiteral ||
+    type.kind === ReflectionKind.class
+  ) {
+    return type.types.map(v => {
+      if (v.kind === ReflectionKind.method) return v.name;
+      if (v.kind === ReflectionKind.property) return v.name;
+      if (v.kind === ReflectionKind.propertySignature) return v.name;
+      if (v.kind === ReflectionKind.methodSignature) return v.name;
+      return v;
+    }) as (string | number | symbol | Type)[];
+  }
+  return [];
 }
 
-export function getNominalId<T>(args: any[] = [], p?: ReceiveType<T>): number | undefined {
-    const t = typeOf(args, p);
-    if (t.kind === ReflectionKind.class || t.kind === ReflectionKind.objectLiteral) return t.id;
-    return;
+export function getNominalId<T>(
+  args: any[] = [],
+  p?: ReceiveType<T>
+): number | undefined {
+  const t = typeOf(args, p);
+  if (
+    t.kind === ReflectionKind.class ||
+    t.kind === ReflectionKind.objectLiteral
+  )
+    return t.id;
+  return;
 }
 
 export function typeOf<T>(args: any[] = [], p?: ReceiveType<T>): Type {
-    if (p) {
-        return args.length > 0 ? resolveRuntimeType(p, args) : resolveReceiveType(p) as Type;
-    }
+  if (p) {
+    return args.length > 0
+      ? resolveRuntimeType(p, args)
+      : (resolveReceiveType(p) as Type);
+  }
 
-    throw new Error('No type given');
+  throw new Error("No type given");
 }
 
 export function removeTypeName<T extends Type>(type: T): T {
-    const o = { ...type };
-    o.id = undefined;
-    o.typeName = undefined;
-    o.typeArguments = undefined;
-    return o;
+  const o = { ...type };
+  o.id = undefined;
+  o.typeName = undefined;
+  o.typeArguments = undefined;
+  return o;
 }
 
 export function removeNominal<T extends Type | undefined | Type[]>(type: T): T {
-    if (!type) return type;
-    if (isArray(type)) {
-        return type.map(v => removeNominal(v)) as T;
-    } else {
-        if (type.kind === ReflectionKind.class || type.kind === ReflectionKind.objectLiteral) {
-            return { ...type, id: undefined };
-        }
+  if (!type) return type;
+  if (isArray(type)) {
+    return type.map(v => removeNominal(v)) as T;
+  } else {
+    if (
+      type.kind === ReflectionKind.class ||
+      type.kind === ReflectionKind.objectLiteral
+    ) {
+      return { ...type, id: undefined };
     }
-    return type;
+  }
+  return type;
 }
 
-export function getProperty(type: TypeObjectLiteral | TypeClass, memberName: number | string | symbol): TypeProperty | TypePropertySignature | undefined {
-    for (const t of type.types) {
-        if ((t.kind === ReflectionKind.property || t.kind === ReflectionKind.propertySignature) && t.name === memberName) return t;
-    }
-    return;
+export function getProperty(
+  type: TypeObjectLiteral | TypeClass,
+  memberName: number | string | symbol
+): TypeProperty | TypePropertySignature | undefined {
+  for (const t of type.types) {
+    if (
+      (t.kind === ReflectionKind.property ||
+        t.kind === ReflectionKind.propertySignature) &&
+      t.name === memberName
+    )
+      return t;
+  }
+  return;
 }
 
-export function toSignature(type: TypeProperty | TypeMethod | TypePropertySignature | TypeMethodSignature): TypePropertySignature | TypeMethodSignature {
-    if (type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.methodSignature) return type;
-    if (type.kind === ReflectionKind.property) {
-        return { ...type, parent: type.parent as any, kind: ReflectionKind.propertySignature };
-    }
-
-    return { ...type, parent: type.parent as any, kind: ReflectionKind.methodSignature };
+export function toSignature(
+  type: TypeProperty | TypeMethod | TypePropertySignature | TypeMethodSignature
+): TypePropertySignature | TypeMethodSignature {
+  if (
+    type.kind === ReflectionKind.propertySignature ||
+    type.kind === ReflectionKind.methodSignature
+  )
+    return type;
+  if (type.kind === ReflectionKind.property) {
+    return {
+      ...type,
+      parent: type.parent as any,
+      kind: ReflectionKind.propertySignature
+    };
+  }
+
+  return {
+    ...type,
+    parent: type.parent as any,
+    kind: ReflectionKind.methodSignature
+  };
 }
 
 export function hasCircularReference(type: Type) {
-    const jit = getTypeJitContainer(type);
-    if (jit.hasCircularReference !== undefined) return jit.hasCircularReference;
+  const jit = getTypeJitContainer(type);
+  if (jit.hasCircularReference !== undefined) return jit.hasCircularReference;
 
-    let hasCircular = false;
-    visit(type, () => undefined, () => {
-        hasCircular = true;
-    });
+  let hasCircular = false;
+  visit(
+    type,
+    () => undefined,
+    () => {
+      hasCircular = true;
+    }
+  );
 
-    return jit.hasCircularReference = hasCircular;
+  return (jit.hasCircularReference = hasCircular);
 }
 
 let visitStackId: number = 0;
 
 function extendPath(path: string, member: Type): string {
-    let name: string | number | symbol | undefined = '';
-    if ('name' in member) {
-        name = member.name;
-    }
-    if (name === '' || name === undefined) return path;
-    if (path) return path + '.' + String(name);
-    return String(name);
+  let name: string | number | symbol | undefined = "";
+  if ("name" in member) {
+    name = member.name;
+  }
+  if (name === "" || name === undefined) return path;
+  if (path) return path + "." + String(name);
+  return String(name);
 }
 
-export function visit(type: Type, visitor: (type: Type, path: string) => false | void, onCircular?: () => void): void {
-    const stack: { type: Type, depth: number, path: string }[] = [];
-    stack.push({ type, depth: 0, path: '' });
-    const stackId: number = visitStackId++;
+export function visit(
+  type: Type,
+  visitor: (type: Type, path: string) => false | void,
+  onCircular?: () => void
+): void {
+  const stack: { type: Type; depth: number; path: string }[] = [];
+  stack.push({ type, depth: 0, path: "" });
+  const stackId: number = visitStackId++;
 
-    while (stack.length) {
-        const entry = stack.shift();
-        if (!entry) break;
-        const type = entry.type;
+  while (stack.length) {
+    const entry = stack.shift();
+    if (!entry) break;
+    const type = entry.type;
 
-        const jit = getTypeJitContainer(type);
-        if (jit.visitStack && jit.visitStack.id === stackId && jit.visitStack.depth < entry.depth) {
-            if (onCircular) onCircular();
-            return;
-        }
-        jit.visitStack = { id: stackId, depth: entry.depth };
-        if (visitor(type, entry.path) === false) return;
-
-        switch (type.kind) {
-            case ReflectionKind.objectLiteral:
-            case ReflectionKind.tuple:
-            case ReflectionKind.union:
-            case ReflectionKind.class:
-            case ReflectionKind.intersection:
-            case ReflectionKind.templateLiteral:
-                for (const member of type.types) stack.push({
-                    type: member,
-                    depth: entry.depth + 1,
-                    path: extendPath(entry.path, member),
-                });
-                break;
-            case ReflectionKind.string:
-            case ReflectionKind.number:
-            case ReflectionKind.bigint:
-            case ReflectionKind.symbol:
-            case ReflectionKind.regexp:
-            case ReflectionKind.boolean:
-                if (type.origin) stack.push({ type: type.origin, depth: entry.depth + 1, path: entry.path });
-                break;
-            case ReflectionKind.function:
-            case ReflectionKind.method:
-            case ReflectionKind.methodSignature:
-                stack.push({ type: type.return, depth: entry.depth + 1, path: entry.path });
-                for (const member of type.parameters) stack.push({
-                    type: member,
-                    depth: entry.depth + 1,
-                    path: extendPath(entry.path, member),
-                });
-                break;
-            case ReflectionKind.propertySignature:
-            case ReflectionKind.property:
-            case ReflectionKind.array:
-            case ReflectionKind.promise:
-            case ReflectionKind.parameter:
-            case ReflectionKind.tupleMember:
-            case ReflectionKind.rest:
-                stack.push({ type: type.type, depth: entry.depth + 1, path: entry.path });
-                break;
-            case ReflectionKind.indexSignature:
-                stack.push({ type: type.index, depth: entry.depth + 1, path: entry.path });
-                stack.push({ type: type.type, depth: entry.depth + 1, path: entry.path });
-                break;
-        }
-    }
+    const jit = getTypeJitContainer(type);
+    if (
+      jit.visitStack &&
+      jit.visitStack.id === stackId &&
+      jit.visitStack.depth < entry.depth
+    ) {
+      if (onCircular) onCircular();
+      return;
+    }
+    jit.visitStack = { id: stackId, depth: entry.depth };
+    if (visitor(type, entry.path) === false) return;
+
+    switch (type.kind) {
+      case ReflectionKind.objectLiteral:
+      case ReflectionKind.tuple:
+      case ReflectionKind.union:
+      case ReflectionKind.class:
+      case ReflectionKind.intersection:
+      case ReflectionKind.templateLiteral:
+        for (const member of type.types)
+          stack.push({
+            type: member,
+            depth: entry.depth + 1,
+            path: extendPath(entry.path, member)
+          });
+        break;
+      case ReflectionKind.string:
+      case ReflectionKind.number:
+      case ReflectionKind.bigint:
+      case ReflectionKind.symbol:
+      case ReflectionKind.regexp:
+      case ReflectionKind.boolean:
+        if (type.origin)
+          stack.push({
+            type: type.origin,
+            depth: entry.depth + 1,
+            path: entry.path
+          });
+        break;
+      case ReflectionKind.function:
+      case ReflectionKind.method:
+      case ReflectionKind.methodSignature:
+        stack.push({
+          type: type.return,
+          depth: entry.depth + 1,
+          path: entry.path
+        });
+        for (const member of type.parameters)
+          stack.push({
+            type: member,
+            depth: entry.depth + 1,
+            path: extendPath(entry.path, member)
+          });
+        break;
+      case ReflectionKind.propertySignature:
+      case ReflectionKind.property:
+      case ReflectionKind.array:
+      case ReflectionKind.promise:
+      case ReflectionKind.parameter:
+      case ReflectionKind.tupleMember:
+      case ReflectionKind.rest:
+        stack.push({
+          type: type.type,
+          depth: entry.depth + 1,
+          path: entry.path
+        });
+        break;
+      case ReflectionKind.indexSignature:
+        stack.push({
+          type: type.index,
+          depth: entry.depth + 1,
+          path: entry.path
+        });
+        stack.push({
+          type: type.type,
+          depth: entry.depth + 1,
+          path: entry.path
+        });
+        break;
+    }
+  }
 }
 
 function hasFunctionExpression(fn: Function): boolean {
-    let code = fn.toString();
-    if (code.startsWith('() => ')) code = code.slice('() => '.length);
-    if (code.startsWith('function () { return ')) {
-        code = code.slice('function () { return '.length);
-        if (code.endsWith('; }')) code = code.slice(0, -3);
-    }
-    if (code.startsWith('function() { return ')) {
-        code = code.slice('function() { return '.length);
-        if (code.endsWith('; }')) code = code.slice(0, -3);
-    }
-    if (code[0] === '\'' && code[code.length - 1] === '\'') return false;
-    if (code[0] === '"' && code[code.length - 1] === '"') return false;
-    if (code[0] === '`' && code[code.length - 1] === '`') return false;
-    return code.includes('(');
+  let code = fn.toString();
+  if (code.startsWith("() => ")) code = code.slice("() => ".length);
+  if (code.startsWith("function () { return ")) {
+    code = code.slice("function () { return ".length);
+    if (code.endsWith("; }")) code = code.slice(0, -3);
+  }
+  if (code.startsWith("function() { return ")) {
+    code = code.slice("function() { return ".length);
+    if (code.endsWith("; }")) code = code.slice(0, -3);
+  }
+  if (code[0] === "'" && code[code.length - 1] === "'") return false;
+  if (code[0] === '"' && code[code.length - 1] === '"') return false;
+  if (code[0] === "`" && code[code.length - 1] === "`") return false;
+  return code.includes("(");
 }
 
 /**
  * @reflection never
  */
 export class ReflectionParameter {
-    type: Type;
-
-    constructor(
-        public readonly parameter: TypeParameter,
-        public readonly reflectionFunction: ReflectionMethod | ReflectionFunction,
-    ) {
-        this.type = this.parameter.type;
-    }
+  type: Type;
+
+  constructor(
+    public readonly parameter: TypeParameter,
+    public readonly reflectionFunction: ReflectionMethod | ReflectionFunction
+  ) {
+    this.type = this.parameter.type;
+  }
+
+  getType(): Type {
+    return this.type;
+  }
+
+  getName(): string {
+    return this.parameter.name;
+  }
+
+  get name(): string {
+    return this.parameter.name;
+  }
+
+  isOptional(): boolean {
+    return this.parameter.optional === true;
+  }
+
+  hasDefault(): boolean {
+    return this.parameter.default !== undefined;
+  }
+
+  isValueRequired(): boolean {
+    if (this.hasDefault()) {
+      return false;
+    }
+
+    return !this.isOptional();
+  }
+
+  getDefaultValue(): any {
+    if (this.parameter.default !== undefined) {
+      if (typeof this.parameter.default === "function") {
+        return this.parameter.default();
+      }
+
+      return this.parameter.default;
+    }
+  }
+
+  setDefaultValue(value: any): void {
+    this.parameter.default = value;
+  }
+
+  hasDefaultFunctionExpression(): boolean {
+    return !!(
+      this.parameter.default && hasFunctionExpression(this.parameter.default)
+    );
+  }
+
+  applyDecorator(t: TData) {
+    if (t.type) {
+      this.type = resolveReceiveType(t.type);
+      if (
+        this.getVisibility() !== undefined &&
+        this.reflectionFunction instanceof ReflectionMethod
+      ) {
+        this.reflectionFunction.reflectionClass
+          .getProperty(this.getName())!
+          .setType(this.type);
+      }
+    }
+  }
+
+  getVisibility(): ReflectionVisibility | undefined {
+    return this.parameter.visibility;
+  }
+
+  isPublic(): boolean {
+    return this.parameter.visibility === ReflectionVisibility.public;
+  }
+
+  isProtected(): boolean {
+    return this.parameter.visibility === ReflectionVisibility.protected;
+  }
+
+  isPrivate(): boolean {
+    return this.parameter.visibility === ReflectionVisibility.private;
+  }
+
+  isReadonly(): boolean {
+    return (
+      this.parameter.readonly === true ||
+      this.getTags().readonly === true ||
+      this.reflectionFunction.isReadonly()
+    );
+  }
+
+  setTags(tags: TagsReflection) {
+    this.parameter.tags = tags;
+  }
+
+  getTags(): TagsReflection {
+    return this.parameter.tags ?? {};
+  }
+
+  isHidden(): boolean {
+    return this.getTags().hidden === true || this.reflectionFunction.isHidden();
+  }
+
+  isIgnored(): boolean {
+    return (
+      this.getTags().ignore === true || this.reflectionFunction.isIgnored()
+    );
+  }
+
+  isInternal(): boolean {
+    return (
+      this.getTags().internal === true || this.reflectionFunction.isInternal()
+    );
+  }
+
+  getAlias(): string[] {
+    return this.getTags().alias ?? [];
+  }
+
+  getTitle(): string | undefined {
+    return this.getTags().title;
+  }
+
+  getPermission(): string[] {
+    return (this.getTags().permission ?? []).concat(
+      this.reflectionFunction.getPermission()
+    );
+  }
+
+  getDomain(): string | undefined {
+    return this.getTags().domain || this.reflectionFunction.getDomain();
+  }
+
+  /**
+   * True if the parameter becomes a property in the class.
+   * This is the case for parameters in constructors with visibility or readonly.
+   *
+   * ```typescript
+   * class User {
+   *    constructor(public name: string) {}
+   * }
+   */
+  isProperty(): boolean {
+    return (
+      this.parameter.readonly === true ||
+      this.parameter.tags?.readonly === true ||
+      this.parameter.visibility !== undefined
+    );
+  }
+}
 
-    getType(): Type {
-        return this.type;
-    }
+/**
+ * @reflection never
+ */
+export class ReflectionFunction {
+  parameters: ReflectionParameter[] = [];
+  parameterAliases: Map<string, string> = new Map();
+  description: string = "";
 
-    getName(): string {
-        return this.parameter.name;
+  constructor(
+    public readonly type: TypeMethod | TypeMethodSignature | TypeFunction
+  ) {
+    for (const p of this.type.parameters) {
+      this.parameters.push(new ReflectionParameter(p, this));
     }
+    if (this.type.description) this.description = this.type.description;
+  }
 
-    get name(): string {
-        return this.parameter.name;
-    }
+  static from(fn: Function): ReflectionFunction {
+    //todo: cache it
 
-    isOptional(): boolean {
-        return this.parameter.optional === true;
+    if (!("__type" in fn)) {
+      //functions without any types have no __type attached
+      return new ReflectionFunction({
+        kind: ReflectionKind.function,
+        function: fn,
+        return: { kind: ReflectionKind.any },
+        parameters: []
+      });
     }
 
-    hasDefault(): boolean {
-        return this.parameter.default !== undefined;
+    const type = reflect(fn);
+    if (type.kind !== ReflectionKind.function) {
+      throw new Error(`Given object is not a function ${fn}`);
     }
+    return new ReflectionFunction(type);
+  }
 
-    isValueRequired(): boolean {
-        if (this.hasDefault()) return false;
+  getParameterNames(): string[] {
+    return this.getParameters().map(v => v.getName());
+  }
 
-        return !this.isOptional();
-    }
+  hasParameter(name: string | number | symbol): boolean {
+    return !!this.getParameterOrUndefined(name);
+  }
 
-    getDefaultValue(): any {
-        if (this.parameter.default !== undefined) {
-            return this.parameter.default();
-        }
+  getParameterOrUndefined(
+    name: string | number | symbol
+  ): ReflectionParameter | undefined {
+    for (const property of this.getParameters()) {
+      if (property.getName() === name) return property;
     }
 
-    hasDefaultFunctionExpression(): boolean {
-        return !!(this.parameter.default && hasFunctionExpression(this.parameter.default));
+    if (this.parameterAliases.has(name.toString())) {
+      const alias = this.parameterAliases.get(name.toString())!;
+      return this.getParameterOrUndefined(alias);
     }
 
-    applyDecorator(t: TData) {
-        if (t.type) {
-            this.type = resolveReceiveType(t.type);
-            if (this.getVisibility() !== undefined && this.reflectionFunction instanceof ReflectionMethod) {
-                this.reflectionFunction.reflectionClass.getProperty(this.getName())!.setType(this.type);
-            }
-        }
-    }
+    return;
+  }
+
+  getParameter(name: string | number | symbol): ReflectionParameter {
+    const property = this.getParameterOrUndefined(name);
+    if (!property)
+      throw new Error(
+        `No parameter ${String(name)} in method ${this.name} found.`
+      );
+    return property;
+  }
+
+  getParameterType(name: string | number | symbol): Type | undefined {
+    const parameter = this.getParameter(name);
+    if (parameter) return parameter.getType();
+    return;
+  }
 
-    getVisibility(): ReflectionVisibility | undefined {
-        return this.parameter.visibility;
-    }
+  getParameters(): ReflectionParameter[] {
+    return this.parameters;
+  }
 
-    isPublic(): boolean {
-        return this.parameter.visibility === ReflectionVisibility.public;
-    }
+  getReturnType(): Type {
+    return this.type.return;
+  }
 
-    isProtected(): boolean {
-        return this.parameter.visibility === ReflectionVisibility.protected;
-    }
-
-    isPrivate(): boolean {
-        return this.parameter.visibility === ReflectionVisibility.private;
-    }
+  getName(): number | string | symbol {
+    return this.type.name || "anonymous";
+  }
 
-    isReadonly(): boolean {
-        return this.parameter.readonly === true;
-    }
+  getDescription(): string {
+    return this.description;
+  }
 
-    /**
-     * True if the parameter becomes a property in the class.
-     * This is the case for parameters in constructors with visibility or readonly.
-     *
-     * ```typescript
-     * class User {
-     *    constructor(public name: string) {}
-     * }
-     */
-    isProperty(): boolean {
-        return this.parameter.readonly === true || this.parameter.visibility !== undefined;
-    }
-}
+  get name(): string {
+    return memberNameToString(this.getName());
+  }
 
-/**
- * @reflection never
- */
-export class ReflectionFunction {
-    parameters: ReflectionParameter[] = [];
-    description: string = '';
+  setTags(tags: TagsReflection) {
+    this.type.tags = tags;
+  }
 
-    constructor(
-        public readonly type: TypeMethod | TypeMethodSignature | TypeFunction,
-    ) {
-        for (const p of this.type.parameters) {
-            this.parameters.push(new ReflectionParameter(p, this));
-        }
-        if (this.type.description) this.description = this.type.description;
-    }
+  getTags(): TagsReflection {
+    return this.type.tags ?? {};
+  }
 
-    static from(fn: Function): ReflectionFunction {
-        //todo: cache it
-
-        if (!('__type' in fn)) {
-            //functions without any types have no __type attached
-            return new ReflectionFunction({
-                kind: ReflectionKind.function,
-                function: fn,
-                return: { kind: ReflectionKind.any },
-                parameters: [],
-            });
-        }
+  isHidden(): boolean {
+    return this.getTags().hidden === true;
+  }
 
-        const type = reflect(fn);
-        if (type.kind !== ReflectionKind.function) {
-            throw new Error(`Given object is not a function ${fn}`);
-        }
-        return new ReflectionFunction(type);
-    }
+  isReadonly(): boolean {
+    return this.getTags().readonly === true;
+  }
 
-    getParameterNames(): (string)[] {
-        return this.getParameters().map(v => v.getName());
-    }
+  isIgnored(): boolean {
+    return this.getTags().ignore === true;
+  }
 
-    hasParameter(name: string | number | symbol): boolean {
-        return !!this.getParameterOrUndefined(name);
-    }
+  isInternal(): boolean {
+    return this.getTags().internal === true;
+  }
 
-    getParameterOrUndefined(name: string | number | symbol): ReflectionParameter | undefined {
-        for (const property of this.getParameters()) {
-            if (property.getName() === name) return property;
-        }
-        return;
-    }
+  getAlias(): string[] {
+    return this.getTags().alias ?? [];
+  }
 
-    getParameter(name: string | number | symbol): ReflectionParameter {
-        const property = this.getParameterOrUndefined(name);
-        if (!property) throw new Error(`No parameter ${String(name)} in method ${this.name} found.`);
-        return property;
-    }
+  getTitle(): string | undefined {
+    return this.getTags().title;
+  }
 
-    getParameterType(name: string | number | symbol): Type | undefined {
-        const parameter = this.getParameter(name);
-        if (parameter) return parameter.getType();
-        return;
-    }
+  getPermission(): string[] {
+    return this.getTags().permission ?? [];
+  }
 
-    getParameters(): ReflectionParameter[] {
-        return this.parameters;
-    }
-
-    getReturnType(): Type {
-        return this.type.return;
-    }
-
-    getName(): number | string | symbol {
-        return this.type.name || 'anonymous';
-    }
-
-    getDescription(): string {
-        return this.description;
-    }
-
-    get name(): string {
-        return memberNameToString(this.getName());
-    }
+  getDomain(): string | undefined {
+    return this.getTags().domain;
+  }
 }
 
 /**
  * @reflection never
  */
 export class ReflectionMethod extends ReflectionFunction {
-    /**
-     * Whether this method acts as validator.
-     */
-    validator: boolean = false;
-
-    constructor(
-        public type: TypeMethod | TypeMethodSignature,
-        public reflectionClass: ReflectionClass<any>,
-    ) {
-        super(type);
-    }
-
-    setType(method: TypeMethod | TypeMethodSignature) {
-        this.type = method;
-        this.parameters = [];
-        for (const p of this.type.parameters) {
-            this.parameters.push(new ReflectionParameter(p, this));
-        }
-    }
-
-    applyDecorator(data: TData) {
-        this.validator = data.validator;
-        if (this.validator) {
-            this.reflectionClass.validationMethod = this.getName();
-        }
-    }
-
-    clone(reflectionClass?: ReflectionClass<any>, method?: TypeMethod | TypeMethodSignature): ReflectionMethod {
-        const c = new ReflectionMethod(method || this.type, reflectionClass || this.reflectionClass);
-        //todo, clone parameter
-        return c;
-    }
-
-    isOptional(): boolean {
-        return this.type.optional === true;
-    }
+  /**
+   * Whether this method acts as validator.
+   */
+  validator: boolean = false;
+
+  constructor(
+    public type: TypeMethod | TypeMethodSignature,
+    public reflectionClass: ReflectionClass<any>
+  ) {
+    super(type);
+  }
+
+  setType(method: TypeMethod | TypeMethodSignature) {
+    this.type = method;
+    this.parameters = [];
+    for (const p of this.type.parameters) {
+      this.parameters.push(new ReflectionParameter(p, this));
+    }
+  }
+
+  applyDecorator(data: TData) {
+    this.validator = data.validator;
+    if (this.validator) {
+      this.reflectionClass.validationMethod = this.getName();
+    }
+  }
+
+  clone(
+    reflectionClass?: ReflectionClass<any>,
+    method?: TypeMethod | TypeMethodSignature
+  ): ReflectionMethod {
+    const c = new ReflectionMethod(
+      method || this.type,
+      reflectionClass || this.reflectionClass
+    );
+    //todo, clone parameter
+    return c;
+  }
+
+  isOptional(): boolean {
+    return this.type.optional === true;
+  }
+
+  setTags(tags: TagsReflection) {
+    this.type.tags = tags;
+  }
+
+  getTags(): TagsReflection {
+    return this.type.tags ?? {};
+  }
+
+  isHidden(): boolean {
+    return this.getTags().hidden === true || this.reflectionClass.isHidden();
+  }
+
+  isIgnored(): boolean {
+    return this.getTags().ignore === true || this.reflectionClass.isIgnored();
+  }
+
+  isReadonly(): boolean {
+    return (
+      this.getTags().readonly === true || this.reflectionClass.isReadonly()
+    );
+  }
+
+  isInternal(): boolean {
+    return (
+      this.getTags().internal === true || this.reflectionClass.isInternal()
+    );
+  }
+
+  getAlias(): string[] {
+    return this.getTags().alias ?? [];
+  }
+
+  getTitle(): string | undefined {
+    return this.getTags().title;
+  }
+
+  getPermission(): string[] {
+    return (this.getTags().permission ?? []).concat(
+      this.reflectionClass.getPermission()
+    );
+  }
+
+  getDomain(): string | undefined {
+    return this.getTags().domain || this.reflectionClass.getDomain();
+  }
 }
 
-export function resolveForeignReflectionClass(property: ReflectionProperty): ReflectionClass<any> {
-    if (property.isReference()) return property.getResolvedReflectionClass();
-    if (property.isBackReference()) {
-        if (property.isArray()) {
-            return resolveClassType(property.getSubType());
-        }
-        return property.getResolvedReflectionClass();
+export function resolveForeignReflectionClass(
+  property: ReflectionProperty
+): ReflectionClass<any> {
+  if (property.isReference()) return property.getResolvedReflectionClass();
+  if (property.isBackReference()) {
+    if (property.isArray()) {
+      return resolveClassType(property.getSubType());
     }
+    return property.getResolvedReflectionClass();
+  }
 
-    throw new Error(`Property ${property.name} is neither a Reference nor a BackReference.`);
+  throw new Error(
+    `Property ${property.name} is neither a Reference nor a BackReference.`
+  );
 }
 
 /**
  * Resolved the class/object ReflectionClass of the given TypeClass|TypeObjectLiteral
  */
 export function resolveClassType(type: Type): ReflectionClass<any> {
-    if (type.kind !== ReflectionKind.class && type.kind !== ReflectionKind.objectLiteral) {
-        throw new Error(`Cant resolve ReflectionClass of type ${type.kind} since its not a class or object literal`);
-    }
-
-    return ReflectionClass.from(type);
+  if (
+    type.kind !== ReflectionKind.class &&
+    type.kind !== ReflectionKind.objectLiteral
+  ) {
+    throw new Error(
+      `Cant resolve ReflectionClass of type ${type.kind} since its not a class or object literal`
+    );
+  }
+
+  return ReflectionClass.from(type);
 }
 
 /**
  * @reflection never
  */
 export class ReflectionProperty {
-    //is this really necessary?
-    jsonType?: Type;
-
-    serializer?: SerializerFn;
-    deserializer?: SerializerFn;
-
-    data: { [name: string]: any } = {};
-
-    /**
-     * The type of the property, not the property itself.
-     *
-     * Note: If the property is optional via `property?: T`, this information
-     * is not available here. It's on `property`.
-     * Use `isOptional()` instead, which handles this case plus the case
-     * where optionality is given via union of T and undefined.
-     */
-    type: Type;
-
-    symbol: symbol;
-
-    protected cachedResolvedReflectionClass?: ReflectionClass<any>;
-
-    constructor(
-        public property: TypeProperty | TypePropertySignature,
-        public reflectionClass: ReflectionClass<any>,
+  //is this really necessary?
+  jsonType?: Type;
+
+  serializer?: SerializerFn;
+  deserializer?: SerializerFn;
+
+  data: { [name: string]: any } = {};
+
+  /**
+   * The type of the property, not the property itself.
+   *
+   * Note: If the property is optional via `property?: T`, this information
+   * is not available here. It's on `property`.
+   * Use `isOptional()` instead, which handles this case plus the case
+   * where optionality is given via union of T and undefined.
+   */
+  type: Type;
+
+  symbol: symbol;
+
+  protected cachedResolvedReflectionClass?: ReflectionClass<any>;
+
+  constructor(
+    public property: TypeProperty | TypePropertySignature,
+    public reflectionClass: ReflectionClass<any>
+  ) {
+    this.type = property.type;
+    this.setType(this.type);
+    this.symbol = Symbol(memberNameToString(this.getName()));
+  }
+
+  setType(type: Type) {
+    this.type = type;
+  }
+
+  isPrimaryKey(): boolean {
+    return primaryKeyAnnotation.isPrimaryKey(this.getType());
+  }
+
+  isEmbedded(): boolean {
+    return !!embeddedAnnotation.getFirst(this.getType());
+  }
+
+  /**
+   * Returns the sub type if available (for arrays for example).
+   *
+   * @throws Error if the property type does not support sub types.
+   */
+  getSubType(): Type {
+    if (this.type.kind === ReflectionKind.array) return this.type.type as Type;
+
+    throw new Error(`Type ${this.type.kind} does not support sub types`);
+  }
+
+  /**
+   * If undefined, it's not an embedded class.
+   */
+  getEmbedded(): { prefix?: string } | undefined {
+    return embeddedAnnotation.getFirst(this.getType());
+  }
+
+  isBackReference(): boolean {
+    return isBackReferenceType(this.getType());
+  }
+
+  isDatabaseSkipped(database: string): boolean {
+    return (
+      databaseAnnotation.getDatabase(this.getType(), database)?.skip === true
+    );
+  }
+
+  isDatabaseMigrationSkipped(database: string): boolean {
+    return (
+      this.isDatabaseSkipped(database) ||
+      databaseAnnotation.getDatabase(this.getType(), database)
+        ?.skipMigration === true
+    );
+  }
+
+  getBackReference(): BackReferenceOptionsResolved {
+    return getBackReferenceType(this.getType());
+  }
+
+  isAutoIncrement(): boolean {
+    return autoIncrementAnnotation.getFirst(this.getType()) === true;
+  }
+
+  isReference(): boolean {
+    return isReferenceType(this.getType());
+  }
+
+  isArray(): boolean {
+    return this.type.kind === ReflectionKind.array;
+  }
+
+  isDate(): boolean {
+    return (
+      this.type.kind === ReflectionKind.class && this.type.classType === Date
+    );
+  }
+
+  isNumber(): boolean {
+    return (
+      this.type.kind === ReflectionKind.number ||
+      this.type.kind === ReflectionKind.bigint
+    );
+  }
+
+  getForeignKeyName(): string {
+    return this.getNameAsString();
+  }
+
+  getReference(): ReferenceOptions | undefined {
+    return getReferenceType(this.getType());
+  }
+
+  getGroups(): string[] {
+    return groupAnnotation.getAnnotations(this.getType());
+  }
+
+  isInGroup(...group: string[]): boolean {
+    return this.getGroups().some(v => group.includes(v));
+  }
+
+  getExcluded(): string[] {
+    return excludedAnnotation.getAnnotations(this.getType());
+  }
+
+  isSerializerExcluded(name: string): boolean {
+    return excludedAnnotation.isExcluded(this.getType(), name);
+  }
+
+  getData(): { [name: string]: any } {
+    return dataAnnotation.getFirst(this.getType()) || {};
+  }
+
+  /**
+   * Returns the ReflectionClass of the reference class/object literal.
+   *
+   * @throws Error if the property is not from type TypeClass or TypeObjectLiteral
+   */
+  getResolvedReflectionClass(): ReflectionClass<any> {
+    if (
+      this.type.kind !== ReflectionKind.class &&
+      this.type.kind !== ReflectionKind.objectLiteral
     ) {
-        this.type = property.type;
-        this.setType(this.type);
-        this.symbol = Symbol(memberNameToString(this.getName()));
-    }
-
-    setType(type: Type) {
-        this.type = type;
-    }
-
-    isPrimaryKey(): boolean {
-        return primaryKeyAnnotation.isPrimaryKey(this.getType());
-    }
-
-    isEmbedded(): boolean {
-        return !!embeddedAnnotation.getFirst(this.getType());
-    }
-
-    /**
-     * Returns the sub type if available (for arrays for example).
-     *
-     * @throws Error if the property type does not support sub types.
-     */
-    getSubType(): Type {
-        if (this.type.kind === ReflectionKind.array) return this.type.type as Type;
-
-        throw new Error(`Type ${this.type.kind} does not support sub types`);
-    }
-
-    /**
-     * If undefined, it's not an embedded class.
-     */
-    getEmbedded(): { prefix?: string } | undefined {
-        return embeddedAnnotation.getFirst(this.getType());
-    }
-
-    isBackReference(): boolean {
-        return isBackReferenceType(this.getType());
-    }
-
-    isDatabaseSkipped(database: string): boolean {
-        return databaseAnnotation.getDatabase(this.getType(), database)?.skip === true;
-    }
-
-    isDatabaseMigrationSkipped(database: string): boolean {
-        return this.isDatabaseSkipped(database) || databaseAnnotation.getDatabase(this.getType(), database)?.skipMigration === true;
-    }
-
-    getBackReference(): BackReferenceOptionsResolved {
-        return getBackReferenceType(this.getType());
-    }
-
-    isAutoIncrement(): boolean {
-        return autoIncrementAnnotation.getFirst(this.getType()) === true;
-    }
-
-    isReference(): boolean {
-        return isReferenceType(this.getType());
-    }
-
-    isArray(): boolean {
-        return this.type.kind === ReflectionKind.array;
-    }
-
-    isDate(): boolean {
-        return this.type.kind === ReflectionKind.class && this.type.classType === Date;
-    }
-
-    isNumber(): boolean {
-        return this.type.kind === ReflectionKind.number || this.type.kind === ReflectionKind.bigint;
-    }
-
-    getForeignKeyName(): string {
-        return this.getNameAsString();
-    }
-
-    getReference(): ReferenceOptions | undefined {
-        return getReferenceType(this.getType());
-    }
-
-    getGroups(): string[] {
-        return groupAnnotation.getAnnotations(this.getType());
-    }
-
-    isInGroup(...group: string[]): boolean {
-        return this.getGroups().some(v => group.includes(v));
-    }
-
-    getExcluded(): string[] {
-        return excludedAnnotation.getAnnotations(this.getType());
-    }
-
-    isSerializerExcluded(name: string): boolean {
-        return excludedAnnotation.isExcluded(this.getType(), name);
-    }
-
-    getData(): { [name: string]: any } {
-        return dataAnnotation.getFirst(this.getType()) || {};
-    }
-
-    /**
-     * Returns the ReflectionClass of the reference class/object literal.
-     *
-     * @throws Error if the property is not from type TypeClass or TypeObjectLiteral
-     */
-    getResolvedReflectionClass(): ReflectionClass<any> {
-        if (this.type.kind !== ReflectionKind.class && this.type.kind !== ReflectionKind.objectLiteral) {
-            throw new Error(`Could not resolve reflection class since ${this.name} is not a class|object but of type ${stringifyType(this.type)}`);
+      throw new Error(
+        `Could not resolve reflection class since ${this.name} is not a class|object but of type ${stringifyType(this.type)}`
+      );
+    }
+    return (this.cachedResolvedReflectionClass ||= resolveClassType(
+      this.getType()
+    ));
+  }
+
+  /**
+   * If undefined the property is not an index.
+   * A unique property is defined as index with IndexOptions.unique=true.
+   */
+  getIndex(): IndexOptions | undefined {
+    return indexAnnotation.getFirst(this.getType());
+  }
+
+  /**
+   * Returns database specific options, if defined
+   *
+   * ```typescript
+   * interface User {
+   *     logins: number & DatabaseField<{type: 'integer(8)'}>;
+   *
+   *     //of for a specific db engine
+   *     logins: number & Sqlite<{type: 'integer(8)'}>;
+   * }
+   *
+   * ```
+   */
+  getDatabase<T extends DatabaseFieldOptions>(name: string): T | undefined {
+    return databaseAnnotation.getDatabase<T>(this.getType(), name);
+  }
+
+  clone(
+    reflectionClass?: ReflectionClass<any>,
+    property?: TypeProperty | TypePropertySignature
+  ): ReflectionProperty {
+    const c = new ReflectionProperty(
+      copyAndSetParent(property || this.property),
+      reflectionClass || this.reflectionClass
+    );
+    c.jsonType = this.jsonType;
+    c.serializer = this.serializer;
+    c.deserializer = this.deserializer;
+    return c;
+  }
+
+  applyDecorator(data: TData) {
+    this.serializer = data.serializer;
+    this.deserializer = data.deserializer;
+    Object.assign(this.data, data.data);
+
+    //note: data.validators is already applied in Processor
+  }
+
+  getName(): number | string | symbol {
+    return this.property.name;
+  }
+
+  getNameAsString(): string {
+    return memberNameToString(this.property.name);
+  }
+
+  get name(): string {
+    return memberNameToString(this.property.name);
+  }
+
+  getKind(): ReflectionKind {
+    return this.type.kind;
+  }
+
+  getType(): Type {
+    return this.type as Type;
+  }
+
+  getDescription(): string {
+    return this.property.description || "";
+  }
+
+  /**
+   * Whether a value is required from serialization point of view.
+   * If this property has for example a default value (set via constructor or manually via t.default),
+   * then the value is not required to instantiate the property value.
+   */
+  isValueRequired(): boolean {
+    if (this.hasDefault()) {
+      return false;
+    }
+
+    return !this.isOptional();
+  }
+
+  /**
+   * Returns true when `undefined` or a missing value is allowed at the class itself.
+   * This is now only true when `optional` is set, but also when type is `any`.
+   */
+  isActualOptional(): boolean {
+    return this.isOptional() || this.type.kind === ReflectionKind.any;
+  }
+
+  /**
+   * If the property is actual optional or is an union with undefined in it.
+   */
+  isOptional(): boolean {
+    return (
+      this.property.optional === true ||
+      (this.type.kind === ReflectionKind.union &&
+        this.type.types.some(v => v.kind === ReflectionKind.undefined))
+    );
+  }
+
+  setOptional(v: boolean): void {
+    this.property.optional = v ? true : undefined;
+  }
+
+  isNullable(): boolean {
+    return (
+      this.type.kind === ReflectionKind.union &&
+      this.type.types.some(v => v.kind === ReflectionKind.null)
+    );
+  }
+
+  isReadonly(): boolean {
+    return (
+      this.property.readonly === true ||
+      this.getTags().readonly === true ||
+      this.reflectionClass.isReadonly()
+    );
+  }
+
+  isAbstract(): boolean {
+    return (
+      this.property.kind === ReflectionKind.property &&
+      this.property.abstract === true
+    );
+  }
+
+  hasDefault(): boolean {
+    return this.property.default === undefined
+      ? !this.isOptional() &&
+          (this.getKind() === ReflectionKind.boolean ||
+            (this.type.kind === ReflectionKind.union &&
+              this.type.types.some(t => t.kind === ReflectionKind.boolean)) ||
+            this.getKind() === ReflectionKind.number ||
+            (this.type.kind === ReflectionKind.union &&
+              this.type.types.some(t => t.kind === ReflectionKind.number)))
+      : true;
+  }
+
+  getDefaultValue(): any {
+    if (this.property.default !== undefined) {
+      try {
+        if (typeof this.property.default === "function") {
+          return this.property.default();
         }
-        return this.cachedResolvedReflectionClass ||= resolveClassType(this.getType());
-    }
-
-    /**
-     * If undefined the property is not an index.
-     * A unique property is defined as index with IndexOptions.unique=true.
-     */
-    getIndex(): IndexOptions | undefined {
-        return indexAnnotation.getFirst(this.getType());
-    }
 
-    /**
-     * Returns database specific options, if defined
-     *
-     * ```typescript
-     * interface User {
-     *     logins: number & DatabaseField<{type: 'integer(8)'}>;
-     *
-     *     //of for a specific db engine
-     *     logins: number & Sqlite<{type: 'integer(8)'}>;
-     * }
-     *
-     * ```
-     */
-    getDatabase<T extends DatabaseFieldOptions>(name: string): T | undefined {
-        return databaseAnnotation.getDatabase<T>(this.getType(), name);
-    }
-
-    clone(reflectionClass?: ReflectionClass<any>, property?: TypeProperty | TypePropertySignature): ReflectionProperty {
-        const c = new ReflectionProperty(copyAndSetParent(property || this.property), reflectionClass || this.reflectionClass);
-        c.jsonType = this.jsonType;
-        c.serializer = this.serializer;
-        c.deserializer = this.deserializer;
-        return c;
-    }
-
-    applyDecorator(data: TData) {
-        this.serializer = data.serializer;
-        this.deserializer = data.deserializer;
-        Object.assign(this.data, data.data);
-
-        //note: data.validators is already applied in Processor
-    }
-
-    getName(): number | string | symbol {
-        return this.property.name;
-    }
-
-    getNameAsString(): string {
-        return memberNameToString(this.property.name);
-    }
-
-    get name(): string {
-        return memberNameToString(this.property.name);
-    }
-
-    getKind(): ReflectionKind {
-        return this.type.kind;
-    }
-
-    getType(): Type {
-        return this.type as Type;
-    }
-
-    getDescription(): string {
-        return this.property.description || '';
-    }
-
-    /**
-     * Whether a value is required from serialization point of view.
-     * If this property has for example a default value (set via constructor or manually via t.default),
-     * then the value is not required to instantiate the property value.
-     */
-    isValueRequired(): boolean {
-        if (this.hasDefault()) return false;
-
-        return !this.isOptional();
-    }
-
-    /**
-     * Returns true when `undefined` or a missing value is allowed at the class itself.
-     * This is now only true when `optional` is set, but also when type is `any`.
-     */
-    isActualOptional(): boolean {
-        return this.isOptional() || this.type.kind === ReflectionKind.any;
-    }
-
-    /**
-     * If the property is actual optional or is an union with undefined in it.
-     */
-    isOptional(): boolean {
-        return this.property.optional === true || (this.type.kind === ReflectionKind.union && this.type.types.some(v => v.kind === ReflectionKind.undefined));
-    }
-
-    setOptional(v: boolean): void {
-        this.property.optional = v ? true : undefined;
-    }
-
-    isNullable(): boolean {
-        return (this.type.kind === ReflectionKind.union && this.type.types.some(v => v.kind === ReflectionKind.null));
-    }
-
-    isReadonly(): boolean {
-        return this.property.readonly === true;
-    }
-
-    isAbstract(): boolean {
-        return this.property.kind === ReflectionKind.property && this.property.abstract === true;
-    }
-
-    hasDefault(): boolean {
-        return this.property.kind === ReflectionKind.property && this.property.default !== undefined;
-    }
-
-    getDefaultValue(): any {
-        if (this.property.kind === ReflectionKind.property && this.property.default !== undefined) {
-            try {
-                return this.property.default();
-            } catch {
-                return;
-            }
-        }
-    }
-
-    hasDefaultFunctionExpression(): boolean {
-        return this.property.kind === ReflectionKind.property && !!this.property.default && hasFunctionExpression(this.property.default);
-    }
-
-    getDefaultValueFunction(): (() => any) | undefined {
-        if (this.property.kind === ReflectionKind.property && this.property.default !== undefined) {
-            return this.property.default;
-        }
-        return;
-    }
-
-    getVisibility(): ReflectionVisibility | undefined {
-        return this.property.kind === ReflectionKind.property ? this.property.visibility : undefined;
-    }
-
-    isPublic(): boolean {
-        return this.property.kind === ReflectionKind.property ? this.property.visibility === ReflectionVisibility.public : true;
-    }
-
-    isProtected(): boolean {
-        return this.property.kind === ReflectionKind.property ? this.property.visibility === ReflectionVisibility.protected : false;
-    }
-
-    isPrivate(): boolean {
-        return this.property.kind === ReflectionKind.property ? this.property.visibility === ReflectionVisibility.private : false;
-    }
+        return this.property.default;
+      } catch {
+        return undefined;
+      }
+    } else if (!this.isOptional()) {
+      if (
+        this.getKind() === ReflectionKind.boolean ||
+        (this.type.kind === ReflectionKind.union &&
+          this.type.types.some(t => t.kind === ReflectionKind.boolean))
+      ) {
+        return false;
+      } else if (
+        this.getKind() === ReflectionKind.number ||
+        (this.type.kind === ReflectionKind.union &&
+          this.type.types.some(t => t.kind === ReflectionKind.number))
+      ) {
+        return 0;
+      }
+    }
+  }
+
+  setDefaultValue(value: any): void {
+    this.property.default = value;
+  }
+
+  hasDefaultFunctionExpression(): boolean {
+    return (
+      this.property.kind === ReflectionKind.property &&
+      !!this.property.default &&
+      hasFunctionExpression(this.property.default)
+    );
+  }
+
+  getDefaultValueFunction(): (() => any) | undefined {
+    if (
+      this.property.kind === ReflectionKind.property &&
+      this.property.default !== undefined
+    ) {
+      return this.property.default;
+    }
+
+    return undefined;
+  }
+
+  getVisibility(): ReflectionVisibility | undefined {
+    return this.property.kind === ReflectionKind.property
+      ? this.property.visibility
+      : undefined;
+  }
+
+  isPublic(): boolean {
+    return this.property.kind === ReflectionKind.property
+      ? this.property.visibility === ReflectionVisibility.public
+      : true;
+  }
+
+  isProtected(): boolean {
+    return this.property.kind === ReflectionKind.property
+      ? this.property.visibility === ReflectionVisibility.protected
+      : false;
+  }
+
+  isPrivate(): boolean {
+    return this.property.kind === ReflectionKind.property
+      ? this.property.visibility === ReflectionVisibility.private
+      : false;
+  }
+
+  setTags(tags: TagsReflection) {
+    this.property.tags = tags;
+  }
+
+  getTags(): TagsReflection {
+    return this.property.tags ?? {};
+  }
+
+  isHidden(): boolean {
+    return this.getTags().hidden === true || this.reflectionClass.isHidden();
+  }
+
+  isIgnored(): boolean {
+    return this.getTags().ignore === true || this.reflectionClass.isIgnored();
+  }
+
+  isInternal(): boolean {
+    return (
+      this.getTags().internal === true || this.reflectionClass.isInternal()
+    );
+  }
+
+  getAlias(): string[] {
+    return this.getTags().alias ?? [];
+  }
+
+  getTitle(): string | undefined {
+    return this.getTags().title;
+  }
+
+  getPermission(): string[] {
+    return (this.getTags().permission ?? []).concat(
+      this.reflectionClass.getPermission()
+    );
+  }
+
+  getDomain(): string | undefined {
+    return this.getTags().domain || this.reflectionClass.getDomain();
+  }
 }
 
-export const reflectionClassSymbol = Symbol('reflectionClass');
+export const reflectionClassSymbol = Symbol("reflectionClass");
 
 export interface SerializerFn {
-    (value: any, property: ReflectionProperty): any;
+  (value: any, property: ReflectionProperty): any;
 }
 
 export class TData {
-    validator: boolean = false;
-    validators: ValidateFunction[] = [];
-    type?: Packed | Type | ClassType;
-    data: { [name: string]: any } = {};
-    serializer?: SerializerFn;
-    deserializer?: SerializerFn;
+  validator: boolean = false;
+  validators: ValidateFunction[] = [];
+  type?: Packed | Type | ClassType;
+  data: { [name: string]: any } = {};
+  serializer?: SerializerFn;
+  deserializer?: SerializerFn;
 }
 
 export class EntityData {
-    name?: string;
-    collectionName?: string;
-    databaseSchemaName?: string;
-    disableConstructor: boolean = false;
-    data: { [name: string]: any } = {};
-    indexes: { names: string[], options: IndexOptions }[] = [];
-    singleTableInheritance?: true;
+  name?: string;
+  collectionName?: string;
+  databaseSchemaName?: string;
+  disableConstructor: boolean = false;
+  data: { [name: string]: any } = {};
+  indexes: { names: string[]; options: IndexOptions }[] = [];
+  singleTableInheritance?: true;
 }
 
-function applyEntityOptions(reflection: ReflectionClass<any>, entityOptions: EntityOptions) {
-    if (entityOptions.name !== undefined) reflection.name = entityOptions.name;
-    if (entityOptions.description !== undefined) reflection.description = entityOptions.description;
-    if (entityOptions.collection !== undefined) reflection.collectionName = entityOptions.collection;
-    if (entityOptions.database !== undefined) reflection.databaseSchemaName = entityOptions.database;
-    if (entityOptions.singleTableInheritance !== undefined) reflection.singleTableInheritance = entityOptions.singleTableInheritance;
-    if (entityOptions.indexes !== undefined) reflection.indexes = entityOptions.indexes;
+function applyEntityOptions(
+  reflection: ReflectionClass<any>,
+  entityOptions: EntityOptions
+) {
+  if (entityOptions.name !== undefined) reflection.name = entityOptions.name;
+  if (entityOptions.description !== undefined)
+    reflection.description = entityOptions.description;
+  if (entityOptions.collection !== undefined)
+    reflection.collectionName = entityOptions.collection;
+  if (entityOptions.database !== undefined)
+    reflection.databaseSchemaName = entityOptions.database;
+  if (entityOptions.singleTableInheritance !== undefined)
+    reflection.singleTableInheritance = entityOptions.singleTableInheritance;
+  if (entityOptions.indexes !== undefined)
+    reflection.indexes = entityOptions.indexes;
 }
 
 /**
  * @reflection never
  */
 export class ReflectionClass<T> {
-    /**
-     * The description, extracted from the class JSDoc @description.
-     */
-    description: string = '';
-
-    /**
-     * A place where arbitrary data is stored, usually set via decorator t.data.
-     */
-    data: { [name: string]: any } = {};
-
-    /**
-     * The unique entity name.
-     *
-     * ```typescript
-     * @entity.name('user')
-     * class User {
-     *
-     * }
-     * ```
-     */
-    name?: string;
-
-    databaseSchemaName?: string;
-
-    disableConstructor: boolean = false;
-
-    /**
-     * The collection name, used in database context (also known as table name).
-     *
-     * Usually, if this is not set, `name` will be used.
-     *
-     * ```typescript
-     * @entity.collection('users').name('user')
-     * class User {
-     *
-     * }
-     * ```
-     */
-    collectionName?: string;
-
-    /**
-     * True when @entity.singleTableInheritance was set.
-     */
-    singleTableInheritance: boolean = false;
-
-    /**
-     * Contains all indexed, multi-field using entity.index and all indexes from properties.
-     *
-     * ```typescript
-     * @entity
-     *    .collection('users')
-     *    .name('user')
-     *    .index(['username', 'email'])
-     *    .index(['email', 'region'], {unique: true})
-     * class User {
-     *     username: string;
-     *     email: string;
-     * }
-     * ```
-     */
-    indexes: { names: string[], options: IndexOptions }[] = [];
-
-    protected propertyNames: string[] = [];
-    protected methodNames: string[] = [];
-    protected properties: ReflectionProperty[] = [];
-    protected methods: ReflectionMethod[] = [];
-
-    /**
-     * References and back references.
-     */
-    protected references: ReflectionProperty[] = [];
-
-    protected primaries: ReflectionProperty[] = [];
-
-    protected autoIncrements: ReflectionProperty[] = [];
-
-    /**
-     * If a custom validator method was set via @t.validator, then this is the method name.
-     */
-    public validationMethod?: string | symbol | number | TypeTemplateLiteral;
-
-    /**
-     * A class using @t.singleTableInheritance registers itself in this array in its super class.
-     */
-    public subClasses: ReflectionClass<any>[] = [];
-
-    constructor(public readonly type: TypeClass | TypeObjectLiteral, public readonly parent?: ReflectionClass<any>) {
-        if (type.kind !== ReflectionKind.class && type.kind !== ReflectionKind.objectLiteral) throw new Error('Only class, interface, or object literal type possible');
-
-        if (parent) {
-            this.name = parent.name;
-            this.collectionName = parent.collectionName;
-            this.databaseSchemaName = parent.databaseSchemaName;
-            this.description = parent.description;
-
-            for (const member of parent.getProperties()) {
-                this.registerProperty(member.clone(this));
-            }
-            for (const member of parent.getMethods()) {
-                this.registerMethod(member.clone(this));
-            }
+  /**
+   * The description, extracted from the class JSDoc @description.
+   */
+  description: string = "";
+
+  /**
+   * The tags, extracted from the class JSDoc @tag.
+   */
+  tags?: TagsReflection;
+
+  /**
+   * A place where arbitrary data is stored, usually set via decorator t.data.
+   */
+  data: { [name: string]: any } = {};
+
+  /**
+   * The unique entity name.
+   *
+   * ```typescript
+   * @entity.name('user')
+   * class User {
+   *
+   * }
+   * ```
+   */
+  name?: string;
+
+  databaseSchemaName?: string;
+
+  disableConstructor: boolean = false;
+
+  /**
+   * The collection name, used in database context (also known as table name).
+   *
+   * Usually, if this is not set, `name` will be used.
+   *
+   * ```typescript
+   * @entity.collection('users').name('user')
+   * class User {
+   *
+   * }
+   * ```
+   */
+  collectionName?: string;
+
+  /**
+   * True when @entity.singleTableInheritance was set.
+   */
+  singleTableInheritance: boolean = false;
+
+  /**
+   * Contains all indexed, multi-field using entity.index and all indexes from properties.
+   *
+   * ```typescript
+   * @entity
+   *    .collection('users')
+   *    .name('user')
+   *    .index(['username', 'email'])
+   *    .index(['email', 'region'], {unique: true})
+   * class User {
+   *     username: string;
+   *     email: string;
+   * }
+   * ```
+   */
+  indexes: { names: string[]; options: IndexOptions }[] = [];
+
+  protected propertyNames: string[] = [];
+  protected methodNames: string[] = [];
+  protected properties: ReflectionProperty[] = [];
+  protected propertyAliases: Map<string, string> = new Map();
+  protected methods: ReflectionMethod[] = [];
+  protected methodAliases: Map<string, string> = new Map();
+
+  /**
+   * References and back references.
+   */
+  protected references: ReflectionProperty[] = [];
+
+  protected primaries: ReflectionProperty[] = [];
+
+  protected autoIncrements: ReflectionProperty[] = [];
+
+  /**
+   * If a custom validator method was set via @t.validator, then this is the method name.
+   */
+  public validationMethod?: string | symbol | number | TypeTemplateLiteral;
+
+  /**
+   * A class using @t.singleTableInheritance registers itself in this array in its super class.
+   */
+  public subClasses: ReflectionClass<any>[] = [];
+
+  constructor(
+    public readonly type: TypeClass | TypeObjectLiteral,
+    public readonly parent?: ReflectionClass<any>
+  ) {
+    if (
+      type.kind !== ReflectionKind.class &&
+      type.kind !== ReflectionKind.objectLiteral
+    )
+      throw new Error("Only class, interface, or object literal type possible");
+
+    if (parent) {
+      this.name = parent.name;
+      this.collectionName = parent.collectionName;
+      this.databaseSchemaName = parent.databaseSchemaName;
+      this.description = parent.description;
+      this.tags = parent.tags;
+
+      for (const member of parent.getProperties()) {
+        this.registerProperty(member.clone(this));
+      }
+      for (const member of parent.getMethods()) {
+        this.registerMethod(member.clone(this));
+      }
+    }
+
+    for (const member of type.types) {
+      this.add(member);
+    }
+
+    const entityOptions = entityAnnotation.getFirst(this.type);
+    if (entityOptions) {
+      applyEntityOptions(this, entityOptions);
+    }
+    this.description = this.type.description || this.description;
+    this.tags = this.type.tags || this.tags;
+
+    //apply decorators
+    if (
+      type.kind === ReflectionKind.class &&
+      isWithDeferredDecorators(type.classType)
+    ) {
+      for (const decorator of type.classType.__decorators) {
+        if (decorator.target !== type.classType) continue;
+        const { data, property, parameterIndexOrDescriptor } = decorator;
+        if (
+          property === undefined &&
+          parameterIndexOrDescriptor === undefined
+        ) {
+          this.applyDecorator(data);
+        } else if (
+          property !== undefined &&
+          parameterIndexOrDescriptor === undefined
+        ) {
+          const reflectionProperty = this.getPropertyOrUndefined(property);
+          if (reflectionProperty) reflectionProperty.applyDecorator(data);
+
+          const reflectionMethod = this.getMethodOrUndefined(property);
+          if (reflectionMethod) reflectionMethod.applyDecorator(data);
+        } else if (parameterIndexOrDescriptor !== undefined) {
+          const reflectionMethod = this.getMethodOrUndefined(
+            property || "constructor"
+          );
+          if (reflectionMethod) {
+            const params = reflectionMethod.getParameters();
+            const param = params[parameterIndexOrDescriptor];
+            if (param) param.applyDecorator(data);
+          }
         }
+      }
+    }
+  }
+
+  clone(): ReflectionClass<any> {
+    const reflection = new ReflectionClass(
+      copyAndSetParent(this.type),
+      this.parent
+    );
+    reflection.name = this.name;
+    reflection.collectionName = this.collectionName;
+    reflection.databaseSchemaName = this.databaseSchemaName;
+    reflection.singleTableInheritance = this.singleTableInheritance;
+    reflection.indexes = this.indexes.slice();
+    reflection.subClasses = this.subClasses.slice();
+    reflection.data = { ...this.data };
+    reflection.description = this.description;
+    reflection.tags = this.tags;
+
+    return reflection;
+  }
+
+  toString(): string {
+    return stringifyResolvedType(this.type);
+  }
+
+  getPropertiesDeclaredInConstructor(): ReflectionProperty[] {
+    const constructor = this.getMethod("constructor");
+    if (!constructor) return [];
+    const propertyNames = constructor.parameters
+      .filter(v => v.getVisibility() !== undefined)
+      .map(v => v.getName());
+    return this.properties.filter(v =>
+      propertyNames.includes(memberNameToString(v.getName()))
+    );
+  }
+
+  clearJitContainer() {
+    clearTypeJitContainer(this.type);
+  }
+
+  getJitContainer() {
+    return getTypeJitContainer(this.type);
+  }
+
+  getClassType(): ClassType {
+    return this.type.kind === ReflectionKind.class
+      ? this.type.classType
+      : Object;
+  }
+
+  getClassName(): string {
+    return this.type.kind === ReflectionKind.class
+      ? this.type.typeName || getClassName(this.getClassType())
+      : this.type.typeName || "Object";
+  }
+
+  createDefaultObject(): object {
+    try {
+      return new (this.getClassType())();
+    } catch {
+      return {};
+    }
+  }
+
+  getName(): string {
+    return this.name || this.getClassName();
+  }
+
+  getDescription(): string {
+    return this.description;
+  }
+
+  getCollectionName(): string {
+    return this.collectionName || this.getName();
+  }
+
+  hasProperty(name: string | symbol | number): boolean {
+    const memberName = memberNameToString(name);
+    return (
+      this.propertyNames.includes(memberName) ||
+      (this.propertyAliases.has(memberName) &&
+        this.propertyNames.includes(this.propertyAliases.get(memberName)!))
+    );
+  }
 
-        for (const member of type.types) {
-            this.add(member);
-        }
+  hasMethod(name: string | symbol | number): boolean {
+    const memberName = memberNameToString(name);
+    return (
+      this.methodNames.includes(memberName) ||
+      (this.methodAliases.has(memberName) &&
+        this.methodNames.includes(this.methodAliases.get(memberName)!))
+    );
+  }
 
-        const entityOptions = entityAnnotation.getFirst(this.type);
-        if (entityOptions) {
-            applyEntityOptions(this, entityOptions);
-        }
-        this.description = this.type.description || this.description;
-
-        //apply decorators
-        if (type.kind === ReflectionKind.class && isWithDeferredDecorators(type.classType)) {
-            for (const decorator of type.classType.__decorators) {
-                if (decorator.target !== type.classType) continue;
-                const { data, property, parameterIndexOrDescriptor } = decorator;
-                if (property === undefined && parameterIndexOrDescriptor === undefined) {
-                    this.applyDecorator(data);
-                } else if (property !== undefined && parameterIndexOrDescriptor === undefined) {
-                    const reflectionProperty = this.getPropertyOrUndefined(property);
-                    if (reflectionProperty) reflectionProperty.applyDecorator(data);
-
-                    const reflectionMethod = this.getMethodOrUndefined(property);
-                    if (reflectionMethod) reflectionMethod.applyDecorator(data);
-
-                } else if (parameterIndexOrDescriptor !== undefined) {
-                    const reflectionMethod = this.getMethodOrUndefined(property || 'constructor');
-                    if (reflectionMethod) {
-                        const params = reflectionMethod.getParameters();
-                        const param = params[parameterIndexOrDescriptor];
-                        if (param) param.applyDecorator(data);
-                    }
-                }
-            }
-        }
+  getPrimary(): ReflectionProperty {
+    if (!this.primaries.length) {
+      throw new Error(`Class ${this.getClassName()} has no primary key.`);
     }
+    return this.primaries[0];
+  }
 
-    clone(): ReflectionClass<any> {
-        const reflection = new ReflectionClass(copyAndSetParent(this.type), this.parent);
-        reflection.name = this.name;
-        reflection.collectionName = this.collectionName;
-        reflection.databaseSchemaName = this.databaseSchemaName;
-        reflection.singleTableInheritance = this.singleTableInheritance;
-        reflection.indexes = this.indexes.slice();
-        reflection.subClasses = this.subClasses.slice();
-        reflection.data = { ...this.data };
-        reflection.description = this.description;
-
-        return reflection;
-    }
+  getAutoIncrement(): ReflectionProperty | undefined {
+    return this.autoIncrements[0];
+  }
 
-    toString(): string {
-        return stringifyResolvedType(this.type);
-    }
+  public isSchemaOf(classType: ClassType): boolean {
+    return isPrototypeOfBase(this.getClassType(), classType);
+  }
 
-    getPropertiesDeclaredInConstructor(): ReflectionProperty[] {
-        const constructor = this.getMethod('constructor');
-        if (!constructor) return [];
-        const propertyNames = constructor.parameters.filter(v => v.getVisibility() !== undefined).map(v => v.getName());
-        return this.properties.filter(v => propertyNames.includes(memberNameToString(v.getName())));
-    }
+  hasPrimary(): boolean {
+    return this.primaries.length > 0;
+  }
 
-    clearJitContainer() {
-        clearTypeJitContainer(this.type);
-    }
+  getPrimaries(): ReflectionProperty[] {
+    return this.primaries;
+  }
 
-    getJitContainer() {
-        return getTypeJitContainer(this.type);
-    }
+  /**
+   * Returns the ReflectionClass object from parent/super class, if available.
+   */
+  getSuperReflectionClass(): ReflectionClass<any> | undefined {
+    return this.parent;
+  }
 
-    getClassType(): ClassType {
-        return this.type.kind === ReflectionKind.class ? this.type.classType : Object;
-    }
+  removeProperty(name: string | number | symbol) {
+    const property = this.properties.find(v => v.getName() === name);
+    if (!property)
+      throw new Error(
+        `Property ${String(name)} not known in ${this.getClassName()}`
+      );
 
-    getClassName(): string {
-        return this.type.kind === ReflectionKind.class ? this.type.typeName || getClassName(this.getClassType()) : this.type.typeName || 'Object';
-    }
+    const stringName = memberNameToString(name);
+    arrayRemoveItem(this.propertyNames, stringName);
 
-    createDefaultObject(): object {
-        try {
-            return new (this.getClassType());
-        } catch {
-            return {};
-        }
-    }
+    const indexType = this.type.types.findIndex(
+      v =>
+        (v.kind === ReflectionKind.property ||
+          v.kind === ReflectionKind.propertySignature) &&
+        v.name === name
+    );
+    if (indexType !== -1) this.type.types.splice(indexType, 1);
 
-    getName(): string {
-        return this.name || this.getClassName();
-    }
+    arrayRemoveItem(this.properties, property);
 
-    getDescription(): string {
-        return this.description;
+    if (property.isReference() || property.isBackReference()) {
+      arrayRemoveItem(this.references, property);
     }
 
-    getCollectionName(): string {
-        return this.collectionName || this.getName();
-    }
+    if (property.isPrimaryKey()) arrayRemoveItem(this.primaries, property);
+    if (property.isAutoIncrement())
+      arrayRemoveItem(this.autoIncrements, property);
 
-    hasProperty(name: string | symbol | number): boolean {
-        return this.propertyNames.includes(memberNameToString(name));
+    const index = property.getIndex();
+    if (index) {
+      const indexFound = this.indexes.findIndex(
+        v => v.names.length === 0 && v.names[0] === property.name
+      );
+      if (indexFound !== -1) this.indexes.splice(indexFound, 1);
     }
+  }
 
-    hasMethod(name: string | symbol | number): boolean {
-        return this.methodNames.includes(memberNameToString(name));
-    }
+  registerProperty(property: ReflectionProperty) {
+    if (this.propertyNames.includes(property.name)) {
+      this.removeProperty(property.getName());
+    }
 
-    getPrimary(): ReflectionProperty {
-        if (!this.primaries.length) {
-            throw new Error(`Class ${this.getClassName()} has no primary key.`);
-        }
-        return this.primaries[0];
-    }
+    if (!hasMember(this.type, property.getName())) {
+      this.type.types.push(property.property as any);
+    }
 
-    getAutoIncrement(): ReflectionProperty | undefined {
-        return this.autoIncrements[0];
+    property.property.parent = this.type;
+    this.properties.push(property);
+    this.propertyNames.push(property.name);
+    if (property.isReference() || property.isBackReference()) {
+      this.references.push(property);
     }
 
-    public isSchemaOf(classType: ClassType): boolean {
-        return isPrototypeOfBase(this.getClassType(), classType);
+    if (property.isPrimaryKey()) this.primaries.push(property);
+    if (property.isAutoIncrement()) this.autoIncrements.push(property);
+
+    const index = property.getIndex();
+    if (index) {
+      this.indexes.push({ names: [property.name], options: index });
     }
 
-    hasPrimary(): boolean {
-        return this.primaries.length > 0;
+    if (property.getAlias().length > 0) {
+      for (const alias of property.getAlias()) {
+        this.propertyAliases.set(alias, property.name);
+      }
     }
 
-    getPrimaries(): ReflectionProperty[] {
-        return this.primaries;
-    }
+    this.getJitContainer();
+  }
 
-    /**
-     * Returns the ReflectionClass object from parent/super class, if available.
-     */
-    getSuperReflectionClass(): ReflectionClass<any> | undefined {
-        return this.parent;
+  addProperty(prop: {
+    name: number | string | symbol;
+    optional?: true;
+    readonly?: true;
+    description?: string;
+    visibility?: ReflectionVisibility;
+    type: Type;
+    default?: any;
+    tags?: TagsReflection;
+  }): ReflectionProperty {
+    const type = {
+      kind:
+        this.type.kind === ReflectionKind.class
+          ? ReflectionKind.property
+          : ReflectionKind.propertySignature,
+      parent: this.type,
+      ...prop
+    } as TypeProperty | TypePropertySignature;
+    if (type.kind === ReflectionKind.property) {
+      type.visibility = prop.visibility ?? ReflectionVisibility.public;
     }
 
-    removeProperty(name: string | number | symbol) {
-        const property = this.properties.find(v => v.getName() === name);
-        if (!property) throw new Error(`Property ${String(name)} not known in ${this.getClassName()}`);
-
-        const stringName = memberNameToString(name);
-        arrayRemoveItem(this.propertyNames, stringName);
-
-        const indexType = this.type.types.findIndex(v => (v.kind === ReflectionKind.property || v.kind === ReflectionKind.propertySignature) && v.name === name);
-        if (indexType !== -1) this.type.types.splice(indexType, 1);
+    const property = new ReflectionProperty(type, this);
+    this.registerProperty(property);
 
-        arrayRemoveItem(this.properties, property);
+    return property;
+  }
 
-        if (property.isReference() || property.isBackReference()) {
-            arrayRemoveItem(this.references, property);
-        }
+  registerMethod(method: ReflectionMethod) {
+    if (this.methodNames.includes(method.name)) return;
 
-        if (property.isPrimaryKey()) arrayRemoveItem(this.primaries, property);
-        if (property.isAutoIncrement()) arrayRemoveItem(this.autoIncrements, property);
+    this.methods.push(method);
+    this.methodNames.push(method.name);
 
-        const index = property.getIndex();
-        if (index) {
-            const indexFound = this.indexes.findIndex(v => v.names.length === 0 && v.names[0] === property.name);
-            if (indexFound !== -1) this.indexes.splice(indexFound, 1);
-        }
+    if (method.getAlias().length > 0) {
+      for (const alias of method.getAlias()) {
+        this.methodAliases.set(alias, method.name);
+      }
     }
+  }
 
-    registerProperty(property: ReflectionProperty) {
-        if (this.propertyNames.includes(property.name)) {
-            this.removeProperty(property.getName());
-        }
-
-        if (!hasMember(this.type, property.getName())) {
-            this.type.types.push(property.property as any);
-        }
-
-        property.property.parent = this.type;
-        this.properties.push(property);
-        this.propertyNames.push(property.name);
-        if (property.isReference() || property.isBackReference()) {
-            this.references.push(property);
-        }
-
-        if (property.isPrimaryKey()) this.primaries.push(property);
-        if (property.isAutoIncrement()) this.autoIncrements.push(property);
-
-        const index = property.getIndex();
-        if (index) {
-            this.indexes.push({ names: [property.name], options: index });
-        }
-
-        this.getJitContainer();
+  add(member: Type) {
+    if (
+      member.kind === ReflectionKind.property ||
+      member.kind === ReflectionKind.propertySignature
+    ) {
+      const existing = this.getPropertyOrUndefined(member.name);
+      if (existing) {
+        existing.setType(member.type);
+      } else {
+        this.registerProperty(new ReflectionProperty(member, this));
+      }
     }
 
-    addProperty(prop: {
-        name: number | string | symbol;
-        optional?: true;
-        readonly?: true;
-        description?: string;
-        visibility?: ReflectionVisibility
-        type: Type;
-    }): ReflectionProperty {
-        const type = {
-            kind: this.type.kind === ReflectionKind.class ? ReflectionKind.property : ReflectionKind.propertySignature,
-            parent: this.type,
-            ...prop,
-        } as TypeProperty | TypePropertySignature;
-        if (type.kind === ReflectionKind.property) {
-            type.visibility = prop.visibility ?? ReflectionVisibility.public;
-        }
-
-        const property = new ReflectionProperty(type, this);
-        this.registerProperty(property);
-
-        return property;
+    if (
+      member.kind === ReflectionKind.method ||
+      member.kind === ReflectionKind.methodSignature
+    ) {
+      const existing = this.getMethodOrUndefined(member.name);
+      if (existing) {
+        existing.setType(member);
+      } else {
+        this.registerMethod(new ReflectionMethod(member, this));
+      }
+    }
+  }
+
+  public assignedSingleTableInheritanceSubClassesByIdentifier?: {
+    [id: string]: ReflectionClass<any>;
+  };
+
+  getAssignedSingleTableInheritanceSubClassesByIdentifier():
+    | { [id: string]: ReflectionClass<any> }
+    | undefined {
+    if (!this.subClasses.length) return;
+    if (this.assignedSingleTableInheritanceSubClassesByIdentifier)
+      return this.assignedSingleTableInheritanceSubClassesByIdentifier;
+
+    let isBaseOfSingleTableEntity = false;
+    for (const schema of this.subClasses) {
+      if (schema.singleTableInheritance) {
+        isBaseOfSingleTableEntity = true;
+        break;
+      }
+    }
+
+    if (!isBaseOfSingleTableEntity) return;
+
+    const discriminant = this.getSingleTableInheritanceDiscriminantName();
+
+    for (const schema of this.subClasses) {
+      if (schema.singleTableInheritance) {
+        if (!this.assignedSingleTableInheritanceSubClassesByIdentifier)
+          this.assignedSingleTableInheritanceSubClassesByIdentifier = {};
+        const property = schema.getProperty(discriminant);
+        assertType(property.type, ReflectionKind.literal);
+        this.assignedSingleTableInheritanceSubClassesByIdentifier[
+          property.type.literal as string
+        ] = schema;
+      }
+    }
+    return this.assignedSingleTableInheritanceSubClassesByIdentifier;
+  }
+
+  hasSingleTableInheritanceSubClasses(): boolean {
+    return (
+      this.getAssignedSingleTableInheritanceSubClassesByIdentifier() !==
+      undefined
+    );
+  }
+
+  getSingleTableInheritanceDiscriminantName(): string {
+    if (!this.data.singleTableInheritanceProperty) {
+      // let discriminant = findCommonDiscriminant(this.subClasses);
+
+      //when no discriminator was found, find a common literal
+      const discriminant = findCommonLiteral(this.subClasses);
+
+      if (!discriminant) {
+        throw new Error(
+          `Sub classes of ${this.getClassName()} single-table inheritance [${this.subClasses.map(v => v.getClassName())}] have no common discriminant or common literal. Please define one.`
+        );
+      }
+      this.data.singleTableInheritanceProperty = this.getProperty(discriminant);
+    }
+
+    return (this.data.singleTableInheritanceProperty as ReflectionProperty)
+      .name;
+  }
+
+  applyDecorator(data: EntityData) {
+    Object.assign(this.data, data.data);
+    if (data.name !== undefined) this.name = data.name;
+    if (data.collectionName !== undefined)
+      this.collectionName = data.collectionName;
+    if (data.databaseSchemaName !== undefined)
+      this.databaseSchemaName = data.databaseSchemaName;
+    this.disableConstructor = data.disableConstructor;
+
+    this.indexes.push(...data.indexes);
+    if (data.singleTableInheritance) {
+      this.singleTableInheritance = true;
+      if (this.parent) {
+        //the subclass is only added when really needed (e.g. for tracking childs of a single table inheritance setup) otherwise it's a memory leak when a lot of classes
+        //are dynamically created.
+        this.parent.subClasses.push(this);
+      }
+    }
+  }
+
+  static from<T>(
+    classTypeIn?:
+      | ReceiveType<T>
+      | AbstractClassType<T>
+      | TypeClass
+      | TypeObjectLiteral
+      | ReflectionClass<any>,
+    args: any[] = []
+  ): ReflectionClass<T> {
+    if (!classTypeIn)
+      throw new Error(`No type given in ReflectionClass.from<T>`);
+    if (isArray(classTypeIn)) classTypeIn = resolveReceiveType(classTypeIn);
+
+    if (classTypeIn instanceof ReflectionClass) return classTypeIn;
+    if (isType(classTypeIn)) {
+      if (
+        classTypeIn.kind === ReflectionKind.objectLiteral ||
+        (classTypeIn.kind === ReflectionKind.class && classTypeIn.typeArguments)
+      ) {
+        const jit = getTypeJitContainer(classTypeIn);
+        if (jit.reflectionClass) return jit.reflectionClass;
+        return (jit.reflectionClass = new ReflectionClass<T>(classTypeIn));
+      }
+      if (classTypeIn.kind !== ReflectionKind.class)
+        throw new Error(
+          `TypeClass or TypeObjectLiteral expected, not ${ReflectionKind[classTypeIn.kind]}`
+        );
+    }
+
+    const classType = isType(classTypeIn)
+      ? (classTypeIn as TypeClass).classType
+      : (classTypeIn as any)["prototype"]
+        ? (classTypeIn as ClassType<T>)
+        : (classTypeIn.constructor as ClassType<T>);
+
+    if (!classType.prototype.hasOwnProperty(reflectionClassSymbol)) {
+      Object.defineProperty(classType.prototype, reflectionClassSymbol, {
+        writable: true,
+        enumerable: false
+      });
+    }
+
+    if (classType.prototype[reflectionClassSymbol] && args.length === 0) {
+      return classType.prototype[reflectionClassSymbol];
+    }
+
+    const type = isType(classTypeIn)
+      ? (classTypeIn as TypeClass)
+      : "__type" in classType
+        ? args.length
+          ? resolveRuntimeType(classType, args)
+          : resolveRuntimeType(classType)
+        : ({
+            kind: ReflectionKind.class,
+            classType,
+            types: []
+          } as TypeClass);
+
+    if (type.kind !== ReflectionKind.class) {
+      throw new Error(
+        `Given class is not a class but kind ${ReflectionKind[type.kind]}. classType: ${stringifyValueWithType(classType)}`
+      );
+    }
+
+    const parentProto = Object.getPrototypeOf(classType.prototype);
+    const parentReflectionClass: ReflectionClass<T> | undefined =
+      parentProto && parentProto.constructor !== Object
+        ? ReflectionClass.from(parentProto, type.extendsArguments)
+        : undefined;
+
+    const reflectionClass = new ReflectionClass(type, parentReflectionClass);
+    if (args.length === 0) {
+      classType.prototype[reflectionClassSymbol] = reflectionClass;
+      return reflectionClass;
+    } else {
+      return reflectionClass;
     }
+  }
 
-    registerMethod(method: ReflectionMethod) {
-        if (this.methodNames.includes(method.name)) return;
-
-        this.methods.push(method);
-        this.methodNames.push(method.name);
-    }
+  getIndexSignatures() {
+    throw new Error("todo");
+  }
 
-    add(member: Type) {
-        if (member.kind === ReflectionKind.property || member.kind === ReflectionKind.propertySignature) {
-            const existing = this.getPropertyOrUndefined(member.name);
-            if (existing) {
-                existing.setType(member.type);
-            } else {
-                this.registerProperty(new ReflectionProperty(member, this));
-            }
-        }
+  getPropertyNames(): (string | number | symbol)[] {
+    return this.propertyNames;
+  }
 
-        if (member.kind === ReflectionKind.method || member.kind === ReflectionKind.methodSignature) {
-            const existing = this.getMethodOrUndefined(member.name);
-            if (existing) {
-                existing.setType(member);
-            } else {
-                this.registerMethod(new ReflectionMethod(member, this));
-            }
-        }
-    }
+  getProperties(): ReflectionProperty[] {
+    return this.properties;
+  }
 
-    public assignedSingleTableInheritanceSubClassesByIdentifier?: { [id: string]: ReflectionClass<any> };
+  getPropertiesInGroup(...group: string[]): ReflectionProperty[] {
+    return this.properties.filter(v => v.isInGroup(...group));
+  }
 
-    getAssignedSingleTableInheritanceSubClassesByIdentifier(): { [id: string]: ReflectionClass<any> } | undefined {
-        if (!this.subClasses.length) return;
-        if (this.assignedSingleTableInheritanceSubClassesByIdentifier) return this.assignedSingleTableInheritanceSubClassesByIdentifier;
+  getMethodNames(): (string | number | symbol)[] {
+    return this.methodNames;
+  }
 
-        let isBaseOfSingleTableEntity = false;
-        for (const schema of this.subClasses) {
-            if (schema.singleTableInheritance) {
-                isBaseOfSingleTableEntity = true;
-                break;
-            }
-        }
+  getMethods(): ReflectionMethod[] {
+    return this.methods;
+  }
 
-        if (!isBaseOfSingleTableEntity) return;
+  /**
+   * Returns references and back references.
+   */
+  getReferences(): ReflectionProperty[] {
+    return this.references;
+  }
 
-        const discriminant = this.getSingleTableInheritanceDiscriminantName();
+  getConstructorOrUndefined(): ReflectionMethod | undefined {
+    return this.getMethodOrUndefined("constructor");
+  }
 
-        for (const schema of this.subClasses) {
-            if (schema.singleTableInheritance) {
-                if (!this.assignedSingleTableInheritanceSubClassesByIdentifier) this.assignedSingleTableInheritanceSubClassesByIdentifier = {};
-                const property = schema.getProperty(discriminant);
-                assertType(property.type, ReflectionKind.literal);
-                this.assignedSingleTableInheritanceSubClassesByIdentifier[property.type.literal as string] = schema;
-            }
-        }
-        return this.assignedSingleTableInheritanceSubClassesByIdentifier;
+  getPropertyOrUndefined(
+    name: string | number | symbol | TypeTemplateLiteral
+  ): ReflectionProperty | undefined {
+    for (const property of this.getProperties()) {
+      if (property.getName() === name) return property;
     }
 
-    hasSingleTableInheritanceSubClasses(): boolean {
-        return this.getAssignedSingleTableInheritanceSubClassesByIdentifier() !== undefined;
+    if (this.propertyAliases.has(name.toString())) {
+      const alias = this.propertyAliases.get(name.toString())!;
+      return this.getPropertyOrUndefined(alias);
     }
 
-    getSingleTableInheritanceDiscriminantName(): string {
-        if (!this.data.singleTableInheritanceProperty) {
-
-            // let discriminant = findCommonDiscriminant(this.subClasses);
+    return;
+  }
 
-            //when no discriminator was found, find a common literal
-            const discriminant = findCommonLiteral(this.subClasses);
+  getProperty(name: string | number | symbol): ReflectionProperty {
+    const property = this.getPropertyOrUndefined(name);
+    if (!property)
+      throw new Error(
+        `No property ${memberNameToString(name)} found in ${this.getClassName()}`
+      );
+    return property;
+  }
 
-            if (!discriminant) {
-                throw new Error(`Sub classes of ${this.getClassName()} single-table inheritance [${this.subClasses.map(v => v.getClassName())}] have no common discriminant or common literal. Please define one.`);
-            }
-            this.data.singleTableInheritanceProperty = this.getProperty(discriminant);
-        }
+  getMethodParameters(name: string | number | symbol): ReflectionParameter[] {
+    const method = this.getMethodOrUndefined(name);
+    return method ? method.getParameters() : [];
+  }
 
-        return (this.data.singleTableInheritanceProperty as ReflectionProperty).name;
+  getMethodOrUndefined(
+    name: string | number | symbol | TypeTemplateLiteral
+  ): ReflectionMethod | undefined {
+    for (const method of this.getMethods()) {
+      if (method.getName() === name) return method;
     }
 
-    applyDecorator(data: EntityData) {
-        Object.assign(this.data, data.data);
-        if (data.name !== undefined) this.name = data.name;
-        if (data.collectionName !== undefined) this.collectionName = data.collectionName;
-        if (data.databaseSchemaName !== undefined) this.databaseSchemaName = data.databaseSchemaName;
-        this.disableConstructor = data.disableConstructor;
-
-        this.indexes.push(...data.indexes);
-        if (data.singleTableInheritance) {
-            this.singleTableInheritance = true;
-            if (this.parent) {
-                //the subclass is only added when really needed (e.g. for tracking childs of a single table inheritance setup) otherwise it's a memory leak when a lot of classes
-                //are dynamically created.
-                this.parent.subClasses.push(this);
-            }
-        }
+    if (this.methodAliases.has(name.toString())) {
+      const alias = this.methodAliases.get(name.toString())!;
+      return this.getMethodOrUndefined(alias);
     }
 
-    static from<T>(classTypeIn?: ReceiveType<T> | AbstractClassType<T> | TypeClass | TypeObjectLiteral | ReflectionClass<any>, args: any[] = []): ReflectionClass<T> {
-        if (!classTypeIn) throw new Error(`No type given in ReflectionClass.from<T>`);
-        if (isArray(classTypeIn)) classTypeIn = resolveReceiveType(classTypeIn);
-
-        if (classTypeIn instanceof ReflectionClass) return classTypeIn;
-        if (isType(classTypeIn)) {
-            if (classTypeIn.kind === ReflectionKind.objectLiteral || (classTypeIn.kind === ReflectionKind.class && classTypeIn.typeArguments)) {
-                const jit = getTypeJitContainer(classTypeIn);
-                if (jit.reflectionClass) return jit.reflectionClass;
-                return jit.reflectionClass = new ReflectionClass<T>(classTypeIn);
-            }
-            if (classTypeIn.kind !== ReflectionKind.class) throw new Error(`TypeClass or TypeObjectLiteral expected, not ${ReflectionKind[classTypeIn.kind]}`);
-        }
-
-        const classType = isType(classTypeIn) ? (classTypeIn as TypeClass).classType : (classTypeIn as any)['prototype'] ? classTypeIn as ClassType<T> : classTypeIn.constructor as ClassType<T>;
-
-        if (!classType.prototype.hasOwnProperty(reflectionClassSymbol)) {
-            Object.defineProperty(classType.prototype, reflectionClassSymbol, { writable: true, enumerable: false });
-        }
-
-        if (classType.prototype[reflectionClassSymbol] && args.length === 0) {
-            return classType.prototype[reflectionClassSymbol];
-        }
-
-        const type = isType(classTypeIn) ? classTypeIn as TypeClass : ('__type' in classType ?
-            args.length ? resolveRuntimeType(classType, args) : resolveRuntimeType(classType)
-            : {
-                kind: ReflectionKind.class,
-                classType,
-                types: [],
-            } as TypeClass);
-
-        if (type.kind !== ReflectionKind.class) {
-            throw new Error(`Given class is not a class but kind ${ReflectionKind[type.kind]}. classType: ${stringifyValueWithType(classType)}`);
-        }
-
-        const parentProto = Object.getPrototypeOf(classType.prototype);
-        const parentReflectionClass: ReflectionClass<T> | undefined = parentProto && parentProto.constructor !== Object ? ReflectionClass.from(parentProto, type.extendsArguments) : undefined;
-
-        const reflectionClass = new ReflectionClass(type, parentReflectionClass);
-        if (args.length === 0) {
-            classType.prototype[reflectionClassSymbol] = reflectionClass;
-            return reflectionClass;
-        } else {
-            return reflectionClass;
+    return;
+  }
+
+  getMethod(name: string | number | symbol): ReflectionMethod {
+    const method = this.getMethodOrUndefined(name);
+    if (!method)
+      throw new Error(
+        `No method ${memberNameToString(name)} found in ${this.getClassName()}`
+      );
+    return method;
+  }
+
+  public hasCircularReference(): boolean {
+    return hasCircularReference(this.type);
+  }
+
+  serializeType(): SerializedTypes {
+    return serializeType(this.type);
+  }
+
+  setTags(tags: TagsReflection) {
+    this.type.tags = tags;
+  }
+
+  getTags(): TagsReflection {
+    return this.type.tags ?? {};
+  }
+
+  isHidden(): boolean {
+    return this.getTags().hidden === true;
+  }
+
+  isIgnored(): boolean {
+    return this.getTags().ignore === true;
+  }
+
+  isInternal(): boolean {
+    return this.getTags().internal === true;
+  }
+
+  isReadonly(): boolean {
+    return this.getTags().readonly === true;
+  }
+
+  getAlias(): string[] {
+    return this.getTags().alias ?? [];
+  }
+
+  getTitle(): string | undefined {
+    return this.getTags().title;
+  }
+
+  getPermission(): string[] {
+    return this.getTags().permission ?? [];
+  }
+
+  getDomain(): string | undefined {
+    return this.getTags().domain;
+  }
+
+  /**
+   * All references have a counter-part. This methods finds it and errors if not possible.
+   *
+   * If the given reference is a owning reference it finds the correct backReference,
+   *    which can be found by checking all reference options.mappedBy.
+   *
+   * If the given reference is a back reference it finds the owning reference,
+   *    which can be found by using its options.mappedBy.
+   *
+   * Alternatively we simply check for resolvedClassType to be given `classType`, and if only one
+   * found, we return it. When more than one found, we throw an error saying the user he
+   * should make its relation mapping not ambiguous.
+   */
+  public findReverseReference(
+    toClassType: ClassType,
+    fromReference: ReflectionProperty
+  ): ReflectionProperty {
+    if (
+      fromReference.isBackReference() &&
+      fromReference.getBackReference().mappedBy
+    ) {
+      if (
+        resolveForeignReflectionClass(fromReference).getClassType() ===
+        this.getClassType()
+      ) {
+        return this.getProperty(
+          fromReference.getBackReference().mappedBy as string
+        );
+      }
+    }
+
+    const candidates: ReflectionProperty[] = [];
+    for (const backRef of this.references) {
+      if (backRef === fromReference) continue;
+
+      //backRef points to something completely different
+      if (
+        !backRef.isArray() &&
+        resolveForeignReflectionClass(backRef).getClassType() !== toClassType
+      )
+        continue;
+      if (
+        backRef.isArray() &&
+        getClassType(backRef.getSubType()) !== toClassType
+      )
+        continue;
+
+      //we found the perfect match, manually annotated
+      if (backRef.isBackReference() && backRef.getBackReference().mappedBy) {
+        if (backRef.getBackReference().mappedBy === fromReference.name) {
+          return backRef;
         }
-    }
-
-    getIndexSignatures() {
-        throw new Error('todo');
-    }
-
-    getPropertyNames(): (string | number | symbol)[] {
-        return this.propertyNames;
-    }
-
-    getProperties(): ReflectionProperty[] {
-        return this.properties;
-    }
-
-    getPropertiesInGroup(...group: string[]): ReflectionProperty[] {
-        return this.properties.filter(v => v.isInGroup(...group));
-    }
-
-    getMethodNames(): (string | number | symbol)[] {
-        return this.methodNames;
-    }
-
-    getMethods(): ReflectionMethod[] {
-        return this.methods;
-    }
-
-    /**
-     * Returns references and back references.
-     */
-    getReferences(): ReflectionProperty[] {
-        return this.references;
-    }
-
-    getConstructorOrUndefined(): ReflectionMethod | undefined {
-        return this.getMethodOrUndefined('constructor');
-    }
-
-    getPropertyOrUndefined(name: string | number | symbol | TypeTemplateLiteral): ReflectionProperty | undefined {
-        for (const property of this.getProperties()) {
-            if (property.getName() === name) return property;
+        continue;
+      }
+
+      if (
+        fromReference.isBackReference() &&
+        fromReference.getBackReference().mappedBy &&
+        !fromReference.getBackReference().via
+      ) {
+        if (fromReference.getBackReference().mappedBy === backRef.name) {
+          //perfect match
+          return backRef;
         }
-        return;
-    }
-
-    getProperty(name: string | number | symbol): ReflectionProperty {
-        const property = this.getPropertyOrUndefined(name);
-        if (!property) throw new Error(`No property ${memberNameToString(name)} found in ${this.getClassName()}`);
-        return property;
-    }
-
-    getMethodParameters(name: string | number | symbol): ReflectionParameter[] {
-        const method = this.getMethodOrUndefined(name);
-        return method ? method.getParameters() : [];
-    }
-
-    getMethodOrUndefined(name: string | number | symbol | TypeTemplateLiteral): ReflectionMethod | undefined {
-        for (const method of this.getMethods()) {
-            if (method.getName() === name) return method;
+        continue;
+      }
+
+      //add to candidates if possible
+      if (
+        fromReference.isBackReference() &&
+        fromReference.getBackReference().via &&
+        backRef.isBackReference() &&
+        backRef.getBackReference().via
+      ) {
+        if (
+          fromReference.getBackReference().via ===
+          backRef.getBackReference().via
+        ) {
+          candidates.push(backRef);
         }
-        return;
-    }
+        continue;
+      }
 
-    getMethod(name: string | number | symbol): ReflectionMethod {
-        const method = this.getMethodOrUndefined(name);
-        if (!method) throw new Error(`No method ${memberNameToString(name)} found in ${this.getClassName()}`);
-        return method;
-    }
+      if (
+        fromReference.isBackReference() &&
+        fromReference.isArray() &&
+        !fromReference.getBackReference().via
+      ) {
+        //other side must be non-array
+        if (backRef.isArray()) continue;
+      }
 
-    public hasCircularReference(): boolean {
-        return hasCircularReference(this.type);
+      candidates.push(backRef);
     }
 
-    serializeType(): SerializedTypes {
-        return serializeType(this.type);
+    if (candidates.length > 1) {
+      throw new Error(
+        `Class ${this.getClassName()} has multiple potential reverse references [${candidates.map(v => v.name).join(", ")}] for ${fromReference.name} to class ${getClassName(toClassType)}. ` +
+          `Please specify each back reference by using 'mappedBy', e.g. @t.backReference({mappedBy: 'fieldNameOnTheOtherSide'} so its not ambiguous anymore.`
+      );
     }
 
-    /**
-     * All references have a counter-part. This methods finds it and errors if not possible.
-     *
-     * If the given reference is a owning reference it finds the correct backReference,
-     *    which can be found by checking all reference options.mappedBy.
-     *
-     * If the given reference is a back reference it finds the owning reference,
-     *    which can be found by using its options.mappedBy.
-     *
-     * Alternatively we simply check for resolvedClassType to be given `classType`, and if only one
-     * found, we return it. When more than one found, we throw an error saying the user he
-     * should make its relation mapping not ambiguous.
-     */
-    public findReverseReference(toClassType: ClassType, fromReference: ReflectionProperty): ReflectionProperty {
-        if (fromReference.isBackReference() && fromReference.getBackReference().mappedBy) {
-            if (resolveForeignReflectionClass(fromReference).getClassType() === this.getClassType()) {
-                return this.getProperty(fromReference.getBackReference().mappedBy as string);
-            }
-        }
-
-        const candidates: ReflectionProperty[] = [];
-        for (const backRef of this.references) {
-            if (backRef === fromReference) continue;
-
-            //backRef points to something completely different
-            if (!backRef.isArray() && resolveForeignReflectionClass(backRef).getClassType() !== toClassType) continue;
-            if (backRef.isArray() && getClassType(backRef.getSubType()) !== toClassType) continue;
-
-            //we found the perfect match, manually annotated
-            if (backRef.isBackReference() && backRef.getBackReference().mappedBy) {
-                if (backRef.getBackReference().mappedBy === fromReference.name) {
-                    return backRef;
-                }
-                continue;
-            }
-
-            if (fromReference.isBackReference() && fromReference.getBackReference().mappedBy && !fromReference.getBackReference().via) {
-                if (fromReference.getBackReference().mappedBy === backRef.name) {
-                    //perfect match
-                    return backRef;
-                }
-                continue;
-            }
-
-            //add to candidates if possible
-            if (fromReference.isBackReference() && fromReference.getBackReference().via && backRef.isBackReference() && backRef.getBackReference().via) {
-                if (fromReference.getBackReference().via === backRef.getBackReference().via) {
-                    candidates.push(backRef);
-                }
-                continue;
-            }
-
-            if (fromReference.isBackReference() && fromReference.isArray() && !fromReference.getBackReference().via) {
-                //other side must be non-array
-                if (backRef.isArray()) continue;
-            }
-
-            candidates.push(backRef);
-        }
-
-        if (candidates.length > 1) {
-            throw new Error(`Class ${this.getClassName()} has multiple potential reverse references [${candidates.map(v => v.name).join(', ')}] for ${fromReference.name} to class ${getClassName(toClassType)}. ` +
-                `Please specify each back reference by using 'mappedBy', e.g. @t.backReference({mappedBy: 'fieldNameOnTheOtherSide'} so its not ambiguous anymore.`);
-        }
+    if (candidates.length === 1) return candidates[0];
 
-        if (candidates.length === 1) return candidates[0];
+    throw new Error(
+      `Class ${this.getClassName()} has no reference to class ${getClassName(toClassType)} defined.`
+    );
+  }
 
-        throw new Error(`Class ${this.getClassName()} has no reference to class ${getClassName(toClassType)} defined.`);
+  public extractPrimaryKey(item: object): Partial<T> {
+    const primaryKey: Partial<T> = {};
+    for (const pk of this.getPrimaries()) {
+      (primaryKey as any)[pk.name] = (item as any)[pk.name];
     }
 
-    public extractPrimaryKey(item: object): Partial<T> {
-        const primaryKey: Partial<T> = {};
-        for (const pk of this.getPrimaries()) {
-            (primaryKey as any)[pk.name] = (item as any)[pk.name];
-        }
-
-        return primaryKey;
-    }
+    return primaryKey;
+  }
 }
 
-
 // old function to decorate an interface
 // export function decorate<T>(decorate: { [P in keyof T]?: FreeDecoratorFn<any> }, p?: ReceiveType<T>): ReflectionClass<T> {
 //     const type = typeOf([], p);
diff --git a/src/reflection/type.ts b/src/reflection/type.ts
index 4860a49fce0b165122e07e96f8f44014271223d7..ed0a29586d82680d57e85ecea979186de5efd431 100644
--- a/src/reflection/type.ts
+++ b/src/reflection/type.ts
@@ -9,82 +9,92 @@
  */
 
 import {
-    AbstractClassType,
-    arrayRemoveItem,
-    ClassType,
-    getClassName,
-    getInheritanceChain,
-    getParentClass,
-    indent,
-    isArray,
-    isClass,
-    isGlobalClass,
-    TypeAnnotation,
-} from '@deepkit/core';
-import { TypeNumberBrand } from '@deepkit/type-spec';
-import { getProperty, ReceiveType, reflect, ReflectionClass, resolveReceiveType, toSignature } from './reflection.js';
-import { isExtendable } from './extends.js';
-import { state } from './state.js';
-import { resolveRuntimeType } from './processor.js';
+  AbstractClassType,
+  arrayRemoveItem,
+  ClassType,
+  getClassName,
+  getInheritanceChain,
+  getParentClass,
+  indent,
+  isArray,
+  isClass,
+  isGlobalClass,
+  TypeAnnotation
+} from "@deepkit/core";
+import { TypeNumberBrand } from "@deepkit/type-spec";
+import { isExtendable } from "./extends.js";
+import { resolveRuntimeType } from "./processor.js";
+import {
+  getProperty,
+  ReceiveType,
+  reflect,
+  ReflectionClass,
+  resolveReceiveType,
+  toSignature
+} from "./reflection.js";
+import { state } from "./state.js";
 
 export enum ReflectionVisibility {
-    public,
-    protected,
-    private,
+  public,
+  protected,
+  private
 }
 
 export enum ReflectionKind {
-    never,
-    any,
-    unknown,
-    void,
-    object,
-    string,
-    number,
-    boolean,
-    symbol,
-    bigint,
-    null,
-    undefined,
-    regexp,
-
-    literal,
-    templateLiteral,
-    property,
-    method,
-    function,
-    parameter,
-
-    promise,
-
-    /**
-     * Uint8Array, Date, custom classes, Set, Map, etc
-     */
-    class,
-
-    typeParameter,
-    enum,
-    union,
-    intersection,
-
-    array,
-    tuple,
-    tupleMember,
-    enumMember,
-
-    rest,
-
-    objectLiteral,
-    indexSignature,
-    propertySignature,
-    methodSignature,
-
-    infer,
-
-    callSignature,
-}
-
-export type TypeDecorator = (annotations: Annotations, decorator: TypeObjectLiteral) => boolean;
+  never,
+  any,
+  unknown,
+  void,
+  object,
+  string,
+  number,
+  boolean,
+  symbol,
+  bigint,
+  null,
+  undefined,
+  regexp,
+
+  literal,
+  templateLiteral,
+  property,
+  method,
+  function,
+  parameter,
+
+  promise,
+
+  /**
+   * Uint8Array, Date, custom classes, Set, Map, etc
+   */
+  class,
+
+  typeParameter,
+  enum,
+  union,
+  intersection,
+
+  array,
+  tuple,
+  tupleMember,
+  enumMember,
+
+  rest,
+
+  objectLiteral,
+  indexSignature,
+  propertySignature,
+  methodSignature,
+
+  infer,
+
+  callSignature
+}
+
+export type TypeDecorator = (
+  annotations: Annotations,
+  decorator: TypeObjectLiteral
+) => boolean;
 
 export type Annotations = any; //actual { [name: symbol]: any[] };, but not support in older TS
 
@@ -92,72 +102,72 @@ export type Annotations = any; //actual { [name: symbol]: any[] };, but not supp
  * @reflection never
  */
 export interface TypeAnnotations {
-    // if defined, it is a nominal type. the number is unique for each nominal type.
-    id?: number;
-
-    origin?: Type;
-
-    /**
-     * True when this type comes from an inline type, e.g.
-     *
-     * `type A = T;`. Type of `T` is inlined.
-     * `type A = {}`. Type of `{}` is not inlined.
-     *
-     * If the type is not inlined and the result of a type function, then we assign parents of members accordingly. This is not the caee when a type was inlined.
-     */
-    inlined?: true;
-
-    /**
-     * If the type was created by a type function, this contains the alias name.
-     */
-    typeName?: string;
-
-    /**
-     * If the type was created by a type function, this contains the arguments passed the function.
-     */
-    typeArguments?: Type[];
-
-    /**
-     * Set for index access expressions, e.g. Config['property'].
-     */
-    indexAccessOrigin?: { container: TypeClass | TypeObjectLiteral, index: Type };
-
-    /**
-     * type User = {id: number, user: string};
-     * type UserCreate = Pick<User, 'user'>;
-     * typeOf<UserCreate>().originTypes[0].typeName = 'Pick'
-     * typeOf<UserCreate>().originTypes[0].typeArguments = [User, 'user']
-     */
-    originTypes?: { typeName: string, typeArguments?: Type[] }[];
-
-    annotations?: Annotations; //parsed decorator types as annotations
-    decorators?: Type[]; //original decorator type
-
-    scheduleDecorators?: TypeObjectLiteral[];
-
-    /**
-     * A place where arbitrary jit functions and its cache data is stored.
-     */
-    jit?: JitContainer;
+  // if defined, it is a nominal type. the number is unique for each nominal type.
+  id?: number;
+
+  origin?: Type;
+
+  /**
+   * True when this type comes from an inline type, e.g.
+   *
+   * `type A = T;`. Type of `T` is inlined.
+   * `type A = {}`. Type of `{}` is not inlined.
+   *
+   * If the type is not inlined and the result of a type function, then we assign parents of members accordingly. This is not the caee when a type was inlined.
+   */
+  inlined?: true;
+
+  /**
+   * If the type was created by a type function, this contains the alias name.
+   */
+  typeName?: string;
+
+  /**
+   * If the type was created by a type function, this contains the arguments passed the function.
+   */
+  typeArguments?: Type[];
+
+  /**
+   * Set for index access expressions, e.g. Config['property'].
+   */
+  indexAccessOrigin?: { container: TypeClass | TypeObjectLiteral; index: Type };
+
+  /**
+   * type User = {id: number, user: string};
+   * type UserCreate = Pick<User, 'user'>;
+   * typeOf<UserCreate>().originTypes[0].typeName = 'Pick'
+   * typeOf<UserCreate>().originTypes[0].typeArguments = [User, 'user']
+   */
+  originTypes?: { typeName: string; typeArguments?: Type[] }[];
+
+  annotations?: Annotations; //parsed decorator types as annotations
+  decorators?: Type[]; //original decorator type
+
+  scheduleDecorators?: TypeObjectLiteral[];
+
+  /**
+   * A place where arbitrary jit functions and its cache data is stored.
+   */
+  jit?: JitContainer;
 }
 
 export function applyScheduledAnnotations(type: Type) {
-    if (isWithAnnotations(type) && type.scheduleDecorators) {
-        type.annotations = type.annotations ? { ...type.annotations } : {};
-        type.decorators = type.decorators ? type.decorators.slice() : [];
-        type.decorators.push(...type.scheduleDecorators);
-
-        for (const scheduledDecorator of type.scheduleDecorators) {
-            for (const decorator of typeDecorators) {
-                decorator(type.annotations, scheduledDecorator);
-            }
-        }
-        type.scheduleDecorators = undefined;
+  if (isWithAnnotations(type) && type.scheduleDecorators) {
+    type.annotations = type.annotations ? { ...type.annotations } : {};
+    type.decorators = type.decorators ? type.decorators.slice() : [];
+    type.decorators.push(...type.scheduleDecorators);
+
+    for (const scheduledDecorator of type.scheduleDecorators) {
+      for (const decorator of typeDecorators) {
+        decorator(type.annotations, scheduledDecorator);
+      }
     }
+    type.scheduleDecorators = undefined;
+  }
 }
 
 export function hasTypeInformation(object: ClassType | Function): boolean {
-    return '__type' in object && isArray((object as any).__type);
+  return "__type" in object && isArray((object as any).__type);
 }
 
 /**
@@ -166,377 +176,438 @@ export function hasTypeInformation(object: ClassType | Function): boolean {
 export type JitContainer = any; //actual { [name: string | symbol]: any }; but not supported in older TS
 
 export function getTypeJitContainer(type: Type): JitContainer {
-    if (!type.jit) type.jit = {};
-    return type.jit;
+  if (!type.jit) type.jit = {};
+  return type.jit;
 }
 
 export function clearTypeJitContainer(type: Type): void {
-    type.jit = {};
+  type.jit = {};
+}
+
+export interface TagsReflection {
+  hidden?: boolean;
+  ignore?: boolean;
+  internal?: boolean;
+  alias?: string[];
+  title?: string;
+  readonly?: boolean;
+  permission?: string[];
+  domain?: string;
 }
 
 export interface TypeNever extends TypeAnnotations {
-    kind: ReflectionKind.never,
-    parent?: Type;
+  kind: ReflectionKind.never;
+  parent?: Type;
 }
 
 export interface TypeAny extends TypeAnnotations {
-    kind: ReflectionKind.any,
-    parent?: Type;
+  kind: ReflectionKind.any;
+  parent?: Type;
 }
 
 export interface TypeUnknown extends TypeAnnotations {
-    kind: ReflectionKind.unknown,
-    parent?: Type;
+  kind: ReflectionKind.unknown;
+  parent?: Type;
 }
 
 export interface TypeVoid extends TypeAnnotations {
-    kind: ReflectionKind.void,
-    parent?: Type;
+  kind: ReflectionKind.void;
+  parent?: Type;
 }
 
 export interface TypeObject extends TypeAnnotations {
-    kind: ReflectionKind.object,
-    parent?: Type;
+  kind: ReflectionKind.object;
+  parent?: Type;
 }
 
 export interface TypeString extends TypeAnnotations {
-    kind: ReflectionKind.string,
-    parent?: Type;
+  kind: ReflectionKind.string;
+  parent?: Type;
 }
 
 export function isIntegerType(type: Type): type is TypeNumber {
-    return type.kind === ReflectionKind.number && type.brand !== undefined && type.brand >= TypeNumberBrand.integer && type.brand <= TypeNumberBrand.uint32;
+  return (
+    type.kind === ReflectionKind.number &&
+    type.brand !== undefined &&
+    type.brand >= TypeNumberBrand.integer &&
+    type.brand <= TypeNumberBrand.uint32
+  );
 }
 
 export interface TypeNumber extends TypeAnnotations {
-    kind: ReflectionKind.number,
-    brand?: TypeNumberBrand; //built in brand
-    parent?: Type;
+  kind: ReflectionKind.number;
+  brand?: TypeNumberBrand; //built in brand
+  parent?: Type;
 }
 
 export interface TypeBoolean extends TypeAnnotations {
-    kind: ReflectionKind.boolean,
-    parent?: Type;
+  kind: ReflectionKind.boolean;
+  parent?: Type;
 }
 
 export interface TypeBigInt extends TypeAnnotations {
-    kind: ReflectionKind.bigint,
-    parent?: Type;
+  kind: ReflectionKind.bigint;
+  parent?: Type;
 }
 
 export interface TypeSymbol extends TypeAnnotations {
-    kind: ReflectionKind.symbol,
-    parent?: Type;
+  kind: ReflectionKind.symbol;
+  parent?: Type;
 }
 
 export interface TypeNull extends TypeAnnotations {
-    kind: ReflectionKind.null,
-    parent?: Type;
+  kind: ReflectionKind.null;
+  parent?: Type;
 }
 
 export interface TypeUndefined extends TypeAnnotations {
-    kind: ReflectionKind.undefined,
-    parent?: Type;
+  kind: ReflectionKind.undefined;
+  parent?: Type;
 }
 
 export interface TypeLiteral extends TypeAnnotations {
-    kind: ReflectionKind.literal,
-    literal: symbol | string | number | boolean | bigint | RegExp;
-    parent?: Type;
+  kind: ReflectionKind.literal;
+  literal: symbol | string | number | boolean | bigint | RegExp;
+  parent?: Type;
 }
 
 export interface TypeTemplateLiteral extends TypeAnnotations {
-    kind: ReflectionKind.templateLiteral,
-    types: (TypeString | TypeAny | TypeNumber | TypeLiteral | TypeInfer)[]
-    parent?: Type;
+  kind: ReflectionKind.templateLiteral;
+  types: (TypeString | TypeAny | TypeNumber | TypeLiteral | TypeInfer)[];
+  parent?: Type;
 }
 
 export interface TypeRegexp extends TypeAnnotations {
-    kind: ReflectionKind.regexp;
-    parent?: Type;
+  kind: ReflectionKind.regexp;
+  parent?: Type;
 }
 
 class User {
-    username!: string;
+  username!: string;
 
-    getUserName(): this['username'] {
-        return '';
-    }
+  getUserName(): this["username"] {
+    return "";
+  }
 }
 
 type a = User & { username: boolean };
-type b = ReturnType<a['getUserName']>;
+type b = ReturnType<a["getUserName"]>;
 
 export interface TypeBaseMember extends TypeAnnotations {
-    visibility: ReflectionVisibility,
-    abstract?: true;
-    static?: true;
-    optional?: true,
-    readonly?: true;
+  visibility: ReflectionVisibility;
+  abstract?: true;
+  static?: true;
+  optional?: true;
+  readonly?: true;
+  tags?: TagsReflection;
 }
 
 export interface TypeParameter extends TypeAnnotations {
-    kind: ReflectionKind.parameter,
-    name: string;
-    type: Type;
-    parent: TypeFunction | TypeMethod | TypeMethodSignature | TypeCallSignature;
+  kind: ReflectionKind.parameter;
+  name: string;
+  type: Type;
+  parent: TypeFunction | TypeMethod | TypeMethodSignature | TypeCallSignature;
 
-    //parameter could be a property as well if visibility is set
-    visibility?: ReflectionVisibility,
-    readonly?: true;
-    optional?: true,
-    description?: string;
+  //parameter could be a property as well if visibility is set
+  visibility?: ReflectionVisibility;
+  readonly?: true;
+  optional?: true;
+  description?: string;
 
-    /**
-     * Set when the parameter has a default value aka initializer.
-     */
-    default?: () => any
+  /**
+   * Set when the parameter has a default value aka initializer.
+   */
+  default?: (() => any) | any;
+
+  tags?: TagsReflection;
 }
 
 export interface TypeMethod extends TypeBaseMember {
-    kind: ReflectionKind.method,
-    parent: TypeClass;
-    name: number | string | symbol;
-    description?: string;
-    parameters: TypeParameter[];
-    return: Type;
+  kind: ReflectionKind.method;
+  parent: TypeClass;
+  name: number | string | symbol;
+  description?: string;
+  parameters: TypeParameter[];
+  return: Type;
 }
 
 export interface TypeProperty extends TypeBaseMember {
-    kind: ReflectionKind.property,
-    parent: TypeClass;
-    visibility: ReflectionVisibility,
-    name: number | string | symbol;
-    description?: string;
-    type: Type;
+  kind: ReflectionKind.property;
+  parent: TypeClass;
+  visibility: ReflectionVisibility;
+  name: number | string | symbol;
+  description?: string;
+  type: Type;
 
-    /**
-     * Set when the property has a default value aka initializer.
-     */
-    default?: () => any
+  /**
+   * Set when the property has a default value aka initializer.
+   */
+  default?: (() => any) | any;
 }
 
 export interface TypeFunction extends TypeAnnotations {
-    kind: ReflectionKind.function,
-    parent?: Type;
-    name?: number | string | symbol,
-    description?: string;
-    function?: Function; //reference to the real function if available
-    parameters: TypeParameter[];
-    return: Type;
+  kind: ReflectionKind.function;
+  parent?: Type;
+  name?: number | string | symbol;
+  description?: string;
+  function?: Function; //reference to the real function if available
+  parameters: TypeParameter[];
+  return: Type;
+  tags?: TagsReflection;
 }
 
 export interface TypeCallSignature extends TypeAnnotations {
-    kind: ReflectionKind.callSignature,
-    parent?: Type;
-    parameters: TypeParameter[];
-    return: Type;
+  kind: ReflectionKind.callSignature;
+  parent?: Type;
+  parameters: TypeParameter[];
+  return: Type;
+  tags?: TagsReflection;
 }
 
 export interface TypePromise extends TypeAnnotations {
-    kind: ReflectionKind.promise,
-    parent?: Type;
-    type: Type;
+  kind: ReflectionKind.promise;
+  parent?: Type;
+  type: Type;
 }
 
 export interface TypeClass extends TypeAnnotations {
-    kind: ReflectionKind.class,
-    parent?: Type;
-    classType: ClassType;
-    description?: string;
-
-    /**
-     * When the class extends another class and uses on it generic type arguments, then those arguments
-     * are in this array.
-     * For example `class A extends B<string, boolean> {}` then extendsArguments = [string, boolean].
-     * The reference to `B` is not part of TypeClass since this information is available in JavaScript runtime
-     * by using `Object.getPrototypeOf(type.classType)`.
-     */
-    extendsArguments?: Type[];
-
-    /**
-     * When the class implements another interface/type, then those types are in this array.
-     *
-     * For example `class A implements B<string, boolean> {}` then implements = [B<string, boolean>].
-     */
-    implements?: Type[];
-
-    /**
-     * When class has generic type arguments, e.g. MyClass<string>, it contains
-     * all type arguments. If no type arguments are given, it's undefined.
-     */
-    arguments?: Type[];
-
-    /**
-     * properties/methods.
-     */
-    types: (TypeIndexSignature | TypeProperty | TypeMethod)[];
+  kind: ReflectionKind.class;
+  parent?: Type;
+  classType: ClassType;
+  description?: string;
+
+  /**
+   * When the class extends another class and uses on it generic type arguments, then those arguments
+   * are in this array.
+   * For example `class A extends B<string, boolean> {}` then extendsArguments = [string, boolean].
+   * The reference to `B` is not part of TypeClass since this information is available in JavaScript runtime
+   * by using `Object.getPrototypeOf(type.classType)`.
+   */
+  extendsArguments?: Type[];
+
+  /**
+   * When the class implements another interface/type, then those types are in this array.
+   *
+   * For example `class A implements B<string, boolean> {}` then implements = [B<string, boolean>].
+   */
+  implements?: Type[];
+
+  /**
+   * When class has generic type arguments, e.g. MyClass<string>, it contains
+   * all type arguments. If no type arguments are given, it's undefined.
+   */
+  arguments?: Type[];
+
+  /**
+   * properties/methods.
+   */
+  types: (TypeIndexSignature | TypeProperty | TypeMethod)[];
+
+  tags?: TagsReflection;
 }
 
 export interface TypeEnum extends TypeAnnotations {
-    kind: ReflectionKind.enum,
-    parent?: Type;
-    enum: { [name: string]: string | number | undefined | null };
-    values: (string | number | undefined | null)[];
-    indexType: Type;
-    description?: string;
+  kind: ReflectionKind.enum;
+  parent?: Type;
+  enum: { [name: string]: string | number | undefined | null };
+  values: (string | number | undefined | null)[];
+  indexType: Type;
+  description?: string;
+  tags?: TagsReflection;
 }
 
 export interface TypeEnumMember extends TypeAnnotations {
-    kind: ReflectionKind.enumMember,
-    parent: TypeEnum;
-    name: string;
-    default?: () => string | number;
+  kind: ReflectionKind.enumMember;
+  parent: TypeEnum;
+  name: string;
+  description?: string;
+  default?: (() => string | number) | string | number;
+  tags?: TagsReflection;
 }
 
 export interface TypeTypeParameter extends TypeAnnotations {
-    kind: ReflectionKind.typeParameter,
-    parent?: Type;
-    name: string,
+  kind: ReflectionKind.typeParameter;
+  parent?: Type;
+  name: string;
+  tags?: TagsReflection;
 }
 
 export interface TypeUnion extends TypeAnnotations {
-    kind: ReflectionKind.union,
-    parent?: Type;
-    types: Type[];
+  kind: ReflectionKind.union;
+  parent?: Type;
+  types: Type[];
 }
 
 export interface TypeIntersection extends TypeAnnotations {
-    kind: ReflectionKind.intersection,
-    parent?: Type;
-    types: Type[];
+  kind: ReflectionKind.intersection;
+  parent?: Type;
+  types: Type[];
 }
 
 export interface TypeArray extends TypeAnnotations {
-    kind: ReflectionKind.array,
-    parent?: Type;
-    type: Type;
+  kind: ReflectionKind.array;
+  parent?: Type;
+  type: Type;
+  tags?: TagsReflection;
 }
 
 export interface TypePropertySignature extends TypeAnnotations {
-    kind: ReflectionKind.propertySignature,
-    parent: TypeObjectLiteral;
-    name: number | string | symbol;
-    optional?: true;
-    readonly?: true;
-    description?: string;
-    type: Type;
+  kind: ReflectionKind.propertySignature;
+  parent: TypeObjectLiteral;
+  name: number | string | symbol;
+  optional?: true;
+  readonly?: true;
+  description?: string;
+  type: Type;
+
+  /**
+   * Set when the property has a default value aka initializer.
+   */
+  default?: (() => any) | any;
+
+  tags?: TagsReflection;
 }
 
 export interface TypeMethodSignature extends TypeAnnotations {
-    kind: ReflectionKind.methodSignature,
-    parent: TypeObjectLiteral;
-    name: number | string | symbol;
-    optional?: true;
-    description?: string;
-    parameters: TypeParameter[];
-    return: Type;
+  kind: ReflectionKind.methodSignature;
+  parent: TypeObjectLiteral;
+  name: number | string | symbol;
+  optional?: true;
+  description?: string;
+  parameters: TypeParameter[];
+  return: Type;
+  tags?: TagsReflection;
 }
 
 /**
  * Object literals or interfaces.
  */
 export interface TypeObjectLiteral extends TypeAnnotations {
-    kind: ReflectionKind.objectLiteral,
+  kind: ReflectionKind.objectLiteral;
+
+  parent?: Type;
+  description?: string;
+  types: (
+    | TypeIndexSignature
+    | TypePropertySignature
+    | TypeMethodSignature
+    | TypeCallSignature
+  )[];
 
-    parent?: Type;
-    description?: string;
-    types: (TypeIndexSignature | TypePropertySignature | TypeMethodSignature | TypeCallSignature)[];
+  /**
+   * When the interface extends another interface/type, then those types are in this array.
+   *
+   * For example `interface A extends B<string, boolean> {}` then implements = [B<string, boolean>].
+   */
+  implements?: Type[];
 
-    /**
-     * When the interface extends another interface/type, then those types are in this array.
-     *
-     * For example `interface A extends B<string, boolean> {}` then implements = [B<string, boolean>].
-     */
-    implements?: Type[];
+  tags?: TagsReflection;
 }
 
 export interface TypeIndexSignature extends TypeAnnotations {
-    kind: ReflectionKind.indexSignature,
-    parent: TypeClass | TypeObjectLiteral;
-    index: Type;
-    type: Type;
+  kind: ReflectionKind.indexSignature;
+  parent: TypeClass | TypeObjectLiteral;
+  index: Type;
+  type: Type;
+
+  /**
+   * Set when the property has a default value aka initializer.
+   */
+  default?: (() => any) | any;
+
+  tags?: TagsReflection;
 }
 
 export interface TypeInfer extends TypeAnnotations {
-    kind: ReflectionKind.infer,
-    parent?: Type;
+  kind: ReflectionKind.infer;
+  parent?: Type;
 
-    set(type: Type): void;
+  set(type: Type): void;
 }
 
 export interface TypeTupleMember extends TypeAnnotations {
-    kind: ReflectionKind.tupleMember,
-    parent: TypeTuple;
-    type: Type;
-    optional?: true;
-    name?: string;
+  kind: ReflectionKind.tupleMember;
+  parent: TypeTuple;
+  type: Type;
+  optional?: true;
+  name?: string;
 }
 
 export interface TypeTuple extends TypeAnnotations {
-    kind: ReflectionKind.tuple,
-    parent?: Type;
-    types: TypeTupleMember[]
+  kind: ReflectionKind.tuple;
+  parent?: Type;
+  types: TypeTupleMember[];
 }
 
 export interface TypeRest extends TypeAnnotations {
-    kind: ReflectionKind.rest,
-    parent: TypeTypeParameter | TypeTupleMember;
-    type: Type
+  kind: ReflectionKind.rest;
+  parent: TypeTypeParameter | TypeTupleMember;
+  type: Type;
 }
 
 /**
  * @reflection never
  */
 export type Type =
-    TypeNever
-    | TypeAny
-    | TypeUnknown
-    | TypeVoid
-    | TypeObject
-    | TypeString
-    | TypeNumber
-    | TypeBoolean
-    | TypeBigInt
-    | TypeSymbol
-    | TypeNull
-    | TypeUndefined
-    | TypeLiteral
-    | TypeTemplateLiteral
-    | TypeParameter
-    | TypeFunction
-    | TypeMethod
-    | TypeProperty
-    | TypePromise
-    | TypeClass
-    | TypeEnum
-    | TypeEnumMember
-    | TypeUnion
-    | TypeIntersection
-    | TypeArray
-    | TypeObjectLiteral
-    | TypeIndexSignature
-    | TypePropertySignature
-    | TypeMethodSignature
-    | TypeTypeParameter
-    | TypeInfer
-    | TypeTuple
-    | TypeTupleMember
-    | TypeRest
-    | TypeRegexp
-    | TypeCallSignature
-    ;
-
-export type Widen<T> =
-    T extends string ? string
-        : T extends number ? number
-            : T extends bigint ? bigint
-                : T extends boolean ? boolean
-                    : T extends symbol ? symbol : T;
-
-export type FindType<T extends Type, LOOKUP extends ReflectionKind> = T extends {
-    kind: infer K
-} ? K extends LOOKUP ? T : never : never;
+  | TypeNever
+  | TypeAny
+  | TypeUnknown
+  | TypeVoid
+  | TypeObject
+  | TypeString
+  | TypeNumber
+  | TypeBoolean
+  | TypeBigInt
+  | TypeSymbol
+  | TypeNull
+  | TypeUndefined
+  | TypeLiteral
+  | TypeTemplateLiteral
+  | TypeParameter
+  | TypeFunction
+  | TypeMethod
+  | TypeProperty
+  | TypePromise
+  | TypeClass
+  | TypeEnum
+  | TypeEnumMember
+  | TypeUnion
+  | TypeIntersection
+  | TypeArray
+  | TypeObjectLiteral
+  | TypeIndexSignature
+  | TypePropertySignature
+  | TypeMethodSignature
+  | TypeTypeParameter
+  | TypeInfer
+  | TypeTuple
+  | TypeTupleMember
+  | TypeRest
+  | TypeRegexp
+  | TypeCallSignature;
+
+export type Widen<T> = T extends string
+  ? string
+  : T extends number
+    ? number
+    : T extends bigint
+      ? bigint
+      : T extends boolean
+        ? boolean
+        : T extends symbol
+          ? symbol
+          : T;
+
+export type FindType<
+  T extends Type,
+  LOOKUP extends ReflectionKind
+> = T extends {
+  kind: infer K;
+}
+  ? K extends LOOKUP
+    ? T
+    : never
+  : never;
 
 /**
  * Merge dynamic runtime types with static types. In the type-system resolves as any, in runtime as the correct type.
@@ -549,31 +620,49 @@ export type FindType<T extends Type, LOOKUP extends ReflectionKind> = T extends
  * type t = {a: InlineRuntimeType<typeof value>}
  * ```
  */
-export type InlineRuntimeType<T extends ReflectionClass<any> | Type | number | string | boolean | bigint> = T extends ReflectionClass<infer K> ? K : any;
+export type InlineRuntimeType<
+  T extends ReflectionClass<any> | Type | number | string | boolean | bigint
+> = T extends ReflectionClass<infer K> ? K : any;
 
 export function isType(entry: any): entry is Type {
-    return entry && 'object' === typeof entry && 'number' === typeof entry.kind;
+  return entry && "object" === typeof entry && "number" === typeof entry.kind;
 }
 
 export function isBinary(type: Type): boolean {
-    return type.kind === ReflectionKind.class && binaryTypes.includes(type.classType);
+  return (
+    type.kind === ReflectionKind.class && binaryTypes.includes(type.classType)
+  );
 }
 
 export function isPrimitive<T extends Type>(type: T): boolean {
-    return type.kind === ReflectionKind.string || type.kind === ReflectionKind.number || type.kind === ReflectionKind.bigint || type.kind === ReflectionKind.boolean
-        || type.kind === ReflectionKind.literal || type.kind === ReflectionKind.null || type.kind === ReflectionKind.undefined;
-}
-
-export function isPropertyType(type: Type): type is TypePropertySignature | TypeProperty {
-    return type.kind === ReflectionKind.property || type.kind === ReflectionKind.propertySignature;
+  return (
+    type.kind === ReflectionKind.string ||
+    type.kind === ReflectionKind.number ||
+    type.kind === ReflectionKind.bigint ||
+    type.kind === ReflectionKind.boolean ||
+    type.kind === ReflectionKind.literal ||
+    type.kind === ReflectionKind.null ||
+    type.kind === ReflectionKind.undefined
+  );
+}
+
+export function isPropertyType(
+  type: Type
+): type is TypePropertySignature | TypeProperty {
+  return (
+    type.kind === ReflectionKind.property ||
+    type.kind === ReflectionKind.propertySignature
+  );
 }
 
 /**
  * Returns true if the type is TypePropertySignature | TypeProperty and not a static member.
  */
-export function isPropertyMemberType(type: Type): type is TypePropertySignature | TypeProperty {
-    if (type.kind === ReflectionKind.property) return !type.static;
-    return type.kind === ReflectionKind.propertySignature;
+export function isPropertyMemberType(
+  type: Type
+): type is TypePropertySignature | TypeProperty {
+  if (type.kind === ReflectionKind.property) return !type.static;
+  return type.kind === ReflectionKind.propertySignature;
 }
 
 /**
@@ -582,307 +671,384 @@ export function isPropertyMemberType(type: Type): type is TypePropertySignature
  * If a non-property parameter is in the constructor, the type is given instead, e.g. `constructor(public title: string, anotherOne:number)` => [TypeProperty, TypeNumber]
  */
 export function getConstructorProperties(type: TypeClass | TypeObjectLiteral): {
-    parameters: (TypeProperty | Type)[],
-    properties: TypeProperty[]
+  parameters: (TypeProperty | Type)[];
+  properties: TypeProperty[];
 } {
-    const result: { parameters: (TypeProperty | Type)[], properties: TypeProperty[] } = {
-        parameters: [],
-        properties: [],
-    };
-    if (type.kind === ReflectionKind.objectLiteral) return result;
-    const constructor = findMember('constructor', resolveTypeMembers(type)) as TypeMethod | undefined;
-    if (!constructor) return result;
-
-    for (const parameter of constructor.parameters) {
-        const property = findMember(parameter.name, resolveTypeMembers(type));
-        if (property && property.kind === ReflectionKind.property) {
-            result.properties.push(property);
-            result.parameters.push(property);
-        } else {
-            result.parameters.push(parameter.type as Type);
-        }
+  const result: {
+    parameters: (TypeProperty | Type)[];
+    properties: TypeProperty[];
+  } = {
+    parameters: [],
+    properties: []
+  };
+  if (type.kind === ReflectionKind.objectLiteral) return result;
+  const constructor = findMember("constructor", resolveTypeMembers(type)) as
+    | TypeMethod
+    | undefined;
+  if (!constructor) return result;
+
+  for (const parameter of constructor.parameters) {
+    const property = findMember(parameter.name, resolveTypeMembers(type));
+    if (property && property.kind === ReflectionKind.property) {
+      result.properties.push(property);
+      result.parameters.push(property);
+    } else {
+      result.parameters.push(parameter.type as Type);
     }
-    return result;
+  }
+  return result;
 }
 
 export type WithAnnotations =
-    TypeAny
-    | TypeUnknown
-    | TypeString
-    | TypeNumber
-    | TypeBigInt
-    | TypeBoolean
-    | TypeArray
-    | TypeTuple
-    | TypeLiteral
-    | TypeNull
-    | TypeUndefined
-    | TypeClass
-    | TypeObjectLiteral
-    | TypeObject
-    | TypeTemplateLiteral
-    | TypeRegexp
-    | TypeSymbol;
-
-export function isWithAnnotations(type: ParentLessType): type is WithAnnotations {
-    return type.kind === ReflectionKind.any || type.kind === ReflectionKind.unknown || type.kind === ReflectionKind.string || type.kind === ReflectionKind.number || type.kind === ReflectionKind.bigint || type.kind === ReflectionKind.boolean
-        || type.kind === ReflectionKind.union || type.kind === ReflectionKind.array || type.kind === ReflectionKind.tuple || type.kind === ReflectionKind.literal || type.kind === ReflectionKind.null || type.kind === ReflectionKind.undefined
-        || type.kind === ReflectionKind.class || type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.object || type.kind === ReflectionKind.templateLiteral
-        || type.kind === ReflectionKind.regexp || type.kind === ReflectionKind.symbol;
+  | TypeAny
+  | TypeUnknown
+  | TypeString
+  | TypeNumber
+  | TypeBigInt
+  | TypeBoolean
+  | TypeArray
+  | TypeTuple
+  | TypeLiteral
+  | TypeNull
+  | TypeUndefined
+  | TypeClass
+  | TypeObjectLiteral
+  | TypeObject
+  | TypeTemplateLiteral
+  | TypeRegexp
+  | TypeSymbol;
+
+export function isWithAnnotations(
+  type: ParentLessType
+): type is WithAnnotations {
+  return (
+    type.kind === ReflectionKind.any ||
+    type.kind === ReflectionKind.unknown ||
+    type.kind === ReflectionKind.string ||
+    type.kind === ReflectionKind.number ||
+    type.kind === ReflectionKind.bigint ||
+    type.kind === ReflectionKind.boolean ||
+    type.kind === ReflectionKind.union ||
+    type.kind === ReflectionKind.array ||
+    type.kind === ReflectionKind.tuple ||
+    type.kind === ReflectionKind.literal ||
+    type.kind === ReflectionKind.null ||
+    type.kind === ReflectionKind.undefined ||
+    type.kind === ReflectionKind.class ||
+    type.kind === ReflectionKind.objectLiteral ||
+    type.kind === ReflectionKind.object ||
+    type.kind === ReflectionKind.templateLiteral ||
+    type.kind === ReflectionKind.regexp ||
+    type.kind === ReflectionKind.symbol
+  );
 }
 
 export function getAnnotations(type: WithAnnotations): Annotations {
-    return type.annotations ||= {};
+  return (type.annotations ||= {});
 }
 
 type StackEntry = {
-    left: Type,
-    right: Type,
-}
+  left: Type;
+  right: Type;
+};
 
 function hasStack(stack: StackEntry[], left: Type, right: Type): boolean {
-    for (const entry of stack) {
-        if (entry.left === left && entry.right === right) return true;
-    }
-    return false;
+  for (const entry of stack) {
+    if (entry.left === left && entry.right === right) return true;
+  }
+  return false;
 }
 
-
 /**
  * Checks if the structure of a and b are identical.
  */
-export function isSameType(a: Type, b: Type, stack: StackEntry[] = []): boolean {
-    if (a === b) return true;
-
-    if (hasStack(stack, a, b)) return true;
-
-    stack.push({ left: a, right: b });
-
-    try {
-        if (a.kind !== b.kind) return false;
-        if (a.typeName && b.typeName && a.typeName !== b.typeName) return false;
-        if (a.kind === ReflectionKind.infer || b.kind === ReflectionKind.infer) return false;
-        if (a.kind === ReflectionKind.promise && b.kind === ReflectionKind.promise) return isSameType(a.type, b.type, stack);
-
-        if (a.kind === ReflectionKind.literal) return a.literal === (b as TypeLiteral).literal;
-
-        if (a.kind === ReflectionKind.templateLiteral && b.kind === ReflectionKind.templateLiteral) {
-            if (a.types.length !== b.types.length) return false;
-
-            for (let i = 0; a.types.length; i++) {
-                if (!isSameType(a.types[i], b.types[i], stack)) return false;
-            }
-            return true;
-        }
+export function isSameType(
+  a: Type,
+  b: Type,
+  stack: StackEntry[] = []
+): boolean {
+  if (a === b) return true;
+
+  if (hasStack(stack, a, b)) return true;
+
+  stack.push({ left: a, right: b });
+
+  try {
+    if (a.kind !== b.kind) return false;
+    if (a.typeName && b.typeName && a.typeName !== b.typeName) return false;
+    if (a.kind === ReflectionKind.infer || b.kind === ReflectionKind.infer)
+      return false;
+    if (a.kind === ReflectionKind.promise && b.kind === ReflectionKind.promise)
+      return isSameType(a.type, b.type, stack);
+
+    if (a.kind === ReflectionKind.literal)
+      return a.literal === (b as TypeLiteral).literal;
+
+    if (
+      a.kind === ReflectionKind.templateLiteral &&
+      b.kind === ReflectionKind.templateLiteral
+    ) {
+      if (a.types.length !== b.types.length) return false;
+
+      for (let i = 0; a.types.length; i++) {
+        if (!isSameType(a.types[i], b.types[i], stack)) return false;
+      }
+      return true;
+    }
 
-        if (a.kind === ReflectionKind.class && b.kind === ReflectionKind.class) {
-            return a.classType === b.classType;
-            // if (a.classType !== b.classType) return false;
-            // if (!a.arguments && !b.arguments) return true;
-            // if (!a.arguments || !b.arguments) return false;
-            //
-            // if (a.arguments && !b.arguments) return false;
-            // if (!a.arguments && b.arguments) return false;
-            //
-            // for (let i = 0; a.arguments.length; i++) {
-            //     if (!a.arguments[i] || !b.arguments[i]) return false;
-            //     const aMember = a.arguments[i];
-            //     const bMember = b.arguments[i];
-            //     if (aMember === bMember) continue;
-            //
-            //     if (aMember.kind === ReflectionKind.property) {
-            //         if (bMember.kind === ReflectionKind.property) {
-            //             if (aMember.name !== bMember.name) return false;
-            //             if (aMember.readonly !== bMember.readonly) return false;
-            //             if (aMember.optional !== bMember.optional) return false;
-            //             if (aMember.abstract !== bMember.abstract) return false;
-            //             if (aMember.visibility !== bMember.visibility) return false;
-            //             if (!isSameType(aMember.type, bMember.type, stack)) return false;
-            //         } else {
-            //             return false;
-            //         }
-            //     } else {
-            //         if (!isSameType(aMember, bMember)) return false;
-            //     }
-            // }
-            // return true;
-        }
+    if (a.kind === ReflectionKind.class && b.kind === ReflectionKind.class) {
+      return a.classType === b.classType;
+      // if (a.classType !== b.classType) return false;
+      // if (!a.arguments && !b.arguments) return true;
+      // if (!a.arguments || !b.arguments) return false;
+      //
+      // if (a.arguments && !b.arguments) return false;
+      // if (!a.arguments && b.arguments) return false;
+      //
+      // for (let i = 0; a.arguments.length; i++) {
+      //     if (!a.arguments[i] || !b.arguments[i]) return false;
+      //     const aMember = a.arguments[i];
+      //     const bMember = b.arguments[i];
+      //     if (aMember === bMember) continue;
+      //
+      //     if (aMember.kind === ReflectionKind.property) {
+      //         if (bMember.kind === ReflectionKind.property) {
+      //             if (aMember.name !== bMember.name) return false;
+      //             if (aMember.readonly !== bMember.readonly) return false;
+      //             if (aMember.optional !== bMember.optional) return false;
+      //             if (aMember.abstract !== bMember.abstract) return false;
+      //             if (aMember.visibility !== bMember.visibility) return false;
+      //             if (!isSameType(aMember.type, bMember.type, stack)) return false;
+      //         } else {
+      //             return false;
+      //         }
+      //     } else {
+      //         if (!isSameType(aMember, bMember)) return false;
+      //     }
+      // }
+      // return true;
+    }
 
-        if (a.kind === ReflectionKind.objectLiteral && b.kind === ReflectionKind.objectLiteral) {
-            if (a.types.length !== b.types.length) return false;
-
-            for (const aMember of a.types) {
-                //todo: call signature
-                if (aMember.kind === ReflectionKind.indexSignature) {
-                    const valid = b.types.some(v => {
-                        if (v.kind !== ReflectionKind.indexSignature) return false;
-                        const sameIndex = isSameType(aMember.index, v.index, stack);
-                        const sameType = isSameType(aMember.type, v.type, stack);
-                        return sameIndex && sameType;
-                    });
-                    if (!valid) return false;
-                } else if (aMember.kind === ReflectionKind.propertySignature || aMember.kind === ReflectionKind.methodSignature) {
-                    const bMember = findMember(aMember.name, b.types);
-                    if (!bMember) return false;
-                    if (aMember === bMember) continue;
-
-                    if (aMember.kind === ReflectionKind.propertySignature) {
-                        if (bMember.kind === ReflectionKind.propertySignature) {
-                            if (aMember.name !== bMember.name) return false;
-                            if (aMember.readonly !== bMember.readonly) return false;
-                            if (aMember.optional !== bMember.optional) return false;
-                            if (aMember.type === bMember.type) continue;
-                            if (!isSameType(aMember.type, bMember.type, stack)) return false;
-                        } else {
-                            return false;
-                        }
-                    } else {
-                        if (!isSameType(aMember, bMember, stack)) return false;
-                    }
-                }
+    if (
+      a.kind === ReflectionKind.objectLiteral &&
+      b.kind === ReflectionKind.objectLiteral
+    ) {
+      if (a.types.length !== b.types.length) return false;
+
+      for (const aMember of a.types) {
+        //todo: call signature
+        if (aMember.kind === ReflectionKind.indexSignature) {
+          const valid = b.types.some(v => {
+            if (v.kind !== ReflectionKind.indexSignature) return false;
+            const sameIndex = isSameType(aMember.index, v.index, stack);
+            const sameType = isSameType(aMember.type, v.type, stack);
+            return sameIndex && sameType;
+          });
+          if (!valid) return false;
+        } else if (
+          aMember.kind === ReflectionKind.propertySignature ||
+          aMember.kind === ReflectionKind.methodSignature
+        ) {
+          const bMember = findMember(aMember.name, b.types);
+          if (!bMember) return false;
+          if (aMember === bMember) continue;
+
+          if (aMember.kind === ReflectionKind.propertySignature) {
+            if (bMember.kind === ReflectionKind.propertySignature) {
+              if (aMember.name !== bMember.name) return false;
+              if (aMember.readonly !== bMember.readonly) return false;
+              if (aMember.optional !== bMember.optional) return false;
+              if (aMember.type === bMember.type) continue;
+              if (!isSameType(aMember.type, bMember.type, stack)) return false;
+            } else {
+              return false;
             }
-            return true;
-        }
-
-        if (a.kind === ReflectionKind.tupleMember) {
-            if (b.kind !== ReflectionKind.tupleMember) return false;
-
-            return a.optional === b.optional && a.name === b.name && isSameType(a.type, b.type, stack);
-        }
-
-        if (a.kind === ReflectionKind.array) {
-            if (b.kind !== ReflectionKind.array) return false;
-
-            return isSameType(a.type, b.type, stack);
+          } else {
+            if (!isSameType(aMember, bMember, stack)) return false;
+          }
         }
+      }
+      return true;
+    }
 
-        if (a.kind === ReflectionKind.tuple) {
-            if (b.kind !== ReflectionKind.tuple) return false;
-            if (a.types.length !== b.types.length) return false;
+    if (a.kind === ReflectionKind.tupleMember) {
+      if (b.kind !== ReflectionKind.tupleMember) return false;
 
-            for (let i = 0; i < a.types.length; i++) {
-                if (!isSameType(a.types[i], b.types[i], stack)) return false;
-            }
-            return true;
-        }
-
-        if (a.kind === ReflectionKind.parameter) {
-            if (b.kind !== ReflectionKind.parameter) return false;
-            return a.name === b.name && a.optional === b.optional && isSameType(a.type, b.type, stack);
-        }
+      return (
+        a.optional === b.optional &&
+        a.name === b.name &&
+        isSameType(a.type, b.type, stack)
+      );
+    }
 
-        if (a.kind === ReflectionKind.function || a.kind === ReflectionKind.method || a.kind === ReflectionKind.methodSignature) {
-            if (b.kind !== ReflectionKind.function && b.kind !== ReflectionKind.method && b.kind !== ReflectionKind.methodSignature) return false;
-            if (a.parameters.length !== b.parameters.length) return false;
-            if (a.kind === ReflectionKind.function && b.kind === ReflectionKind.function && a.function !== b.function) return false;
+    if (a.kind === ReflectionKind.array) {
+      if (b.kind !== ReflectionKind.array) return false;
 
-            if (a.kind === ReflectionKind.method && b.kind === ReflectionKind.method) {
-                if (a.visibility !== b.visibility) return false;
-            }
+      return isSameType(a.type, b.type, stack);
+    }
 
-            if (a.name !== b.name) return false;
+    if (a.kind === ReflectionKind.tuple) {
+      if (b.kind !== ReflectionKind.tuple) return false;
+      if (a.types.length !== b.types.length) return false;
 
-            for (let i = 0; i < a.parameters.length; i++) {
-                if (!isSameType(a.parameters[i], b.parameters[i], stack)) return false;
-            }
+      for (let i = 0; i < a.types.length; i++) {
+        if (!isSameType(a.types[i], b.types[i], stack)) return false;
+      }
+      return true;
+    }
 
-            return isSameType(a.return, b.return, stack);
-        }
+    if (a.kind === ReflectionKind.parameter) {
+      if (b.kind !== ReflectionKind.parameter) return false;
+      return (
+        a.name === b.name &&
+        a.optional === b.optional &&
+        isSameType(a.type, b.type, stack)
+      );
+    }
 
-        if (a.kind === ReflectionKind.enum) {
-            if (b.kind !== ReflectionKind.enum) return false;
-            if (a.values.length !== b.values.length) return false;
+    if (
+      a.kind === ReflectionKind.function ||
+      a.kind === ReflectionKind.method ||
+      a.kind === ReflectionKind.methodSignature
+    ) {
+      if (
+        b.kind !== ReflectionKind.function &&
+        b.kind !== ReflectionKind.method &&
+        b.kind !== ReflectionKind.methodSignature
+      )
+        return false;
+      if (a.parameters.length !== b.parameters.length) return false;
+      if (
+        a.kind === ReflectionKind.function &&
+        b.kind === ReflectionKind.function &&
+        a.function !== b.function
+      )
+        return false;
+
+      if (
+        a.kind === ReflectionKind.method &&
+        b.kind === ReflectionKind.method
+      ) {
+        if (a.visibility !== b.visibility) return false;
+      }
+
+      if (a.name !== b.name) return false;
+
+      for (let i = 0; i < a.parameters.length; i++) {
+        if (!isSameType(a.parameters[i], b.parameters[i], stack)) return false;
+      }
+
+      return isSameType(a.return, b.return, stack);
+    }
 
-            for (let i = 0; i < a.values.length; i++) {
-                if (a.values[i] !== b.values[i]) return false;
-            }
+    if (a.kind === ReflectionKind.enum) {
+      if (b.kind !== ReflectionKind.enum) return false;
+      if (a.values.length !== b.values.length) return false;
 
-            return true;
-        }
+      for (let i = 0; i < a.values.length; i++) {
+        if (a.values[i] !== b.values[i]) return false;
+      }
 
-        if (a.kind === ReflectionKind.union) {
-            if (b.kind !== ReflectionKind.union) return false;
-            if (a.types.length !== b.types.length) return false;
-            for (let i = 0; i < a.types.length; i++) {
-                const left = a.types[i];
-                const right = b.types[i];
-                if (!left || !right) return false;
-                if (left === right) continue;
-
-                const same = isSameType(left, right, stack);
-                if (!same) return false;
-            }
-        }
+      return true;
+    }
 
-        return a.kind === b.kind;
-    } finally {
-        // stack.pop();
+    if (a.kind === ReflectionKind.union) {
+      if (b.kind !== ReflectionKind.union) return false;
+      if (a.types.length !== b.types.length) return false;
+      for (let i = 0; i < a.types.length; i++) {
+        const left = a.types[i];
+        const right = b.types[i];
+        if (!left || !right) return false;
+        if (left === right) continue;
+
+        const same = isSameType(left, right, stack);
+        if (!same) return false;
+      }
     }
+
+    return a.kind === b.kind;
+  } finally {
+    // stack.pop();
+  }
 }
 
 export function addType<T extends Type>(container: T, type: Type): T {
-    if (container.kind === ReflectionKind.tuple) {
-        if (type.kind === ReflectionKind.tupleMember) {
-            container.types.push({ ...type, parent: container });
-        } else {
-            container.types.push({ kind: ReflectionKind.tupleMember, parent: container, type: type as Type });
-        }
-    } else if (container.kind === ReflectionKind.union) {
-        if (type.kind === ReflectionKind.union) {
-            for (const t of flatten(type).types) {
-                addType(container, t);
-            }
-        } else if (type.kind === ReflectionKind.tupleMember) {
-            if (type.optional && !isTypeIncluded(container.types, { kind: ReflectionKind.undefined })) {
-                container.types.push({ kind: ReflectionKind.undefined, parent: container });
-            }
-            addType(container, type.type);
-        } else if (type.kind === ReflectionKind.rest) {
-            addType(container, type.type);
-        } else {
-            if (!isTypeIncluded(container.types, type)) {
-                container.types.push({ ...type as any, parent: container });
-            }
-        }
+  if (container.kind === ReflectionKind.tuple) {
+    if (type.kind === ReflectionKind.tupleMember) {
+      container.types.push({ ...type, parent: container });
+    } else {
+      container.types.push({
+        kind: ReflectionKind.tupleMember,
+        parent: container,
+        type: type as Type
+      });
+    }
+  } else if (container.kind === ReflectionKind.union) {
+    if (type.kind === ReflectionKind.union) {
+      for (const t of flatten(type).types) {
+        addType(container, t);
+      }
+    } else if (type.kind === ReflectionKind.tupleMember) {
+      if (
+        type.optional &&
+        !isTypeIncluded(container.types, { kind: ReflectionKind.undefined })
+      ) {
+        container.types.push({
+          kind: ReflectionKind.undefined,
+          parent: container
+        });
+      }
+      addType(container, type.type);
+    } else if (type.kind === ReflectionKind.rest) {
+      addType(container, type.type);
+    } else {
+      if (!isTypeIncluded(container.types, type)) {
+        container.types.push({ ...(type as any), parent: container });
+      }
     }
+  }
 
-    return container;
+  return container;
 }
 
-export function isTypeIncluded(types: Type[], type: Type, stack: StackEntry[] = []): boolean {
-    for (const t of types) {
-        if (isSameType(t, type, stack)) return true;
-    }
+export function isTypeIncluded(
+  types: Type[],
+  type: Type,
+  stack: StackEntry[] = []
+): boolean {
+  for (const t of types) {
+    if (isSameType(t, type, stack)) return true;
+  }
 
-    return false;
+  return false;
 }
 
 /**
  * `true | (string | number)` => `true | string | number`
  */
 export function flatten<T extends Type>(type: T): T {
-    if (type.kind === ReflectionKind.union) {
-        type.types = flattenUnionTypes(type.types);
-    }
-    return type;
+  if (type.kind === ReflectionKind.union) {
+    type.types = flattenUnionTypes(type.types);
+  }
+  return type;
 }
 
 /**
  * Flatten nested union types.
  */
 export function flattenUnionTypes(types: Type[]): Type[] {
-    const result: Type[] = [];
-    for (const type of types) {
-        if (type.kind === ReflectionKind.union) {
-            for (const s of flattenUnionTypes(type.types)) {
-                if (!isTypeIncluded(result, s)) result.push(s);
-            }
-        } else {
-            if (!isTypeIncluded(result, type)) result.push(type);
-        }
+  const result: Type[] = [];
+  for (const type of types) {
+    if (type.kind === ReflectionKind.union) {
+      for (const s of flattenUnionTypes(type.types)) {
+        if (!isTypeIncluded(result, s)) result.push(s);
+      }
+    } else {
+      if (!isTypeIncluded(result, type)) result.push(type);
     }
+  }
 
-    return result;
+  return result;
 }
 
 /**
@@ -891,183 +1057,224 @@ export function flattenUnionTypes(types: Type[]): Type[] {
  * otherwise the union is returned
  */
 export function unboxUnion(union: TypeUnion): Type {
-    if (union.types.length === 0) return { kind: ReflectionKind.never };
-    if (union.types.length === 1) return union.types[0] as Type;
-
-    // //convert union of {a: string} | {b: number} | {c: any} to {a?: string, b?: number, c?: any};
-    // //this does work: {a?: string, b?: string} | {b2?: number} | {c: any} to {a?: string, b?: number, c?: any};
-    // //this does not work: {a?: string, b?: string} | {b?: number} | {c: any} to {a?: string, b?: number, c?: any};
-    // if (union.types.length > 1) {
-    //     //if a property is known already, don't merge it
-    //     const known: string[] = [];
-    //
-    //     for (const member of union.types) {
-    //         if (member.kind !== ReflectionKind.objectLiteral) return union;
-    //         if (member.decorators) return union; //if one member has a decorators, we do not merge
-    //         const needsOptional = member.types.length > 1;
-    //         for (const t of member.types) {
-    //             if (t.kind === ReflectionKind.indexSignature) return union;
-    //             const name = memberNameToString(t.name);
-    //             if (known.includes(name)) return union;
-    //             known.push(name);
-    //             if (needsOptional && !isOptional(t)) return union;
-    //         }
-    //     }
-    //     const bl: {[index: string]: boolean} = {};
-    //
-    //     const big: TypeObjectLiteral = { kind: ReflectionKind.objectLiteral, types: [] };
-    //     for (const member of union.types) {
-    //         if (member.kind !== ReflectionKind.objectLiteral) continue;
-    //         for (const t of member.types) {
-    //             if (t.kind === ReflectionKind.indexSignature) return union;
-    //             big.types.push(t);
-    //             t.parent = big;
-    //             t.optional = true;
-    //         }
-    //     }
-    //     big.parent = union.parent;
-    //     return big;
-    // }
-
-    return union;
+  if (union.types.length === 0) return { kind: ReflectionKind.never };
+  if (union.types.length === 1) return union.types[0] as Type;
+
+  // //convert union of {a: string} | {b: number} | {c: any} to {a?: string, b?: number, c?: any};
+  // //this does work: {a?: string, b?: string} | {b2?: number} | {c: any} to {a?: string, b?: number, c?: any};
+  // //this does not work: {a?: string, b?: string} | {b?: number} | {c: any} to {a?: string, b?: number, c?: any};
+  // if (union.types.length > 1) {
+  //     //if a property is known already, don't merge it
+  //     const known: string[] = [];
+  //
+  //     for (const member of union.types) {
+  //         if (member.kind !== ReflectionKind.objectLiteral) return union;
+  //         if (member.decorators) return union; //if one member has a decorators, we do not merge
+  //         const needsOptional = member.types.length > 1;
+  //         for (const t of member.types) {
+  //             if (t.kind === ReflectionKind.indexSignature) return union;
+  //             const name = memberNameToString(t.name);
+  //             if (known.includes(name)) return union;
+  //             known.push(name);
+  //             if (needsOptional && !isOptional(t)) return union;
+  //         }
+  //     }
+  //     const bl: {[index: string]: boolean} = {};
+  //
+  //     const big: TypeObjectLiteral = { kind: ReflectionKind.objectLiteral, types: [] };
+  //     for (const member of union.types) {
+  //         if (member.kind !== ReflectionKind.objectLiteral) continue;
+  //         for (const t of member.types) {
+  //             if (t.kind === ReflectionKind.indexSignature) return union;
+  //             big.types.push(t);
+  //             t.parent = big;
+  //             t.optional = true;
+  //         }
+  //     }
+  //     big.parent = union.parent;
+  //     return big;
+  // }
+
+  return union;
 }
 
 export function findMember(
-    index: string | number | symbol | TypeTemplateLiteral, types: Type[],
-): TypePropertySignature | TypeMethodSignature | TypeMethod | TypeProperty | TypeIndexSignature | undefined {
-    const indexType = typeof index;
-
-    for (const member of types) {
-        if (member.kind === ReflectionKind.propertySignature && member.name === index) return member;
-        if (member.kind === ReflectionKind.methodSignature && member.name === index) return member;
-        if (member.kind === ReflectionKind.property && member.name === index) return member;
-        if (member.kind === ReflectionKind.method && member.name === index) return member;
-
-        if (member.kind === ReflectionKind.indexSignature) {
-            if (member.index.kind === ReflectionKind.string && 'string' === indexType) return member;
-            if (member.index.kind === ReflectionKind.number && 'number' === indexType) return member;
-            if (member.index.kind === ReflectionKind.symbol && 'symbol' === indexType) return member;
-            //todo: union needs to match depending on union and indexType
-        }
+  index: string | number | symbol | TypeTemplateLiteral,
+  types: Type[]
+):
+  | TypePropertySignature
+  | TypeMethodSignature
+  | TypeMethod
+  | TypeProperty
+  | TypeIndexSignature
+  | undefined {
+  const indexType = typeof index;
+
+  for (const member of types) {
+    if (
+      member.kind === ReflectionKind.propertySignature &&
+      member.name === index
+    )
+      return member;
+    if (member.kind === ReflectionKind.methodSignature && member.name === index)
+      return member;
+    if (member.kind === ReflectionKind.property && member.name === index)
+      return member;
+    if (member.kind === ReflectionKind.method && member.name === index)
+      return member;
+
+    if (member.kind === ReflectionKind.indexSignature) {
+      if (member.index.kind === ReflectionKind.string && "string" === indexType)
+        return member;
+      if (member.index.kind === ReflectionKind.number && "number" === indexType)
+        return member;
+      if (member.index.kind === ReflectionKind.symbol && "symbol" === indexType)
+        return member;
+      //todo: union needs to match depending on union and indexType
     }
-
-    return;
-}
-
-function resolveObjectIndexType(type: TypeObjectLiteral | TypeClass, index: Type): Type {
-    if (index.kind === ReflectionKind.literal && ('string' === typeof index.literal || 'number' === typeof index.literal || 'symbol' === typeof index.literal)) {
-        const member = findMember(index.literal, resolveTypeMembers(type));
-        if (member) {
-            if (member.kind === ReflectionKind.indexSignature) {
-                //todo: check if index type matches literal type
-                return member.type;
-            } else if (member.kind === ReflectionKind.method || member.kind === ReflectionKind.methodSignature) {
-                return member;
-            } else if (member.kind === ReflectionKind.property || member.kind === ReflectionKind.propertySignature) {
-                return member.type;
-            } else {
-                return { kind: ReflectionKind.never };
-            }
-        } else {
-            return { kind: ReflectionKind.never };
-        }
-    } else if (index.kind === ReflectionKind.string || index.kind === ReflectionKind.number || index.kind === ReflectionKind.symbol) {
-        //check if index signature match
-        for (const member of resolveTypeMembers(type)) {
-            if (member.kind === ReflectionKind.indexSignature) {
-                if (isExtendable(index, member.index)) return member.type;
-            }
-        }
+  }
+
+  return;
+}
+
+function resolveObjectIndexType(
+  type: TypeObjectLiteral | TypeClass,
+  index: Type
+): Type {
+  if (
+    index.kind === ReflectionKind.literal &&
+    ("string" === typeof index.literal ||
+      "number" === typeof index.literal ||
+      "symbol" === typeof index.literal)
+  ) {
+    const member = findMember(index.literal, resolveTypeMembers(type));
+    if (member) {
+      if (member.kind === ReflectionKind.indexSignature) {
+        //todo: check if index type matches literal type
+        return member.type;
+      } else if (
+        member.kind === ReflectionKind.method ||
+        member.kind === ReflectionKind.methodSignature
+      ) {
+        return member;
+      } else if (
+        member.kind === ReflectionKind.property ||
+        member.kind === ReflectionKind.propertySignature
+      ) {
+        return member.type;
+      } else {
+        return { kind: ReflectionKind.never };
+      }
+    } else {
+      return { kind: ReflectionKind.never };
     }
-    return { kind: ReflectionKind.never };
+  } else if (
+    index.kind === ReflectionKind.string ||
+    index.kind === ReflectionKind.number ||
+    index.kind === ReflectionKind.symbol
+  ) {
+    //check if index signature match
+    for (const member of resolveTypeMembers(type)) {
+      if (member.kind === ReflectionKind.indexSignature) {
+        if (isExtendable(index, member.index)) return member.type;
+      }
+    }
+  }
+  return { kind: ReflectionKind.never };
 }
 
 interface CStack {
-    iterator: Type[];
-    i: number;
-    round: number;
+  iterator: Type[];
+  i: number;
+  round: number;
 }
 
 export function emptyObject(type: Type): boolean {
-    return (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) && type.types.length === 0;
+  return (
+    (type.kind === ReflectionKind.objectLiteral ||
+      type.kind === ReflectionKind.class) &&
+    type.types.length === 0
+  );
 }
 
 export class CartesianProduct {
-    protected stack: CStack[] = [];
-
-    private current(s: CStack): Type {
-        return s.iterator[s.i];
-    }
-
-    private next(s: CStack): boolean {
-        return (++s.i === s.iterator.length) ? (s.i = 0, false) : true;
+  protected stack: CStack[] = [];
+
+  private current(s: CStack): Type {
+    return s.iterator[s.i];
+  }
+
+  private next(s: CStack): boolean {
+    return ++s.i === s.iterator.length ? ((s.i = 0), false) : true;
+  }
+
+  toGroup(type: Type): Type[] {
+    if (type.kind === ReflectionKind.boolean) {
+      return [
+        { kind: ReflectionKind.literal, literal: "false" },
+        {
+          kind: ReflectionKind.literal,
+          literal: "true"
+        }
+      ];
+    } else if (type.kind === ReflectionKind.null) {
+      return [{ kind: ReflectionKind.literal, literal: "null" }];
+    } else if (type.kind === ReflectionKind.undefined) {
+      return [{ kind: ReflectionKind.literal, literal: "undefined" }];
+      // } else if (type.kind === ReflectionKind.templateLiteral) {
+      // //     //todo: this is wrong
+      // //     return type.types;
+      //     const result: Type[] = [];
+      //     for (const s of type.types) {
+      //         const g = this.toGroup(s);
+      //         result.push(...g);
+      //     }
+      //
+      //     return result;
+    } else if (type.kind === ReflectionKind.union) {
+      const result: Type[] = [];
+      for (const s of type.types) {
+        const g = this.toGroup(s);
+        result.push(...g);
+      }
+
+      return result;
+    } else {
+      return [type];
     }
-
-    toGroup(type: Type): Type[] {
-        if (type.kind === ReflectionKind.boolean) {
-            return [{ kind: ReflectionKind.literal, literal: 'false' }, {
-                kind: ReflectionKind.literal,
-                literal: 'true',
-            }];
-        } else if (type.kind === ReflectionKind.null) {
-            return [{ kind: ReflectionKind.literal, literal: 'null' }];
-        } else if (type.kind === ReflectionKind.undefined) {
-            return [{ kind: ReflectionKind.literal, literal: 'undefined' }];
-            // } else if (type.kind === ReflectionKind.templateLiteral) {
-            // //     //todo: this is wrong
-            // //     return type.types;
-            //     const result: Type[] = [];
-            //     for (const s of type.types) {
-            //         const g = this.toGroup(s);
-            //         result.push(...g);
-            //     }
-            //
-            //     return result;
-        } else if (type.kind === ReflectionKind.union) {
-            const result: Type[] = [];
-            for (const s of type.types) {
-                const g = this.toGroup(s);
-                result.push(...g);
-            }
-
-            return result;
+  }
+
+  add(item: Type) {
+    this.stack.push({ iterator: this.toGroup(item), i: 0, round: 0 });
+  }
+
+  calculate(): Type[][] {
+    const result: Type[][] = [];
+    outer: while (true) {
+      const row: Type[] = [];
+      for (const s of this.stack) {
+        const item = this.current(s);
+        if (item.kind === ReflectionKind.templateLiteral) {
+          row.push(...item.types);
         } else {
-            return [type];
+          row.push(item);
         }
+      }
+      result.push(row);
+
+      for (let i = this.stack.length - 1; i >= 0; i--) {
+        const active = this.next(this.stack[i]);
+        //when that i stack is active, continue in main loop
+        if (active) continue outer;
+
+        //i stack was rewinded. If its the first, it means we are done
+        if (i === 0) break outer;
+      }
+      break;
     }
 
-    add(item: Type) {
-        this.stack.push({ iterator: this.toGroup(item), i: 0, round: 0 });
-    }
-
-    calculate(): Type[][] {
-        const result: Type[][] = [];
-        outer:
-            while (true) {
-                const row: Type[] = [];
-                for (const s of this.stack) {
-                    const item = this.current(s);
-                    if (item.kind === ReflectionKind.templateLiteral) {
-                        row.push(...item.types);
-                    } else {
-                        row.push(item);
-                    }
-                }
-                result.push(row);
-
-                for (let i = this.stack.length - 1; i >= 0; i--) {
-                    const active = this.next(this.stack[i]);
-                    //when that i stack is active, continue in main loop
-                    if (active) continue outer;
-
-                    //i stack was rewinded. If its the first, it means we are done
-                    if (i === 0) break outer;
-                }
-                break;
-            }
-
-        return result;
-    }
+    return result;
+  }
 }
 
 /**
@@ -1081,351 +1288,608 @@ export class CartesianProduct {
  * e.g. [string, number][number] => string | number
  */
 export function indexAccess(container: Type, index: Type): Type {
-    if (container.kind === ReflectionKind.array) {
-        if ((index.kind === ReflectionKind.literal && 'number' === typeof index.literal) || index.kind === ReflectionKind.number) return container.type;
-        if (index.kind === ReflectionKind.literal && index.literal === 'length') return { kind: ReflectionKind.number };
-    } else if (container.kind === ReflectionKind.tuple) {
-        if (index.kind === ReflectionKind.literal && index.literal === 'length') {
-            return { kind: ReflectionKind.literal, literal: container.types.length };
-        }
-        if (index.kind === ReflectionKind.literal && 'number' === typeof index.literal && index.literal < 0) {
-            index = { kind: ReflectionKind.number };
-        }
-
-        if (index.kind === ReflectionKind.literal && 'number' === typeof index.literal) {
-            type b0 = [string, boolean?][0]; //string
-            type b1 = [string, boolean?][1]; //boolean|undefined
-            type a0 = [string, ...number[], boolean][0]; //string
-            type a1 = [string, ...number[], boolean][1]; //number|boolean
-            type a2 = [string, ...number[], boolean][2]; //number|boolean
-            type a22 = [string, ...number[], boolean][3]; //number|boolean
-            // type a23 = [string, number, boolean][4]; //number|boolean
-            type a3 = [string, number, ...number[], boolean][1]; //number
-            type a4 = [string, number, ...number[], boolean][-2]; //string|number|boolean, minus means all
-            type a5 = [string, number, ...number[], boolean][number]; //string|number|boolean
-
-            let restPosition = -1;
-            for (let i = 0; i < container.types.length; i++) {
-                if (container.types[i].type.kind === ReflectionKind.rest) {
-                    restPosition = i;
-                    break;
-                }
-            }
-
-            if (restPosition === -1 || index.literal < restPosition) {
-                const sub = container.types[index.literal];
-                if (!sub) return { kind: ReflectionKind.undefined };
-                if (sub.optional) return {
-                    kind: ReflectionKind.union,
-                    types: [sub.type, { kind: ReflectionKind.undefined }],
-                };
-                return sub.type;
-            }
-
-            //index beyond a rest, return all beginning from there as big enum
-
-            const result: TypeUnion = { kind: ReflectionKind.union, types: [] };
-            for (let i = restPosition; i < container.types.length; i++) {
-                const member = container.types[i];
-                const type = member.type.kind === ReflectionKind.rest ? member.type.type : member.type;
-                if (!isTypeIncluded(result.types, type)) result.types.push(type);
-                if (member.optional && !isTypeIncluded(result.types, { kind: ReflectionKind.undefined })) result.types.push({ kind: ReflectionKind.undefined });
-            }
+  if (container.kind === ReflectionKind.array) {
+    if (
+      (index.kind === ReflectionKind.literal &&
+        "number" === typeof index.literal) ||
+      index.kind === ReflectionKind.number
+    )
+      return container.type;
+    if (index.kind === ReflectionKind.literal && index.literal === "length")
+      return { kind: ReflectionKind.number };
+  } else if (container.kind === ReflectionKind.tuple) {
+    if (index.kind === ReflectionKind.literal && index.literal === "length") {
+      return { kind: ReflectionKind.literal, literal: container.types.length };
+    }
+    if (
+      index.kind === ReflectionKind.literal &&
+      "number" === typeof index.literal &&
+      index.literal < 0
+    ) {
+      index = { kind: ReflectionKind.number };
+    }
 
-            return unboxUnion(result);
-        } else if (index.kind === ReflectionKind.number) {
-            const union: TypeUnion = { kind: ReflectionKind.union, types: [] };
-            for (const sub of container.types) {
-                if (sub.type.kind === ReflectionKind.rest) {
-                    if (isTypeIncluded(union.types, sub.type.type)) continue;
-                    union.types.push(sub.type.type);
-                } else {
-                    if (isTypeIncluded(union.types, sub.type)) continue;
-                    union.types.push(sub.type);
-                }
-            }
-            return unboxUnion(union);
+    if (
+      index.kind === ReflectionKind.literal &&
+      "number" === typeof index.literal
+    ) {
+      type b0 = [string, boolean?][0]; //string
+      type b1 = [string, boolean?][1]; //boolean|undefined
+      type a0 = [string, ...number[], boolean][0]; //string
+      type a1 = [string, ...number[], boolean][1]; //number|boolean
+      type a2 = [string, ...number[], boolean][2]; //number|boolean
+      type a22 = [string, ...number[], boolean][3]; //number|boolean
+      // type a23 = [string, number, boolean][4]; //number|boolean
+      type a3 = [string, number, ...number[], boolean][1]; //number
+      type a4 = [string, number, ...number[], boolean][-2]; //string|number|boolean, minus means all
+      type a5 = [string, number, ...number[], boolean][number]; //string|number|boolean
+
+      let restPosition = -1;
+      for (let i = 0; i < container.types.length; i++) {
+        if (container.types[i].type.kind === ReflectionKind.rest) {
+          restPosition = i;
+          break;
+        }
+      }
+
+      if (restPosition === -1 || index.literal < restPosition) {
+        const sub = container.types[index.literal];
+        if (!sub) return { kind: ReflectionKind.undefined };
+        if (sub.optional)
+          return {
+            kind: ReflectionKind.union,
+            types: [sub.type, { kind: ReflectionKind.undefined }]
+          };
+        return sub.type;
+      }
+
+      //index beyond a rest, return all beginning from there as big enum
+
+      const result: TypeUnion = { kind: ReflectionKind.union, types: [] };
+      for (let i = restPosition; i < container.types.length; i++) {
+        const member = container.types[i];
+        const type =
+          member.type.kind === ReflectionKind.rest
+            ? member.type.type
+            : member.type;
+        if (!isTypeIncluded(result.types, type)) result.types.push(type);
+        if (
+          member.optional &&
+          !isTypeIncluded(result.types, { kind: ReflectionKind.undefined })
+        )
+          result.types.push({ kind: ReflectionKind.undefined });
+      }
+
+      return unboxUnion(result);
+    } else if (index.kind === ReflectionKind.number) {
+      const union: TypeUnion = { kind: ReflectionKind.union, types: [] };
+      for (const sub of container.types) {
+        if (sub.type.kind === ReflectionKind.rest) {
+          if (isTypeIncluded(union.types, sub.type.type)) continue;
+          union.types.push(sub.type.type);
         } else {
-            return { kind: ReflectionKind.never };
+          if (isTypeIncluded(union.types, sub.type)) continue;
+          union.types.push(sub.type);
         }
-    } else if (container.kind === ReflectionKind.objectLiteral || container.kind === ReflectionKind.class) {
-        if (index.kind === ReflectionKind.literal) {
-            return resolveObjectIndexType(container, index);
-        } else if (index.kind === ReflectionKind.union) {
-            const union: TypeUnion = { kind: ReflectionKind.union, types: [] };
-            for (const t of index.types) {
-                const result = resolveObjectIndexType(container, t);
-                if (result.kind === ReflectionKind.never) continue;
-
-                if (result.kind === ReflectionKind.union) {
-                    for (const resultT of result.types) {
-                        if (isTypeIncluded(union.types, resultT)) continue;
-                        union.types.push(resultT);
-                    }
-                } else {
-                    if (isTypeIncluded(union.types, result)) continue;
-                    union.types.push(result);
-                }
-            }
-            return unboxUnion(union);
+      }
+      return unboxUnion(union);
+    } else {
+      return { kind: ReflectionKind.never };
+    }
+  } else if (
+    container.kind === ReflectionKind.objectLiteral ||
+    container.kind === ReflectionKind.class
+  ) {
+    if (index.kind === ReflectionKind.literal) {
+      return resolveObjectIndexType(container, index);
+    } else if (index.kind === ReflectionKind.union) {
+      const union: TypeUnion = { kind: ReflectionKind.union, types: [] };
+      for (const t of index.types) {
+        const result = resolveObjectIndexType(container, t);
+        if (result.kind === ReflectionKind.never) continue;
+
+        if (result.kind === ReflectionKind.union) {
+          for (const resultT of result.types) {
+            if (isTypeIncluded(union.types, resultT)) continue;
+            union.types.push(resultT);
+          }
         } else {
-            return { kind: ReflectionKind.never };
+          if (isTypeIncluded(union.types, result)) continue;
+          union.types.push(result);
+        }
+      }
+      return unboxUnion(union);
+    } else {
+      return { kind: ReflectionKind.never };
+    }
+  } else if (container.kind === ReflectionKind.any) {
+    return { kind: ReflectionKind.any };
+  } else if (container.kind === ReflectionKind.union) {
+    if (index.kind === ReflectionKind.literal) {
+      // Deals with indexing a union with a literal.
+      // For example, if you have a union of {foo: 'bar'} | {foo: 'baz'}
+      // and you index it with 'foo', you get 'bar' | 'baz'. This should
+      // accordingly print ['bar', 'baz'] when valueOf<...>() is called
+      // on the union.
+      if (["string", "number", "symbol"].includes(typeof index.literal)) {
+        const union: TypeUnion = { kind: ReflectionKind.union, types: [] };
+
+        // For each type in the union, t, resolve the type at index.
+        for (const t of container.types) {
+          const resolvedType = indexAccess(t, index);
+          if (isTypeIncluded(union.types, resolvedType)) continue;
+          union.types.push(resolvedType);
         }
-    } else if (container.kind === ReflectionKind.any) {
-        return { kind: ReflectionKind.any };
-    } else if (container.kind === ReflectionKind.union) {
-        if (index.kind === ReflectionKind.literal) {
-            // Deals with indexing a union with a literal.
-            // For example, if you have a union of {foo: 'bar'} | {foo: 'baz'}
-            // and you index it with 'foo', you get 'bar' | 'baz'. This should
-            // accordingly print ['bar', 'baz'] when valueOf<...>() is called
-            // on the union.
-            if (['string', 'number', 'symbol'].includes(typeof index.literal)) {
-                const union: TypeUnion = { kind: ReflectionKind.union, types: [] };
-
-                // For each type in the union, t, resolve the type at index.
-                for (const t of container.types) {
-                    const resolvedType = indexAccess(t, index);
-                    if (isTypeIncluded(union.types, resolvedType)) continue;
-                    union.types.push(resolvedType);
-                }
-
-                return unboxUnion(union);
-            }
-        } else if (index.kind === ReflectionKind.union) {
-            // Further, it is possible to index a union with a union of
-            // literals. So this deals with that case. For example, if you
-            // have a union of {foo: 'bar', a: 'b'} | {foo: 'baz', a: 'c'} and
-            // you index it with 'foo' | 'a', you get 'bar' | 'baz' | 'b' | 'c'
-            // and valueOf<...>() should return ['bar', 'baz', 'b', 'c'].
-
-            const types: Type[] = [];
-
-            // Pre-compute a list of indices to avoid having to re-do this for
-            // each entry in the union.
-            const indices: TypeLiteral[] = [];
-
-            const unboxedIndex = unboxUnion(index);
-            if (unboxedIndex.kind === ReflectionKind.union) {
-                for (const indexEntry of unboxedIndex.types) {
-                    // (At least for now) accept only literals as indices.
-                    if (indexEntry.kind !== ReflectionKind.literal) continue;
-                    // Don't add duplicate indices.
-                    if (indices.includes(indexEntry)) continue;
-                    // Push the index to the list of indices.
-                    indices.push(indexEntry);
-                }
-            }
-
-            // Each type in the type union (where that type union is indexable)
-            // is assumed to be an object literal or class, so we loop over
-            // each of those types.
-            for (const t of container.types) {
-                // This approach does not produce identical results to
-                // TypeScript - as this reduces all duplicates from the result
-                // (i.e., it produces the 'set' of all types that would be
-                // returned by TypeScript), whereas TypeScript will not reduce
-                // string literals to a single entry, but will reduce numeric
-                // literals. Unless this absolute fidelity is required, this
-                // approach is simpler and probably makes more sense too.
-                for (const index of indices) {
-                    const resolvedType = indexAccess(t, index);
-                    if (isTypeIncluded(types, resolvedType)) continue;
-                    types.push(resolvedType);
-                }
-            }
 
-            return unboxUnion({ kind: ReflectionKind.union, types });
+        return unboxUnion(union);
+      }
+    } else if (index.kind === ReflectionKind.union) {
+      // Further, it is possible to index a union with a union of
+      // literals. So this deals with that case. For example, if you
+      // have a union of {foo: 'bar', a: 'b'} | {foo: 'baz', a: 'c'} and
+      // you index it with 'foo' | 'a', you get 'bar' | 'baz' | 'b' | 'c'
+      // and valueOf<...>() should return ['bar', 'baz', 'b', 'c'].
+
+      const types: Type[] = [];
+
+      // Pre-compute a list of indices to avoid having to re-do this for
+      // each entry in the union.
+      const indices: TypeLiteral[] = [];
+
+      const unboxedIndex = unboxUnion(index);
+      if (unboxedIndex.kind === ReflectionKind.union) {
+        for (const indexEntry of unboxedIndex.types) {
+          // (At least for now) accept only literals as indices.
+          if (indexEntry.kind !== ReflectionKind.literal) continue;
+          // Don't add duplicate indices.
+          if (indices.includes(indexEntry)) continue;
+          // Push the index to the list of indices.
+          indices.push(indexEntry);
+        }
+      }
+
+      // Each type in the type union (where that type union is indexable)
+      // is assumed to be an object literal or class, so we loop over
+      // each of those types.
+      for (const t of container.types) {
+        // This approach does not produce identical results to
+        // TypeScript - as this reduces all duplicates from the result
+        // (i.e., it produces the 'set' of all types that would be
+        // returned by TypeScript), whereas TypeScript will not reduce
+        // string literals to a single entry, but will reduce numeric
+        // literals. Unless this absolute fidelity is required, this
+        // approach is simpler and probably makes more sense too.
+        for (const index of indices) {
+          const resolvedType = indexAccess(t, index);
+          if (isTypeIncluded(types, resolvedType)) continue;
+          types.push(resolvedType);
         }
+      }
+
+      return unboxUnion({ kind: ReflectionKind.union, types });
     }
-    return { kind: ReflectionKind.never };
+  }
+  return { kind: ReflectionKind.never };
 }
 
-export function merge(types: (TypeObjectLiteral | TypeClass)[]): TypeObjectLiteral {
-    const type: TypeObjectLiteral = { kind: ReflectionKind.objectLiteral, id: state.nominalId++, types: [] };
-
-    for (const subType of types) {
-        for (const member of subType.types) {
-            if (member.kind === ReflectionKind.indexSignature) {
-                member.parent = type;
-                type.types.push(member);
-            } else if (!isMember(member)) {
-                continue;
-            } else {
-                const t = toSignature(member);
-                t.parent = type;
-                const existing = getMember(type, member.name);
-                if (existing) {
-                    arrayRemoveItem(type.types, existing as Type);
-                }
-                type.types.push(t);
-            }
+export function merge(
+  types: (TypeObjectLiteral | TypeClass)[]
+): TypeObjectLiteral {
+  const type: TypeObjectLiteral = {
+    kind: ReflectionKind.objectLiteral,
+    id: state.nominalId++,
+    types: []
+  };
+
+  for (const subType of types) {
+    for (const member of subType.types) {
+      if (member.kind === ReflectionKind.indexSignature) {
+        member.parent = type;
+        type.types.push(member);
+      } else if (!isMember(member)) {
+        continue;
+      } else {
+        const t = toSignature(member);
+        t.parent = type;
+        const existing = getMember(type, member.name);
+        if (existing) {
+          arrayRemoveItem(type.types, existing as Type);
         }
+        type.types.push(t);
+      }
     }
-    return type;
+  }
+  return type;
 }
 
 export function narrowOriginalLiteral(type: Type): Type {
-    if ((type.kind === ReflectionKind.string || type.kind === ReflectionKind.number || type.kind === ReflectionKind.boolean || type.kind === ReflectionKind.bigint) && type.origin) {
-        return type.origin;
-    }
-    return type;
-}
-
-type GetArrayElement<T extends any[]> = [T] extends [Array<infer K>] ? K : never;
-type RemoveParent<T, K extends keyof T> = { [P in K]: T[P] extends Type[] ? RemoveParentHomomorphic<GetArrayElement<T[P]>>[] : T[P] extends Type ? RemoveParentHomomorphic<T[P]> : T[P] };
-type RemoveParentHomomorphic<T> = RemoveParent<T, Exclude<keyof T, 'parent'>>;
-type RemoveDeepParent<T extends Type> = T extends infer K ? RemoveParentHomomorphic<K> : never;
+  if (
+    (type.kind === ReflectionKind.string ||
+      type.kind === ReflectionKind.number ||
+      type.kind === ReflectionKind.boolean ||
+      type.kind === ReflectionKind.bigint) &&
+    type.origin
+  ) {
+    return type.origin;
+  }
+  return type;
+}
+
+type GetArrayElement<T extends any[]> = [T] extends [Array<infer K>]
+  ? K
+  : never;
+type RemoveParent<T, K extends keyof T> = {
+  [P in K]: T[P] extends Type[]
+    ? RemoveParentHomomorphic<GetArrayElement<T[P]>>[]
+    : T[P] extends Type
+      ? RemoveParentHomomorphic<T[P]>
+      : T[P];
+};
+type RemoveParentHomomorphic<T> = RemoveParent<T, Exclude<keyof T, "parent">>;
+type RemoveDeepParent<T extends Type> = T extends infer K
+  ? RemoveParentHomomorphic<K>
+  : never;
 export type ParentLessType = RemoveDeepParent<Type>;
 
 /**
  * This function does not do a deep copy, only shallow. A deep copy makes it way to inefficient, so much that router.spec.ts takes up to 20-30seconds
  * to complete instead of barely 30ms.
  */
-export function copyAndSetParent<T extends ParentLessType>(inc: T, parent?: Type): FindType<Type, T['kind']> {
-    const type = parent ? { ...inc, parent: parent } as Type : { ...inc } as Type;
-
-    if (isWithAnnotations(type) && isWithAnnotations(inc)) {
-        if (inc.annotations) {
-            type.annotations = {};
-            //we have to make copies of each annotation since they get modified when intersected
-            for (const prop of Object.getOwnPropertySymbols(inc.annotations)) {
-                if (inc.annotations[prop]) type.annotations[prop] = inc.annotations[prop].slice();
-            }
-        }
-        if (inc.decorators) type.decorators = inc.decorators.slice();
-        if (inc.indexAccessOrigin) type.indexAccessOrigin = { ...inc.indexAccessOrigin };
-        if (inc.typeArguments) type.typeArguments = inc.typeArguments.slice();
-        type.jit = {};
+export function copyAndSetParent<T extends ParentLessType>(
+  inc: T,
+  parent?: Type
+): FindType<Type, T["kind"]> {
+  const type = parent
+    ? ({ ...inc, parent: parent } as Type)
+    : ({ ...inc } as Type);
+
+  if (isWithAnnotations(type) && isWithAnnotations(inc)) {
+    if (inc.annotations) {
+      type.annotations = {};
+      //we have to make copies of each annotation since they get modified when intersected
+      for (const prop of Object.getOwnPropertySymbols(inc.annotations)) {
+        if (inc.annotations[prop])
+          type.annotations[prop] = inc.annotations[prop].slice();
+      }
     }
+    if (inc.decorators) type.decorators = inc.decorators.slice();
+    if (inc.indexAccessOrigin)
+      type.indexAccessOrigin = { ...inc.indexAccessOrigin };
+    if (inc.typeArguments) type.typeArguments = inc.typeArguments.slice();
+    type.jit = {};
+  }
+
+  switch (type.kind) {
+    case ReflectionKind.objectLiteral:
+    case ReflectionKind.tuple:
+    case ReflectionKind.union:
+    case ReflectionKind.class:
+    case ReflectionKind.intersection:
+    case ReflectionKind.templateLiteral:
+      type.types = type.types.slice();
+      break;
+    case ReflectionKind.string:
+    case ReflectionKind.number:
+    case ReflectionKind.bigint:
+    case ReflectionKind.symbol:
+    case ReflectionKind.regexp:
+    case ReflectionKind.boolean:
+      // if (type.origin) type.origin = copyAndSetParent(type.origin, type, stack);
+      break;
+    case ReflectionKind.function:
+    case ReflectionKind.method:
+    case ReflectionKind.methodSignature:
+      // type.return = copyAndSetParent(type.return, type, stack);
+      // type.parameters = type.parameters.map(member => copyAndSetParent(member, type, stack));
+      break;
+    case ReflectionKind.propertySignature:
+    case ReflectionKind.property:
+    case ReflectionKind.array:
+    case ReflectionKind.promise:
+    case ReflectionKind.parameter:
+    case ReflectionKind.tupleMember:
+    case ReflectionKind.rest:
+      // type.type = copyAndSetParent(type.type, type, stack);
+      break;
+    case ReflectionKind.indexSignature:
+      // type.index = copyAndSetParent(type.index, type, stack);
+      // type.type = copyAndSetParent(type.type, type, stack);
+      break;
+  }
+
+  return type as any;
+}
 
-    switch (type.kind) {
-        case ReflectionKind.objectLiteral:
-        case ReflectionKind.tuple:
-        case ReflectionKind.union:
-        case ReflectionKind.class:
-        case ReflectionKind.intersection:
-        case ReflectionKind.templateLiteral:
-            type.types = type.types.slice();
-            break;
-        case ReflectionKind.string:
-        case ReflectionKind.number:
-        case ReflectionKind.bigint:
-        case ReflectionKind.symbol:
-        case ReflectionKind.regexp:
-        case ReflectionKind.boolean:
-            // if (type.origin) type.origin = copyAndSetParent(type.origin, type, stack);
-            break;
-        case ReflectionKind.function:
-        case ReflectionKind.method:
-        case ReflectionKind.methodSignature:
-            // type.return = copyAndSetParent(type.return, type, stack);
-            // type.parameters = type.parameters.map(member => copyAndSetParent(member, type, stack));
-            break;
-        case ReflectionKind.propertySignature:
-        case ReflectionKind.property:
-        case ReflectionKind.array:
-        case ReflectionKind.promise:
-        case ReflectionKind.parameter:
-        case ReflectionKind.tupleMember:
-        case ReflectionKind.rest:
-            // type.type = copyAndSetParent(type.type, type, stack);
-            break;
-        case ReflectionKind.indexSignature:
-            // type.index = copyAndSetParent(type.index, type, stack);
-            // type.type = copyAndSetParent(type.type, type, stack);
-            break;
-    }
+export function widenLiteral(type: Type): Type {
+  if (type.kind === ReflectionKind.literal) {
+    if ("number" === typeof type.literal)
+      return copyAndSetParent({ kind: ReflectionKind.number, origin: type });
+    if ("boolean" === typeof type.literal)
+      return copyAndSetParent({ kind: ReflectionKind.boolean, origin: type });
+    if ("bigint" === typeof type.literal)
+      return copyAndSetParent({ kind: ReflectionKind.bigint, origin: type });
+    if ("symbol" === typeof type.literal)
+      return copyAndSetParent({ kind: ReflectionKind.symbol, origin: type });
+    if ("string" === typeof type.literal)
+      return copyAndSetParent({ kind: ReflectionKind.string, origin: type });
+    if (type.literal instanceof RegExp)
+      return copyAndSetParent({ kind: ReflectionKind.regexp, origin: type });
+  }
+
+  return type;
+}
+
+export function assertType<K extends ReflectionKind, T>(
+  t: Type | undefined,
+  kind: K
+): asserts t is FindType<Type, K> {
+  if (!t || t.kind !== kind)
+    throw new Error(
+      `Invalid type ${t ? ReflectionKind[t.kind] : undefined}, expected ${ReflectionKind[kind]}`
+    );
+}
 
-    return type as any;
+export function getClassType(type: Type): ClassType {
+  if (type.kind !== ReflectionKind.class)
+    throw new Error(
+      `Type needs to be TypeClass, but ${ReflectionKind[type.kind]} given.`
+    );
+  return type.classType;
+}
+
+export function isMember(
+  type: Type
+): type is
+  | TypePropertySignature
+  | TypeProperty
+  | TypeMethodSignature
+  | TypeMethod {
+  return (
+    type.kind === ReflectionKind.propertySignature ||
+    type.kind === ReflectionKind.property ||
+    type.kind === ReflectionKind.methodSignature ||
+    type.kind === ReflectionKind.method
+  );
+}
+
+export function hasMember(
+  type: TypeObjectLiteral | TypeClass,
+  memberName: number | string | symbol,
+  memberType?: Type
+): boolean {
+  return type.types.some(
+    v =>
+      isMember(v) &&
+      v.name === memberName &&
+      (!memberType ||
+        isExtendable(
+          v.kind === ReflectionKind.propertySignature ||
+            v.kind === ReflectionKind.property
+            ? v.type
+            : v,
+          memberType
+        ))
+  );
+}
+
+export function getMember(
+  type: TypeObjectLiteral | TypeClass,
+  memberName: number | string | symbol
+):
+  | TypeMethodSignature
+  | TypeMethod
+  | TypePropertySignature
+  | TypeProperty
+  | void {
+  return (
+    type.types as (
+      | TypeIndexSignature
+      | TypeMethodSignature
+      | TypeMethod
+      | TypePropertySignature
+      | TypeProperty
+    )[]
+  ).find(v => isMember(v) && v.name === memberName) as
+    | TypeMethodSignature
+    | TypeMethod
+    | TypePropertySignature
+    | TypeProperty
+    | void;
 }
 
-export function widenLiteral(type: Type): Type {
-    if (type.kind === ReflectionKind.literal) {
-        if ('number' === typeof type.literal) return copyAndSetParent({ kind: ReflectionKind.number, origin: type });
-        if ('boolean' === typeof type.literal) return copyAndSetParent({ kind: ReflectionKind.boolean, origin: type });
-        if ('bigint' === typeof type.literal) return copyAndSetParent({ kind: ReflectionKind.bigint, origin: type });
-        if ('symbol' === typeof type.literal) return copyAndSetParent({ kind: ReflectionKind.symbol, origin: type });
-        if ('string' === typeof type.literal) return copyAndSetParent({ kind: ReflectionKind.string, origin: type });
-        if (type.literal instanceof RegExp) return copyAndSetParent({ kind: ReflectionKind.regexp, origin: type });
+export function getTypeObjectLiteralFromTypeClass<T extends Type>(
+  type: T
+): T extends TypeClass ? TypeObjectLiteral : T {
+  if (type.kind === ReflectionKind.class) {
+    const objectLiteral: TypeObjectLiteral = {
+      kind: ReflectionKind.objectLiteral,
+      id: state.nominalId++,
+      types: []
+    };
+    for (const member of type.types) {
+      if (member.kind === ReflectionKind.indexSignature) {
+        objectLiteral.types.push(member);
+        member.parent = objectLiteral;
+      } else if (member.kind === ReflectionKind.property) {
+        const m = {
+          ...member,
+          kind: ReflectionKind.propertySignature
+        } as any as TypePropertySignature;
+        m.parent = objectLiteral;
+        objectLiteral.types.push(m);
+      } else if (member.kind === ReflectionKind.method) {
+        const m = {
+          ...member,
+          kind: ReflectionKind.methodSignature
+        } as any as TypeMethodSignature;
+        m.parent = objectLiteral;
+        objectLiteral.types.push(m);
+      }
     }
+    return objectLiteral as any;
+  }
 
-    return type;
+  return type as any;
+}
+
+/**
+ * Checks whether `undefined` is allowed as type.
+ */
+export function isOptional(type: Type): boolean {
+  if (isMember(type) && type.optional === true) return true;
+  if (type.kind === ReflectionKind.parameter)
+    return type.optional || isOptional(type.type);
+  if (type.kind === ReflectionKind.tupleMember)
+    return type.optional || isOptional(type.type);
+  if (
+    type.kind === ReflectionKind.property ||
+    type.kind === ReflectionKind.propertySignature ||
+    type.kind === ReflectionKind.indexSignature
+  )
+    return isOptional(type.type);
+  return (
+    type.kind === ReflectionKind.any ||
+    type.kind === ReflectionKind.undefined ||
+    (type.kind === ReflectionKind.union && type.types.some(isOptional))
+  );
 }
 
-export function assertType<K extends ReflectionKind, T>(t: Type | undefined, kind: K): asserts t is FindType<Type, K> {
-    if (!t || t.kind !== kind) throw new Error(`Invalid type ${t ? ReflectionKind[t.kind] : undefined}, expected ${ReflectionKind[kind]}`);
+/**
+ * Whether a property has an initializer/default value.
+ */
+export function hasDefaultValue(type: Type): boolean {
+  return (
+    (type.kind === ReflectionKind.property ||
+      type.kind === ReflectionKind.parameter) &&
+    type.default !== undefined
+  );
 }
 
-export function getClassType(type: Type): ClassType {
-    if (type.kind !== ReflectionKind.class) throw new Error(`Type needs to be TypeClass, but ${ReflectionKind[type.kind]} given.`);
-    return type.classType;
+/**
+ * Checks whether `null` is allowed as type.
+ */
+export function isNullable(type: Type): boolean {
+  if (
+    type.kind === ReflectionKind.property ||
+    type.kind === ReflectionKind.propertySignature ||
+    type.kind === ReflectionKind.indexSignature
+  )
+    return isNullable(type.type);
+  return (
+    type.kind === ReflectionKind.null ||
+    (type.kind === ReflectionKind.union && type.types.some(isNullable))
+  );
 }
 
-export function isMember(type: Type): type is TypePropertySignature | TypeProperty | TypeMethodSignature | TypeMethod {
-    return type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property
-        || type.kind === ReflectionKind.methodSignature || type.kind === ReflectionKind.method;
+/**
+ * Get tags from type.
+ */
+export function getTags(type: Type): TagsReflection {
+  if (
+    type.kind === ReflectionKind.property ||
+    type.kind === ReflectionKind.propertySignature ||
+    type.kind === ReflectionKind.indexSignature
+  ) {
+    return type.tags ?? {};
+  } else if (
+    type.kind === ReflectionKind.method ||
+    type.kind === ReflectionKind.methodSignature
+  ) {
+    return type.tags ?? {};
+  } else if (
+    type.kind === ReflectionKind.class ||
+    type.kind === ReflectionKind.objectLiteral
+  ) {
+    return type.tags ?? {};
+  } else if (type.kind === ReflectionKind.function) {
+    return type.tags ?? {};
+  } else if (
+    type.kind === ReflectionKind.enum ||
+    type.kind === ReflectionKind.enumMember
+  ) {
+    return type.tags ?? {};
+  } else if (
+    type.kind === ReflectionKind.parameter ||
+    type.kind === ReflectionKind.typeParameter
+  ) {
+    return type.tags ?? {};
+  } else if (type.kind === ReflectionKind.array) {
+    return type.tags ?? {};
+  }
+
+  return {};
 }
 
-export function hasMember(type: TypeObjectLiteral | TypeClass, memberName: number | string | symbol, memberType?: Type): boolean {
-    return type.types.some(v => isMember(v) && v.name === memberName && (!memberType || isExtendable(v.kind === ReflectionKind.propertySignature || v.kind === ReflectionKind.property ? v.type : v, memberType)));
+/**
+ * Checks whether the \`hidden\` tag was specified for the type.
+ */
+export function isHidden(type: Type): boolean {
+  const tags = getTags(type);
+
+  return Boolean(tags.hidden);
 }
 
-export function getMember(type: TypeObjectLiteral | TypeClass, memberName: number | string | symbol): TypeMethodSignature | TypeMethod | TypePropertySignature | TypeProperty | void {
-    return (type.types as (TypeIndexSignature | TypeMethodSignature | TypeMethod | TypePropertySignature | TypeProperty)[]).find(v => isMember(v) && v.name === memberName) as TypeMethodSignature | TypeMethod | TypePropertySignature | TypeProperty | void;
+/**
+ * Checks whether the \`ignore\` tag was specified for the type.
+ */
+export function isIgnore(type: Type): boolean {
+  const tags = getTags(type);
+
+  return Boolean(tags.ignore);
 }
 
-export function getTypeObjectLiteralFromTypeClass<T extends Type>(type: T): T extends TypeClass ? TypeObjectLiteral : T {
-    if (type.kind === ReflectionKind.class) {
-        const objectLiteral: TypeObjectLiteral = {
-            kind: ReflectionKind.objectLiteral,
-            id: state.nominalId++,
-            types: [],
-        };
-        for (const member of type.types) {
-            if (member.kind === ReflectionKind.indexSignature) {
-                objectLiteral.types.push(member);
-                member.parent = objectLiteral;
-            } else if (member.kind === ReflectionKind.property) {
-                const m = { ...member, kind: ReflectionKind.propertySignature } as any as TypePropertySignature;
-                m.parent = objectLiteral;
-                objectLiteral.types.push(m);
-            } else if (member.kind === ReflectionKind.method) {
-                const m = { ...member, kind: ReflectionKind.methodSignature } as any as TypeMethodSignature;
-                m.parent = objectLiteral;
-                objectLiteral.types.push(m);
-            }
-        }
-        return objectLiteral as any;
-    }
+/**
+ * Checks whether the \`internal\` tag was specified for the type.
+ */
+export function isInternal(type: Type): boolean {
+  const tags = getTags(type);
 
-    return type as any;
+  return Boolean(tags.internal);
 }
 
 /**
- * Checks whether `undefined` is allowed as type.
+ * Returns the values specified by the type's \`alias\` tag(s).
  */
-export function isOptional(type: Type): boolean {
-    if (isMember(type) && type.optional === true) return true;
-    if (type.kind === ReflectionKind.parameter) return type.optional || isOptional(type.type);
-    if (type.kind === ReflectionKind.tupleMember) return type.optional || isOptional(type.type);
-    if (type.kind === ReflectionKind.property || type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.indexSignature) return isOptional(type.type);
-    return type.kind === ReflectionKind.any || type.kind === ReflectionKind.undefined || (type.kind === ReflectionKind.union && type.types.some(isOptional));
+export function getAlias(type: Type): string[] {
+  const tags = getTags(type);
+
+  return tags.alias ?? [];
 }
 
 /**
- * Whether a property has an initializer/default value.
+ * Checks whether the \`readonly\` tag was specified for the type.
  */
-export function hasDefaultValue(type: Type): boolean {
-    return (type.kind === ReflectionKind.property || type.kind === ReflectionKind.parameter) && type.default !== undefined;
+export function isReadonly(type: Type): boolean {
+  const tags = getTags(type);
+
+  return Boolean(tags.readonly);
 }
 
 /**
- * Checks whether `null` is allowed as type.
+ * Returns the values specified by the type's \`title\` tag.
  */
-export function isNullable(type: Type): boolean {
-    if (type.kind === ReflectionKind.property || type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.indexSignature) return isNullable(type.type);
-    return type.kind === ReflectionKind.null || (type.kind === ReflectionKind.union && type.types.some(isNullable));
+export function getTitle(type: Type): string | undefined {
+  const tags = getTags(type);
+
+  return tags.title;
+}
+
+/**
+ * Returns the values specified by the type's \`permission\` tag(s).
+ */
+export function getPermission(type: Type): string[] {
+  const tags = getTags(type);
+
+  return tags.permission ?? [];
+}
+
+/**
+ * Returns the values specified by the type's \`domain\` tag.
+ */
+export function getDomain(type: Type): string | undefined {
+  const tags = getTags(type);
+
+  return tags.domain;
 }
 
 /**
@@ -1485,77 +1949,83 @@ export type float32 = number;
 export type float64 = number;
 
 export class AnnotationDefinition<T = true> {
-    public symbol: symbol;
+  public symbol: symbol;
 
-    constructor(public readonly id: string) {
-        this.symbol = Symbol(id);
-    }
+  constructor(public readonly id: string) {
+    this.symbol = Symbol(id);
+  }
 
-    register(annotations: Annotations, data: T) {
-        annotations[this.symbol] ||= [];
-        annotations[this.symbol].push(data);
-    }
+  register(annotations: Annotations, data: T) {
+    annotations[this.symbol] ||= [];
+    annotations[this.symbol].push(data);
+  }
 
-    reset(annotations: Annotations) {
-        //not `delete` so that Object.assign works
-        annotations[this.symbol] = undefined;
-    }
+  reset(annotations: Annotations) {
+    //not `delete` so that Object.assign works
+    annotations[this.symbol] = undefined;
+  }
 
-    registerType<TType extends Type>(type: TType, data: T): TType {
-        type.annotations ||= {};
-        this.register(type.annotations, data);
-        return type;
-    }
+  registerType<TType extends Type>(type: TType, data: T): TType {
+    type.annotations ||= {};
+    this.register(type.annotations, data);
+    return type;
+  }
 
-    replace(annotations: Annotations, annotation: T[]) {
-        annotations[this.symbol] = annotation;
-    }
+  replace(annotations: Annotations, annotation: T[]) {
+    annotations[this.symbol] = annotation;
+  }
 
-    replaceType(type: Type, annotation: T[]) {
-        type.annotations ||= {};
-        type.annotations[this.symbol] = annotation;
-    }
+  replaceType(type: Type, annotation: T[]) {
+    type.annotations ||= {};
+    type.annotations[this.symbol] = annotation;
+  }
 
-    getAnnotations(type: Type): T[] {
-        if (type.annotations) return type.annotations[this.symbol] || [];
-        return [];
-    }
+  getAnnotations(type: Type): T[] {
+    if (type.annotations) return type.annotations[this.symbol] || [];
+    return [];
+  }
 
-    getFirst(type: Type): T | undefined {
-        return this.getAnnotations(type)[0];
-    }
+  getFirst(type: Type): T | undefined {
+    return this.getAnnotations(type)[0];
+  }
 
-    hasAnnotations(type: Type): boolean {
-        return this.getAnnotations(type).length > 0;
-    }
+  hasAnnotations(type: Type): boolean {
+    return this.getAnnotations(type).length > 0;
+  }
 }
 
-export type AnnotationType<T extends AnnotationDefinition<any>> = T extends AnnotationDefinition<infer K> ? K : never;
+export type AnnotationType<T extends AnnotationDefinition<any>> =
+  T extends AnnotationDefinition<infer K> ? K : never;
 
-export type ReferenceActions = 'RESTRICT' | 'NO ACTION' | 'CASCADE' | 'SET NULL' | 'SET DEFAULT';
+export type ReferenceActions =
+  | "RESTRICT"
+  | "NO ACTION"
+  | "CASCADE"
+  | "SET NULL"
+  | "SET DEFAULT";
 
 export interface ReferenceOptions {
-    /**
-     * Default is CASCADE.
-     */
-    onDelete?: ReferenceActions,
+  /**
+   * Default is CASCADE.
+   */
+  onDelete?: ReferenceActions;
 
-    /**
-     * Default is CASCADE.
-     */
-    onUpdate?: ReferenceActions
+  /**
+   * Default is CASCADE.
+   */
+  onUpdate?: ReferenceActions;
 }
 
 /**
  * note: if this is adjusted, make sure to adjust ReflectionClass, entityAnnotation, and type serializer accordingly.
  */
 export interface EntityOptions {
-    name?: string;
-    description?: string;
-    collection?: string;
-    database?: string;
-    singleTableInheritance?: boolean;
-    indexes?: { names: string[], options: IndexOptions }[];
+  name?: string;
+  description?: string;
+  collection?: string;
+  database?: string;
+  singleTableInheritance?: boolean;
+  indexes?: { names: string[]; options: IndexOptions }[];
 }
 
 /**
@@ -1568,7 +2038,7 @@ export interface EntityOptions {
  * }
  * ```
  */
-export type Entity<T extends EntityOptions> = {} & TypeAnnotation<'entity', T>
+export type Entity<T extends EntityOptions> = {} & TypeAnnotation<"entity", T>;
 
 /**
  * Marks a property as primary key.
@@ -1578,13 +2048,27 @@ export type Entity<T extends EntityOptions> = {} & TypeAnnotation<'entity', T>
  * }
  * ```
  */
-export type PrimaryKey = TypeAnnotation<'primaryKey'>;
+export type PrimaryKey = TypeAnnotation<"primaryKey">;
 
 type TypeKeyOf<T> = T[keyof T];
-export type PrimaryKeyFields<T> = any extends T ? any : { [P in keyof T]: Required<T[P]> extends Required<PrimaryKey> ? T[P] : never };
-export type PrimaryKeyType<T> = any extends T ? any : TypeKeyOf<PrimaryKeyFields<T>>;
-
-export type ReferenceFields<T> = { [P in keyof T]: Required<T[P]> extends Required<Reference> | Required<BackReference> ? T[P] : never };
+export type PrimaryKeyFields<T> = any extends T
+  ? any
+  : {
+      [P in keyof T]: Required<T[P]> extends Required<PrimaryKey>
+        ? T[P]
+        : never;
+    };
+export type PrimaryKeyType<T> = any extends T
+  ? any
+  : TypeKeyOf<PrimaryKeyFields<T>>;
+
+export type ReferenceFields<T> = {
+  [P in keyof T]: Required<T[P]> extends
+    | Required<Reference>
+    | Required<BackReference>
+    ? T[P]
+    : never;
+};
 
 /**
  * Marks a primary property key as auto-increment.
@@ -1595,7 +2079,7 @@ export type ReferenceFields<T> = { [P in keyof T]: Required<T[P]> extends Requir
  * }
  * ```
  */
-export type AutoIncrement = TypeAnnotation<'autoIncrement'>;
+export type AutoIncrement = TypeAnnotation<"autoIncrement">;
 
 /**
  * UUID v4, as string, serialized as string in JSON, and binary in database.
@@ -1607,12 +2091,12 @@ export type AutoIncrement = TypeAnnotation<'autoIncrement'>;
  * }
  * ```
  */
-export type UUID = string & TypeAnnotation<'UUIDv4'>;
+export type UUID = string & TypeAnnotation<"UUIDv4">;
 
 /**
  * MongoDB's ObjectID type. serialized as string in JSON, ObjectID in database.
  */
-export type MongoId = string & TypeAnnotation<'mongoId'>;
+export type MongoId = string & TypeAnnotation<"mongoId">;
 
 /**
  * Same as `bigint` but serializes to unsigned binary with unlimited size (instead of 8 bytes in most databases).
@@ -1624,7 +2108,7 @@ export type MongoId = string & TypeAnnotation<'mongoId'>;
  * }
  * ```
  */
-export type BinaryBigInt = bigint & TypeAnnotation<'binaryBigInt'>;
+export type BinaryBigInt = bigint & TypeAnnotation<"binaryBigInt">;
 
 /**
  * Same as `bigint` but serializes to signed binary with unlimited size (instead of 8 bytes in most databases).
@@ -1636,177 +2120,219 @@ export type BinaryBigInt = bigint & TypeAnnotation<'binaryBigInt'>;
  * }
  * ```
  */
-export type SignedBinaryBigInt = bigint & TypeAnnotation<'signedBinaryBigInt'>;
+export type SignedBinaryBigInt = bigint & TypeAnnotation<"signedBinaryBigInt">;
 
 export interface BackReferenceOptions {
-    /**
-     * Necessary for normalised many-to-many relations. This defines the class of the pivot table/collection.
-     */
-    via?: ClassType | {};
-
-    /**
-     * A reference/backReference can define which reference on the other side
-     * reference back. This is necessary when there are multiple outgoing references
-     * to the same entity.
-     */
-    mappedBy?: string,
-}
-
-export type Reference<Options extends ReferenceOptions = {}> = TypeAnnotation<'reference', Options>;
-export type BackReference<Options extends BackReferenceOptions = {}> = TypeAnnotation<'backReference', Options>;
-export type EmbeddedMeta<Options> = TypeAnnotation<'embedded', Options>;
-export type Embedded<T, Options extends { prefix?: string } = {}> = T & EmbeddedMeta<Options>;
-
-export type MapName<Alias extends string, ForSerializer extends string = ''> = TypeAnnotation<'mapName', [Alias, ForSerializer]>;
-
-export const referenceAnnotation = new AnnotationDefinition<ReferenceOptions>('reference');
-export const entityAnnotation = new class extends AnnotationDefinition<EntityOptions> {
-    set<K extends keyof EntityOptions>(type: Type, name: K, value: EntityOptions[K]) {
-        const data = this.getFirst(type) || {};
-        data[name] = value;
-        this.replaceType(type, [data]);
+  /**
+   * Necessary for normalised many-to-many relations. This defines the class of the pivot table/collection.
+   */
+  via?: ClassType | {};
+
+  /**
+   * A reference/backReference can define which reference on the other side
+   * reference back. This is necessary when there are multiple outgoing references
+   * to the same entity.
+   */
+  mappedBy?: string;
+}
+
+export type Reference<Options extends ReferenceOptions = {}> = TypeAnnotation<
+  "reference",
+  Options
+>;
+export type BackReference<Options extends BackReferenceOptions = {}> =
+  TypeAnnotation<"backReference", Options>;
+export type EmbeddedMeta<Options> = TypeAnnotation<"embedded", Options>;
+export type Embedded<T, Options extends { prefix?: string } = {}> = T &
+  EmbeddedMeta<Options>;
+
+export type MapName<
+  Alias extends string,
+  ForSerializer extends string = ""
+> = TypeAnnotation<"mapName", [Alias, ForSerializer]>;
+
+export const referenceAnnotation = new AnnotationDefinition<ReferenceOptions>(
+  "reference"
+);
+export const entityAnnotation =
+  new (class extends AnnotationDefinition<EntityOptions> {
+    set<K extends keyof EntityOptions>(
+      type: Type,
+      name: K,
+      value: EntityOptions[K]
+    ) {
+      const data = this.getFirst(type) || {};
+      data[name] = value;
+      this.replaceType(type, [data]);
     }
 
     get(type: Type): EntityOptions {
-        let data = this.getFirst(type);
-        if (data) return data;
-        data = {};
-        this.replaceType(type, [data]);
-        return data;
-    }
-}('entity');
-export const mapNameAnnotation = new AnnotationDefinition<{ name: string, serializer?: string }>('mapName');
-
-export const autoIncrementAnnotation = new AnnotationDefinition('autoIncrement');
-export const primaryKeyAnnotation = new class extends AnnotationDefinition {
-    isPrimaryKey(type: Type): boolean {
-        return this.getAnnotations(type).length > 0;
+      let data = this.getFirst(type);
+      if (data) return data;
+      data = {};
+      this.replaceType(type, [data]);
+      return data;
     }
-}('primaryKey');
+  })("entity");
+export const mapNameAnnotation = new AnnotationDefinition<{
+  name: string;
+  serializer?: string;
+}>("mapName");
+
+export const autoIncrementAnnotation = new AnnotationDefinition(
+  "autoIncrement"
+);
+export const primaryKeyAnnotation = new (class extends AnnotationDefinition {
+  isPrimaryKey(type: Type): boolean {
+    return this.getAnnotations(type).length > 0;
+  }
+})("primaryKey");
 
 export interface BackReferenceOptionsResolved {
-    /**
-     * Necessary for normalised many-to-many relations. This defines the class of the pivot table/collection.
-     */
-    via?: TypeClass | TypeObjectLiteral;
-
-    /**
-     * A reference/backReference can define which reference on the other side
-     * reference back. This is necessary when there are multiple outgoing references
-     * to the same entity.
-     */
-    mappedBy?: string,
-}
-
-export const backReferenceAnnotation = new AnnotationDefinition<BackReferenceOptionsResolved>('backReference');
-export const validationAnnotation = new AnnotationDefinition<{ name: string, args: Type[] }>('validation');
-export const UUIDAnnotation = new AnnotationDefinition('UUID');
-export const mongoIdAnnotation = new AnnotationDefinition('mongoID');
-export const uuidAnnotation = new AnnotationDefinition('uuid');
-export const defaultAnnotation = new AnnotationDefinition<Type>('default');
+  /**
+   * Necessary for normalised many-to-many relations. This defines the class of the pivot table/collection.
+   */
+  via?: TypeClass | TypeObjectLiteral;
+
+  /**
+   * A reference/backReference can define which reference on the other side
+   * reference back. This is necessary when there are multiple outgoing references
+   * to the same entity.
+   */
+  mappedBy?: string;
+}
+
+export const backReferenceAnnotation =
+  new AnnotationDefinition<BackReferenceOptionsResolved>("backReference");
+export const validationAnnotation = new AnnotationDefinition<{
+  name: string;
+  args: Type[];
+}>("validation");
+export const UUIDAnnotation = new AnnotationDefinition("UUID");
+export const mongoIdAnnotation = new AnnotationDefinition("mongoID");
+export const uuidAnnotation = new AnnotationDefinition("uuid");
+export const defaultAnnotation = new AnnotationDefinition<Type>("default");
 
 export function isUUIDType(type: Type): boolean {
-    return uuidAnnotation.getFirst(type) !== undefined;
+  return uuidAnnotation.getFirst(type) !== undefined;
 }
 
 export function isPrimaryKeyType(type: Type): boolean {
-    return primaryKeyAnnotation.isPrimaryKey(type);
+  return primaryKeyAnnotation.isPrimaryKey(type);
 }
 
 export function isAutoIncrementType(type: Type): boolean {
-    return autoIncrementAnnotation.getFirst(type) !== undefined;
+  return autoIncrementAnnotation.getFirst(type) !== undefined;
 }
 
 export function isMongoIdType(type: Type): boolean {
-    return mongoIdAnnotation.getFirst(type) !== undefined;
+  return mongoIdAnnotation.getFirst(type) !== undefined;
 }
 
 export function isBinaryBigIntType(type: Type): boolean {
-    return binaryBigIntAnnotation.getFirst(type) !== undefined;
+  return binaryBigIntAnnotation.getFirst(type) !== undefined;
 }
 
 export function isReferenceType(type: Type): boolean {
-    return referenceAnnotation.getFirst(resolveProperty(type)) !== undefined;
+  return referenceAnnotation.getFirst(resolveProperty(type)) !== undefined;
 }
 
 export function getReferenceType(type: Type): ReferenceOptions | undefined {
-    return referenceAnnotation.getFirst(resolveProperty(type));
+  return referenceAnnotation.getFirst(resolveProperty(type));
 }
 
 export function isBackReferenceType(type: Type): boolean {
-    return backReferenceAnnotation.getFirst(resolveProperty(type)) !== undefined;
+  return backReferenceAnnotation.getFirst(resolveProperty(type)) !== undefined;
 }
 
 export function resolveProperty(type: Type): Type {
-    if (type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property) {
-        type = type.type;
-    }
-    return type;
+  if (
+    type.kind === ReflectionKind.propertySignature ||
+    type.kind === ReflectionKind.property
+  ) {
+    type = type.type;
+  }
+  return type;
 }
 
 export function getBackReferenceType(type: Type): BackReferenceOptionsResolved {
-    const options = backReferenceAnnotation.getFirst(type);
-    if (!options) throw new Error('No back reference');
-    return options;
+  const options = backReferenceAnnotation.getFirst(type);
+  if (!options) throw new Error("No back reference");
+  return options;
 }
 
 export function isDateType(type: Type): boolean {
-    return type.kind === ReflectionKind.class && type.classType === Date;
+  return type.kind === ReflectionKind.class && type.classType === Date;
 }
 
 export function isSetType(type: Type): boolean {
-    return type.kind === ReflectionKind.class && type.classType === Set;
+  return type.kind === ReflectionKind.class && type.classType === Set;
 }
 
 export function isMapType(type: Type): boolean {
-    return type.kind === ReflectionKind.class && type.classType === Map;
+  return type.kind === ReflectionKind.class && type.classType === Map;
 }
 
 /**
  * Get the key type of a Map or object literal with index signatures.
  */
 export function getKeyType(type: Type): Type {
-    if (type.kind === ReflectionKind.class && type.classType === Map && type.typeArguments) return type.typeArguments[0] || { kind: ReflectionKind.any };
-    if (type.kind === ReflectionKind.objectLiteral) {
-        const type: TypeUnion = { kind: ReflectionKind.union, types: [] };
-        for (const t of type.types) {
-            if (t.kind === ReflectionKind.indexSignature) type.types.push(t.index);
-        }
-        if (type.types.length === 1) return type.types[0];
-        if (type.types.length === 0) return { kind: ReflectionKind.any };
-        return type;
+  if (
+    type.kind === ReflectionKind.class &&
+    type.classType === Map &&
+    type.typeArguments
+  )
+    return type.typeArguments[0] || { kind: ReflectionKind.any };
+  if (type.kind === ReflectionKind.objectLiteral) {
+    const type: TypeUnion = { kind: ReflectionKind.union, types: [] };
+    for (const t of type.types) {
+      if (t.kind === ReflectionKind.indexSignature) type.types.push(t.index);
     }
-    return { kind: ReflectionKind.any };
+    if (type.types.length === 1) return type.types[0];
+    if (type.types.length === 0) return { kind: ReflectionKind.any };
+    return type;
+  }
+  return { kind: ReflectionKind.any };
 }
 
 /**
  * Get the value type of a Map or object literal with index signatures.
  */
 export function getValueType(type: Type): Type {
-    if (type.kind === ReflectionKind.class && type.classType === Map && type.typeArguments) return type.typeArguments[1] || { kind: ReflectionKind.any };
-    if (type.kind === ReflectionKind.objectLiteral) {
-        const type: TypeUnion = { kind: ReflectionKind.union, types: [] };
-        for (const t of type.types) {
-            if (t.kind === ReflectionKind.indexSignature) type.types.push(t.type);
-        }
-        if (type.types.length === 1) return type.types[0];
-        if (type.types.length === 0) return { kind: ReflectionKind.any };
-        return type;
+  if (
+    type.kind === ReflectionKind.class &&
+    type.classType === Map &&
+    type.typeArguments
+  )
+    return type.typeArguments[1] || { kind: ReflectionKind.any };
+  if (type.kind === ReflectionKind.objectLiteral) {
+    const type: TypeUnion = { kind: ReflectionKind.union, types: [] };
+    for (const t of type.types) {
+      if (t.kind === ReflectionKind.indexSignature) type.types.push(t.type);
     }
-    return { kind: ReflectionKind.any };
+    if (type.types.length === 1) return type.types[0];
+    if (type.types.length === 0) return { kind: ReflectionKind.any };
+    return type;
+  }
+  return { kind: ReflectionKind.any };
 }
 
-
 export interface EmbeddedOptions {
-    prefix?: string;
+  prefix?: string;
 }
 
-export const embeddedAnnotation = new AnnotationDefinition<EmbeddedOptions>('embedded');
+export const embeddedAnnotation = new AnnotationDefinition<EmbeddedOptions>(
+  "embedded"
+);
 
 export function hasEmbedded(type: Type): boolean {
-    if (type.kind === ReflectionKind.propertySignature || type.kind === ReflectionKind.property) return hasEmbedded(type.type);
-    if (type.kind === ReflectionKind.union) return type.types.some(hasEmbedded);
-    return embeddedAnnotation.getFirst(type) !== undefined;
+  if (
+    type.kind === ReflectionKind.propertySignature ||
+    type.kind === ReflectionKind.property
+  )
+    return hasEmbedded(type.type);
+  if (type.kind === ReflectionKind.union) return type.types.some(hasEmbedded);
+  return embeddedAnnotation.getFirst(type) !== undefined;
 }
 
 //`never` is here to allow using a decorator multiple times on the same type without letting the TS complaining about incompatible types.
@@ -1822,7 +2348,7 @@ export function hasEmbedded(type: Type): boolean {
  * }
  * ```
  */
-export type Group<Name extends string> = TypeAnnotation<'group', Name>;
+export type Group<Name extends string> = TypeAnnotation<"group", Name>;
 
 /**
  * Excludes the type from serialization of all kind.
@@ -1835,7 +2361,10 @@ export type Group<Name extends string> = TypeAnnotation<'group', Name>;
  *  }
  *  ```
  */
-export type Excluded<Name extends string = '*'> = TypeAnnotation<'excluded', Name>;
+export type Excluded<Name extends string = "*"> = TypeAnnotation<
+  "excluded",
+  Name
+>;
 
 /**
  * Assigns arbitrary data to a type that can be read in runtime.
@@ -1848,7 +2377,10 @@ export type Excluded<Name extends string = '*'> = TypeAnnotation<'excluded', Nam
  * }
  * ```
  */
-export type Data<Name extends string, Value> = TypeAnnotation<'data', [Name, Value]>;
+export type Data<Name extends string, Value> = TypeAnnotation<
+  "data",
+  [Name, Value]
+>;
 
 /**
  * Resets an already set decorator to undefined.
@@ -1863,155 +2395,180 @@ export type Data<Name extends string, Value> = TypeAnnotation<'data', [Name, Val
  * }
  * ```
  */
-export type ResetAnnotation<Name extends string> = TypeAnnotation<'reset', Name>;
+export type ResetAnnotation<Name extends string> = TypeAnnotation<
+  "reset",
+  Name
+>;
 
 export type IndexOptions = {
-    name?: string;
-    //index size. Necessary for blob/longtext, etc.
-    size?: number,
+  name?: string;
+  //index size. Necessary for blob/longtext, etc.
+  size?: number;
 
-    unique?: boolean,
-    spatial?: boolean,
-    sparse?: boolean,
+  unique?: boolean;
+  spatial?: boolean;
+  sparse?: boolean;
 
-    //only in mongodb
-    fulltext?: boolean,
-    where?: string,
+  //only in mongodb
+  fulltext?: boolean;
+  where?: string;
 
-    expireAfterSeconds?: number,
+  expireAfterSeconds?: number;
 };
 
-export type Unique<Options extends IndexOptions = {}> = TypeAnnotation<'index', Options & { unique: true }>;
-export type Index<Options extends IndexOptions = {}> = TypeAnnotation<'index', Options>;
+export type Unique<Options extends IndexOptions = {}> = TypeAnnotation<
+  "index",
+  Options & { unique: true }
+>;
+export type Index<Options extends IndexOptions = {}> = TypeAnnotation<
+  "index",
+  Options
+>;
 
 export interface DatabaseFieldOptions {
-    /**
-     * The name of the column in the database.
-     * e.g. `userName: string & DatabaseField<{name: 'user_name'}>`
-     *
-     * Can alternatively also be configured by using a different NamingStrategy.
-     */
-    name?: string;
-
-    /**
-     *
-     * e.g. `field: string & MySQL<{type: 'VARCHAR(255)'}>`
-     */
-    type?: string;
-
-    /**
-     * If the property is on a class, its initializer/default value is per default used.
-     * This can be overridden using this option.
-     * e.g. `field: string & MySQL<{default: 'abc'}>`
-     */
-    default?: any;
-
-    /**
-     * e.g. `field: string & MySQL<{defaultExpr: 'NOW()'}>`
-     */
-    defaultExpr?: any;
-
-    /**
-     * If true no default column value is inferred from the property initializer/default value.
-     * e.g. `field: string & MySQL<{noDefault: true}> = ''`
-     */
-    noDefault?: true;
-
-    /**
-     * Skip this property in all queries and database migration files.
-     */
-    skip?: true;
-
-    /**
-     * Skip this property in database migration files. This excludes the property from the database, but
-     * keeps it in the queries.
-     */
-    skipMigration?: true;
-}
-
-export interface MySQLOptions extends DatabaseFieldOptions {
-}
-
-export interface PostgresOptions extends DatabaseFieldOptions {
-}
-
-export interface SqliteOptions extends DatabaseFieldOptions {
-}
-
-type Database<Name extends string, Options extends { [name: string]: any }> = TypeAnnotation<'database', [Name, Options]>;
-export type MySQL<Options extends MySQLOptions> = Database<'mysql', Options>;
-export type Postgres<Options extends PostgresOptions> = Database<'postgres', Options>;
-export type SQLite<Options extends SqliteOptions> = Database<'sqlite', Options>;
-export type DatabaseField<Options extends DatabaseFieldOptions, Name extends string = '*'> = Database<Name, Options>;
+  /**
+   * The name of the column in the database.
+   * e.g. `userName: string & DatabaseField<{name: 'user_name'}>`
+   *
+   * Can alternatively also be configured by using a different NamingStrategy.
+   */
+  name?: string;
+
+  /**
+   *
+   * e.g. `field: string & MySQL<{type: 'VARCHAR(255)'}>`
+   */
+  type?: string;
+
+  /**
+   * If the property is on a class, its initializer/default value is per default used.
+   * This can be overridden using this option.
+   * e.g. `field: string & MySQL<{default: 'abc'}>`
+   */
+  default?: any;
+
+  /**
+   * e.g. `field: string & MySQL<{defaultExpr: 'NOW()'}>`
+   */
+  defaultExpr?: any;
+
+  /**
+   * If true no default column value is inferred from the property initializer/default value.
+   * e.g. `field: string & MySQL<{noDefault: true}> = ''`
+   */
+  noDefault?: true;
+
+  /**
+   * Skip this property in all queries and database migration files.
+   */
+  skip?: true;
+
+  /**
+   * Skip this property in database migration files. This excludes the property from the database, but
+   * keeps it in the queries.
+   */
+  skipMigration?: true;
+}
+
+export interface MySQLOptions extends DatabaseFieldOptions {}
+
+export interface PostgresOptions extends DatabaseFieldOptions {}
+
+export interface SqliteOptions extends DatabaseFieldOptions {}
+
+type Database<
+  Name extends string,
+  Options extends { [name: string]: any }
+> = TypeAnnotation<"database", [Name, Options]>;
+export type MySQL<Options extends MySQLOptions> = Database<"mysql", Options>;
+export type Postgres<Options extends PostgresOptions> = Database<
+  "postgres",
+  Options
+>;
+export type SQLite<Options extends SqliteOptions> = Database<"sqlite", Options>;
+export type DatabaseField<
+  Options extends DatabaseFieldOptions,
+  Name extends string = "*"
+> = Database<Name, Options>;
 
 export const enum BinaryBigIntType {
-    unsigned,
-    signed
+  unsigned,
+  signed
 }
 
-export const binaryBigIntAnnotation = new AnnotationDefinition<BinaryBigIntType>('binaryBigInt');
-export const groupAnnotation = new AnnotationDefinition<string>('group');
-export const excludedAnnotation = new class extends AnnotationDefinition<string> {
+export const binaryBigIntAnnotation =
+  new AnnotationDefinition<BinaryBigIntType>("binaryBigInt");
+export const groupAnnotation = new AnnotationDefinition<string>("group");
+export const excludedAnnotation =
+  new (class extends AnnotationDefinition<string> {
     isExcluded(type: Type, name: string): boolean {
-        const excluded = this.getAnnotations(type);
-        return excluded.includes('*') || excluded.includes(name);
-    }
-}('excluded');
-export const dataAnnotation = new class extends AnnotationDefinition<{ [name: string]: any }> {
-    set<T extends Type>(type: T, key: string, value: any): T {
-        const data = this.getFirst(type) || {};
-        data[key] = value;
-        this.replaceType(type, [data]);
-        return type;
+      const excluded = this.getAnnotations(type);
+      return excluded.includes("*") || excluded.includes(name);
     }
+  })("excluded");
+export const dataAnnotation = new (class extends AnnotationDefinition<{
+  [name: string]: any;
+}> {
+  set<T extends Type>(type: T, key: string, value: any): T {
+    const data = this.getFirst(type) || {};
+    data[key] = value;
+    this.replaceType(type, [data]);
+    return type;
+  }
 
-    get(type: Type, key: string): any {
-        const data = this.getFirst(type) || {};
-        return data[key];
-    }
-}('data');
+  get(type: Type, key: string): any {
+    const data = this.getFirst(type) || {};
+    return data[key];
+  }
+})("data");
 
 /**
  * All raw data from `TypeAnnotation<Name, Options>` types.
  */
-export const typeAnnotation = new class extends AnnotationDefinition<{ name: string, options: Type }> {
-    /**
-     * Returns the parsed Type to JS objects, e.g. `{name: string}` => `{name: 'xy'}`
-     */
-    getOption(type: Type, name: string): any {
-        const options = this.getType(type, name);
-        return options ? typeToObject(options) : undefined;
-    }
-
-    /**
-     * Returns the Type object of the annotation which can be parsed with `typeToObject`.
-     */
-    getType(type: Type, name: string): Type | undefined {
-        for (const v of this.getAnnotations(type)) {
-            if (v.name === name) return v.options;
-        }
-        return;
+export const typeAnnotation = new (class extends AnnotationDefinition<{
+  name: string;
+  options: Type;
+}> {
+  /**
+   * Returns the parsed Type to JS objects, e.g. `{name: string}` => `{name: 'xy'}`
+   */
+  getOption(type: Type, name: string): any {
+    const options = this.getType(type, name);
+    return options ? typeToObject(options) : undefined;
+  }
+
+  /**
+   * Returns the Type object of the annotation which can be parsed with `typeToObject`.
+   */
+  getType(type: Type, name: string): Type | undefined {
+    for (const v of this.getAnnotations(type)) {
+      if (v.name === name) return v.options;
     }
-}('meta');
-export const indexAnnotation = new AnnotationDefinition<IndexOptions>('index');
-export const databaseAnnotation = new class extends AnnotationDefinition<{
-    name: string,
-    options: { [name: string]: any }
+    return;
+  }
+})("meta");
+export const indexAnnotation = new AnnotationDefinition<IndexOptions>("index");
+export const databaseAnnotation = new (class extends AnnotationDefinition<{
+  name: string;
+  options: { [name: string]: any };
 }> {
-    getDatabase<T extends DatabaseFieldOptions>(type: Type, name: string): T | undefined {
-        let options: T | undefined = undefined;
-        for (const annotation of this.getAnnotations(type)) {
-            if (annotation.name === '*' || annotation.name === name) {
-                if (!options) options = {} as T;
-                Object.assign(options, annotation.options as T);
-            }
-        }
-        return options as any;
-    };
-}('database');
+  getDatabase<T extends DatabaseFieldOptions>(
+    type: Type,
+    name: string
+  ): T | undefined {
+    let options: T | undefined = undefined;
+    for (const annotation of this.getAnnotations(type)) {
+      if (annotation.name === "*" || annotation.name === name) {
+        if (!options) options = {} as T;
+        Object.assign(options, annotation.options as T);
+      }
+    }
+    return options as any;
+  }
+})("database");
 
 export function registerTypeDecorator(decorator: TypeDecorator) {
-    typeDecorators.push(decorator);
+  typeDecorators.push(decorator);
 }
 
 /**
@@ -2032,804 +2589,1029 @@ export function registerTypeDecorator(decorator: TypeDecorator) {
  * type lowLevel2<T> = { __meta?: never & ['myAnnotation', T] }
  * ```
  */
-export function getAnnotationMeta(type: TypeObjectLiteral): { id: string, options: Type } | undefined {
-    const meta = getProperty(type, '__meta');
-    if (!meta || !meta.optional) return;
-    let tuple: TypeTuple | undefined = undefined;
-
-    if (meta.type.kind === ReflectionKind.intersection) {
-        if (meta.type.types.length === 1 && meta.type.types[0].kind === ReflectionKind.tuple) {
-            tuple = meta.type.types[0] as TypeTuple;
-        }
-        if (!tuple && meta.type.types.length === 2) {
-            tuple = meta.type.types.find(v => v.kind === ReflectionKind.tuple) as TypeTuple | undefined;
-            if (tuple && !meta.type.types.find(v => v.kind === ReflectionKind.never)) {
-                tuple = undefined;
-            }
-        }
-    } else if (meta.type.kind === ReflectionKind.tuple) {
-        tuple = meta.type;
+export function getAnnotationMeta(
+  type: TypeObjectLiteral
+): { id: string; options: Type } | undefined {
+  const meta = getProperty(type, "__meta");
+  if (!meta || !meta.optional) return;
+  let tuple: TypeTuple | undefined = undefined;
+
+  if (meta.type.kind === ReflectionKind.intersection) {
+    if (
+      meta.type.types.length === 1 &&
+      meta.type.types[0].kind === ReflectionKind.tuple
+    ) {
+      tuple = meta.type.types[0] as TypeTuple;
     }
+    if (!tuple && meta.type.types.length === 2) {
+      tuple = meta.type.types.find(v => v.kind === ReflectionKind.tuple) as
+        | TypeTuple
+        | undefined;
+      if (
+        tuple &&
+        !meta.type.types.find(v => v.kind === ReflectionKind.never)
+      ) {
+        tuple = undefined;
+      }
+    }
+  } else if (meta.type.kind === ReflectionKind.tuple) {
+    tuple = meta.type;
+  }
+
+  if (!tuple) return;
+
+  const id = tuple.types[0];
+  if (
+    !id ||
+    id.type.kind !== ReflectionKind.literal ||
+    "string" !== typeof id.type.literal
+  )
+    return;
+  const optionsMember = tuple.types[1];
 
-    if (!tuple) return;
-
-    const id = tuple.types[0];
-    if (!id || id.type.kind !== ReflectionKind.literal || 'string' !== typeof id.type.literal) return;
-    const optionsMember = tuple.types[1];
-
-    return { id: id.type.literal, options: optionsMember?.type };
+  return { id: id.type.literal, options: optionsMember?.type };
 }
 
 export const typeDecorators: TypeDecorator[] = [
-    (annotations: Annotations, decorator: TypeObjectLiteral) => {
-        const meta = getAnnotationMeta(decorator);
-        if (!meta) return false;
-
-        switch (meta.id) {
-            case 'reference': {
-                const optionsType = meta.options;
-                if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral) return false;
-                const options = typeToObject(optionsType);
-                referenceAnnotation.replace(annotations, [options]);
-                return true;
-            }
-            case 'entity': {
-                const optionsType = meta.options;
-                if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral) return false;
-                const options = typeToObject(optionsType);
-                entityAnnotation.replace(annotations, [options]);
-                return true;
-            }
-            case 'mapName': {
-                if (!meta.options) return false;
-                const [name, serializer] = typeToObject(meta.options);
-
-                if ('string' === typeof name && (!serializer || 'string' === typeof serializer)) {
-                    mapNameAnnotation.replace(annotations, [{ name, serializer }]);
-                }
-                return true;
-            }
-            case 'autoIncrement':
-                autoIncrementAnnotation.register(annotations, true);
-                return true;
-            case 'binaryBigInt':
-                binaryBigIntAnnotation.replace(annotations, [BinaryBigIntType.unsigned]);
-                return true;
-            case 'signedBinaryBigInt':
-                binaryBigIntAnnotation.replace(annotations, [BinaryBigIntType.signed]);
-                return true;
-            case 'primaryKey':
-                primaryKeyAnnotation.register(annotations, true);
-                return true;
-            case 'mongoId':
-                mongoIdAnnotation.register(annotations, true);
-                return true;
-            case 'UUIDv4':
-                uuidAnnotation.register(annotations, true);
-                return true;
-            case 'embedded': {
-                const optionsType = meta.options;
-                if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral) return false;
-                const options = typeToObject(optionsType);
-                embeddedAnnotation.replace(annotations, [options]);
-                return true;
-            }
-            case 'group': {
-                const nameType = meta.options;
-                if (!nameType || nameType.kind !== ReflectionKind.literal || 'string' !== typeof nameType.literal) return false;
-                groupAnnotation.register(annotations, nameType.literal);
-                return true;
-            }
-            case 'index': {
-                const optionsType = meta.options;
-                if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral) return false;
-                const options = typeToObject(optionsType);
-                indexAnnotation.replace(annotations, [options]);
-                return true;
-            }
-            case 'database': {
-                const [name, options] = typeToObject(meta.options);
-                databaseAnnotation.register(annotations, { name: name, options });
-                return true;
-            }
-            case 'excluded': {
-                const name = typeToObject(meta.options);
-                excludedAnnotation.register(annotations, name);
-                return true;
-            }
-            case 'reset': {
-                const name = typeToObject(meta.options);
-                if ('string' !== typeof name) return false;
-                const map: { [name: string]: AnnotationDefinition<any> } = {
-                    primaryKey: primaryKeyAnnotation,
-                    autoIncrement: autoIncrementAnnotation,
-                    excluded: excludedAnnotation,
-                    database: databaseAnnotation,
-                    index: indexAnnotation,
-                    data: dataAnnotation,
-                    group: groupAnnotation,
-                    embedded: excludedAnnotation,
-                    mapName: mapNameAnnotation,
-                    reference: referenceAnnotation,
-                    backReference: backReferenceAnnotation,
-                    validator: validationAnnotation,
-                };
-                const annotation = map[name] || typeAnnotation;
-                annotation.reset(annotations);
-                return true;
-            }
-            case 'data': {
-                const tuple = meta.options;
-                if (!tuple || tuple.kind !== ReflectionKind.tuple) return false;
-                const nameType = tuple.types[0].type;
-                if (!nameType || nameType.kind !== ReflectionKind.literal || 'string' !== typeof nameType.literal) return false;
-                const dataType = tuple.types[1].type;
-                if (!dataType) return false;
-
-                annotations[dataAnnotation.symbol] ||= [];
-                let data: { [name: string]: any } = {};
-                if (annotations[dataAnnotation.symbol].length) {
-                    data = annotations[dataAnnotation.symbol][0];
-                } else {
-                    annotations[dataAnnotation.symbol].push(data);
-                }
-
-                data[nameType.literal] = dataType.kind === ReflectionKind.literal ? dataType.literal : dataType;
-
-                return true;
-            }
-            case 'backReference': {
-                const optionsType = meta.options;
-                if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral) return false;
-
-                const options = typeToObject(optionsType);
-                const member = findMember('via', resolveTypeMembers(optionsType));
-                backReferenceAnnotation.register(annotations, {
-                    mappedBy: options.mappedBy,
-                    via: member && member.kind === ReflectionKind.propertySignature && (member.type.kind === ReflectionKind.objectLiteral || member.type.kind === ReflectionKind.class) ? member.type : undefined,
-                });
-                return true;
-            }
-            case 'validator': {
-                const tuple = meta.options;
-                if (!tuple || tuple.kind !== ReflectionKind.tuple) return false;
-                const nameType = tuple.types[0].type;
-                if (!nameType || nameType.kind !== ReflectionKind.literal || 'string' !== typeof nameType.literal) return false;
-                const name = nameType.literal;
-
-                const argsType = tuple.types[1].type;
-                if (!argsType || argsType.kind !== ReflectionKind.tuple) return false;
-                const args: Type[] = argsType.types.map(v => v.type);
-
-                const options: AnnotationType<typeof validationAnnotation> = { name, args };
-                validationAnnotation.register(annotations, options);
-                return true;
-            }
-            default: {
-                typeAnnotation.register(annotations, { name: meta.id, options: meta.options });
-                return true;
-            }
+  (annotations: Annotations, decorator: TypeObjectLiteral) => {
+    const meta = getAnnotationMeta(decorator);
+    if (!meta) return false;
+
+    switch (meta.id) {
+      case "reference": {
+        const optionsType = meta.options;
+        if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
+          return false;
+        const options = typeToObject(optionsType);
+        referenceAnnotation.replace(annotations, [options]);
+        return true;
+      }
+      case "entity": {
+        const optionsType = meta.options;
+        if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
+          return false;
+        const options = typeToObject(optionsType);
+        entityAnnotation.replace(annotations, [options]);
+        return true;
+      }
+      case "mapName": {
+        if (!meta.options) return false;
+        const [name, serializer] = typeToObject(meta.options);
+
+        if (
+          "string" === typeof name &&
+          (!serializer || "string" === typeof serializer)
+        ) {
+          mapNameAnnotation.replace(annotations, [{ name, serializer }]);
+        }
+        return true;
+      }
+      case "autoIncrement":
+        autoIncrementAnnotation.register(annotations, true);
+        return true;
+      case "binaryBigInt":
+        binaryBigIntAnnotation.replace(annotations, [
+          BinaryBigIntType.unsigned
+        ]);
+        return true;
+      case "signedBinaryBigInt":
+        binaryBigIntAnnotation.replace(annotations, [BinaryBigIntType.signed]);
+        return true;
+      case "primaryKey":
+        primaryKeyAnnotation.register(annotations, true);
+        return true;
+      case "mongoId":
+        mongoIdAnnotation.register(annotations, true);
+        return true;
+      case "UUIDv4":
+        uuidAnnotation.register(annotations, true);
+        return true;
+      case "embedded": {
+        const optionsType = meta.options;
+        if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
+          return false;
+        const options = typeToObject(optionsType);
+        embeddedAnnotation.replace(annotations, [options]);
+        return true;
+      }
+      case "group": {
+        const nameType = meta.options;
+        if (
+          !nameType ||
+          nameType.kind !== ReflectionKind.literal ||
+          "string" !== typeof nameType.literal
+        )
+          return false;
+        groupAnnotation.register(annotations, nameType.literal);
+        return true;
+      }
+      case "index": {
+        const optionsType = meta.options;
+        if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
+          return false;
+        const options = typeToObject(optionsType);
+        indexAnnotation.replace(annotations, [options]);
+        return true;
+      }
+      case "database": {
+        const [name, options] = typeToObject(meta.options);
+        databaseAnnotation.register(annotations, { name: name, options });
+        return true;
+      }
+      case "excluded": {
+        const name = typeToObject(meta.options);
+        excludedAnnotation.register(annotations, name);
+        return true;
+      }
+      case "reset": {
+        const name = typeToObject(meta.options);
+        if ("string" !== typeof name) return false;
+        const map: { [name: string]: AnnotationDefinition<any> } = {
+          primaryKey: primaryKeyAnnotation,
+          autoIncrement: autoIncrementAnnotation,
+          excluded: excludedAnnotation,
+          database: databaseAnnotation,
+          index: indexAnnotation,
+          data: dataAnnotation,
+          group: groupAnnotation,
+          embedded: excludedAnnotation,
+          mapName: mapNameAnnotation,
+          reference: referenceAnnotation,
+          backReference: backReferenceAnnotation,
+          validator: validationAnnotation
+        };
+        const annotation = map[name] || typeAnnotation;
+        annotation.reset(annotations);
+        return true;
+      }
+      case "data": {
+        const tuple = meta.options;
+        if (!tuple || tuple.kind !== ReflectionKind.tuple) return false;
+        const nameType = tuple.types[0].type;
+        if (
+          !nameType ||
+          nameType.kind !== ReflectionKind.literal ||
+          "string" !== typeof nameType.literal
+        )
+          return false;
+        const dataType = tuple.types[1].type;
+        if (!dataType) return false;
+
+        annotations[dataAnnotation.symbol] ||= [];
+        let data: { [name: string]: any } = {};
+        if (annotations[dataAnnotation.symbol].length) {
+          data = annotations[dataAnnotation.symbol][0];
+        } else {
+          annotations[dataAnnotation.symbol].push(data);
         }
-    },
+
+        data[nameType.literal] =
+          dataType.kind === ReflectionKind.literal
+            ? dataType.literal
+            : dataType;
+
+        return true;
+      }
+      case "backReference": {
+        const optionsType = meta.options;
+        if (!optionsType || optionsType.kind !== ReflectionKind.objectLiteral)
+          return false;
+
+        const options = typeToObject(optionsType);
+        const member = findMember("via", resolveTypeMembers(optionsType));
+        backReferenceAnnotation.register(annotations, {
+          mappedBy: options.mappedBy,
+          via:
+            member &&
+            member.kind === ReflectionKind.propertySignature &&
+            (member.type.kind === ReflectionKind.objectLiteral ||
+              member.type.kind === ReflectionKind.class)
+              ? member.type
+              : undefined
+        });
+        return true;
+      }
+      case "validator": {
+        const tuple = meta.options;
+        if (!tuple || tuple.kind !== ReflectionKind.tuple) return false;
+        const nameType = tuple.types[0].type;
+        if (
+          !nameType ||
+          nameType.kind !== ReflectionKind.literal ||
+          "string" !== typeof nameType.literal
+        )
+          return false;
+        const name = nameType.literal;
+
+        const argsType = tuple.types[1].type;
+        if (!argsType || argsType.kind !== ReflectionKind.tuple) return false;
+        const args: Type[] = argsType.types.map(v => v.type);
+
+        const options: AnnotationType<typeof validationAnnotation> = {
+          name,
+          args
+        };
+        validationAnnotation.register(annotations, options);
+        return true;
+      }
+      default: {
+        typeAnnotation.register(annotations, {
+          name: meta.id,
+          options: meta.options
+        });
+        return true;
+      }
+    }
+  }
 ];
 
-export function typeToObject(type?: Type, state: { stack: Type[] } = { stack: [] }): any {
-    if (!type) return;
-
-    if (state.stack.includes(type)) return undefined;
-    state.stack.push(type);
-
-    try {
-        switch (type.kind) {
-            case ReflectionKind.any:
-            case ReflectionKind.void:
-            case ReflectionKind.never:
-            case ReflectionKind.undefined:
-                return undefined;
-            case ReflectionKind.null:
-                return null;
-            case ReflectionKind.string:
-                return '';
-            case ReflectionKind.number:
-                return 0;
-            case ReflectionKind.bigint:
-                return BigInt(0);
-            case ReflectionKind.regexp:
-                return; //;
-            case ReflectionKind.boolean:
-                return true;
-            case ReflectionKind.literal:
-                return type.literal;
-            case ReflectionKind.promise:
-                return typeToObject(type.type);
-            case ReflectionKind.templateLiteral:
-                return '';
-            case ReflectionKind.class: {
-                return type.classType;
-            }
-            case ReflectionKind.objectLiteral: {
-                const res: { [name: string | number | symbol]: any } = {};
-                for (const t of type.types) {
-                    if (t.kind === ReflectionKind.propertySignature) {
-                        res[String(t.name)] = typeToObject(t.type);
-                    } else if (t.kind === ReflectionKind.methodSignature) {
-                    }
-                }
-                return res;
-            }
-            case ReflectionKind.union:
-            case ReflectionKind.intersection:
-                return typeToObject(type.types[0]);
-            case ReflectionKind.function:
-                return type.function;
-            case ReflectionKind.array:
-                return [typeToObject(type.type)];
-            case ReflectionKind.tuple:
-                return type.types.map(v => typeToObject(v.type, state));
-        }
+export function typeToObject(
+  type?: Type,
+  state: { stack: Type[] } = { stack: [] }
+): any {
+  if (!type) return;
 
+  if (state.stack.includes(type)) return undefined;
+  state.stack.push(type);
+
+  try {
+    switch (type.kind) {
+      case ReflectionKind.any:
+      case ReflectionKind.void:
+      case ReflectionKind.never:
+      case ReflectionKind.undefined:
         return undefined;
-    } finally {
-        state.stack.pop();
+      case ReflectionKind.null:
+        return null;
+      case ReflectionKind.string:
+        return "";
+      case ReflectionKind.number:
+        return 0;
+      case ReflectionKind.bigint:
+        return BigInt(0);
+      case ReflectionKind.regexp:
+        return; //;
+      case ReflectionKind.boolean:
+        return true;
+      case ReflectionKind.literal:
+        return type.literal;
+      case ReflectionKind.promise:
+        return typeToObject(type.type);
+      case ReflectionKind.templateLiteral:
+        return "";
+      case ReflectionKind.class: {
+        return type.classType;
+      }
+      case ReflectionKind.objectLiteral: {
+        const res: { [name: string | number | symbol]: any } = {};
+        for (const t of type.types) {
+          if (t.kind === ReflectionKind.propertySignature) {
+            res[String(t.name)] = typeToObject(t.type);
+          } else if (t.kind === ReflectionKind.methodSignature) {
+          }
+        }
+        return res;
+      }
+      case ReflectionKind.union:
+      case ReflectionKind.intersection:
+        return typeToObject(type.types[0]);
+      case ReflectionKind.function:
+        return type.function;
+      case ReflectionKind.array:
+        return [typeToObject(type.type)];
+      case ReflectionKind.tuple:
+        return type.types.map(v => typeToObject(v.type, state));
     }
+
+    return undefined;
+  } finally {
+    state.stack.pop();
+  }
 }
 
 export function memberNameToString(name: number | string | symbol): string {
-    if (isType(name)) {
-        return stringifyResolvedType(name);
-    }
-    return String(name);
+  if (isType(name)) {
+    return stringifyResolvedType(name);
+  }
+  return String(name);
 }
 
 export const binaryTypes: ClassType[] = [
-    Int8Array,
-    Uint8Array,
-    Uint8ClampedArray,
-    Int16Array,
-    Uint16Array,
-    Int32Array,
-    Uint32Array,
-    Float32Array,
-    Float64Array,
-    ArrayBuffer,
+  Int8Array,
+  Uint8Array,
+  Uint8ClampedArray,
+  Int16Array,
+  Uint16Array,
+  Int32Array,
+  Uint32Array,
+  Float32Array,
+  Float64Array,
+  ArrayBuffer
 ];
 
 /**
  * Returns true if the given type is Date, ArrayBuffer, Uint8Array, etc.
  */
 export function isGlobalTypeClass(type: Type): type is TypeClass {
-    if (type.kind !== ReflectionKind.class) return false;
-    return isGlobalClass(type.classType);
+  if (type.kind !== ReflectionKind.class) return false;
+  return isGlobalClass(type.classType);
 }
 
 /**
  * Returns true if the given type is TypeClass and references a custom (non-global) class.
  */
 export function isCustomTypeClass(type: Type): type is TypeClass {
-    return type.kind === ReflectionKind.class && !isGlobalTypeClass(type);
+  return type.kind === ReflectionKind.class && !isGlobalTypeClass(type);
 }
 
 /**
  * Returns a type predicate that checks if the given type is a class and is of the given classType.
  * If withInheritance is true, it also checks if the type is a subclass of the given classType.
  */
-export function isTypeClassOf(classType: ClassType, withInheritance: boolean = true): (type: Type) => boolean {
-    if (!withInheritance) return (type: Type) => type.kind === ReflectionKind.class && type.classType === classType;
-
-    return (type: Type) => {
-        if (type.kind !== ReflectionKind.class) return false;
-        const chain = getInheritanceChain(type.classType);
-        return chain.includes(classType);
-    };
+export function isTypeClassOf(
+  classType: ClassType,
+  withInheritance: boolean = true
+): (type: Type) => boolean {
+  if (!withInheritance)
+    return (type: Type) =>
+      type.kind === ReflectionKind.class && type.classType === classType;
+
+  return (type: Type) => {
+    if (type.kind !== ReflectionKind.class) return false;
+    const chain = getInheritanceChain(type.classType);
+    return chain.includes(classType);
+  };
 }
 
 /**
  * Returns the members of a class or object literal.
  */
-export function resolveTypeMembers(type: TypeClass | TypeObjectLiteral): (TypeProperty | TypePropertySignature | TypeMethodSignature | TypeMethod | TypeIndexSignature | TypeCallSignature)[] {
-    return type.types;
+export function resolveTypeMembers(
+  type: TypeClass | TypeObjectLiteral
+): (
+  | TypeProperty
+  | TypePropertySignature
+  | TypeMethodSignature
+  | TypeMethod
+  | TypeIndexSignature
+  | TypeCallSignature
+)[] {
+  return type.types;
 }
 
 export function stringifyResolvedType(type: Type): string {
-    return stringifyType(type, { showNames: false, showFullDefinition: true });
+  return stringifyType(type, { showNames: false, showFullDefinition: true });
 }
 
-export function stringifyShortResolvedType(type: Type, stateIn: Partial<StringifyTypeOptions> = {}): string {
-    return stringifyType(type, { ...stateIn, showNames: false, showFullDefinition: false });
+export function stringifyShortResolvedType(
+  type: Type,
+  stateIn: Partial<StringifyTypeOptions> = {}
+): string {
+  return stringifyType(type, {
+    ...stateIn,
+    showNames: false,
+    showFullDefinition: false
+  });
 }
 
 /**
  * Returns all (including inherited) constructor properties of a class.
  */
 export function getDeepConstructorProperties(type: TypeClass): TypeParameter[] {
-    const chain = getInheritanceChain(type.classType);
-    const res: TypeParameter[] = [];
-    for (const classType of chain) {
-        const type = resolveReceiveType(classType) as TypeClass;
-        if (type.kind !== ReflectionKind.class) continue;
-        const constructor = findMember('constructor', type.types);
-        if (!constructor || constructor.kind !== ReflectionKind.method) continue;
-        for (const param of constructor.parameters) {
-            if (param.kind !== ReflectionKind.parameter) continue;
-            if (param.readonly === true || param.visibility !== undefined) {
-                res.push(param);
-            }
-        }
+  const chain = getInheritanceChain(type.classType);
+  const res: TypeParameter[] = [];
+  for (const classType of chain) {
+    const type = resolveReceiveType(classType) as TypeClass;
+    if (type.kind !== ReflectionKind.class) continue;
+    const constructor = findMember("constructor", type.types);
+    if (!constructor || constructor.kind !== ReflectionKind.method) continue;
+    for (const param of constructor.parameters) {
+      if (param.kind !== ReflectionKind.parameter) continue;
+      if (param.readonly === true || param.visibility !== undefined) {
+        res.push(param);
+      }
     }
-    return res;
+  }
+  return res;
 }
 
 /**
  * Returns the index to `type.values` if the given value is part of the enum, exactly or case-insensitive.
  * Returns -1 if not found.
  */
-export function getEnumValueIndexMatcher(type: TypeEnum): (value: string | number | undefined | null) => number {
-    const lowerCaseValues = Object.keys(type.enum).map(v => String(v).toLowerCase());
-    return (value): number => {
-        const exactMatch = type.values.indexOf(value);
-        if (exactMatch !== -1) return exactMatch;
-        const lowerCaseMatch = lowerCaseValues.indexOf(String(value).toLowerCase());
-        if (lowerCaseMatch !== -1) return lowerCaseMatch;
-
-        return -1;
-    };
+export function getEnumValueIndexMatcher(
+  type: TypeEnum
+): (value: string | number | undefined | null) => number {
+  const lowerCaseValues = Object.keys(type.enum).map(v =>
+    String(v).toLowerCase()
+  );
+  return (value): number => {
+    const exactMatch = type.values.indexOf(value);
+    if (exactMatch !== -1) return exactMatch;
+    const lowerCaseMatch = lowerCaseValues.indexOf(String(value).toLowerCase());
+    if (lowerCaseMatch !== -1) return lowerCaseMatch;
+
+    return -1;
+  };
 }
 
 interface StringifyTypeOptions {
-    //show type alias names
-    showNames: boolean;
-    showFullDefinition: boolean;
-    showDescription: boolean;
-    defaultIsOptional: boolean;
-    showHeritage: boolean;
-    showDefaults: boolean;
-    defaultValues: any;
-    stringify?: (type: Type) => string | undefined;
+  //show type alias names
+  showNames: boolean;
+  showFullDefinition: boolean;
+  showDescription: boolean;
+  defaultIsOptional: boolean;
+  showHeritage: boolean;
+  showDefaults: boolean;
+  showTags: boolean;
+  defaultValues: any;
+  stringify?: (type: Type) => string | undefined;
 }
 
 let stringifyTypeId: number = 1;
 
-export function stringifyType(type: Type, stateIn: Partial<StringifyTypeOptions> = {}): string {
-    const state: StringifyTypeOptions = {
-        showNames: true,
-        defaultIsOptional: false,
-        showDefaults: false,
-        defaultValues: undefined,
-        showDescription: false,
-        showHeritage: false,
-        showFullDefinition: false,
-        ...stateIn,
-    };
-    const stack: { type?: Type, defaultValue?: any, before?: string, after?: string, depth?: number }[] = [];
-    stack.push({ type, defaultValue: state.defaultValues, depth: 1 });
-    const stackId: number = stringifyTypeId++;
-    const result: string[] = [];
-
-    while (stack.length) {
-        const entry = stack.pop();
-        if (!entry) break;
-        const type = entry.type;
-
-        const depth = entry.depth || 1;
-        if (type && stateIn.stringify) {
-            const manual = stateIn.stringify(type);
-            if ('string' === typeof manual) {
-                if (manual !== '') {
-                    if (entry.before) {
-                        result.push(entry.before);
-                    }
-                    result.push(manual);
-                    if (entry.after) {
-                        result.push(entry.after);
-                    }
-                }
-                continue;
-            }
-        }
-
-        if (entry.before) {
+export function stringifyType(
+  type: Type,
+  stateIn: Partial<StringifyTypeOptions> = {}
+): string {
+  const state: StringifyTypeOptions = {
+    showNames: true,
+    defaultIsOptional: false,
+    showDefaults: false,
+    defaultValues: undefined,
+    showDescription: false,
+    showHeritage: false,
+    showFullDefinition: false,
+    showTags: true,
+    ...stateIn
+  };
+  const stack: {
+    type?: Type;
+    defaultValue?: any;
+    before?: string;
+    after?: string;
+    depth?: number;
+  }[] = [];
+  stack.push({ type, defaultValue: state.defaultValues, depth: 1 });
+  const stackId: number = stringifyTypeId++;
+  const result: string[] = [];
+
+  while (stack.length) {
+    const entry = stack.pop();
+    if (!entry) break;
+    const type = entry.type;
+
+    const depth = entry.depth || 1;
+    if (type && stateIn.stringify) {
+      const manual = stateIn.stringify(type);
+      if ("string" === typeof manual) {
+        if (manual !== "") {
+          if (entry.before) {
             result.push(entry.before);
+          }
+          result.push(manual);
+          if (entry.after) {
+            result.push(entry.after);
+          }
         }
+        continue;
+      }
+    }
 
-        if (type) {
-            const jit = getTypeJitContainer(type);
-            if (entry.depth !== undefined && jit.visitStack && jit.visitStack.id === stackId && jit.visitStack.depth < entry.depth) {
-                result.push((type.typeName ? type.typeName : '* Recursion *'));
-                continue;
-            }
+    if (entry.before) {
+      result.push(entry.before);
+    }
 
-            // objectLiteral and class types usually get their own reference, but their types are shared.
-            // thus we have to check for their member types identity to check for recursions.
-            if (type.kind === ReflectionKind.objectLiteral || type.kind === ReflectionKind.class) {
-                const first = type.types[0];
-                const jit = first ? getTypeJitContainer(first) : undefined;
-                if (jit && entry.depth !== undefined && jit.visitStack && jit.visitStack.id === stackId && jit.visitStack.depth < entry.depth + 1) {
-                    result.push((type.typeName ? type.typeName : '* Recursion *'));
-                    continue;
+    if (type) {
+      const jit = getTypeJitContainer(type);
+      if (
+        entry.depth !== undefined &&
+        jit.visitStack &&
+        jit.visitStack.id === stackId &&
+        jit.visitStack.depth < entry.depth
+      ) {
+        result.push(type.typeName ? type.typeName : "* Recursion *");
+        continue;
+      }
+
+      // objectLiteral and class types usually get their own reference, but their types are shared.
+      // thus we have to check for their member types identity to check for recursions.
+      if (
+        type.kind === ReflectionKind.objectLiteral ||
+        type.kind === ReflectionKind.class
+      ) {
+        const first = type.types[0];
+        const jit = first ? getTypeJitContainer(first) : undefined;
+        if (
+          jit &&
+          entry.depth !== undefined &&
+          jit.visitStack &&
+          jit.visitStack.id === stackId &&
+          jit.visitStack.depth < entry.depth + 1
+        ) {
+          result.push(type.typeName ? type.typeName : "* Recursion *");
+          continue;
+        }
+      }
+
+      jit.visitStack = { id: stackId, depth };
+
+      const manual = stateIn.stringify ? stateIn.stringify(type) : undefined;
+      if ("string" === typeof manual) {
+        result.push((jit.stringifyTypeResult = manual));
+        continue;
+      }
+
+      if (state.showNames && type.typeName && !state.showFullDefinition) {
+        if (type.typeArguments && type.typeArguments.length) {
+          stack.push({ before: ">" });
+          for (let i = type.typeArguments.length - 1; i >= 0; i--) {
+            stack.push({
+              type: type.typeArguments[i],
+              before: i === 0 ? undefined : ", ",
+              depth
+            });
+          }
+          stack.push({ before: "<" });
+        }
+        result.push(type.typeName);
+        continue;
+      }
+
+      switch (type.kind) {
+        case ReflectionKind.never:
+          result.push(`never`);
+          break;
+        case ReflectionKind.any:
+          result.push(`any`);
+          break;
+        case ReflectionKind.unknown:
+          result.push(`unknown`);
+          break;
+        case ReflectionKind.void:
+          result.push(`void`);
+          break;
+        case ReflectionKind.undefined:
+          result.push(`undefined`);
+          break;
+        case ReflectionKind.null:
+          result.push(`null`);
+          break;
+        case ReflectionKind.object:
+          result.push(`object`);
+          break;
+        case ReflectionKind.string:
+          result.push("string");
+          break;
+        case ReflectionKind.infer:
+          result.push("infer");
+          break;
+        case ReflectionKind.number:
+          result.push("number");
+          break;
+        case ReflectionKind.bigint:
+          result.push("bigint");
+          break;
+        case ReflectionKind.regexp:
+          result.push("RegExp");
+          break;
+        case ReflectionKind.boolean:
+          result.push("boolean");
+          break;
+        case ReflectionKind.symbol:
+          result.push("symbol");
+          break;
+        case ReflectionKind.literal:
+          if ("number" === typeof type.literal) {
+            result.push(type.literal + "");
+          } else if ("boolean" === typeof type.literal) {
+            result.push(type.literal + "");
+          } else {
+            result.push(`'${String(type.literal).replace(/'/g, "\\'")}'`);
+          }
+          break;
+        case ReflectionKind.promise:
+          result.push("Promise<");
+          stack.push({ before: ">" });
+          stack.push({ type: type.type, depth: depth + 1 });
+          break;
+        case ReflectionKind.templateLiteral:
+          stack.push({ before: "`" });
+          for (let i = type.types.length - 1; i >= 0; i--) {
+            const sub = type.types[i];
+            if (sub.kind === ReflectionKind.literal) {
+              stack.push({ before: String(sub.literal) });
+            } else {
+              stack.push({
+                type: sub,
+                before: "${",
+                after: "}",
+                depth: depth + 1
+              });
+            }
+          }
+          stack.push({ before: "`" });
+          break;
+        case ReflectionKind.class: {
+          if (type.classType === Date) {
+            result.push(`Date`);
+            break;
+          }
+          if (type.classType === Set) {
+            result.push("Set<");
+            stack.push({ before: ">" });
+            stack.push({ type: type.arguments![0], depth: depth + 1 });
+            break;
+          }
+          if (type.classType === Map) {
+            result.push("Map<");
+            stack.push({ before: ">" });
+            stack.push({ type: type.arguments![1], depth: depth + 1 });
+            stack.push({ before: ", " });
+            stack.push({ type: type.arguments![0], depth: depth + 1 });
+            break;
+          }
+          if (binaryTypes.includes(type.classType)) {
+            result.push(getClassName(type.classType));
+            break;
+          }
+
+          const typeName = type.typeName || getClassName(type.classType);
+          const superClass = getParentClass(type.classType);
+
+          if (state.showFullDefinition) {
+            const types = state.showHeritage
+              ? type.types
+              : resolveTypeMembers(type);
+            stack.push({ before: "}" });
+            for (let i = types.length - 1; i >= 0; i--) {
+              const sub = types[i];
+              const showDescription =
+                stateIn.showDescription &&
+                sub.kind === ReflectionKind.property &&
+                sub.description;
+              const withIndentation = types.length > 1 || showDescription;
+
+              if (withIndentation && i === types.length - 1) {
+                stack.push({ before: "\n" + " ".repeat((depth - 1) * 2) });
+              }
+              if (state.stringify) {
+                const manual = state.stringify(sub);
+                if ("string" === typeof manual) {
+                  if (manual !== "") {
+                    stack.push({ before: manual });
+                  }
+                  continue;
+                }
+              }
+              if (
+                showDescription ||
+                (types.length > 1 &&
+                  (withIndentation || i !== types.length - 1))
+              ) {
+                stack.push({ before: withIndentation ? ";" : "; " });
+              }
+              const defaultValue =
+                entry.defaultValue && sub.kind === ReflectionKind.property
+                  ? entry.defaultValue[sub.name]
+                  : undefined;
+              const showDefault =
+                sub.kind === ReflectionKind.property &&
+                sub.type.kind !== ReflectionKind.class &&
+                sub.type.kind !== ReflectionKind.objectLiteral;
+              if (state.showDefaults && showDefault) {
+                if (defaultValue !== undefined) {
+                  stack.push({ before: " = " + JSON.stringify(defaultValue) });
+                } else if (
+                  sub.kind === ReflectionKind.property &&
+                  sub.default
+                ) {
+                  try {
+                    stack.push({
+                      before: " = " + JSON.stringify(sub.default())
+                    });
+                  } catch {}
                 }
+              }
+              stack.push({ type: sub, defaultValue, depth: depth + 1 });
+              if (withIndentation) {
+                stack.push({ before: "\n" + " ".repeat(depth * 2) });
+              }
+              if (showDescription) {
+                const indentation = indent(depth * 2, " * ");
+                stack.push({
+                  before: "\n" + indentation("/** " + sub.description + " */")
+                });
+              }
             }
 
-            jit.visitStack = { id: stackId, depth };
+            stack.push({ before: " {" });
+          }
+
+          if (superClass && state.showHeritage) {
+            try {
+              const superClassType = reflect(superClass);
+              if (superClassType.kind === ReflectionKind.class) {
+                if (type.extendsArguments && type.extendsArguments.length) {
+                  stack.push({ before: ">" });
+                  for (let i = type.extendsArguments.length - 1; i >= 0; i--) {
+                    stack.push({
+                      type: type.extendsArguments[i],
+                      before: i === 0 ? undefined : ", ",
+                      depth: depth + 1
+                    });
+                  }
+                  stack.push({ before: "<" });
+                }
 
-            const manual = stateIn.stringify ? stateIn.stringify(type) : undefined;
-            if ('string' === typeof manual) {
-                result.push(jit.stringifyTypeResult = manual);
-                continue;
+                stack.push({
+                  before:
+                    " extends " + (superClassType.typeName || superClass.name)
+                });
+              }
+            } catch {
+              stack.push({ before: " extends " + superClass.name });
             }
-
-            if (state.showNames && type.typeName && !state.showFullDefinition) {
-                if (type.typeArguments && type.typeArguments.length) {
-                    stack.push({ before: '>' });
-                    for (let i = type.typeArguments.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.typeArguments[i], before: i === 0 ? undefined : ', ', depth });
-                    }
-                    stack.push({ before: '<' });
-                }
-                result.push(type.typeName);
-                continue;
+          }
+
+          const typeArguments = type.arguments || type.typeArguments;
+          if (
+            (!state.showFullDefinition || type.types.length === 0) &&
+            typeArguments &&
+            typeArguments.length
+          ) {
+            stack.push({ before: ">" });
+            for (let i = typeArguments.length - 1; i >= 0; i--) {
+              stack.push({
+                type: typeArguments[i],
+                before: i === 0 ? undefined : ", ",
+                depth: depth + 1
+              });
             }
+            stack.push({ before: "<" });
+          }
 
-            switch (type.kind) {
-                case ReflectionKind.never:
-                    result.push(`never`);
-                    break;
-                case ReflectionKind.any:
-                    result.push(`any`);
-                    break;
-                case ReflectionKind.unknown:
-                    result.push(`unknown`);
-                    break;
-                case ReflectionKind.void:
-                    result.push(`void`);
-                    break;
-                case ReflectionKind.undefined:
-                    result.push(`undefined`);
-                    break;
-                case ReflectionKind.null:
-                    result.push(`null`);
-                    break;
-                case ReflectionKind.object:
-                    result.push(`object`);
-                    break;
-                case ReflectionKind.string:
-                    result.push('string');
-                    break;
-                case ReflectionKind.infer:
-                    result.push('infer');
-                    break;
-                case ReflectionKind.number:
-                    result.push('number');
-                    break;
-                case ReflectionKind.bigint:
-                    result.push('bigint');
-                    break;
-                case ReflectionKind.regexp:
-                    result.push('RegExp');
-                    break;
-                case ReflectionKind.boolean:
-                    result.push('boolean');
-                    break;
-                case ReflectionKind.symbol:
-                    result.push('symbol');
-                    break;
-                case ReflectionKind.literal:
-                    if ('number' === typeof type.literal) {
-                        result.push(type.literal + '');
-                    } else if ('boolean' === typeof type.literal) {
-                        result.push(type.literal + '');
-                    } else {
-                        result.push(`'${String(type.literal).replace(/'/g, '\\\'')}'`);
-                    }
-                    break;
-                case ReflectionKind.promise:
-                    result.push('Promise<');
-                    stack.push({ before: '>' });
-                    stack.push({ type: type.type, depth: depth + 1 });
-                    break;
-                case ReflectionKind.templateLiteral:
-                    stack.push({ before: '`' });
-                    for (let i = type.types.length - 1; i >= 0; i--) {
-                        const sub = type.types[i];
-                        if (sub.kind === ReflectionKind.literal) {
-                            stack.push({ before: String(sub.literal) });
-                        } else {
-                            stack.push({ type: sub, before: '${', after: '}', depth: depth + 1 });
-                        }
-                    }
-                    stack.push({ before: '`' });
-                    break;
-                case ReflectionKind.class: {
-                    if (type.classType === Date) {
-                        result.push(`Date`);
-                        break;
-                    }
-                    if (type.classType === Set) {
-                        result.push('Set<');
-                        stack.push({ before: '>' });
-                        stack.push({ type: type.arguments![0], depth: depth + 1 });
-                        break;
-                    }
-                    if (type.classType === Map) {
-                        result.push('Map<');
-                        stack.push({ before: '>' });
-                        stack.push({ type: type.arguments![1], depth: depth + 1 });
-                        stack.push({ before: ', ' });
-                        stack.push({ type: type.arguments![0], depth: depth + 1 });
-                        break;
-                    }
-                    if (binaryTypes.includes(type.classType)) {
-                        result.push(getClassName(type.classType));
-                        break;
-                    }
-
-                    const typeName = type.typeName || getClassName(type.classType);
-                    const superClass = getParentClass(type.classType);
-
-                    if (state.showFullDefinition) {
-                        const types = state.showHeritage ? type.types : resolveTypeMembers(type);
-                        stack.push({ before: '}' });
-                        for (let i = types.length - 1; i >= 0; i--) {
-                            const sub = types[i];
-                            const showDescription = stateIn.showDescription && sub.kind === ReflectionKind.property && sub.description;
-                            const withIndentation = types.length > 1 || showDescription;
-
-                            if (withIndentation && i === types.length - 1) {
-                                stack.push({ before: '\n' + (' '.repeat((depth - 1) * 2)) });
-                            }
-                            if (state.stringify) {
-                                const manual = state.stringify(sub);
-                                if ('string' === typeof manual) {
-                                    if (manual !== '') {
-                                        stack.push({ before: manual });
-                                    }
-                                    continue;
-                                }
-                            }
-                            if (showDescription || (types.length > 1 && (withIndentation || i !== types.length - 1))) {
-                                stack.push({ before: withIndentation ? ';' : '; ' });
-                            }
-                            const defaultValue = entry.defaultValue && (sub.kind === ReflectionKind.property) ? entry.defaultValue[sub.name] : undefined;
-                            const showDefault = sub.kind === ReflectionKind.property && sub.type.kind !== ReflectionKind.class && sub.type.kind !== ReflectionKind.objectLiteral;
-                            if (state.showDefaults && showDefault) {
-                                if (defaultValue !== undefined) {
-                                    stack.push({ before: ' = ' + JSON.stringify(defaultValue) });
-                                } else if (sub.kind === ReflectionKind.property && sub.default) {
-                                    try {
-                                        stack.push({ before: ' = ' + JSON.stringify(sub.default()) });
-                                    } catch {
-                                    }
-                                }
-                            }
-                            stack.push({ type: sub, defaultValue, depth: depth + 1 });
-                            if (withIndentation) {
-                                stack.push({ before: '\n' + (' '.repeat(depth * 2)) });
-                            }
-                            if (showDescription) {
-                                const indentation = indent(depth * 2, ' * ');
-                                stack.push({ before: '\n' + indentation('/* ' + sub.description + ' */') });
-                            }
-                        }
-
-                        stack.push({ before: ' {' });
-                    }
-
-                    if (superClass && state.showHeritage) {
-                        try {
-                            const superClassType = reflect(superClass);
-                            if (superClassType.kind === ReflectionKind.class) {
-
-                                if (type.extendsArguments && type.extendsArguments.length) {
-                                    stack.push({ before: '>' });
-                                    for (let i = type.extendsArguments.length - 1; i >= 0; i--) {
-                                        stack.push({
-                                            type: type.extendsArguments[i],
-                                            before: i === 0 ? undefined : ', ',
-                                            depth: depth + 1,
-                                        });
-                                    }
-                                    stack.push({ before: '<' });
-                                }
-
-                                stack.push({ before: ' extends ' + (superClassType.typeName || superClass.name) });
-                            }
-                        } catch {
-                            stack.push({ before: ' extends ' + (superClass.name) });
-                        }
-                    }
-
-                    const typeArguments = type.arguments || type.typeArguments;
-                    if ((!state.showFullDefinition || type.types.length === 0) && typeArguments && typeArguments.length) {
-                        stack.push({ before: '>' });
-                        for (let i = typeArguments.length - 1; i >= 0; i--) {
-                            stack.push({
-                                type: typeArguments[i],
-                                before: i === 0 ? undefined : ', ',
-                                depth: depth + 1,
-                            });
-                        }
-                        stack.push({ before: '<' });
-                    }
-
-                    stack.push({ before: typeName });
-                    break;
-                }
-                case ReflectionKind.objectLiteral: {
-                    const typeName = type.typeName || '';
-                    result.push(typeName);
-
-                    if (!typeName || state.showFullDefinition) {
-                        result.push(typeName ? ' {' : '{');
-
-                        stack.push({ before: '}' });
-                        for (let i = type.types.length - 1; i >= 0; i--) {
-                            const sub = type.types[i];
-                            const showDescription = stateIn.showDescription && sub.kind === ReflectionKind.propertySignature && sub.description;
-                            const withIndentation = type.types.length > 1 || showDescription;
-
-                            if (state.stringify) {
-                                const manual = state.stringify(sub);
-                                if ('string' === typeof manual) {
-                                    if (manual !== '') {
-                                        stack.push({ before: manual });
-                                    }
-                                    continue;
-                                }
-                            }
-
-                            if (withIndentation && i === type.types.length - 1) {
-                                stack.push({ before: '\n' + (' '.repeat((depth - 1) * 2)) });
-                            }
-                            if (state.stringify) {
-                                const manual = state.stringify(sub);
-                                if ('string' === typeof manual) {
-                                    if (manual !== '') {
-                                        stack.push({ before: manual });
-                                    }
-                                    continue;
-                                }
-                            }
-                            if (showDescription || (type.types.length > 1 && (withIndentation || i !== type.types.length - 1))) {
-                                stack.push({ before: withIndentation ? ';' : '; ' });
-                            }
-
-                            const defaultValue = entry.defaultValue && (sub.kind === ReflectionKind.propertySignature) ? entry.defaultValue[sub.name] : undefined;
-                            const showDefault = sub.kind === ReflectionKind.propertySignature && sub.type.kind !== ReflectionKind.class && sub.type.kind !== ReflectionKind.objectLiteral;
-                            if (state.showDefaults && showDefault) {
-                                if (defaultValue !== undefined) {
-                                    stack.push({ before: ' = ' + JSON.stringify(defaultValue) });
-                                }
-                            }
-                            stack.push({ type: sub, defaultValue, depth: depth + 1 });
-
-                            if (withIndentation) {
-                                stack.push({ before: '\n' + (' '.repeat(depth * 2)) });
-                            }
-                            if (showDescription) {
-                                const indentation = indent(depth * 2, ' * ');
-                                stack.push({ before: '\n' + indentation('/* ' + sub.description + ' */') });
-                            }
-                        }
-                    }
-                    break;
-                }
-                case ReflectionKind.union:
-                    for (let i = type.types.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.types[i], before: i === 0 ? undefined : ' | ', depth: depth + 1 });
-                    }
-                    break;
-                case ReflectionKind.intersection:
-                    for (let i = type.types.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.types[i], before: i === 0 ? undefined : ' & ', depth: depth + 1 });
-                    }
-                    break;
-                case ReflectionKind.parameter: {
-                    const visibility = type.visibility ? ReflectionVisibility[type.visibility] + ' ' : '';
-                    const dotdotdot = type.type.kind === ReflectionKind.rest ? '...' : '';
-                    result.push(`${type.readonly ? 'readonly ' : ''}${visibility}${dotdotdot}${type.name}${type.optional ? '?' : ''}: `);
-                    stack.push({ type: type.type, depth: depth + 1 });
-                    break;
+          stack.push({ before: typeName });
+          break;
+        }
+        case ReflectionKind.objectLiteral: {
+          const typeName = type.typeName || "";
+          result.push(typeName);
+
+          if (!typeName || state.showFullDefinition) {
+            result.push(typeName ? " {" : "{");
+
+            stack.push({ before: "}" });
+            for (let i = type.types.length - 1; i >= 0; i--) {
+              const sub = type.types[i];
+              const showDescription =
+                stateIn.showDescription &&
+                sub.kind === ReflectionKind.propertySignature &&
+                sub.description;
+              const withIndentation = type.types.length > 1 || showDescription;
+
+              if (state.stringify) {
+                const manual = state.stringify(sub);
+                if ("string" === typeof manual) {
+                  if (manual !== "") {
+                    stack.push({ before: manual });
+                  }
+                  continue;
                 }
-                case ReflectionKind.callSignature:
-                case ReflectionKind.function:
-                    stack.push({ type: type.return, depth: depth + 1 });
-                    stack.push({ before: ') => ' });
-                    for (let i = type.parameters.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.parameters[i], before: i === 0 ? undefined : ', ', depth: depth + 1 });
-                    }
-                    stack.push({ before: '(' });
-                    break;
-                case ReflectionKind.enum:
-                    const members = Object.entries(type.enum).map(([label, value]) => `${label}: ${value}`).join(', ');
-                    stack.push({ before: `${type.typeName ? type.typeName : 'Enum'} {` + (members) + '}' });
-                    break;
-                case ReflectionKind.array:
-                    stack.push({ before: '>' });
-                    stack.push({ type: type.type, before: 'Array<', depth: depth + 1 });
-                    break;
-                case ReflectionKind.typeParameter:
-                    stack.push({ before: type.name });
-                    break;
-                case ReflectionKind.rest:
-                    stack.push({ before: '[]' });
-                    stack.push({ type: type.type, depth: depth + 1 });
-                    if (type.parent && type.parent.kind === ReflectionKind.tupleMember && !type.parent.name) {
-                        stack.push({ before: '...' });
-                    }
-                    break;
-                case ReflectionKind.tupleMember:
-                    if (type.name) {
-                        const dotdotdot = type.type.kind === ReflectionKind.rest ? '...' : '';
-                        result.push(`${dotdotdot}${type.name}${type.optional ? '?' : ''}: `);
-                        stack.push({ type: type.type, depth: depth + 1 });
-                        break;
-                    }
-                    if (type.optional) {
-                        stack.push({ before: '?' });
-                    }
-                    stack.push({ type: type.type, depth: depth + 1 });
-                    break;
-                case ReflectionKind.tuple:
-                    stack.push({ before: ']' });
-                    for (let i = type.types.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.types[i], before: i === 0 ? undefined : ', ', depth: depth + 1 });
-                    }
-                    stack.push({ before: '[' });
-                    break;
-                case ReflectionKind.indexSignature:
-                    stack.push({ type: type.type, depth: depth + 1 });
-                    stack.push({ before: ']: ' });
-                    stack.push({ type: type.index, depth: depth + 1 });
-                    stack.push({ before: '[index: ' });
-                    // name = `{[index: ${stringifyType(type.index, state)}]: ${stringifyType(type.type, state)}`;
-                    break;
-                case ReflectionKind.propertySignature:
-                    result.push(`${type.readonly ? 'readonly ' : ''}${memberNameToString(type.name)}${type.optional ? '?' : ''}: `);
-                    stack.push({ type: type.type, defaultValue: entry.defaultValue, depth });
-                    break;
-                case ReflectionKind.property: {
-                    const visibility = type.visibility ? ReflectionVisibility[type.visibility] + ' ' : '';
-                    const optional = type.optional || (stateIn.defaultIsOptional && type.default !== undefined);
-                    result.push(`${type.static ? 'static ' : ''}${type.readonly ? 'readonly ' : ''}${visibility}${memberNameToString(type.name)}${optional ? '?' : ''}: `);
-                    stack.push({ type: type.type, defaultValue: entry.defaultValue, depth });
-                    break;
+              }
+
+              if (withIndentation && i === type.types.length - 1) {
+                stack.push({ before: "\n" + " ".repeat((depth - 1) * 2) });
+              }
+              if (state.stringify) {
+                const manual = state.stringify(sub);
+                if ("string" === typeof manual) {
+                  if (manual !== "") {
+                    stack.push({ before: manual });
+                  }
+                  continue;
                 }
-                case ReflectionKind.methodSignature:
-                    stack.push({ type: type.return, depth });
-                    stack.push({ before: '): ' });
-                    for (let i = type.parameters.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.parameters[i], before: i === 0 ? undefined : ', ', depth });
-                    }
-                    stack.push({ before: `${memberNameToString(type.name)}${type.optional ? '?' : ''}(` });
-                    break;
-                case ReflectionKind.method: {
-                    const visibility = type.visibility ? ReflectionVisibility[type.visibility] + ' ' : '';
-                    const abstract = type.abstract ? 'abstract ' : '';
-                    const staticPrefix = type.static ? 'static ' : '';
-                    if (type.name === 'constructor') {
-                        stack.push({ before: ')' });
-                    } else {
-                        stack.push({ type: type.return, depth });
-                        stack.push({ before: '): ' });
-                    }
-                    for (let i = type.parameters.length - 1; i >= 0; i--) {
-                        stack.push({ type: type.parameters[i], before: i === 0 ? undefined : ', ', depth });
-                    }
-                    stack.push({ before: `${staticPrefix}${abstract}${visibility}${memberNameToString(type.name)}${type.optional ? '?' : ''}(` });
-                    break;
+              }
+              if (
+                showDescription ||
+                (type.types.length > 1 &&
+                  (withIndentation || i !== type.types.length - 1))
+              ) {
+                stack.push({ before: withIndentation ? ";" : "; " });
+              }
+
+              const defaultValue =
+                entry.defaultValue &&
+                sub.kind === ReflectionKind.propertySignature
+                  ? entry.defaultValue[sub.name]
+                  : undefined;
+              const showDefault =
+                sub.kind === ReflectionKind.propertySignature &&
+                sub.type.kind !== ReflectionKind.class &&
+                sub.type.kind !== ReflectionKind.objectLiteral;
+              if (state.showDefaults && showDefault) {
+                if (defaultValue !== undefined) {
+                  stack.push({ before: " = " + JSON.stringify(defaultValue) });
                 }
+              }
+              stack.push({ type: sub, defaultValue, depth: depth + 1 });
+
+              if (withIndentation) {
+                stack.push({ before: "\n" + " ".repeat(depth * 2) });
+              }
+              if (showDescription) {
+                const indentation = indent(depth * 2, " * ");
+                stack.push({
+                  before: "\n" + indentation("/* " + sub.description + " */")
+                });
+              }
             }
+          }
+          break;
         }
-
-        if (entry.after) {
-            result.push(entry.after);
+        case ReflectionKind.union:
+          for (let i = type.types.length - 1; i >= 0; i--) {
+            stack.push({
+              type: type.types[i],
+              before: i === 0 ? undefined : " | ",
+              depth: depth + 1
+            });
+          }
+          break;
+        case ReflectionKind.intersection:
+          for (let i = type.types.length - 1; i >= 0; i--) {
+            stack.push({
+              type: type.types[i],
+              before: i === 0 ? undefined : " & ",
+              depth: depth + 1
+            });
+          }
+          break;
+        case ReflectionKind.parameter: {
+          const visibility = type.visibility
+            ? ReflectionVisibility[type.visibility] + " "
+            : "";
+          const dotdotdot = type.type.kind === ReflectionKind.rest ? "..." : "";
+          result.push(
+            `${type.readonly ? "readonly " : ""}${visibility}${dotdotdot}${type.name}${type.optional ? "?" : ""}: `
+          );
+          stack.push({ type: type.type, depth: depth + 1 });
+          break;
         }
+        case ReflectionKind.callSignature:
+        case ReflectionKind.function:
+          stack.push({ type: type.return, depth: depth + 1 });
+          stack.push({ before: ") => " });
+          for (let i = type.parameters.length - 1; i >= 0; i--) {
+            stack.push({
+              type: type.parameters[i],
+              before: i === 0 ? undefined : ", ",
+              depth: depth + 1
+            });
+          }
+          stack.push({ before: "(" });
+          break;
+        case ReflectionKind.enum:
+          const members = Object.entries(type.enum)
+            .map(([label, value]) => `${label}: ${value}`)
+            .join(", ");
+          stack.push({
+            before:
+              `${type.typeName ? type.typeName : "Enum"} {` + members + "}"
+          });
+          break;
+        case ReflectionKind.array:
+          stack.push({ before: ">" });
+          stack.push({ type: type.type, before: "Array<", depth: depth + 1 });
+          break;
+        case ReflectionKind.typeParameter:
+          stack.push({ before: type.name });
+          break;
+        case ReflectionKind.rest:
+          stack.push({ before: "[]" });
+          stack.push({ type: type.type, depth: depth + 1 });
+          if (
+            type.parent &&
+            type.parent.kind === ReflectionKind.tupleMember &&
+            !type.parent.name
+          ) {
+            stack.push({ before: "..." });
+          }
+          break;
+        case ReflectionKind.tupleMember:
+          if (type.name) {
+            const dotdotdot =
+              type.type.kind === ReflectionKind.rest ? "..." : "";
+            result.push(
+              `${dotdotdot}${type.name}${type.optional ? "?" : ""}: `
+            );
+            stack.push({ type: type.type, depth: depth + 1 });
+            break;
+          }
+          if (type.optional) {
+            stack.push({ before: "?" });
+          }
+          stack.push({ type: type.type, depth: depth + 1 });
+          break;
+        case ReflectionKind.tuple:
+          stack.push({ before: "]" });
+          for (let i = type.types.length - 1; i >= 0; i--) {
+            stack.push({
+              type: type.types[i],
+              before: i === 0 ? undefined : ", ",
+              depth: depth + 1
+            });
+          }
+          stack.push({ before: "[" });
+          break;
+        case ReflectionKind.indexSignature:
+          stack.push({ type: type.type, depth: depth + 1 });
+          stack.push({ before: "]: " });
+          stack.push({ type: type.index, depth: depth + 1 });
+          stack.push({ before: "[index: " });
+          // name = `{[index: ${stringifyType(type.index, state)}]: ${stringifyType(type.type, state)}`;
+          break;
+        case ReflectionKind.propertySignature:
+          result.push(
+            `${type.readonly ? "readonly " : ""}${memberNameToString(type.name)}${type.optional ? "?" : ""}: `
+          );
+          stack.push({
+            type: type.type,
+            defaultValue: entry.defaultValue,
+            depth
+          });
+          break;
+        case ReflectionKind.property: {
+          const visibility = type.visibility
+            ? ReflectionVisibility[type.visibility] + " "
+            : "";
+          const optional =
+            type.optional ||
+            (stateIn.defaultIsOptional && type.default !== undefined);
+          result.push(
+            `${type.static ? "static " : ""}${type.readonly ? "readonly " : ""}${visibility}${memberNameToString(type.name)}${optional ? "?" : ""}: `
+          );
+          stack.push({
+            type: type.type,
+            defaultValue: entry.defaultValue,
+            depth
+          });
+          break;
+        }
+        case ReflectionKind.methodSignature:
+          stack.push({ type: type.return, depth });
+          stack.push({ before: "): " });
+          for (let i = type.parameters.length - 1; i >= 0; i--) {
+            stack.push({
+              type: type.parameters[i],
+              before: i === 0 ? undefined : ", ",
+              depth
+            });
+          }
+          stack.push({
+            before: `${memberNameToString(type.name)}${type.optional ? "?" : ""}(`
+          });
+          break;
+        case ReflectionKind.method: {
+          const visibility = type.visibility
+            ? ReflectionVisibility[type.visibility] + " "
+            : "";
+          const abstract = type.abstract ? "abstract " : "";
+          const staticPrefix = type.static ? "static " : "";
+          if (type.name === "constructor") {
+            stack.push({ before: ")" });
+          } else {
+            stack.push({ type: type.return, depth });
+            stack.push({ before: "): " });
+          }
+          for (let i = type.parameters.length - 1; i >= 0; i--) {
+            stack.push({
+              type: type.parameters[i],
+              before: i === 0 ? undefined : ", ",
+              depth
+            });
+          }
+          stack.push({
+            before: `${staticPrefix}${abstract}${visibility}${memberNameToString(type.name)}${type.optional ? "?" : ""}(`
+          });
+          break;
+        }
+      }
+    }
+
+    if (entry.after) {
+      result.push(entry.after);
     }
+  }
 
-    return result.join('');
+  return result.join("");
 }
 
-export function annotateClass<T>(clazz: ClassType | AbstractClassType, type?: ReceiveType<T>) {
-    (clazz as any).__type = isClass(type) ? (type as any).__type || [] : [];
-    type = resolveRuntimeType(type);
-    (clazz as any).__type.__type = type;
+export function annotateClass<T>(
+  clazz: ClassType | AbstractClassType,
+  type?: ReceiveType<T>
+) {
+  (clazz as any).__type = isClass(type) ? (type as any).__type || [] : [];
+  type = resolveRuntimeType(type);
+  (clazz as any).__type.__type = type;
 }
diff --git a/src/registry.ts b/src/registry.ts
index 772f40ba9276a7e96781a0956d3c5e95fb0fbb39..b4ff471dcf04fefce71147a5038543185e5e1f38 100644
--- a/src/registry.ts
+++ b/src/registry.ts
@@ -1,72 +1,80 @@
-import { ClassType, isArray, isFunction } from '@deepkit/core';
-import { binaryTypes, ReflectionKind, Type } from './reflection/type.js';
+import { ClassType, isArray, isFunction } from "@deepkit/core";
+import { binaryTypes, ReflectionKind, Type } from "./reflection/type.js";
 
 interface RegistryDecorator<T> {
-    predicate: (type: Type) => boolean,
-    v: T
+  predicate: (type: Type) => boolean;
+  v: T;
 }
 
 export class TypeRegistry<T> {
-    protected results: { [kind in ReflectionKind]?: T } = {};
-    public classes = new Map<ClassType, T>();
-    protected decorators: RegistryDecorator<T>[] = [];
-
-    clear(): void {
-        this.results = {};
-        this.classes.clear();
-    }
+  protected results: { [kind in ReflectionKind]?: T } = {};
+  public classes = new Map<ClassType, T>();
+  protected decorators: RegistryDecorator<T>[] = [];
 
-    get(type: Type): T | undefined {
-        for (const d of this.decorators) {
-            if (d.predicate(type)) return d.v;
-        }
+  clear(): void {
+    this.results = {};
+    this.classes.clear();
+  }
 
-        if (type.kind === ReflectionKind.class) {
-            const classResult = this.classes.get(type.classType);
-            if (classResult) return classResult;
-            if (type.classType === Set || type.classType === Map || binaryTypes.includes(type.classType)) return undefined;
-        }
-        return this.results[type.kind];
+  get(type: Type): T | undefined {
+    for (const d of this.decorators) {
+      if (d.predicate(type)) return d.v;
     }
 
-    decorator(predicate: (type: Type) => boolean, v: T): void {
-        this.decorators.push({ predicate, v });
+    if (type.kind === ReflectionKind.class) {
+      const classResult = this.classes.get(type.classType);
+      if (classResult) return classResult;
+      if (
+        type.classType === Set ||
+        type.classType === Map ||
+        binaryTypes.includes(type.classType)
+      )
+        return undefined;
     }
+    return this.results[type.kind];
+  }
 
-    /**
-     * Registers a template for all binary classes: ArrayBuffer, Uint8Array, Int8Array, etc.
-     */
-    setBinary(v: T): void {
-        for (const classType of binaryTypes) this.setClass(classType, v);
-    }
+  decorator(predicate: (type: Type) => boolean, v: T): void {
+    this.decorators.push({ predicate, v });
+  }
 
-    setNumeric(v: T): void{
-        this.set([ReflectionKind.number, ReflectionKind.bigint], v);
-    }
+  /**
+   * Registers a template for all binary classes: ArrayBuffer, Uint8Array, Int8Array, etc.
+   */
+  setBinary(v: T): void {
+    for (const classType of binaryTypes) this.setClass(classType, v);
+  }
 
-    /**
-     * Registers a template for a given class type.
-     *
-     * As soon as a single template has registered for the given classType the template registry
-     * only returns templates for this particular classType and omits all general purpose ReflectionKind.class templates for this particular classType.
-     */
-    setClass(classType: ClassType, v: T): void {
-        this.classes.set(classType, v);
-    }
+  setNumeric(v: T): void {
+    this.set([ReflectionKind.number, ReflectionKind.bigint], v);
+  }
 
-    /**
-     * Removes all registered templates.
-     */
-    remove(kind: ReflectionKind): void {
-        this.results[kind] = undefined;
-    }
+  /**
+   * Registers a template for a given class type.
+   *
+   * As soon as a single template has registered for the given classType the template registry
+   * only returns templates for this particular classType and omits all general purpose ReflectionKind.class templates for this particular classType.
+   */
+  setClass(classType: ClassType, v: T): void {
+    this.classes.set(classType, v);
+  }
 
-    /**
-     * Registers a new template and replaces all existing (added via register,prepend,append).
-     */
-    set(kind: ReflectionKind | ReflectionKind[] | ((type: Type) => boolean), v: T): void {
-        if (isFunction(kind)) return this.decorator(kind, v);
-        kind = isArray(kind) ? kind : [kind];
-        for (const k of kind) this.results[k] = v;
-    }
+  /**
+   * Removes all registered templates.
+   */
+  remove(kind: ReflectionKind): void {
+    this.results[kind] = undefined;
+  }
+
+  /**
+   * Registers a new template and replaces all existing (added via register,prepend,append).
+   */
+  set(
+    kind: ReflectionKind | ReflectionKind[] | ((type: Type) => boolean),
+    v: T
+  ): void {
+    if (isFunction(kind)) return this.decorator(kind, v);
+    kind = isArray(kind) ? kind : [kind];
+    for (const k of kind) this.results[k] = v;
+  }
 }
diff --git a/src/serializer.ts b/src/serializer.ts
index 5daa5d8af7be843ee191a76901ae595e6390c8ff..e7bee36c137a561c03d741d07e54f31d63a4244b 100644
--- a/src/serializer.ts
+++ b/src/serializer.ts
@@ -9,233 +9,287 @@
  */
 
 import {
-    ClassType,
-    CompilerContext,
-    CustomError,
-    getObjectKeysSize,
-    hasProperty,
-    isArray,
-    isFunction,
-    isInteger,
-    isIterable,
-    isNumeric,
-    isObject,
-    isObjectLiteral,
-    iterableSize,
-    stringifyValueWithType,
-    toFastProperties,
-} from '@deepkit/core';
+  ClassType,
+  CompilerContext,
+  CustomError,
+  getObjectKeysSize,
+  hasProperty,
+  isArray,
+  isFunction,
+  isInteger,
+  isIterable,
+  isNumeric,
+  isObject,
+  isObjectLiteral,
+  iterableSize,
+  stringifyValueWithType,
+  toFastProperties
+} from "@deepkit/core";
+import { TypeNumberBrand } from "@deepkit/type-spec";
 import {
-    AnnotationDefinition,
-    assertType,
-    binaryBigIntAnnotation,
-    BinaryBigIntType,
-    binaryTypes,
-    copyAndSetParent,
-    embeddedAnnotation,
-    EmbeddedOptions,
-    excludedAnnotation,
-    FindType,
-    getConstructorProperties,
-    getDeepConstructorProperties,
-    getEnumValueIndexMatcher,
-    getTypeJitContainer,
-    getTypeObjectLiteralFromTypeClass,
-    groupAnnotation,
-    hasDefaultValue,
-    hasEmbedded,
-    isBackReferenceType,
-    isCustomTypeClass,
-    isMongoIdType,
-    isNullable,
-    isOptional,
-    isPropertyMemberType,
-    isReferenceType,
-    isType,
-    isUUIDType,
-    mapNameAnnotation,
-    memberNameToString,
-    referenceAnnotation,
-    ReflectionKind,
-    resolveTypeMembers,
-    stringifyResolvedType,
-    stringifyType,
-    Type,
-    TypeArray,
-    TypeClass,
-    TypeIndexSignature,
-    TypeObjectLiteral,
-    TypeParameter,
-    TypeProperty,
-    TypePropertySignature,
-    typeToObject,
-    TypeTuple,
-    TypeUnion,
-    validationAnnotation,
-} from './reflection/type.js';
-import { TypeNumberBrand } from '@deepkit/type-spec';
-import { hasCircularReference, ReflectionClass, ReflectionProperty } from './reflection/reflection.js';
-import { extendTemplateLiteral, isExtendable } from './reflection/extends.js';
-import { resolveRuntimeType } from './reflection/processor.js';
-import { createReference, isReferenceHydrated, isReferenceInstance } from './reference.js';
-import { validate, ValidationError, ValidationErrorItem } from './validator.js';
-import { validators } from './validators.js';
+  arrayBufferToBase64,
+  base64ToArrayBuffer,
+  base64ToTypedArray,
+  typedArrayToBase64,
+  typeSettings,
+  UnpopulatedCheck,
+  unpopulatedSymbol
+} from "./core.js";
 import {
-    arrayBufferToBase64,
-    base64ToArrayBuffer,
-    base64ToTypedArray,
-    typedArrayToBase64,
-    typeSettings,
-    UnpopulatedCheck,
-    unpopulatedSymbol,
-} from './core.js';
+  createReference,
+  isReferenceHydrated,
+  isReferenceInstance
+} from "./reference.js";
+import { extendTemplateLiteral, isExtendable } from "./reflection/extends.js";
+import { resolveRuntimeType } from "./reflection/processor.js";
+import {
+  hasCircularReference,
+  ReflectionClass,
+  ReflectionProperty
+} from "./reflection/reflection.js";
+import {
+  AnnotationDefinition,
+  assertType,
+  binaryBigIntAnnotation,
+  BinaryBigIntType,
+  binaryTypes,
+  copyAndSetParent,
+  embeddedAnnotation,
+  EmbeddedOptions,
+  excludedAnnotation,
+  FindType,
+  getConstructorProperties,
+  getDeepConstructorProperties,
+  getEnumValueIndexMatcher,
+  getTypeJitContainer,
+  getTypeObjectLiteralFromTypeClass,
+  groupAnnotation,
+  hasDefaultValue,
+  hasEmbedded,
+  isBackReferenceType,
+  isCustomTypeClass,
+  isMongoIdType,
+  isNullable,
+  isOptional,
+  isPropertyMemberType,
+  isReferenceType,
+  isType,
+  isUUIDType,
+  mapNameAnnotation,
+  memberNameToString,
+  referenceAnnotation,
+  ReflectionKind,
+  resolveTypeMembers,
+  stringifyResolvedType,
+  stringifyType,
+  Type,
+  TypeArray,
+  TypeClass,
+  TypeIndexSignature,
+  TypeObjectLiteral,
+  TypeParameter,
+  TypeProperty,
+  TypePropertySignature,
+  typeToObject,
+  TypeTuple,
+  TypeUnion,
+  validationAnnotation
+} from "./reflection/type.js";
+import { validate, ValidationError, ValidationErrorItem } from "./validator.js";
+import { validators } from "./validators.js";
 
 /**
  * Make sure to change the id when a custom naming strategy is implemented, since caches are based on it.
  */
 export class NamingStrategy {
-    constructor(public id: string = 'default') {
-    }
-
-    getPropertyName(type: TypeProperty | TypePropertySignature, forSerializer: string): string | undefined {
-        for (const mapName of mapNameAnnotation.getAnnotations(type.type)) {
-            if (!mapName.serializer || mapName.serializer === forSerializer) return mapName.name;
-        }
+  constructor(public id: string = "default") {}
 
-        return memberNameToString(type.name);
+  getPropertyName(
+    type: TypeProperty | TypePropertySignature,
+    forSerializer: string
+  ): string | undefined {
+    for (const mapName of mapNameAnnotation.getAnnotations(type.type)) {
+      if (!mapName.serializer || mapName.serializer === forSerializer)
+        return mapName.name;
     }
+
+    return memberNameToString(type.name);
+  }
 }
 
-export const underscoreNamingStrategy = new class extends NamingStrategy {
-    constructor() {
-        super('underscore');
-    }
-
-    getPropertyName(type: TypeProperty | TypePropertySignature, forSerializer: string): string | undefined {
-        const name = super.getPropertyName(type, forSerializer);
-        if (!name) return name;
-        return name.replace(/([A-Z])/g, '_$1').toLowerCase();
-    }
-};
+export const underscoreNamingStrategy = new (class extends NamingStrategy {
+  constructor() {
+    super("underscore");
+  }
+
+  getPropertyName(
+    type: TypeProperty | TypePropertySignature,
+    forSerializer: string
+  ): string | undefined {
+    const name = super.getPropertyName(type, forSerializer);
+    if (!name) return name;
+    return name.replace(/([A-Z])/g, "_$1").toLowerCase();
+  }
+})();
 
 /**
  * Options that can be passed to the serialization/deserialization functions
  * and change the behavior in runtime (not embedded in JIT).
  */
 export interface SerializationOptions {
-    /**
-     * Which groups to include. If a property is not assigned to
-     * a given group, it will be excluded.
-     * Use an empty array to include only non-grouped properties.
-     */
-    groups?: string[];
-
-    /**
-     * Which groups to exclude. If a property is assigned to at least
-     * one given group, it will be excluded. Basically the opposite of
-     * `groups`, but you can combine both.
-     * Use an empty array to exclude only non-grouped properties.
-     */
-    groupsExclude?: string[];
-
-    /**
-     * Allows more loosely data for certain types. e.g.
-     *
-     * - '1', '0', 'true', 'false' will be converted to true|false for boolean type.
-     * - '1' will be converted to number for number type.
-     * - 1 will be converted to string for string type.
-     *
-     * This will activate all registered type guards with negative specifically.
-     *
-     * This is enabled by default.
-     */
-    loosely?: boolean;
+  /**
+   * Which groups to include. If a property is not assigned to
+   * a given group, it will be excluded.
+   * Use an empty array to include only non-grouped properties.
+   */
+  groups?: string[];
+
+  /**
+   * Which groups to exclude. If a property is assigned to at least
+   * one given group, it will be excluded. Basically the opposite of
+   * `groups`, but you can combine both.
+   * Use an empty array to exclude only non-grouped properties.
+   */
+  groupsExclude?: string[];
+
+  /**
+   * Allows more loosely data for certain types. e.g.
+   *
+   * - '1', '0', 'true', 'false' will be converted to true|false for boolean type.
+   * - '1' will be converted to number for number type.
+   * - 1 will be converted to string for string type.
+   *
+   * This will activate all registered type guards with negative specifically.
+   *
+   * This is enabled by default.
+   */
+  loosely?: boolean;
 }
 
-function isGroupAllowed(options: SerializationOptions, groupNames: string[]): boolean {
-    if (!options.groups && !options.groupsExclude) return true;
+function isGroupAllowed(
+  options: SerializationOptions,
+  groupNames: string[]
+): boolean {
+  if (!options.groups && !options.groupsExclude) return true;
 
-    if (options.groupsExclude) {
-        if (options.groupsExclude.length === 0 && groupNames.length === 0) {
-            return false;
-        }
-        for (const group of options.groupsExclude) {
-            if (groupNames.includes(group)) {
-                return false;
-            }
-        }
+  if (options.groupsExclude) {
+    if (options.groupsExclude.length === 0 && groupNames.length === 0) {
+      return false;
     }
-
-    if (options.groups) {
-        if (options.groups.length === 0 && groupNames.length === 0) {
-            return true;
-        }
-        for (const group of options.groups) {
-            if (groupNames.includes(group)) {
-                return true;
-            }
-        }
+    for (const group of options.groupsExclude) {
+      if (groupNames.includes(group)) {
         return false;
+      }
     }
+  }
 
+  if (options.groups) {
+    if (options.groups.length === 0 && groupNames.length === 0) {
+      return true;
+    }
+    for (const group of options.groups) {
+      if (groupNames.includes(group)) {
+        return true;
+      }
+    }
+    return false;
+  }
 
-    return true;
+  return true;
 }
 
-
-export type SerializeFunction<T = any, R = any> = (data: T, state?: SerializationOptions) => R;
+export type SerializeFunction<T = any, R = any> = (
+  data: T,
+  state?: SerializationOptions
+) => R;
 
 export function getPartialType(type: TypeClass | TypeObjectLiteral) {
-    const jitContainer = getTypeJitContainer(type);
-    if (jitContainer.partialType) return jitContainer.partialType;
-    type = copyAndSetParent(type);
-    // we have to copy members manually, since we want to modify them
-    type.types = type.types.map(v => ({ ...v })) as any;
-    for (const member of type.types) {
-        if (member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.property) {
-            member.optional = true;
-        }
+  const jitContainer = getTypeJitContainer(type);
+  if (jitContainer.partialType) return jitContainer.partialType;
+  type = copyAndSetParent(type);
+  // we have to copy members manually, since we want to modify them
+  type.types = type.types.map(v => ({ ...v })) as any;
+  for (const member of type.types) {
+    if (
+      member.kind === ReflectionKind.propertySignature ||
+      member.kind === ReflectionKind.property
+    ) {
+      member.optional = true;
     }
-    return jitContainer.partialType = getTypeObjectLiteralFromTypeClass(type);
+  }
+  return (jitContainer.partialType = getTypeObjectLiteralFromTypeClass(type));
 }
 
 /**
  * Creates a (cached) Partial<T> of the given type and returns a (cached) serializer function for the given registry (serialize or deserialize).
  */
-export function getPartialSerializeFunction(type: TypeClass | TypeObjectLiteral, registry: TemplateRegistry, namingStrategy: NamingStrategy = new NamingStrategy()) {
-    return getSerializeFunction(getPartialType(type), registry, namingStrategy);
+export function getPartialSerializeFunction(
+  type: TypeClass | TypeObjectLiteral,
+  registry: TemplateRegistry,
+  namingStrategy: NamingStrategy = new NamingStrategy()
+) {
+  return getSerializeFunction(getPartialType(type), registry, namingStrategy);
 }
 
 /**
  * Returns a (cached) serializer function for the given registry (serialize or deserialize).
  */
-export function getSerializeFunction(type: Type, registry: TemplateRegistry, namingStrategy: NamingStrategy = new NamingStrategy(), path: string = '', jitStack = new JitStack()): SerializeFunction {
-    const jit = getTypeJitContainer(type);
-    const id = registry.id + '_' + namingStrategy.id + '_' + path;
-    if (jit[id]) return jit[id];
-
-    jit[id] = createSerializeFunction(type, registry, namingStrategy, path, jitStack);
-    toFastProperties(jit);
-
-    return jit[id];
+export function getSerializeFunction(
+  type: Type,
+  registry: TemplateRegistry,
+  namingStrategy: NamingStrategy = new NamingStrategy(),
+  path: string = "",
+  jitStack = new JitStack()
+): SerializeFunction {
+  const jit = getTypeJitContainer(type);
+  const id = registry.id + "_" + namingStrategy.id + "_" + path;
+  if (jit[id]) return jit[id];
+
+  jit[id] = createSerializeFunction(
+    type,
+    registry,
+    namingStrategy,
+    path,
+    jitStack
+  );
+  toFastProperties(jit);
+
+  return jit[id];
 }
 
-export function createSerializeFunction(type: Type, registry: TemplateRegistry, namingStrategy: NamingStrategy = new NamingStrategy(), path: string | RuntimeCode | (string | RuntimeCode)[] = '', jitStack = new JitStack()): SerializeFunction {
-    const compiler = new CompilerContext();
-
-    const state = new TemplateState('result', 'data', compiler, registry, namingStrategy, jitStack, isArray(path) ? path : path ? [path] : []);
-    if (state.registry === state.registry.serializer.deserializeRegistry) {
-        state.target = 'deserialize';
-    }
-
-    //set unpopulatedCheck to ReturnSymbol to jump over those properties
-    compiler.context.set('typeSettings', typeSettings);
-    compiler.context.set('UnpopulatedCheck', UnpopulatedCheck);
-    compiler.context.set('UnpopulatedCheckReturnSymbol', UnpopulatedCheck.ReturnSymbol);
-    compiler.context.set('SerializationError', SerializationError);
-    compiler.context.set('ValidationErrorItem', ValidationErrorItem);
-
-    const code = `
+export function createSerializeFunction(
+  type: Type,
+  registry: TemplateRegistry,
+  namingStrategy: NamingStrategy = new NamingStrategy(),
+  path: string | RuntimeCode | (string | RuntimeCode)[] = "",
+  jitStack = new JitStack()
+): SerializeFunction {
+  const compiler = new CompilerContext();
+
+  const state = new TemplateState(
+    "result",
+    "data",
+    compiler,
+    registry,
+    namingStrategy,
+    jitStack,
+    isArray(path) ? path : path ? [path] : []
+  );
+  if (state.registry === state.registry.serializer.deserializeRegistry) {
+    state.target = "deserialize";
+  }
+
+  //set unpopulatedCheck to ReturnSymbol to jump over those properties
+  compiler.context.set("typeSettings", typeSettings);
+  compiler.context.set("UnpopulatedCheck", UnpopulatedCheck);
+  compiler.context.set(
+    "UnpopulatedCheckReturnSymbol",
+    UnpopulatedCheck.ReturnSymbol
+  );
+  compiler.context.set("SerializationError", SerializationError);
+  compiler.context.set("ValidationErrorItem", ValidationErrorItem);
+
+  const code = `
         var result;
         state = state ? state : {};
         var oldUnpopulatedCheck = typeSettings.unpopulatedCheck;
@@ -245,35 +299,51 @@ export function createSerializeFunction(type: Type, registry: TemplateRegistry,
         return result;
     `;
 
-    return compiler.build(code, 'data', 'state');
+  return compiler.build(code, "data", "state");
 }
 
-export type Guard<T> = (data: any, state?: { errors?: ValidationErrorItem[] }) => data is T;
-
-export function createTypeGuardFunction(type: Type, stateIn?: Partial<TemplateState>, serializerToUse?: Serializer, withLoose = true): undefined | Guard<any> {
-    const compiler = new CompilerContext();
-
-    let state: TemplateState;
-    if (stateIn instanceof TemplateState) {
-        state = stateIn.fork('result');
-        state.compilerContext = compiler;
-    } else {
-        state = new TemplateState('result', 'data', compiler, (serializerToUse || serializer).typeGuards.getRegistry(1));
-        if (stateIn) Object.assign(state, stateIn);
-    }
-    state.path = [new RuntimeCode('_path')];
-    state.setterDisabled = false;
-
-    const templates = state.registry.get(type);
-    if (!templates.length) return undefined;
-
-    executeTemplates(state, type, withLoose);
-
-    compiler.context.set('typeSettings', typeSettings);
-    //set unpopulatedCheck to ReturnSymbol to jump over those properties
-    compiler.context.set('UnpopulatedCheckReturnSymbol', UnpopulatedCheck.ReturnSymbol);
-
-    const code = `
+export type Guard<T> = (
+  data: any,
+  state?: { errors?: ValidationErrorItem[] }
+) => data is T;
+
+export function createTypeGuardFunction(
+  type: Type,
+  stateIn?: Partial<TemplateState>,
+  serializerToUse?: Serializer,
+  withLoose = true
+): undefined | Guard<any> {
+  const compiler = new CompilerContext();
+
+  let state: TemplateState;
+  if (stateIn instanceof TemplateState) {
+    state = stateIn.fork("result");
+    state.compilerContext = compiler;
+  } else {
+    state = new TemplateState(
+      "result",
+      "data",
+      compiler,
+      (serializerToUse || serializer).typeGuards.getRegistry(1)
+    );
+    if (stateIn) Object.assign(state, stateIn);
+  }
+  state.path = [new RuntimeCode("_path")];
+  state.setterDisabled = false;
+
+  const templates = state.registry.get(type);
+  if (!templates.length) return undefined;
+
+  executeTemplates(state, type, withLoose);
+
+  compiler.context.set("typeSettings", typeSettings);
+  //set unpopulatedCheck to ReturnSymbol to jump over those properties
+  compiler.context.set(
+    "UnpopulatedCheckReturnSymbol",
+    UnpopulatedCheck.ReturnSymbol
+  );
+
+  const code = `
         var result;
         if (_path === undefined) _path = '';
         state = state ? state : {};
@@ -283,325 +353,385 @@ export function createTypeGuardFunction(type: Type, stateIn?: Partial<TemplateSt
         typeSettings.unpopulatedCheck = oldUnpopulatedCheck;
         return result === true;
     `;
-    return compiler.build(code, 'data', 'state', '_path', 'property');
+  return compiler.build(code, "data", "state", "_path", "property");
 }
 
 export class SerializationError extends CustomError {
-    constructor(public originalMessage: string, public code: string = '', public path: string = '') {
-        super(`Serialization failed. ${!path ? '' : (path && path.startsWith('.') ? path.slice(1) : path) + ': '}` + originalMessage);
-    }
+  constructor(
+    public originalMessage: string,
+    public code: string = "",
+    public path: string = ""
+  ) {
+    super(
+      `Serialization failed. ${!path ? "" : (path && path.startsWith(".") ? path.slice(1) : path) + ": "}` +
+        originalMessage
+    );
+  }
 }
 
 export class RuntimeCode {
-    constructor(public code: string) {
-    }
+  constructor(public code: string) {}
 }
 
-export function collapsePath(path: (string | RuntimeCode)[], prefix?: string): string {
-    return path.filter(v => !!v).map(v => v instanceof RuntimeCode ? v.code : JSON.stringify(v)).join(`+'.'+`) || `''`;
+export function collapsePath(
+  path: (string | RuntimeCode)[],
+  prefix?: string
+): string {
+  return (
+    path
+      .filter(v => !!v)
+      .map(v => (v instanceof RuntimeCode ? v.code : JSON.stringify(v)))
+      .join(`+'.'+`) || `''`
+  );
 }
 
 export function getPropertyNameString(propertyName?: string | RuntimeCode) {
-    return propertyName ? collapsePath([propertyName]) : '';
+  return propertyName ? collapsePath([propertyName]) : "";
 }
 
 /**
  * internal: The jit stack cache is used in both serializer and guards, so its cache key needs to be aware of it
  */
 export class JitStack {
-    protected stacks: { registry?: TemplateRegistry, map: Map<Type, { fn: Function | undefined, id: number }> }[] = [];
-    protected id: number = 0;
-
-    getStack(registry?: TemplateRegistry) {
-        for (const stack of this.stacks) {
-            if (stack.registry === registry) return stack.map;
-        }
-        const map = new Map<Type, { fn: Function | undefined, id: number }>();
-        this.stacks.push({ registry, map });
-        return map;
-    }
-
-    has(registry: TemplateRegistry, type: Type): boolean {
-        return this.getStack(registry).has(type);
-    }
-
-    get(registry: TemplateRegistry, type: Type) {
-        return this.getStack(registry).get(type);
-    }
-
-    prepare(registry: TemplateRegistry, type: Type): { id: number, prepare: (fn: Function) => { fn: Function | undefined } } {
-        if (this.getStack(registry).has(type)) {
-            throw new Error('Circular jit building detected: ' + stringifyType(type));
-        }
-
-        const entry: { fn: Function | undefined, id: number } = { fn: undefined, id: this.id++ };
-        this.getStack(registry).set(type, entry);
-        return {
-            id: entry.id, prepare: (fn: Function) => {
-                entry.fn = fn;
-                return entry;
-            },
-        };
-    }
-
-    getOrCreate(registry: TemplateRegistry | undefined, type: Type, create: () => Function): { fn: Function | undefined, id: number } {
-        const stack = this.getStack(registry);
-        const existing = stack.get(type);
-        if (existing) return existing;
-
-        const entry: { fn: Function | undefined, id: number } = { fn: undefined, id: this.id++ };
-        stack.set(type, entry);
-        entry.fn = create();
+  protected stacks: {
+    registry?: TemplateRegistry;
+    map: Map<Type, { fn: Function | undefined; id: number }>;
+  }[] = [];
+  protected id: number = 0;
+
+  getStack(registry?: TemplateRegistry) {
+    for (const stack of this.stacks) {
+      if (stack.registry === registry) return stack.map;
+    }
+    const map = new Map<Type, { fn: Function | undefined; id: number }>();
+    this.stacks.push({ registry, map });
+    return map;
+  }
+
+  has(registry: TemplateRegistry, type: Type): boolean {
+    return this.getStack(registry).has(type);
+  }
+
+  get(registry: TemplateRegistry, type: Type) {
+    return this.getStack(registry).get(type);
+  }
+
+  prepare(
+    registry: TemplateRegistry,
+    type: Type
+  ): { id: number; prepare: (fn: Function) => { fn: Function | undefined } } {
+    if (this.getStack(registry).has(type)) {
+      throw new Error("Circular jit building detected: " + stringifyType(type));
+    }
+
+    const entry: { fn: Function | undefined; id: number } = {
+      fn: undefined,
+      id: this.id++
+    };
+    this.getStack(registry).set(type, entry);
+    return {
+      id: entry.id,
+      prepare: (fn: Function) => {
+        entry.fn = fn;
         return entry;
-    }
+      }
+    };
+  }
+
+  getOrCreate(
+    registry: TemplateRegistry | undefined,
+    type: Type,
+    create: () => Function
+  ): { fn: Function | undefined; id: number } {
+    const stack = this.getStack(registry);
+    const existing = stack.get(type);
+    if (existing) return existing;
+
+    const entry: { fn: Function | undefined; id: number } = {
+      fn: undefined,
+      id: this.id++
+    };
+    stack.set(type, entry);
+    entry.fn = create();
+    return entry;
+  }
 }
 
 export class ContainerAccessor {
-    constructor(public container: string | ContainerAccessor, public property: string) {
-    }
-
-    toString() {
-        return `${this.container}[${this.property}]`;
-    }
+  constructor(
+    public container: string | ContainerAccessor,
+    public property: string
+  ) {}
+
+  toString() {
+    return `${this.container}[${this.property}]`;
+  }
 }
 
 export class TemplateState {
-    /**
-     * Before and after template content is rendered before/after all other templates.
-     * When a template is put into its own function, before/after templates are run outside of this function.
-     */
-    public template = '';
-
-    public ended = false;
-    public setter: string | ContainerAccessor = '';
-    public accessor: string | ContainerAccessor = '';
-
-    /**
-     * Strict means only use type guards of specificality of 1 (used for is()/validation()).
-     * For deserialization loose is used.
-     */
-    public validation?: 'strict' | 'loose';
-
-    /**
-     * When this is set all specificalities are used (used in union type guards to detect which member to pick).
-     */
-    public allSpecificalities?: TypeGuardRegistry;
-
-    public propertyName?: string | RuntimeCode;
-    public setterDisabled: boolean = false;
-
-    public parentTypes: Type[] = [];
-
-    public target: 'serialize' | 'deserialize' = 'serialize';
-
-    protected handledAnnotations: AnnotationDefinition[] = [];
-
-    constructor(
-        public originalSetter: string | ContainerAccessor,
-        public originalAccessor: string | ContainerAccessor,
-        public compilerContext: CompilerContext,
-        public registry: TemplateRegistry,
-        public namingStrategy: NamingStrategy = new NamingStrategy,
-        public jitStack: JitStack = new JitStack(),
-        public path: (string | RuntimeCode)[] = [],
-    ) {
-        this.setter = originalSetter;
-        this.accessor = originalAccessor;
-    }
-
-    isValidation(): boolean {
-        return !!this.validation;
-    }
-
-    withValidation(validation: this['validation']): this {
-        this.validation = validation;
-        return this;
-    }
-
-    includeAllSpecificalities(guardRegistry: TypeGuardRegistry): this {
-        this.allSpecificalities = guardRegistry;
-        return this;
-    }
-
-    replaceTemplate(template: string) {
-        this.template = template;
-    }
-
-    /**
-     * Forks as state, with an empty propertyName.
-     */
-    fork(setter?: string | ContainerAccessor, accessor?: string | ContainerAccessor, path?: (string | RuntimeCode)[]): TemplateState {
-        const state = new TemplateState(setter ?? this.setter, accessor ?? this.accessor, this.compilerContext, this.registry, this.namingStrategy, this.jitStack, path || this.path.slice(0));
-        state.validation = this.validation;
-        state.setterDisabled = this.setterDisabled;
-        state.target = this.target;
-        state.parentTypes = this.parentTypes;
-        state.allSpecificalities = this.allSpecificalities;
-        state.handledAnnotations = this.handledAnnotations.slice();
-        return state;
-    }
-
-    fullFork() {
-        return this.fork().forPropertyName(this.propertyName);
-    }
-
-    forRegistry(registry: TemplateRegistry) {
-        this.registry = registry;
-        return this;
-    }
-
-    forPropertyName(name?: string | number | symbol | RuntimeCode): this {
-        if (name === undefined) return this;
-        this.propertyName = name instanceof RuntimeCode ? name : String(name);
-        return this;
-    }
-
-    disableSetter(): this {
-        this.setterDisabled = true;
-        return this;
-    }
-
-    enableSetter(): this {
-        this.setterDisabled = true;
-        return this;
-    }
-
-    /**
-     * Can be used to track which annotation was already handled. Necessary to use with `isAnnotationHandled` to avoid infinite recursive loops
-     * when a serializer template issues sub calls depending on annotation data.
-     */
-    annotationHandled(annotation: AnnotationDefinition<any>): void {
-        this.handledAnnotations.push(annotation);
-    }
-
-    isAnnotationHandled(annotation: AnnotationDefinition<any>): boolean {
-        return this.handledAnnotations.includes(annotation);
-    }
-
-    get isSerialization(): boolean {
-        return this.target === 'serialize';
-    }
-
-    get isDeserialization(): boolean {
-        return this.target === 'deserialize';
-    }
-
-    extendPath(path: string | RuntimeCode | number | symbol): this {
-        this.path.push(path instanceof RuntimeCode ? path : String(path));
-        return this;
-    }
-
-    assignValidationError(code: string, message: string) {
-        this.setContext({ ValidationErrorItem: ValidationErrorItem });
-        return `if (state.errors) state.errors.push(new ValidationErrorItem(${collapsePath(this.path)}, ${JSON.stringify(code)}, ${JSON.stringify(message)}, ${this.originalAccessor}));`;
-    }
-
-    throwCode(type: Type | string, error?: string, accessor: string | ContainerAccessor = this.originalAccessor) {
-        this.setContext({ ValidationError, stringifyValueWithType });
-        const to = JSON.stringify(('string' === typeof type ? type : stringifyType(type)).replace(/\n/g, '').replace(/\s+/g, ' ').trim());
-        return `throw ValidationError.from([{code: 'type', path: ${collapsePath(this.path)}, message: 'Cannot convert ' + ${accessor} + ' to ' + ${to} ${error ? ` + '. ' + ${error}` : ''} }])`;
-    }
-
-    /**
-     * Adds template code for setting the `this.setter` variable. The expression evaluated in `code` is assigned to `this.setter`.
-     * `this.accessor` will point now to `this.setter`.
-     */
-    addSetter(code: string | { toString(): string }) {
-        this.template += `\n${this.setter} = ${code};`;
-        this.accessor = String(this.setter);
-    }
-
-    addSetterAndReportErrorIfInvalid(errorCode: string, message: string, code: string) {
-        this.addSetter(code);
-        if (this.isValidation()) {
-            this.addCodeForSetter(`if (!${this.setter}) ${this.assignValidationError(errorCode, message)}`);
-        }
-    }
-
-    /**
-     * Adds a converter function that is executed on the current `this.accessor` value.
-     *
-     * @example
-     * ```typescript
-     * serializer.deserializeRegistry.registerClass(Date, (type, state) => {
-     *     // make sure to check `v` as it is any!
-     *     state.convert((v: any) => {
-     *         if ('number' !== typeof v) throw new SerializationError('Expected number');
-     *         return new Date(v);
-     *     });
-     * });
-     *
-     * serializer.serializeRegistry.registerClass(Date, (type, state) => {
-     *     // in serialization `v` is always the specific type
-     *     state.convert((v: Date) => v.getTime());
-     * });
-     * ```
-     */
-    convert(callback: (value: any) => any) {
-        const converter = this.setVariable('convert', callback);
-        this.addCodeForSetter(`
+  /**
+   * Before and after template content is rendered before/after all other templates.
+   * When a template is put into its own function, before/after templates are run outside of this function.
+   */
+  public template = "";
+
+  public ended = false;
+  public setter: string | ContainerAccessor = "";
+  public accessor: string | ContainerAccessor = "";
+
+  /**
+   * Strict means only use type guards of specificality of 1 (used for is()/validation()).
+   * For deserialization loose is used.
+   */
+  public validation?: "strict" | "loose";
+
+  /**
+   * When this is set all specificalities are used (used in union type guards to detect which member to pick).
+   */
+  public allSpecificalities?: TypeGuardRegistry;
+
+  public propertyName?: string | RuntimeCode;
+  public setterDisabled: boolean = false;
+
+  public parentTypes: Type[] = [];
+
+  public target: "serialize" | "deserialize" = "serialize";
+
+  protected handledAnnotations: AnnotationDefinition[] = [];
+
+  constructor(
+    public originalSetter: string | ContainerAccessor,
+    public originalAccessor: string | ContainerAccessor,
+    public compilerContext: CompilerContext,
+    public registry: TemplateRegistry,
+    public namingStrategy: NamingStrategy = new NamingStrategy(),
+    public jitStack: JitStack = new JitStack(),
+    public path: (string | RuntimeCode)[] = []
+  ) {
+    this.setter = originalSetter;
+    this.accessor = originalAccessor;
+  }
+
+  isValidation(): boolean {
+    return !!this.validation;
+  }
+
+  withValidation(validation: this["validation"]): this {
+    this.validation = validation;
+    return this;
+  }
+
+  includeAllSpecificalities(guardRegistry: TypeGuardRegistry): this {
+    this.allSpecificalities = guardRegistry;
+    return this;
+  }
+
+  replaceTemplate(template: string) {
+    this.template = template;
+  }
+
+  /**
+   * Forks as state, with an empty propertyName.
+   */
+  fork(
+    setter?: string | ContainerAccessor,
+    accessor?: string | ContainerAccessor,
+    path?: (string | RuntimeCode)[]
+  ): TemplateState {
+    const state = new TemplateState(
+      setter ?? this.setter,
+      accessor ?? this.accessor,
+      this.compilerContext,
+      this.registry,
+      this.namingStrategy,
+      this.jitStack,
+      path || this.path.slice(0)
+    );
+    state.validation = this.validation;
+    state.setterDisabled = this.setterDisabled;
+    state.target = this.target;
+    state.parentTypes = this.parentTypes;
+    state.allSpecificalities = this.allSpecificalities;
+    state.handledAnnotations = this.handledAnnotations.slice();
+    return state;
+  }
+
+  fullFork() {
+    return this.fork().forPropertyName(this.propertyName);
+  }
+
+  forRegistry(registry: TemplateRegistry) {
+    this.registry = registry;
+    return this;
+  }
+
+  forPropertyName(name?: string | number | symbol | RuntimeCode): this {
+    if (name === undefined) return this;
+    this.propertyName = name instanceof RuntimeCode ? name : String(name);
+    return this;
+  }
+
+  disableSetter(): this {
+    this.setterDisabled = true;
+    return this;
+  }
+
+  enableSetter(): this {
+    this.setterDisabled = true;
+    return this;
+  }
+
+  /**
+   * Can be used to track which annotation was already handled. Necessary to use with `isAnnotationHandled` to avoid infinite recursive loops
+   * when a serializer template issues sub calls depending on annotation data.
+   */
+  annotationHandled(annotation: AnnotationDefinition<any>): void {
+    this.handledAnnotations.push(annotation);
+  }
+
+  isAnnotationHandled(annotation: AnnotationDefinition<any>): boolean {
+    return this.handledAnnotations.includes(annotation);
+  }
+
+  get isSerialization(): boolean {
+    return this.target === "serialize";
+  }
+
+  get isDeserialization(): boolean {
+    return this.target === "deserialize";
+  }
+
+  extendPath(path: string | RuntimeCode | number | symbol): this {
+    this.path.push(path instanceof RuntimeCode ? path : String(path));
+    return this;
+  }
+
+  assignValidationError(code: string, message: string) {
+    this.setContext({ ValidationErrorItem: ValidationErrorItem });
+    return `if (state.errors) state.errors.push(new ValidationErrorItem(${collapsePath(this.path)}, ${JSON.stringify(code)}, ${JSON.stringify(message)}, ${this.originalAccessor}));`;
+  }
+
+  throwCode(
+    type: Type | string,
+    error?: string,
+    accessor: string | ContainerAccessor = this.originalAccessor
+  ) {
+    this.setContext({ ValidationError, stringifyValueWithType });
+    const to = JSON.stringify(
+      ("string" === typeof type ? type : stringifyType(type))
+        .replace(/\n/g, "")
+        .replace(/\s+/g, " ")
+        .trim()
+    );
+    return `throw ValidationError.from([{code: 'type', path: ${collapsePath(this.path)}, message: 'Cannot convert ' + ${accessor} + ' to ' + ${to} ${error ? ` + '. ' + ${error}` : ""} }])`;
+  }
+
+  /**
+   * Adds template code for setting the `this.setter` variable. The expression evaluated in `code` is assigned to `this.setter`.
+   * `this.accessor` will point now to `this.setter`.
+   */
+  addSetter(code: string | { toString(): string }) {
+    this.template += `\n${this.setter} = ${code};`;
+    this.accessor = String(this.setter);
+  }
+
+  addSetterAndReportErrorIfInvalid(
+    errorCode: string,
+    message: string,
+    code: string
+  ) {
+    this.addSetter(code);
+    if (this.isValidation()) {
+      this.addCodeForSetter(
+        `if (!${this.setter}) ${this.assignValidationError(errorCode, message)}`
+      );
+    }
+  }
+
+  /**
+   * Adds a converter function that is executed on the current `this.accessor` value.
+   *
+   * @example
+   * ```typescript
+   * serializer.deserializeRegistry.registerClass(Date, (type, state) => {
+   *     // make sure to check `v` as it is any!
+   *     state.convert((v: any) => {
+   *         if ('number' !== typeof v) throw new SerializationError('Expected number');
+   *         return new Date(v);
+   *     });
+   * });
+   *
+   * serializer.serializeRegistry.registerClass(Date, (type, state) => {
+   *     // in serialization `v` is always the specific type
+   *     state.convert((v: Date) => v.getTime());
+   * });
+   * ```
+   */
+  convert(callback: (value: any) => any) {
+    const converter = this.setVariable("convert", callback);
+    this.addCodeForSetter(`
         try {
             ${this.setter} = ${converter}(${this.accessor});
         } catch (error) {
             if (error instanceof SerializationError) {
                 error.path = ${collapsePath(this.path)} + (error.path ? '.' + error.path : '');
             }
-            ${this.throwCode('any', 'error.message', this.accessor)};
+            ${this.throwCode("any", "error.message", this.accessor)};
         }
         `);
-    }
-
-    /**
-     * Allows to add a custom code that is executed on the current `this.accessor` value.
-     *
-     * @example
-     * ```typescript
-     * serializer.deserializeRegistry.addDecorator(
-     *     isCustomTypeClass,
-     *     (type, state) => {
-     *         state.touch((value) => {
-     *              if ('onLoad' in value) value.onLoad();
-     *         });
-     *     }
-     * );
-     * ```
-     */
-    touch(callback: (value: any) => void) {
-        const touch = this.setVariable('touch', callback);
-        this.addCode(`${touch}(${this.setter});`);
-    }
-
-    /**
-     * Stop executing next templates.
-     */
-    stop() {
-        this.ended = true;
-    }
-
-    setVariable(name: string, value?: any): string {
-        return this.compilerContext.reserveVariable(name, value);
-    }
-
-    setContext(values: { [name: string]: any }) {
-        this.compilerContext.set(values);
-    }
-
-    addCode(code: string) {
-        this.template += '\n' + code;
-    }
-
-    /**
-     * Adds template code for setting the `this.setter` variable manually, so use `${state.setter} = value`.
-     * `this.accessor` will point now to `this.setter`.
-     */
-    addCodeForSetter(code: string) {
-        this.template += '\n' + code;
-        this.accessor = String(this.setter);
-    }
-
-    hasSetterCode(): boolean {
-        return !!this.template;
-    }
+  }
+
+  /**
+   * Allows to add a custom code that is executed on the current `this.accessor` value.
+   *
+   * @example
+   * ```typescript
+   * serializer.deserializeRegistry.addDecorator(
+   *     isCustomTypeClass,
+   *     (type, state) => {
+   *         state.touch((value) => {
+   *              if ('onLoad' in value) value.onLoad();
+   *         });
+   *     }
+   * );
+   * ```
+   */
+  touch(callback: (value: any) => void) {
+    const touch = this.setVariable("touch", callback);
+    this.addCode(`${touch}(${this.setter});`);
+  }
+
+  /**
+   * Stop executing next templates.
+   */
+  stop() {
+    this.ended = true;
+  }
+
+  setVariable(name: string, value?: any): string {
+    return this.compilerContext.reserveVariable(name, value);
+  }
+
+  setContext(values: { [name: string]: any }) {
+    this.compilerContext.set(values);
+  }
+
+  addCode(code: string) {
+    this.template += "\n" + code;
+  }
+
+  /**
+   * Adds template code for setting the `this.setter` variable manually, so use `${state.setter} = value`.
+   * `this.accessor` will point now to `this.setter`.
+   */
+  addCodeForSetter(code: string) {
+    this.template += "\n" + code;
+    this.accessor = String(this.setter);
+  }
+
+  hasSetterCode(): boolean {
+    return !!this.template;
+  }
 }
 
 export type Template<T extends Type> = (type: T, state: TemplateState) => void;
@@ -612,164 +742,190 @@ export type TemplateHook = (type: Type, state: TemplateState) => void;
  * Just sets the state.setter to state.accessor without any modification.
  */
 export function noopTemplate(type: Type, state: TemplateState): void {
-    state.addSetter(state.accessor);
+  state.addSetter(state.accessor);
 }
 
 interface TemplateDecorator {
-    predicate: (type: Type) => boolean,
-    template: Template<any>
+  predicate: (type: Type) => boolean;
+  template: Template<any>;
 }
 
 export class TemplateRegistry {
-    protected static ids: number = 0;
-    id: number = TemplateRegistry.ids++;
-
-    protected templates: { [kind in ReflectionKind]?: Template<any>[] } = {};
-    protected decorator: TemplateDecorator[] = [];
-
-    public preHooks: TemplateHook[] = [];
-    public postHooks: TemplateHook[] = [];
-
-    public classTemplates = new Map<ClassType, Template<any>[]>();
-
-    constructor(public serializer: Serializer = new EmptySerializer()) {
-    }
-
-    clear() {
-        this.templates = {};
-        this.classTemplates.clear();
-        this.preHooks = [];
-        this.postHooks = [];
-    }
-
-    get(type: Type): Template<Type>[] {
-        if (type.kind === ReflectionKind.class) {
-            const classTemplates = this.classTemplates.get(type.classType);
-            if (classTemplates && classTemplates.length) return classTemplates;
-            if (type.classType === Set || type.classType === Map || binaryTypes.includes(type.classType)) return [];
-        }
-        return this.templates[type.kind] ||= [];
-    }
-
-    getDecorator(type: Type): Template<Type>[] {
-        return this.decorator.filter(v => v.predicate(type)).map(v => v.template);
-    }
-
-    /**
-     * Registers a template for all binary classes: ArrayBuffer, Uint8Array, Int8Array, etc.
-     */
-    registerBinary(template: Template<TypeClass>) {
-        for (const classType of binaryTypes) this.registerClass(classType, template);
-    }
-
-    /**
-     * Registers a template for a given class type.
-     *
-     * As soon as a single template has registered for the given classType the template registry
-     * only returns templates for this particular classType and omits all general purpose ReflectionKind.class templates for this particular classType.
-     */
-    registerClass(classType: ClassType, template: Template<TypeClass>) {
-        this.classTemplates.set(classType, [template]);
-    }
-
-    prependClass(classType: ClassType, template: Template<TypeClass>) {
-        this.getClassTemplates(classType).unshift(template);
-    }
-
-    appendClass(classType: ClassType, template: Template<TypeClass>) {
-        this.getClassTemplates(classType).push(template);
-    }
-
-    protected getClassTemplates(classType: ClassType): Template<TypeClass>[] {
-        let templates = this.classTemplates.get(classType);
-        if (!templates) {
-            templates = [];
-            this.classTemplates.set(classType, templates);
-        }
-        return templates;
-    }
-
-    addPreHook(callback: TemplateHook) {
-        this.preHooks.push(callback);
-    }
+  protected static ids: number = 0;
+  id: number = TemplateRegistry.ids++;
 
-    addPostHook(callback: TemplateHook) {
-        this.postHooks.push(callback);
-    }
+  protected templates: { [kind in ReflectionKind]?: Template<any>[] } = {};
+  protected decorator: TemplateDecorator[] = [];
 
-    /**
-     * Removes all registered templates.
-     */
-    unregister(kind: ReflectionKind) {
-        this.templates[kind] = undefined;
-    }
+  public preHooks: TemplateHook[] = [];
+  public postHooks: TemplateHook[] = [];
 
-    /**
-     * Registers a new template and replaces all existing (added via register,prepend,append).
-     */
-    register<T extends ReflectionKind>(kind: T, template: Template<FindType<Type, T>>) {
-        this.templates[kind] = [template];
-    }
-
-    /**
-     * Registers additional templates that handle type decorators/annotations. The templates can safely assume that the given type in `state.accessor`
-     * is already type-checked to be `T`.
-     *
-     * Decorator templates run last (after normal templates and postHook).
-     *
-     * This split between register and registerForDecorator is made to have a distinction between native type templates and additional user-made templates.
-     * This allows to fetch only decorator templates and decide upon the result whether additional code is necessary or not. (this would not be possible
-     * if everything is added to the `register` call that does always the basic checks).
-     */
-    addDecorator(predicate: (type: Type) => boolean, template: Template<Type>) {
-        this.decorator.push({ predicate, template });
-    }
+  public classTemplates = new Map<ClassType, Template<any>[]>();
 
-    /**
-     * Removes all registered decorators for a certain type.
-     */
-    removeDecorator(type: Type) {
-        this.decorator = this.decorator.filter(v => !v.predicate(type));
-    }
+  constructor(public serializer: Serializer = new EmptySerializer()) {}
 
-    prepend<T extends ReflectionKind>(kind: T, template: Template<FindType<Type, T>>) {
-        this.templates[kind] ||= [];
-        this.templates[kind]!.unshift(template);
-    }
+  clear() {
+    this.templates = {};
+    this.classTemplates.clear();
+    this.preHooks = [];
+    this.postHooks = [];
+  }
 
-    append<T extends ReflectionKind>(kind: T, template: Template<FindType<Type, T>>) {
-        this.templates[kind] ||= [];
-        this.templates[kind]!.push(template);
-    }
+  get(type: Type): Template<Type>[] {
+    if (type.kind === ReflectionKind.class) {
+      const classTemplates = this.classTemplates.get(type.classType);
+      if (classTemplates && classTemplates.length) return classTemplates;
+      if (
+        type.classType === Set ||
+        type.classType === Map ||
+        binaryTypes.includes(type.classType)
+      )
+        return [];
+    }
+    return (this.templates[type.kind] ||= []);
+  }
+
+  getDecorator(type: Type): Template<Type>[] {
+    return this.decorator.filter(v => v.predicate(type)).map(v => v.template);
+  }
+
+  /**
+   * Registers a template for all binary classes: ArrayBuffer, Uint8Array, Int8Array, etc.
+   */
+  registerBinary(template: Template<TypeClass>) {
+    for (const classType of binaryTypes)
+      this.registerClass(classType, template);
+  }
+
+  /**
+   * Registers a template for a given class type.
+   *
+   * As soon as a single template has registered for the given classType the template registry
+   * only returns templates for this particular classType and omits all general purpose ReflectionKind.class templates for this particular classType.
+   */
+  registerClass(classType: ClassType, template: Template<TypeClass>) {
+    this.classTemplates.set(classType, [template]);
+  }
+
+  prependClass(classType: ClassType, template: Template<TypeClass>) {
+    this.getClassTemplates(classType).unshift(template);
+  }
+
+  appendClass(classType: ClassType, template: Template<TypeClass>) {
+    this.getClassTemplates(classType).push(template);
+  }
+
+  protected getClassTemplates(classType: ClassType): Template<TypeClass>[] {
+    let templates = this.classTemplates.get(classType);
+    if (!templates) {
+      templates = [];
+      this.classTemplates.set(classType, templates);
+    }
+    return templates;
+  }
+
+  addPreHook(callback: TemplateHook) {
+    this.preHooks.push(callback);
+  }
+
+  addPostHook(callback: TemplateHook) {
+    this.postHooks.push(callback);
+  }
+
+  /**
+   * Removes all registered templates.
+   */
+  unregister(kind: ReflectionKind) {
+    this.templates[kind] = undefined;
+  }
+
+  /**
+   * Registers a new template and replaces all existing (added via register,prepend,append).
+   */
+  register<T extends ReflectionKind>(
+    kind: T,
+    template: Template<FindType<Type, T>>
+  ) {
+    this.templates[kind] = [template];
+  }
+
+  /**
+   * Registers additional templates that handle type decorators/annotations. The templates can safely assume that the given type in `state.accessor`
+   * is already type-checked to be `T`.
+   *
+   * Decorator templates run last (after normal templates and postHook).
+   *
+   * This split between register and registerForDecorator is made to have a distinction between native type templates and additional user-made templates.
+   * This allows to fetch only decorator templates and decide upon the result whether additional code is necessary or not. (this would not be possible
+   * if everything is added to the `register` call that does always the basic checks).
+   */
+  addDecorator(predicate: (type: Type) => boolean, template: Template<Type>) {
+    this.decorator.push({ predicate, template });
+  }
+
+  /**
+   * Removes all registered decorators for a certain type.
+   */
+  removeDecorator(type: Type) {
+    this.decorator = this.decorator.filter(v => !v.predicate(type));
+  }
+
+  prepend<T extends ReflectionKind>(
+    kind: T,
+    template: Template<FindType<Type, T>>
+  ) {
+    this.templates[kind] ||= [];
+    this.templates[kind]!.unshift(template);
+  }
+
+  append<T extends ReflectionKind>(
+    kind: T,
+    template: Template<FindType<Type, T>>
+  ) {
+    this.templates[kind] ||= [];
+    this.templates[kind]!.push(template);
+  }
 }
 
 /**
  * To avoid circular builds, class/object literal code is extract to its own function.
  * if this returns true, code is put into state to call an already existing function.
  */
-export function callExtractedFunctionIfAvailable(state: TemplateState, type: Type): boolean {
-    const jit = state.jitStack.get(state.registry, type);
-    if (!jit) return false;
-    const withSetter = !state.setterDisabled && state.setter;
-    state.addCode(`
-    //call jit=${jit.id} for setter="${state.setter}" via propertyName ${state.propertyName ? collapsePath([state.propertyName]) : ''}
-    ${withSetter ? `${state.setter} = ` : ''}${state.setVariable('jit', jit)}.fn(${state.accessor || 'undefined'}, state, ${collapsePath(state.path)});
+export function callExtractedFunctionIfAvailable(
+  state: TemplateState,
+  type: Type
+): boolean {
+  const jit = state.jitStack.get(state.registry, type);
+  if (!jit) return false;
+  const withSetter = !state.setterDisabled && state.setter;
+  state.addCode(`
+    //call jit=${jit.id} for setter="${state.setter}" via propertyName ${state.propertyName ? collapsePath([state.propertyName]) : ""}
+    ${withSetter ? `${state.setter} = ` : ""}${state.setVariable("jit", jit)}.fn(${state.accessor || "undefined"}, state, ${collapsePath(state.path)});
     `);
-    if (withSetter) state.accessor = state.setter;
-    return true;
+  if (withSetter) state.accessor = state.setter;
+  return true;
 }
 
-export function extractStateToFunctionAndCallIt(state: TemplateState, type: Type) {
-    const prepare = state.jitStack.prepare(state.registry, type);
-    callExtractedFunctionIfAvailable(state, type);
-    return { setFunction: prepare.prepare, id: prepare.id, state: state.fork('result', 'data', [new RuntimeCode('_path')]).forPropertyName(state.propertyName) };
+export function extractStateToFunctionAndCallIt(
+  state: TemplateState,
+  type: Type
+) {
+  const prepare = state.jitStack.prepare(state.registry, type);
+  callExtractedFunctionIfAvailable(state, type);
+  return {
+    setFunction: prepare.prepare,
+    id: prepare.id,
+    state: state
+      .fork("result", "data", [new RuntimeCode("_path")])
+      .forPropertyName(state.propertyName)
+  };
 }
 
 export function buildFunction(state: TemplateState, type: Type): Function {
-    let circularCheckBeginning = '';
-    let circularCheckEnd = '';
-    if (hasCircularReference(type)) {
-        circularCheckBeginning = `
+  let circularCheckBeginning = "";
+  let circularCheckEnd = "";
+  if (hasCircularReference(type)) {
+    circularCheckBeginning = `
         if (data) {
             if (state._stack) {
                 if (state._stack.includes(data)) return undefined;
@@ -779,9 +935,9 @@ export function buildFunction(state: TemplateState, type: Type): Function {
             state._stack.push(data);
         }
         `;
-        circularCheckEnd = `if (state._stack) state._stack.pop();`;
-    }
-    const code = `
+    circularCheckEnd = `if (state._stack) state._stack.pop();`;
+  }
+  const code = `
         var result;
         if (_path === undefined) _path = '';
         ${circularCheckBeginning}
@@ -792,156 +948,184 @@ export function buildFunction(state: TemplateState, type: Type): Function {
 
         return result;
     `;
-    return state.compilerContext.build(code, 'data', 'state', '_path');
+  return state.compilerContext.build(code, "data", "state", "_path");
 }
 
 export function executeTemplates(
-    state: TemplateState,
-    type: Type,
-    withLoose: boolean = true,
-    withCache: boolean = true,
+  state: TemplateState,
+  type: Type,
+  withLoose: boolean = true,
+  withCache: boolean = true
 ): string {
-    state.parentTypes.push(type);
+  state.parentTypes.push(type);
 
-    let originalState = state;
+  let originalState = state;
 
-    if (withLoose && state.validation === 'loose' && state.allSpecificalities) {
-        // check if the particular type has multiple specificalities
-        // if so, we need to generate a type guard that checks all specificalities.
-        // e.g. string supports `'string' === typeof' but as last resort also anything else.
-        // or Date supports `instanceof Date` but also `'string' === typeof` as last resort.
-        // This is not part of a union check. We have to do it for each type.
-        const typeGuards = state.allSpecificalities.getSortedTemplateRegistries();
-        const lines: string[] = [];
-        for (const [specificality, typeGuard] of typeGuards) {
-            const next = state.fork(undefined, 'data').forRegistry(typeGuard);
-            const fn = createTypeGuardFunction(type, next, undefined, false);
-            if (!fn) continue;
-            const guard = state.setVariable('guard_' + ReflectionKind[type.kind], fn);
-            const looseCheck = specificality <= 0 ? `state.loosely !== false && ` : '';
-
-            lines.push(`else if (${looseCheck}${guard}(${state.accessor})) {
+  if (withLoose && state.validation === "loose" && state.allSpecificalities) {
+    // check if the particular type has multiple specificalities
+    // if so, we need to generate a type guard that checks all specificalities.
+    // e.g. string supports `'string' === typeof' but as last resort also anything else.
+    // or Date supports `instanceof Date` but also `'string' === typeof` as last resort.
+    // This is not part of a union check. We have to do it for each type.
+    const typeGuards = state.allSpecificalities.getSortedTemplateRegistries();
+    const lines: string[] = [];
+    for (const [specificality, typeGuard] of typeGuards) {
+      const next = state.fork(undefined, "data").forRegistry(typeGuard);
+      const fn = createTypeGuardFunction(type, next, undefined, false);
+      if (!fn) continue;
+      const guard = state.setVariable("guard_" + ReflectionKind[type.kind], fn);
+      const looseCheck =
+        specificality <= 0 ? `state.loosely !== false && ` : "";
+
+      lines.push(`else if (${looseCheck}${guard}(${state.accessor})) {
                 //type = ${ReflectionKind[type.kind]}, specificality=${specificality}
                 ${state.setter} = true;
             }`);
-        }
+    }
 
-        state.template = `
+    state.template = `
             //type guard with multiple specificalities
-            if (false) {} ${lines.join(' ')}
+            if (false) {} ${lines.join(" ")}
             else {
                 ${state.setter} = false;
             }
         `;
-    } else {
-        let setFunction: undefined | ((fn: Function) => void);
-        if (withCache && (type.kind === ReflectionKind.objectLiteral
-            || type.kind === ReflectionKind.array || type.kind === ReflectionKind.tuple
-            || (type.kind === ReflectionKind.class && (type.classType === Set || type.classType === Map))
-            || isCustomTypeClass(type)) && !embeddedAnnotation.getFirst(type)
-        ) {
-            //wrap circular check if necessary
-            if (callExtractedFunctionIfAvailable(state, type)) {
-                state.parentTypes.pop();
-                return state.template;
-            } else {
-                const extract = extractStateToFunctionAndCallIt(state, type);
-                state.replaceTemplate(`
+  } else {
+    let setFunction: undefined | ((fn: Function) => void);
+    if (
+      withCache &&
+      (type.kind === ReflectionKind.objectLiteral ||
+        type.kind === ReflectionKind.array ||
+        type.kind === ReflectionKind.tuple ||
+        (type.kind === ReflectionKind.class &&
+          (type.classType === Set || type.classType === Map)) ||
+        isCustomTypeClass(type)) &&
+      !embeddedAnnotation.getFirst(type)
+    ) {
+      //wrap circular check if necessary
+      if (callExtractedFunctionIfAvailable(state, type)) {
+        state.parentTypes.pop();
+        return state.template;
+      } else {
+        const extract = extractStateToFunctionAndCallIt(state, type);
+        state.replaceTemplate(`
                     // extracted jit=${extract.id} function via state.propertyName="${getPropertyNameString(state.propertyName)}"
                     if (!state._stack || !state._stack.includes(${state.accessor})) {
                         ${state.template}
                     }
                 `);
-                state = extract.state;
-                setFunction = extract.setFunction;
-            }
-        }
+        state = extract.state;
+        setFunction = extract.setFunction;
+      }
+    }
 
-        const templates = state.registry.get(type);
-        for (const hook of state.registry.preHooks) hook(type, state);
-        for (const template of templates) {
-            template(type, state);
-            if (state.ended) break;
-        }
-        for (const hook of state.registry.postHooks) hook(type, state);
-        for (const template of state.registry.getDecorator(type)) template(type, state);
+    const templates = state.registry.get(type);
+    for (const hook of state.registry.preHooks) hook(type, state);
+    for (const template of templates) {
+      template(type, state);
+      if (state.ended) break;
+    }
+    for (const hook of state.registry.postHooks) hook(type, state);
+    for (const template of state.registry.getDecorator(type))
+      template(type, state);
 
-        if (setFunction) {
-            setFunction(buildFunction(state, type));
-        }
+    if (setFunction) {
+      setFunction(buildFunction(state, type));
     }
+  }
 
-    state.parentTypes.pop();
+  state.parentTypes.pop();
 
-    return originalState.template;
+  return originalState.template;
 }
 
 export function createConverterJSForMember(
-    property: ReflectionProperty | TypeProperty | TypePropertySignature | TypeIndexSignature,
-    state: TemplateState,
-    undefinedSetterCode: string = '',
-    nullSetterCode: string = '',
+  property:
+    | ReflectionProperty
+    | TypeProperty
+    | TypePropertySignature
+    | TypeIndexSignature,
+  state: TemplateState,
+  undefinedSetterCode: string = "",
+  nullSetterCode: string = ""
 ): string {
-    const { registry, compilerContext, namingStrategy } = state;
-    const type = property instanceof ReflectionProperty ? property.type : property.type;
-    const p = property instanceof ReflectionProperty ? property.property : property;
-
-    state.parentTypes.push(p);
-
-    undefinedSetterCode = undefinedSetterCode || executeTemplates(state.fork(), { kind: ReflectionKind.undefined });
-    nullSetterCode = nullSetterCode || executeTemplates(state.fork(), { kind: ReflectionKind.null });
-
-    let convert = executeTemplates(state.fork(), type);
-    state.parentTypes.pop();
-
-    let postTransform = '';
-
-    const isSerialization = registry.serializer.serializeRegistry === registry;
-    const isDeserialization = registry.serializer.deserializeRegistry === registry;
-
-    if (property instanceof ReflectionProperty) {
-        if (isSerialization) {
-            if (property.serializer) {
-                const fnVar = compilerContext.reserveVariable('transformer', property.serializer);
-                postTransform = `${state.setter} = ${fnVar}(${state.setter}, ${compilerContext.reserveConst(property)})`;
-            }
-        }
-
-        if (isDeserialization) {
-            if (property.deserializer) {
-                const fnVar = compilerContext.reserveVariable('transformer', property.deserializer);
-                postTransform = `${state.setter} = ${fnVar}(${state.setter}, ${compilerContext.reserveConst(property)})`;
-            }
-        }
-    }
-
-    const setExplicitUndefined = registry.serializer.setExplicitUndefined(type, state) && isOptional(property instanceof ReflectionProperty ? property.property : property);
-    const nullable = isNullable(type);
-
-    // // since JSON does not support undefined, we emulate it via using null for serialization, and convert that back to undefined when deserialization happens.
-    // // note: When the value is not defined (property.name in object === false), then this code will never run.
-    // let defaultValue = isSerialization ? 'null' : 'undefined';
-
-    // // if (property.hasDefault()) {
-    // //     defaultValue = `${compilerContext.reserveVariable('defaultValueGetter', property.getDefaultValueFunction())}()`;
-    // // } else
-    // if (!optional && nullable) {
-    //     defaultValue = 'null';
-    // }
-
-    //todo: clean that up. Way too much code for that simple functionality
-
-    state.setContext({ unpopulatedSymbol });
-    //note: this code is only reached when ${accessor} was actually defined checked by the 'in' operator.
-    return `
+  const { registry, compilerContext, namingStrategy } = state;
+  const type =
+    property instanceof ReflectionProperty ? property.type : property.type;
+  const p =
+    property instanceof ReflectionProperty ? property.property : property;
+
+  state.parentTypes.push(p);
+
+  undefinedSetterCode =
+    undefinedSetterCode ||
+    executeTemplates(state.fork(), { kind: ReflectionKind.undefined });
+  nullSetterCode =
+    nullSetterCode ||
+    executeTemplates(state.fork(), { kind: ReflectionKind.null });
+
+  let convert = executeTemplates(state.fork(), type);
+  state.parentTypes.pop();
+
+  let postTransform = "";
+
+  const isSerialization = registry.serializer.serializeRegistry === registry;
+  const isDeserialization =
+    registry.serializer.deserializeRegistry === registry;
+
+  if (property instanceof ReflectionProperty) {
+    if (isSerialization) {
+      if (property.serializer) {
+        const fnVar = compilerContext.reserveVariable(
+          "transformer",
+          property.serializer
+        );
+        postTransform = `${state.setter} = ${fnVar}(${state.setter}, ${compilerContext.reserveConst(property)})`;
+      }
+    }
+
+    if (isDeserialization) {
+      if (property.deserializer) {
+        const fnVar = compilerContext.reserveVariable(
+          "transformer",
+          property.deserializer
+        );
+        postTransform = `${state.setter} = ${fnVar}(${state.setter}, ${compilerContext.reserveConst(property)})`;
+      }
+    }
+  }
+
+  const setExplicitUndefined =
+    registry.serializer.setExplicitUndefined(type, state) &&
+    isOptional(
+      property instanceof ReflectionProperty ? property.property : property
+    );
+  const nullable = isNullable(type);
+
+  // // since JSON does not support undefined, we emulate it via using null for serialization, and convert that back to undefined when deserialization happens.
+  // // note: When the value is not defined (property.name in object === false), then this code will never run.
+  // let defaultValue = isSerialization ? 'null' : 'undefined';
+
+  // // if (property.hasDefault()) {
+  // //     defaultValue = `${compilerContext.reserveVariable('defaultValueGetter', property.getDefaultValueFunction())}()`;
+  // // } else
+  // if (!optional && nullable) {
+  //     defaultValue = 'null';
+  // }
+
+  //todo: clean that up. Way too much code for that simple functionality
+
+  state.setContext({ unpopulatedSymbol });
+  //note: this code is only reached when ${accessor} was actually defined checked by the 'in' operator.
+  return `
         if (${state.accessor} === undefined) {
             if (${setExplicitUndefined}) {
                 ${undefinedSetterCode}
             }
         } else if (${state.accessor} === null) {
-            //null acts on transport layer as telling an explicitly set undefined
-            //this is to support actual undefined as value across a transport layer. Otherwise it
-            //would be impossible to set a already set value to undefined back or override default value (since JSON.stringify() omits that information)
+            // null acts on transport layer as telling an explicitly set undefined
+            // this is to support actual undefined as value across a transport layer. Otherwise it
+            // would be impossible to set a already set value to undefined back or override default value (since JSON.stringify() omits that information)
             if (${nullable}) {
                 ${nullSetterCode}
             } else {
@@ -957,112 +1141,180 @@ export function createConverterJSForMember(
 }
 
 export function inAccessor(accessor: ContainerAccessor | string): string {
-    if ('string' === typeof accessor) return `${accessor} !== undefined`;
-    return `'object' === typeof ${accessor.container} && ${accessor.property} in ${accessor.container}`;
+  if ("string" === typeof accessor) return `${accessor} !== undefined`;
+  return `'object' === typeof ${accessor.container} && ${accessor.property} in ${accessor.container}`;
 }
 
-export function deserializeEmbedded(type: TypeClass | TypeObjectLiteral, state: TemplateState, container?: string): string {
-    const embedded = embeddedAnnotation.getFirst(type);
-    if (!embedded) return '';
-
-    const properties = resolveTypeMembers(type).filter(isPropertyMemberType);
-    const args: (ContainerAccessor | string)[] = [];
-    const assign: (ContainerAccessor | string)[] = [];
-    const loadArgs: string[] = [];
-    const setToUndefined = state.compilerContext.reserveName('setToUndefined');
-    const params = state.compilerContext.reserveName('params');
-    const requiredSet: string[] = ['true'];
-
-    function loadProperty(setter: ContainerAccessor, property: TypeProperty | TypePropertySignature) {
-        if (!isOptional(property) && !hasDefaultValue(property)) {
-            if (isNullable(property)) {
-                requiredSet.push(`${setter} !== undefined`);
-            } else {
-                requiredSet.push(`${setter} !== undefined && ${setter} !== null`);
-            }
-        }
-
-        const accessor = getEmbeddedAccessor(type, properties.length !== 1, state.accessor, state.registry.serializer, state.namingStrategy, property, embedded!, container);
-        const propertyState = state.fork(setter, accessor).extendPath(String(property.name));
-        if (hasEmbedded(property.type)) {
-            loadArgs.push(executeTemplates(propertyState, property.type));
-        } else {
-            if (accessor instanceof ContainerAccessor) {
-                const check = !containerProperty ? 'true' : isNullable(containerProperty) ? `${accessor} === undefined` : `(${accessor} === undefined || ${accessor} === null)`;
-                const setUndefined = containerProperty ? `if (${check}) { ${setToUndefined}++; }` : 'if (false) {} ';
-                loadArgs.push(`
+export function deserializeEmbedded(
+  type: TypeClass | TypeObjectLiteral,
+  state: TemplateState,
+  container?: string
+): string {
+  const embedded = embeddedAnnotation.getFirst(type);
+  if (!embedded) return "";
+
+  const properties = resolveTypeMembers(type).filter(isPropertyMemberType);
+  const args: (ContainerAccessor | string)[] = [];
+  const assign: (ContainerAccessor | string)[] = [];
+  const loadArgs: string[] = [];
+  const setToUndefined = state.compilerContext.reserveName("setToUndefined");
+  const params = state.compilerContext.reserveName("params");
+  const requiredSet: string[] = ["true"];
+
+  function loadProperty(
+    setter: ContainerAccessor,
+    property: TypeProperty | TypePropertySignature
+  ) {
+    if (!isOptional(property) && !hasDefaultValue(property)) {
+      if (isNullable(property)) {
+        requiredSet.push(`${setter} !== undefined`);
+      } else {
+        requiredSet.push(`${setter} !== undefined && ${setter} !== null`);
+      }
+    }
+
+    const accessor = getEmbeddedAccessor(
+      type,
+      properties.length !== 1,
+      state.accessor,
+      state.registry.serializer,
+      state.namingStrategy,
+      property,
+      embedded!,
+      container
+    );
+    const propertyState = state
+      .fork(setter, accessor)
+      .extendPath(String(property.name));
+    if (hasEmbedded(property.type)) {
+      loadArgs.push(executeTemplates(propertyState, property.type));
+    } else {
+      if (accessor instanceof ContainerAccessor) {
+        const check = !containerProperty
+          ? "true"
+          : isNullable(containerProperty)
+            ? `${accessor} === undefined`
+            : `(${accessor} === undefined || ${accessor} === null)`;
+        const setUndefined = containerProperty
+          ? `if (${check}) { ${setToUndefined}++; }`
+          : "if (false) {} ";
+        loadArgs.push(`
                     if (${inAccessor(accessor)}) {
                         ${setUndefined} else {
                             ${executeTemplates(propertyState, property.type)}
                         }
                     }`);
-            } else {
-                loadArgs.push(executeTemplates(propertyState, property.type));
-            }
-        }
-    }
-
-    const containerProperty = getEmbeddedProperty(type);
-    const constructorAssigned: string[] = [];
-    for (const property of getConstructorProperties(type).parameters) {
-        if ((property.kind == ReflectionKind.property || property.kind === ReflectionKind.propertySignature) && !excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
-            constructorAssigned.push(memberNameToString(property.name));
-            const setter = new ContainerAccessor(params, JSON.stringify(property.name));
-            loadProperty(setter, property);
-            args.push(setter);
-        } else {
-            args.push('undefined');
-        }
-    }
-
-    for (const property of properties) {
-        if ((property.kind == ReflectionKind.property || property.kind === ReflectionKind.propertySignature) && !excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
-            if (constructorAssigned.includes(memberNameToString(property.name))) continue;
-            const setter = new ContainerAccessor(params, JSON.stringify(property.name));
-            loadProperty(setter, property);
-            assign.push(`${new ContainerAccessor(state.setter, JSON.stringify(property.name))} = ` + setter);
-        }
-    }
-
-    const createObject = type.kind === ReflectionKind.objectLiteral ? `{}` : `new ${state.compilerContext.reserveConst(type.classType)}(${args.join(',')})`;
-
-    return `
+      } else {
+        loadArgs.push(executeTemplates(propertyState, property.type));
+      }
+    }
+  }
+
+  const containerProperty = getEmbeddedProperty(type);
+  const constructorAssigned: string[] = [];
+  for (const property of getConstructorProperties(type).parameters) {
+    if (
+      (property.kind == ReflectionKind.property ||
+        property.kind === ReflectionKind.propertySignature) &&
+      !excludedAnnotation.isExcluded(
+        property.type,
+        state.registry.serializer.name
+      )
+    ) {
+      constructorAssigned.push(memberNameToString(property.name));
+      const setter = new ContainerAccessor(
+        params,
+        JSON.stringify(property.name)
+      );
+      loadProperty(setter, property);
+      args.push(setter);
+    } else {
+      args.push("undefined");
+    }
+  }
+
+  for (const property of properties) {
+    if (
+      (property.kind == ReflectionKind.property ||
+        property.kind === ReflectionKind.propertySignature) &&
+      !excludedAnnotation.isExcluded(
+        property.type,
+        state.registry.serializer.name
+      )
+    ) {
+      if (constructorAssigned.includes(memberNameToString(property.name)))
+        continue;
+      const setter = new ContainerAccessor(
+        params,
+        JSON.stringify(property.name)
+      );
+      loadProperty(setter, property);
+      assign.push(
+        `${new ContainerAccessor(state.setter, JSON.stringify(property.name))} = ` +
+          setter
+      );
+    }
+  }
+
+  const createObject =
+    type.kind === ReflectionKind.objectLiteral
+      ? `{}`
+      : `new ${state.compilerContext.reserveConst(type.classType)}(${args.join(",")})`;
+
+  return `
         const ${params} = {};
         let ${setToUndefined} = 0;
-        ${loadArgs.join('\n')}
-        if (${requiredSet.join(' && ')}) {
+        ${loadArgs.join("\n")}
+        if (${requiredSet.join(" && ")}) {
             ${state.setter} = ${createObject};
-            ${assign.join(';\n')}
+            ${assign.join(";\n")}
         } else if (${setToUndefined} === ${properties.length}) {
             ${state.setter} = undefined;
         }
     `;
 }
 
-export function getIndexCheck(context: CompilerContext, i: string, type: Type): string {
-    if (type.kind === ReflectionKind.number) {
-        context.set({ isNumeric: isNumeric });
-        return `isNumeric(${i})`;
-    } else if (type.kind === ReflectionKind.string || type.kind === ReflectionKind.any) {
-        return `'string' === typeof ${i}`;
-    } else if (type.kind === ReflectionKind.symbol) {
-        return `'symbol' === typeof ${i}`;
-    } else if (type.kind === ReflectionKind.templateLiteral) {
-        context.set({ extendTemplateLiteral: extendTemplateLiteral });
-        const typeVar = context.reserveVariable('type', type);
-        return `'string' === typeof ${i} && extendTemplateLiteral({kind: ${ReflectionKind.literal}, literal: ${i}}, ${typeVar})`;
-    } else if (type.kind === ReflectionKind.union) {
-        return '(' + type.types.map(v => getIndexCheck(context, i, v)).join(' || ') + ')';
-    }
-    return '';
+export function getIndexCheck(
+  context: CompilerContext,
+  i: string,
+  type: Type
+): string {
+  if (type.kind === ReflectionKind.number) {
+    context.set({ isNumeric: isNumeric });
+    return `isNumeric(${i})`;
+  } else if (
+    type.kind === ReflectionKind.string ||
+    type.kind === ReflectionKind.any
+  ) {
+    return `'string' === typeof ${i}`;
+  } else if (type.kind === ReflectionKind.symbol) {
+    return `'symbol' === typeof ${i}`;
+  } else if (type.kind === ReflectionKind.templateLiteral) {
+    context.set({ extendTemplateLiteral: extendTemplateLiteral });
+    const typeVar = context.reserveVariable("type", type);
+    return `'string' === typeof ${i} && extendTemplateLiteral({kind: ${ReflectionKind.literal}, literal: ${i}}, ${typeVar})`;
+  } else if (type.kind === ReflectionKind.union) {
+    return (
+      "(" + type.types.map(v => getIndexCheck(context, i, v)).join(" || ") + ")"
+    );
+  }
+  return "";
 }
 
 function isLiteralType(t: TypeIndexSignature): boolean {
-    return t.index.kind === ReflectionKind.literal || (t.index.kind === ReflectionKind.union && t.index.types.some(v => v.kind === ReflectionKind.literal));
+  return (
+    t.index.kind === ReflectionKind.literal ||
+    (t.index.kind === ReflectionKind.union &&
+      t.index.types.some(v => v.kind === ReflectionKind.literal))
+  );
 }
 
 function isNumberType(t: TypeIndexSignature): boolean {
-    return t.index.kind === ReflectionKind.number || (t.index.kind === ReflectionKind.union && t.index.types.some(v => v.kind === ReflectionKind.number));
+  return (
+    t.index.kind === ReflectionKind.number ||
+    (t.index.kind === ReflectionKind.union &&
+      t.index.types.some(v => v.kind === ReflectionKind.number))
+  );
 }
 
 /**
@@ -1070,151 +1322,241 @@ function isNumberType(t: TypeIndexSignature): boolean {
  * We need to do that for numbers since all keys are string|symbol in runtime, and we need to check if a string is numeric first before falling back to string.
  */
 export function sortSignatures(signatures: TypeIndexSignature[]) {
-    signatures.sort((a, b) => {
-        if (isLiteralType(a)) return -1;
-        if (isNumberType(a) && !isLiteralType(b)) return -1;
-        return +1;
-    });
-}
+  signatures.sort((a, b) => {
+    if (isLiteralType(a)) {
+      return -1;
+    }
 
-export function getStaticDefaultCodeForProperty(member: TypeProperty | TypePropertySignature, setter: string | ContainerAccessor, state: TemplateState) {
-    let staticDefault = ``;
-    if (!hasDefaultValue(member) && !isOptional(member)) {
-        if (member.type.kind === ReflectionKind.literal) {
-            staticDefault = `${setter} = ${state.compilerContext.reserveConst(member.type.literal)};`;
-        } else if (isNullable(member.type)) {
-            staticDefault = `${setter} = null;`;
-        }
+    if (isNumberType(a) && !isLiteralType(b)) {
+      return -1;
     }
-    return staticDefault;
-}
 
-export function getEmbeddedProperty(type: TypeClass | TypeObjectLiteral): TypeProperty | TypePropertySignature | undefined {
-    if (!type.parent) return;
-    let resolved: Type = type.parent;
-    if (resolved.kind === ReflectionKind.union && resolved.parent) resolved = resolved.parent;
-    if (resolved.kind === ReflectionKind.propertySignature || resolved.kind === ReflectionKind.property) return resolved;
-    return;
+    return +1;
+  });
 }
 
-function getEmbeddedAccessor(type: TypeClass | TypeObjectLiteral, autoPrefix: boolean, accessor: string | ContainerAccessor, serializer: Serializer, namingStrategy: NamingStrategy, property: TypeProperty | TypePropertySignature, embedded: EmbeddedOptions, container?: string): string | ContainerAccessor {
-    const containerProperty = getEmbeddedProperty(type);
-
-    let embeddedPropertyName = JSON.stringify(namingStrategy.getPropertyName(property, serializer.name));
-    if (embedded.prefix !== undefined) {
-        embeddedPropertyName = embedded.prefix ? JSON.stringify(embedded.prefix) + ' + ' + embeddedPropertyName : embeddedPropertyName;
-    } else if (!container && containerProperty) {
-        embeddedPropertyName = JSON.stringify(containerProperty.name) + ` + '_' + ` + embeddedPropertyName;
-    }
-
-    if (container) return new ContainerAccessor(container, embeddedPropertyName);
+export function getStaticDefaultCodeForProperty(
+  member: TypeProperty | TypePropertySignature,
+  setter: string | ContainerAccessor,
+  state: TemplateState
+) {
+  let staticDefault = ``;
+  if (!hasDefaultValue(member) && !isOptional(member)) {
+    if (member.type.kind === ReflectionKind.literal) {
+      staticDefault = `${setter} = ${state.compilerContext.reserveConst(member.type.literal)};`;
+    } else if (isNullable(member.type)) {
+      staticDefault = `${setter} = null;`;
+    }
+  }
+
+  return staticDefault;
+}
 
-    if ((autoPrefix || embedded.prefix !== undefined)) {
-        //if autoPrefix or a prefix is set the embeddedPropertyName is emitted in a container, either manually provided or from accessor.
-        if (accessor instanceof ContainerAccessor) return new ContainerAccessor(accessor.container, embeddedPropertyName);
-        if (autoPrefix) return new ContainerAccessor(accessor, embeddedPropertyName);
-        if (containerProperty) return new ContainerAccessor(accessor, embeddedPropertyName);
-    }
+export function getEmbeddedProperty(
+  type: TypeClass | TypeObjectLiteral
+): TypeProperty | TypePropertySignature | undefined {
+  if (!type.parent) return;
+  let resolved: Type = type.parent;
+  if (resolved.kind === ReflectionKind.union && resolved.parent)
+    resolved = resolved.parent;
+  if (
+    resolved.kind === ReflectionKind.propertySignature ||
+    resolved.kind === ReflectionKind.property
+  )
+    return resolved;
+  return;
+}
 
-    return accessor;
+function getEmbeddedAccessor(
+  type: TypeClass | TypeObjectLiteral,
+  autoPrefix: boolean,
+  accessor: string | ContainerAccessor,
+  serializer: Serializer,
+  namingStrategy: NamingStrategy,
+  property: TypeProperty | TypePropertySignature,
+  embedded: EmbeddedOptions,
+  container?: string
+): string | ContainerAccessor {
+  const containerProperty = getEmbeddedProperty(type);
+
+  let embeddedPropertyName = JSON.stringify(
+    namingStrategy.getPropertyName(property, serializer.name)
+  );
+  if (embedded.prefix !== undefined) {
+    embeddedPropertyName = embedded.prefix
+      ? JSON.stringify(embedded.prefix) + " + " + embeddedPropertyName
+      : embeddedPropertyName;
+  } else if (!container && containerProperty) {
+    embeddedPropertyName =
+      JSON.stringify(containerProperty.name) +
+      ` + '_' + ` +
+      embeddedPropertyName;
+  }
+
+  if (container) return new ContainerAccessor(container, embeddedPropertyName);
+
+  if (autoPrefix || embedded.prefix !== undefined) {
+    //if autoPrefix or a prefix is set the embeddedPropertyName is emitted in a container, either manually provided or from accessor.
+    if (accessor instanceof ContainerAccessor)
+      return new ContainerAccessor(accessor.container, embeddedPropertyName);
+    if (autoPrefix)
+      return new ContainerAccessor(accessor, embeddedPropertyName);
+    if (containerProperty)
+      return new ContainerAccessor(accessor, embeddedPropertyName);
+  }
+
+  return accessor;
 }
 
 function groupFilter(type: Type): string {
-    const groupNames = groupAnnotation.getAnnotations(type);
-    return `(state.groups || state.groupsExclude ? isGroupAllowed(state, ${JSON.stringify(groupNames)}) : true)`;
+  const groupNames = groupAnnotation.getAnnotations(type);
+  return `(state.groups || state.groupsExclude ? isGroupAllowed(state, ${JSON.stringify(groupNames)}) : true)`;
 }
 
-export function serializeObjectLiteral(type: TypeObjectLiteral | TypeClass, state: TemplateState) {
-    const embedded = embeddedAnnotation.getFirst(type);
-    if (embedded) {
-        if (state.isDeserialization) {
-            const embedded = deserializeEmbedded(type, state);
-            if (embedded) {
-                state.addCode(embedded);
-                return;
-            }
-        } else {
-            const properties = resolveTypeMembers(type).filter(isPropertyMemberType);
-
-            if (properties.length === 1) {
-                const first = properties[0];
-                let name = getNameExpression(state.namingStrategy.getPropertyName(first, state.registry.serializer.name), state);
-                const setter = getEmbeddedAccessor(type, false, state.setter, state.registry.serializer, state.namingStrategy, first, embedded);
-                state.addCode(`
+export function serializeObjectLiteral(
+  type: TypeObjectLiteral | TypeClass,
+  state: TemplateState
+) {
+  const embedded = embeddedAnnotation.getFirst(type);
+  if (embedded) {
+    if (state.isDeserialization) {
+      const embedded = deserializeEmbedded(type, state);
+      if (embedded) {
+        state.addCode(embedded);
+        return;
+      }
+    } else {
+      const properties = resolveTypeMembers(type).filter(isPropertyMemberType);
+
+      if (properties.length === 1) {
+        const first = properties[0];
+        let name = getNameExpression(
+          state.namingStrategy.getPropertyName(
+            first,
+            state.registry.serializer.name
+          ),
+          state
+        );
+        const setter = getEmbeddedAccessor(
+          type,
+          false,
+          state.setter,
+          state.registry.serializer,
+          state.namingStrategy,
+          first,
+          embedded
+        );
+        state.addCode(`
             if (${inAccessor(state.accessor)}) {
                 ${executeTemplates(state.fork(setter, new ContainerAccessor(state.accessor, name)), first.type, false, false)}
             }`);
-            } else {
-                const lines: string[] = [];
-
-                let pre = '';
-                let post = '';
-                let container = '';
-                if (!(state.setter instanceof ContainerAccessor)) {
-                    //create own container
-                    container = state.compilerContext.reserveName('container');
-                    pre = `let ${container} = {}`;
-                    post = `${state.setter} = ${container}`;
-                }
+      } else {
+        const lines: string[] = [];
 
-                for (const property of properties) {
-                    const setter = getEmbeddedAccessor(type, true, state.setter, state.registry.serializer, state.namingStrategy, property, embedded, container);
-                    lines.push(createConverterJSForMember(property, state.fork(setter, new ContainerAccessor(state.accessor, JSON.stringify(property.name)))));
-                }
+        let pre = "";
+        let post = "";
+        let container = "";
+        if (!(state.setter instanceof ContainerAccessor)) {
+          //create own container
+          container = state.compilerContext.reserveName("container");
+          pre = `let ${container} = {}`;
+          post = `${state.setter} = ${container}`;
+        }
 
-                state.addCode(`
+        for (const property of properties) {
+          const setter = getEmbeddedAccessor(
+            type,
+            true,
+            state.setter,
+            state.registry.serializer,
+            state.namingStrategy,
+            property,
+            embedded,
+            container
+          );
+          lines.push(
+            createConverterJSForMember(
+              property,
+              state.fork(
+                setter,
+                new ContainerAccessor(
+                  state.accessor,
+                  JSON.stringify(property.name)
+                )
+              )
+            )
+          );
+        }
+
+        state.addCode(`
                 if (${inAccessor(state.accessor)}) {
                     ${pre}
-                    ${lines.join('\n')}
+                    ${lines.join("\n")}
                     ${post}
                 }
             `);
-            }
-        }
-        return;
+      }
     }
+    return;
+  }
+
+  state.setContext({ isGroupAllowed });
+
+  const v = state.compilerContext.reserveName("v");
+  const lines: string[] = [];
+
+  const signatures: TypeIndexSignature[] = [];
+  const existing: string[] = [];
+
+  const constructorArguments: string[] = [];
+  const handledPropertiesInConstructor: string[] = [];
+  const preLines: string[] = [];
+  if (state.isDeserialization && type.kind === ReflectionKind.class) {
+    const clazz = ReflectionClass.from(type.classType);
+    const constructor = clazz.getConstructorOrUndefined();
+    if (!clazz.disableConstructor && constructor) {
+      handledPropertiesInConstructor.push(
+        ...getDeepConstructorProperties(type).map(v => String(v.name))
+      );
+      const parameters = constructor.getParameters();
+      for (const parameter of parameters) {
+        if (!parameter.isProperty()) {
+          constructorArguments.push("undefined");
+          continue;
+        }
 
-    state.setContext({ isGroupAllowed });
-
-    const v = state.compilerContext.reserveName('v');
-    const lines: string[] = [];
-
-    const signatures: TypeIndexSignature[] = [];
-    const existing: string[] = [];
-
-    const constructorArguments: string[] = [];
-    const handledPropertiesInConstructor: string[] = [];
-    const preLines: string[] = [];
-    if (state.isDeserialization && type.kind === ReflectionKind.class) {
-        const clazz = ReflectionClass.from(type.classType);
-        const constructor = clazz.getConstructorOrUndefined();
-        if (!clazz.disableConstructor && constructor) {
-            handledPropertiesInConstructor.push(...getDeepConstructorProperties(type).map(v => String(v.name)));
-            const parameters = constructor.getParameters();
-            for (const parameter of parameters) {
-                if (!parameter.isProperty()) {
-                    constructorArguments.push('undefined');
-                    continue;
-                }
-
-                const property = clazz.getProperty(parameter.getName());
-                if (!property) continue;
-
-                if (property.isSerializerExcluded(state.registry.serializer.name)) {
-                    continue;
-                }
-                const argumentName = state.compilerContext.reserveVariable('c_' + parameter.getName());
-
-                const readName = getNameExpression(state.namingStrategy.getPropertyName(property.property, state.registry.serializer.name), state);
-
-                const propertyState = state.fork(argumentName, new ContainerAccessor(state.accessor, readName)).extendPath(String(property.getName()));
-                const staticDefault = property.type.kind === ReflectionKind.literal && !property.isOptional() ? `${argumentName} = ${state.compilerContext.reserveConst(property.type.literal)};` : '';
+        const property = clazz.getProperty(parameter.getName());
+        if (!property) continue;
 
-                const embedded = property.getEmbedded();
-                if (embedded) {
-                    preLines.push(executeTemplates(propertyState, property.type));
-                } else {
-                    preLines.push(`
+        if (property.isSerializerExcluded(state.registry.serializer.name)) {
+          continue;
+        }
+        const argumentName = state.compilerContext.reserveVariable(
+          "c_" + parameter.getName()
+        );
+
+        const readName = getNameExpression(
+          state.namingStrategy.getPropertyName(
+            property.property,
+            state.registry.serializer.name
+          ),
+          state
+        );
+
+        const propertyState = state
+          .fork(argumentName, new ContainerAccessor(state.accessor, readName))
+          .extendPath(String(property.getName()));
+        const staticDefault =
+          property.type.kind === ReflectionKind.literal &&
+          !property.isOptional()
+            ? `${argumentName} = ${state.compilerContext.reserveConst(property.type.literal)};`
+            : "";
+
+        const embedded = property.getEmbedded();
+        if (embedded) {
+          preLines.push(executeTemplates(propertyState, property.type));
+        } else {
+          preLines.push(`
                     ${argumentName} = undefined;
                     if (${inAccessor(propertyState.accessor as ContainerAccessor)} && ${groupFilter(parameter.type)}) {
                         ${createConverterJSForMember(property, propertyState)}
@@ -1222,285 +1564,413 @@ export function serializeObjectLiteral(type: TypeObjectLiteral | TypeClass, stat
                         ${staticDefault}
                     }
                 `);
-                }
-
-                constructorArguments.push(argumentName);
-            }
         }
-    }
 
-    for (const member of resolveTypeMembers(type)) {
-        if (member.kind === ReflectionKind.indexSignature) {
-            if (excludedAnnotation.isExcluded(member.type, state.registry.serializer.name)) continue;
-            signatures.push(member);
-        } else if (member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.property) {
-            if (!isPropertyMemberType(member)) continue;
-            if (excludedAnnotation.isExcluded(member.type, state.registry.serializer.name)) continue;
-            if (handledPropertiesInConstructor.includes(memberNameToString(member.name))) continue;
-
-            const name = state.namingStrategy.getPropertyName(member, state.registry.serializer.name);
-            const readName = getNameExpression(state.isDeserialization ? name : memberNameToString(member.name), state);
-            existing.push(readName);
-            const writeName = getNameExpression(state.isDeserialization ? memberNameToString(member.name) : name, state);
-            const setter = new ContainerAccessor(v, writeName);
-            const propertyState = state.fork(setter, new ContainerAccessor(state.accessor, readName)).extendPath(String(member.name));
-
-            const staticDefault = getStaticDefaultCodeForProperty(member, setter, state);
-            if (hasEmbedded(member.type)) {
-                lines.push(executeTemplates(propertyState, member.type));
-            } else {
-                lines.push(`
+        constructorArguments.push(argumentName);
+      }
+    }
+  }
+
+  for (const member of resolveTypeMembers(type)) {
+    if (member.kind === ReflectionKind.indexSignature) {
+      if (
+        excludedAnnotation.isExcluded(
+          member.type,
+          state.registry.serializer.name
+        )
+      )
+        continue;
+      signatures.push(member);
+    } else if (
+      member.kind === ReflectionKind.propertySignature ||
+      member.kind === ReflectionKind.property
+    ) {
+      if (!isPropertyMemberType(member)) continue;
+      if (
+        excludedAnnotation.isExcluded(
+          member.type,
+          state.registry.serializer.name
+        )
+      )
+        continue;
+      if (
+        handledPropertiesInConstructor.includes(memberNameToString(member.name))
+      )
+        continue;
+
+      const name = state.namingStrategy.getPropertyName(
+        member,
+        state.registry.serializer.name
+      );
+      const readName = getNameExpression(
+        state.isDeserialization ? name : memberNameToString(member.name),
+        state
+      );
+      existing.push(readName);
+      const writeName = getNameExpression(
+        state.isDeserialization ? memberNameToString(member.name) : name,
+        state
+      );
+      const setter = new ContainerAccessor(v, writeName);
+      const propertyState = state
+        .fork(setter, new ContainerAccessor(state.accessor, readName))
+        .extendPath(String(member.name));
+
+      const staticDefault = getStaticDefaultCodeForProperty(
+        member,
+        setter,
+        state
+      );
+      if (hasEmbedded(member.type)) {
+        lines.push(executeTemplates(propertyState, member.type));
+      } else {
+        lines.push(`
                 if (${readName} in ${state.accessor} && ${groupFilter(member.type)}) {
                     ${createConverterJSForMember(member, propertyState)}
                 } else { ${staticDefault} }
             `);
-            }
-        }
+      }
     }
+  }
 
-    if (signatures.length) {
-        const i = state.compilerContext.reserveName('i');
-        const existingCheck = existing.map(v => `${i} === ${v}`).join(' || ') || 'false';
-        const signatureLines: string[] = [];
+  if (signatures.length) {
+    const i = state.compilerContext.reserveName("i");
+    const existingCheck =
+      existing.map(v => `${i} === ${v}`).join(" || ") || "false";
+    const signatureLines: string[] = [];
 
-        sortSignatures(signatures);
+    sortSignatures(signatures);
 
-        for (const signature of signatures) {
-            signatureLines.push(`else if (${getIndexCheck(state.compilerContext, i, signature.index)} && ${groupFilter(signature.type)}) {
+    for (const signature of signatures) {
+      signatureLines.push(`else if (${getIndexCheck(state.compilerContext, i, signature.index)} && ${groupFilter(signature.type)}) {
                 ${createConverterJSForMember(signature, state.fork(new ContainerAccessor(v, i), new ContainerAccessor(state.accessor, i)).extendPath(new RuntimeCode(i)))}
             }`);
-        }
+    }
 
-        state.setContext({ hasProperty });
-        //the index signature type could be: string, number, symbol.
-        //or a literal when it was constructed by a mapped type.
-        lines.push(`
+    state.setContext({ hasProperty });
+    //the index signature type could be: string, number, symbol.
+    //or a literal when it was constructed by a mapped type.
+    lines.push(`
         for (const ${i} in ${state.accessor}) {
             if (!hasProperty(${state.accessor}, ${i})) continue;
             if (${existingCheck}) continue;
-            if (false) {} ${signatureLines.join(' ')}
+            if (false) {} ${signatureLines.join(" ")}
         }
         `);
-    }
-
-    let createObject = '{}';
-    const postLines: string[] = [];
-    if (state.isDeserialization && type.kind === ReflectionKind.class) {
-        const classType = state.compilerContext.reserveConst(type.classType);
-        const clazz = ReflectionClass.from(type.classType);
-        if (clazz.disableConstructor) {
-            createObject = `Object.create(${classType}.prototype);`;
-            for (const property of clazz.getProperties()) {
-                if (property.property.kind !== ReflectionKind.property || property.property.default === undefined) continue;
-                const defaultFn = state.compilerContext.reserveConst(property.property.default);
-                createObject += `\n${v}.${memberNameToString(property.name)} = ${defaultFn}.apply(${v});`;
-            }
-        } else {
-            createObject = `new ${classType}(${constructorArguments.join(', ')})`;
-            preLines.push(`const oldCheck = typeSettings.unpopulatedCheck; typeSettings.unpopulatedCheck = UnpopulatedCheck.None;`);
-            postLines.push(`typeSettings.unpopulatedCheck = oldCheck;`);
+  }
+
+  let createObject = "{}";
+  const postLines: string[] = [];
+  if (state.isDeserialization && type.kind === ReflectionKind.class) {
+    const classType = state.compilerContext.reserveConst(type.classType);
+    const clazz = ReflectionClass.from(type.classType);
+    if (clazz.disableConstructor) {
+      createObject = `Object.create(${classType}.prototype);`;
+      for (const property of clazz.getProperties()) {
+        if (
+          property.property.kind !== ReflectionKind.property ||
+          property.property.default === undefined
+        ) {
+          continue;
         }
+
+        const defaultFn = state.compilerContext.reserveConst(
+          property.property.default
+        );
+
+        createObject += `\n${v}.${memberNameToString(property.name)} = ${defaultFn}.apply(${v});`;
+      }
+    } else {
+      createObject = `new ${classType}(${constructorArguments.join(", ")})`;
+      preLines.push(
+        `const oldCheck = typeSettings.unpopulatedCheck; typeSettings.unpopulatedCheck = UnpopulatedCheck.None;`
+      );
+      postLines.push(`typeSettings.unpopulatedCheck = oldCheck;`);
     }
+  }
 
-    state.addCode(`
+  state.addCode(`
         if ('object' !== typeof ${state.accessor}) ${state.throwCode(type)}
-        ${preLines.join('\n')}
+        ${preLines.join("\n")}
         let ${v} = ${createObject};
-        ${postLines.join('\n')}
-        ${lines.join('\n')}
+        ${postLines.join("\n")}
+        ${lines.join("\n")}
         ${state.setter} = ${v};
     `);
 
-    if (referenceAnnotation.hasAnnotations(type) && !state.isAnnotationHandled(referenceAnnotation)) {
-        state.annotationHandled(referenceAnnotation);
-        state.setContext({ isObject, isReferenceInstance, isReferenceHydrated });
-        const reflection = ReflectionClass.from(type);
-        //the primary key is serialised for unhydrated references
+  if (
+    referenceAnnotation.hasAnnotations(type) &&
+    !state.isAnnotationHandled(referenceAnnotation)
+  ) {
+    state.annotationHandled(referenceAnnotation);
+    state.setContext({ isObject, isReferenceInstance, isReferenceHydrated });
+    const reflection = ReflectionClass.from(type);
+    //the primary key is serialised for unhydrated references
 
-        //when in deserialization a referenced is passed as is
-        const keepReference = state.isDeserialization ? `if (isReferenceInstance(${state.accessor})) {${state.setter} = ${state.accessor};} else ` : '';
+    //when in deserialization a referenced is passed as is
+    const keepReference = state.isDeserialization
+      ? `if (isReferenceInstance(${state.accessor})) {${state.setter} = ${state.accessor};} else `
+      : "";
 
-        state.replaceTemplate(`
+    state.replaceTemplate(`
         ${keepReference} if (isReferenceInstance(${state.accessor}) && !isReferenceHydrated(${state.accessor})) {
             ${executeTemplates(state.fork(state.setter, new ContainerAccessor(state.accessor, JSON.stringify(reflection.getPrimary().getName()))), reflection.getPrimary().getType())}
         } else {
             ${state.template}
         }
         `);
-    }
+  }
 }
 
-export function typeGuardEmbedded(type: TypeClass | TypeObjectLiteral, state: TemplateState, embedded: EmbeddedOptions) {
-    const properties = resolveTypeMembers(type).filter(isPropertyMemberType);
-    if (properties.length) {
-        for (const property of properties) {
-            if ((property.kind == ReflectionKind.property || property.kind === ReflectionKind.propertySignature) && !excludedAnnotation.isExcluded(property.type, state.registry.serializer.name)) {
-                //we pass 'data' as container, since type guards for TypeClass get their own function always and operate on `data` accessor.
-                const accessor = getEmbeddedAccessor(type, properties.length !== 1, state.accessor, state.registry.serializer, state.namingStrategy, property, embedded);
-                //note: withValidation('strict') fixes the test with current changes, but limits the use of Embedded (no new limitation added, but this made it obvious).
-                const propertyState = state.fork(state.setter, accessor).withValidation('strict').extendPath(String(property.name));
-                if (hasEmbedded(property.type)) {
-                    state.addCode(executeTemplates(propertyState, property.type));
-                } else {
-                    if (accessor instanceof ContainerAccessor) {
-                        state.addCode(`if (${inAccessor(accessor)}) {${createConverterJSForMember(property, propertyState)} }`);
-                    } else {
-                        state.addCode(createConverterJSForMember(property, propertyState));
-                    }
-                }
-            }
+export function typeGuardEmbedded(
+  type: TypeClass | TypeObjectLiteral,
+  state: TemplateState,
+  embedded: EmbeddedOptions
+) {
+  const properties = resolveTypeMembers(type).filter(isPropertyMemberType);
+  if (properties.length) {
+    for (const property of properties) {
+      if (
+        (property.kind == ReflectionKind.property ||
+          property.kind === ReflectionKind.propertySignature) &&
+        !excludedAnnotation.isExcluded(
+          property.type,
+          state.registry.serializer.name
+        )
+      ) {
+        //we pass 'data' as container, since type guards for TypeClass get their own function always and operate on `data` accessor.
+        const accessor = getEmbeddedAccessor(
+          type,
+          properties.length !== 1,
+          state.accessor,
+          state.registry.serializer,
+          state.namingStrategy,
+          property,
+          embedded
+        );
+        //note: withValidation('strict') fixes the test with current changes, but limits the use of Embedded (no new limitation added, but this made it obvious).
+        const propertyState = state
+          .fork(state.setter, accessor)
+          .withValidation("strict")
+          .extendPath(String(property.name));
+        if (hasEmbedded(property.type)) {
+          state.addCode(executeTemplates(propertyState, property.type));
+        } else {
+          if (accessor instanceof ContainerAccessor) {
+            state.addCode(
+              `if (${inAccessor(accessor)}) {${createConverterJSForMember(property, propertyState)} }`
+            );
+          } else {
+            state.addCode(createConverterJSForMember(property, propertyState));
+          }
         }
+      }
     }
+  }
 }
 
-export function typeGuardObjectLiteral(type: TypeObjectLiteral | TypeClass, state: TemplateState) {
-    //this function is used for both, serialize and deserialization. When serializing the type of `type` is strictly correct, so checking embedded fields would lead to wrong results.
-    //this embedded check is only necessary when checking types in deserializing.
-    if (state.target === 'deserialize') {
-        const embedded = embeddedAnnotation.getFirst(type);
-        if (embedded) {
-            state.addCode('//typeguard for embedded');
-            typeGuardEmbedded(type, state, embedded);
-            return;
-        }
-    }
-
-    const lines: string[] = [];
-    const signatures: TypeIndexSignature[] = [];
-    const existing: string[] = [];
-
-    //to resolve inheritance in TypeClass, use ReflectionClass
-    const reflection = ReflectionClass.from(type);
-
-    for (const member of reflection.type.types) {
-        if (member.kind === ReflectionKind.indexSignature) {
-            signatures.push(member);
-        } else if (member.kind === ReflectionKind.propertySignature || member.kind === ReflectionKind.property || member.kind === ReflectionKind.methodSignature || member.kind === ReflectionKind.method) {
-            if (member.kind === ReflectionKind.property || member.kind === ReflectionKind.method) {
-                if (member.abstract || member.static) continue;
-            }
-
-            if (member.name === 'constructor') continue;
-
-            if (state.target === 'deserialize' && (member.kind === ReflectionKind.method || member.kind === ReflectionKind.methodSignature)) {
-                // methods can not be part of serialized data, so we skip them.
-                continue;
-            }
-
-            const readName = member.kind === ReflectionKind.methodSignature || member.kind === ReflectionKind.method
-                ? getNameExpression(member.name, state)
-                : getNameExpression(state.isDeserialization ? state.namingStrategy.getPropertyName(member, state.registry.serializer.name) : memberNameToString(member.name), state);
-
-            const checkValid = state.compilerContext.reserveName('check');
-            const propertyAccessor = new ContainerAccessor(state.accessor, readName);
-            const propertyState = state.fork(checkValid, propertyAccessor).extendPath(String(member.name));
-
-            const isEmbedded = member.kind === ReflectionKind.property || member.kind === ReflectionKind.propertySignature
-                ? hasEmbedded(member.type) : undefined;
+export function typeGuardObjectLiteral(
+  type: TypeObjectLiteral | TypeClass,
+  state: TemplateState
+) {
+  //this function is used for both, serialize and deserialization. When serializing the type of `type` is strictly correct, so checking embedded fields would lead to wrong results.
+  //this embedded check is only necessary when checking types in deserializing.
+  if (state.target === "deserialize") {
+    const embedded = embeddedAnnotation.getFirst(type);
+    if (embedded) {
+      state.addCode("//typeguard for embedded");
+      typeGuardEmbedded(type, state, embedded);
+      return;
+    }
+  }
+
+  const lines: string[] = [];
+  const signatures: TypeIndexSignature[] = [];
+  const existing: string[] = [];
+
+  //to resolve inheritance in TypeClass, use ReflectionClass
+  const reflection = ReflectionClass.from(type);
+
+  for (const member of reflection.type.types) {
+    if (member.kind === ReflectionKind.indexSignature) {
+      signatures.push(member);
+    } else if (
+      member.kind === ReflectionKind.propertySignature ||
+      member.kind === ReflectionKind.property ||
+      member.kind === ReflectionKind.methodSignature ||
+      member.kind === ReflectionKind.method
+    ) {
+      if (
+        member.kind === ReflectionKind.property ||
+        member.kind === ReflectionKind.method
+      ) {
+        if (member.abstract || member.static) continue;
+      }
+
+      if (member.name === "constructor") continue;
+
+      if (
+        state.target === "deserialize" &&
+        (member.kind === ReflectionKind.method ||
+          member.kind === ReflectionKind.methodSignature)
+      ) {
+        // methods can not be part of serialized data, so we skip them.
+        continue;
+      }
+
+      const readName =
+        member.kind === ReflectionKind.methodSignature ||
+        member.kind === ReflectionKind.method
+          ? getNameExpression(member.name, state)
+          : getNameExpression(
+              state.isDeserialization
+                ? state.namingStrategy.getPropertyName(
+                    member,
+                    state.registry.serializer.name
+                  )
+                : memberNameToString(member.name),
+              state
+            );
 
-            if (isEmbedded && (member.kind === ReflectionKind.property || member.kind === ReflectionKind.propertySignature)) {
-                const template = executeTemplates(propertyState, member.type);
-                if (!template) throw new Error(`No template found for ${member.type.kind}`);
+      const checkValid = state.compilerContext.reserveName("check");
+      const propertyAccessor = new ContainerAccessor(state.accessor, readName);
+      const propertyState = state
+        .fork(checkValid, propertyAccessor)
+        .extendPath(String(member.name));
+
+      const isEmbedded =
+        member.kind === ReflectionKind.property ||
+        member.kind === ReflectionKind.propertySignature
+          ? hasEmbedded(member.type)
+          : undefined;
+
+      if (
+        isEmbedded &&
+        (member.kind === ReflectionKind.property ||
+          member.kind === ReflectionKind.propertySignature)
+      ) {
+        const template = executeTemplates(propertyState, member.type);
+        if (!template)
+          throw new Error(`No template found for ${member.type.kind}`);
+
+        lines.push(`let ${checkValid} = false;` + template);
+      } else {
+        let optional = isOptional(member);
+        if (
+          state.validation === "loose" &&
+          member.kind === ReflectionKind.property &&
+          member.default
+        ) {
+          optional = true;
+        }
 
-                lines.push(`let ${checkValid} = false;` + template);
-            } else {
-                let optional = isOptional(member);
-                if (state.validation === 'loose' && member.kind === ReflectionKind.property && member.default) {
-                    optional = true;
-                }
-                let optionalCheck = optional
-                    ? `${propertyAccessor} !== undefined && ` + (!isNullable(member) ? `${propertyAccessor} !== null && ` : '')
-                    : '';
-                existing.push(readName);
-
-                state.setContext({ unpopulatedSymbol });
-                const forType: Type = member.kind === ReflectionKind.methodSignature || member.kind === ReflectionKind.method
-                    ? { kind: ReflectionKind.function, name: memberNameToString(member.name), return: member.return, parameters: member.parameters }
-                    : member.type;
-                const checkTemplate = executeTemplates(propertyState, forType).trim();
-                lines.push(`
+        let optionalCheck = optional
+          ? `${propertyAccessor} !== undefined && ` +
+            (!isNullable(member) ? `${propertyAccessor} !== null && ` : "")
+          : "";
+        existing.push(readName);
+
+        state.setContext({ unpopulatedSymbol });
+        const forType: Type =
+          member.kind === ReflectionKind.methodSignature ||
+          member.kind === ReflectionKind.method
+            ? {
+                kind: ReflectionKind.function,
+                name: memberNameToString(member.name),
+                return: member.return,
+                parameters: member.parameters
+              }
+            : member.type;
+        const checkTemplate = executeTemplates(propertyState, forType).trim();
+        lines.push(`
                 if (${optionalCheck} ${propertyAccessor} !== unpopulatedSymbol) {
                     let ${checkValid} = false;
                     ${checkTemplate || `// no template found for member ${String(member.name)}.type.kind=${forType.kind}`}
                     if (!${checkValid}) ${state.setter} = false;
                 }`);
-            }
-        }
-    }
-
-    if (signatures.length) {
-        const i = state.compilerContext.reserveName('i');
-        const existingCheck = existing.map(v => `${i} === ${v}`).join(' || ') || 'false';
-        const signatureLines: string[] = [];
-
-        sortSignatures(signatures);
-
-        for (const signature of signatures) {
-            const checkValid = state.compilerContext.reserveName('check');
-            const checkTemplate = executeTemplates(state.fork(checkValid, new ContainerAccessor(state.accessor, i)).extendPath(new RuntimeCode(i)), signature.type).trim();
-            signatureLines.push(`else if (${getIndexCheck(state.compilerContext, i, signature.index)}) {
+      }
+    }
+  }
+
+  if (signatures.length) {
+    const i = state.compilerContext.reserveName("i");
+    const existingCheck =
+      existing.map(v => `${i} === ${v}`).join(" || ") || "false";
+    const signatureLines: string[] = [];
+
+    sortSignatures(signatures);
+
+    for (const signature of signatures) {
+      const checkValid = state.compilerContext.reserveName("check");
+      const checkTemplate = executeTemplates(
+        state
+          .fork(checkValid, new ContainerAccessor(state.accessor, i))
+          .extendPath(new RuntimeCode(i)),
+        signature.type
+      ).trim();
+      signatureLines.push(`else if (${getIndexCheck(state.compilerContext, i, signature.index)}) {
                 let ${checkValid} = false;
                 ${checkTemplate || `// no template found for signature.type.kind=${signature.type.kind}`}
                 if (!${checkValid}) ${state.setter} = false;
             }`);
-        }
+    }
 
-        state.setContext({ hasProperty });
-        //the index signature type could be: string, number, symbol.
-        //or a literal when it was constructed by a mapped type.
-        lines.push(`
+    state.setContext({ hasProperty });
+    //the index signature type could be: string, number, symbol.
+    //or a literal when it was constructed by a mapped type.
+    lines.push(`
         for (const ${i} in ${state.accessor}) {
             if (!hasProperty(${state.accessor}, ${i})) continue;
             if (${existingCheck}) continue;
             if (!${state.setter}) {
                 break;
-            } ${signatureLines.join(' ')}
+            } ${signatureLines.join(" ")}
             else {
                 ${state.setter} = false;
                 break;
             }
         }
         `);
-    }
-
-    let customValidatorCall = '';
-    if (type.kind === ReflectionKind.class) {
-        const reflection = ReflectionClass.from(type.classType);
-        if (reflection.validationMethod) {
-            const resVar = state.setVariable('validationResult');
-            const method = state.setVariable('method', reflection.validationMethod);
-            customValidatorCall = `
+  }
+
+  let customValidatorCall = "";
+  if (type.kind === ReflectionKind.class) {
+    const reflection = ReflectionClass.from(type.classType);
+    if (reflection.validationMethod) {
+      const resVar = state.setVariable("validationResult");
+      const method = state.setVariable("method", reflection.validationMethod);
+      customValidatorCall = `
             if (${state.setter}) {
                 ${resVar} = ${state.accessor}[${method}]();
                 if (${resVar} && state.errors) state.errors.push(new ValidationErrorItem(${resVar}.path || ${collapsePath(state.path)}, ${resVar}.code, ${resVar}.message));
             }
             `;
-        }
     }
+  }
 
-    state.setContext({ isObjectLiteral });
+  state.setContext({ isObjectLiteral });
 
-    state.addCodeForSetter(`
+  state.addCodeForSetter(`
         ${state.setter} = true;
         if (${state.accessor} && isObjectLiteral(${state.accessor})) {
-            ${lines.join('\n')}
+            ${lines.join("\n")}
             ${customValidatorCall}
         } else {
-            if (${state.isValidation()}) ${state.assignValidationError('type', 'Not an object')}
+            if (${state.isValidation()}) ${state.assignValidationError("type", "Not an object")}
             ${state.setter} = false;
         }
     `);
 }
 
 export function serializeArray(type: TypeArray, state: TemplateState) {
-    state.setContext({ isIterable });
-    const v = state.compilerContext.reserveName('v');
-    const tempIterable = state.compilerContext.reserveName('tempIterable');
-    const i = state.compilerContext.reserveName('i');
-    const item = state.compilerContext.reserveName('item');
-
-    //we just use `a.length` to check whether its array-like, because Array.isArray() is way too slow.
-    state.addCodeForSetter(`
+  state.setContext({ isIterable });
+  const v = state.compilerContext.reserveName("v");
+  const tempIterable = state.compilerContext.reserveName("tempIterable");
+  const i = state.compilerContext.reserveName("i");
+  const item = state.compilerContext.reserveName("item");
+
+  //we just use `a.length` to check whether its array-like, because Array.isArray() is way too slow.
+  state.addCodeForSetter(`
          if (isIterable(${state.accessor})) {
             const ${tempIterable} = ${state.accessor};
             ${state.setter} = [];
@@ -1516,12 +1986,12 @@ export function serializeArray(type: TypeArray, state: TemplateState) {
 }
 
 export function typeGuardArray(elementType: Type, state: TemplateState) {
-    state.setContext({ isIterable, iterableSize });
-    const v = state.compilerContext.reserveName('v');
-    const i = state.compilerContext.reserveName('i');
-    const item = state.compilerContext.reserveName('item');
-    //we just use `a.length` to check whether its array-like, because Array.isArray() is way too slow.
-    state.addCodeForSetter(`
+  state.setContext({ isIterable, iterableSize });
+  const v = state.compilerContext.reserveName("v");
+  const i = state.compilerContext.reserveName("i");
+  const item = state.compilerContext.reserveName("item");
+  //we just use `a.length` to check whether its array-like, because Array.isArray() is way too slow.
+  state.addCodeForSetter(`
          let ${v} = false;
          let ${i} = 0;
          if (isIterable(${state.accessor})) {
@@ -1531,32 +2001,32 @@ export function typeGuardArray(elementType: Type, state: TemplateState) {
                 ${i}++;
             }
          } else if (${state.isValidation()}) {
-            ${state.assignValidationError('type', 'Not an array')}
+            ${state.assignValidationError("type", "Not an array")}
          }
          ${state.setter} = ${v};
     `);
 }
 
 function serializeTuple(type: TypeTuple, state: TemplateState) {
-    //[string, number], easy
-    //[...string, number], easy
-    //[number, ...string], easy
-    //[number, ...string, number, string], medium
-    const lines: string[] = [];
-    let restEndOffset = 0;
-    const _ = state.compilerContext.reserveName('_');
-    const i = state.compilerContext.reserveName('i');
-
-    for (let i = 0; i < type.types.length; i++) {
-        if (type.types[i].type.kind === ReflectionKind.rest) {
-            restEndOffset = type.types.length - (i + 1);
-            break;
-        }
-    }
-
-    for (const member of type.types) {
-        if (member.type.kind === ReflectionKind.rest) {
-            lines.push(`
+  //[string, number], easy
+  //[...string, number], easy
+  //[number, ...string], easy
+  //[number, ...string, number, string], medium
+  const lines: string[] = [];
+  let restEndOffset = 0;
+  const _ = state.compilerContext.reserveName("_");
+  const i = state.compilerContext.reserveName("i");
+
+  for (let i = 0; i < type.types.length; i++) {
+    if (type.types[i].type.kind === ReflectionKind.rest) {
+      restEndOffset = type.types.length - (i + 1);
+      break;
+    }
+  }
+
+  for (const member of type.types) {
+    if (member.type.kind === ReflectionKind.rest) {
+      lines.push(`
             for (; ${i} < ${state.accessor}.length - ${restEndOffset}; ${i}++) {
                 ${_} = undefined;
                 ${executeTemplates(state.fork(_, new ContainerAccessor(state.accessor, i)).extendPath(member.name || new RuntimeCode(i)), member.type.type)}
@@ -1567,8 +2037,8 @@ function serializeTuple(type: TypeTuple, state: TemplateState) {
                 }
             }
             `);
-        } else {
-            lines.push(`
+    } else {
+      lines.push(`
             ${_} = undefined;
             ${executeTemplates(state.fork(_, new ContainerAccessor(state.accessor, i)).extendPath(member.name || new RuntimeCode(i)), member.type)}
             if (${_} !== undefined) {
@@ -1578,37 +2048,37 @@ function serializeTuple(type: TypeTuple, state: TemplateState) {
             }
             ${i}++;
             `);
-        }
     }
+  }
 
-    state.addCodeForSetter(`
+  state.addCodeForSetter(`
         let ${_};
         let ${i} = 0;
         ${state.setter} = [];
-        ${lines.join('\n')}
+        ${lines.join("\n")}
     `);
 }
 
 function typeGuardTuple(type: TypeTuple, state: TemplateState) {
-    //[string, number], easy
-    //[...string, number], easy
-    //[number, ...string], easy
-    //[number, ...string, number, string], medium
-    const lines: string[] = [];
-    let restEndOffset = 0;
-    const v = state.compilerContext.reserveName('v');
-    const i = state.compilerContext.reserveName('i');
-
-    for (let i = 0; i < type.types.length; i++) {
-        if (type.types[i].type.kind === ReflectionKind.rest) {
-            restEndOffset = type.types.length - (i + 1);
-            break;
-        }
-    }
-
-    for (const member of type.types) {
-        if (member.type.kind === ReflectionKind.rest) {
-            lines.push(`
+  //[string, number], easy
+  //[...string, number], easy
+  //[number, ...string], easy
+  //[number, ...string, number, string], medium
+  const lines: string[] = [];
+  let restEndOffset = 0;
+  const v = state.compilerContext.reserveName("v");
+  const i = state.compilerContext.reserveName("i");
+
+  for (let i = 0; i < type.types.length; i++) {
+    if (type.types[i].type.kind === ReflectionKind.rest) {
+      restEndOffset = type.types.length - (i + 1);
+      break;
+    }
+  }
+
+  for (const member of type.types) {
+    if (member.type.kind === ReflectionKind.rest) {
+      lines.push(`
             for (; ${v} && ${i} < ${state.accessor}.length - ${restEndOffset}; ${i}++) {
                 ${executeTemplates(state.fork(v, new ContainerAccessor(state.accessor, i)).extendPath(member.name || new RuntimeCode(i)), member.type.type)}
                 if (!${v}) {
@@ -1616,92 +2086,107 @@ function typeGuardTuple(type: TypeTuple, state: TemplateState) {
                 }
             }
             `);
-        } else {
-            const optionalCheck = member.optional ? `${state.accessor}[${i}] !== undefined` : 'true';
-            lines.push(`
+    } else {
+      const optionalCheck = member.optional
+        ? `${state.accessor}[${i}] !== undefined`
+        : "true";
+      lines.push(`
             if (${v} && ${optionalCheck}) {
                 ${executeTemplates(state.fork(v, new ContainerAccessor(state.accessor, i)).extendPath(member.name || new RuntimeCode(i)), member.type)}
                 ${i}++;
             }
             `);
-        }
     }
+  }
 
-    state.setContext({ isArray: isArray });
-    state.addCodeForSetter(`
+  state.setContext({ isArray: isArray });
+  state.addCodeForSetter(`
         if (isArray(${state.accessor})) {
             let ${v} = true;
             let ${i} = 0;
-            ${lines.join('\n')}
+            ${lines.join("\n")}
             ${state.setter} = ${v};
         } else {
-            if (${state.isValidation()}) ${state.assignValidationError('type', 'Not an array')}
+            if (${state.isValidation()}) ${state.assignValidationError("type", "Not an array")}
             ${state.setter} = false;
         }
     `);
 }
 
 export function getSetTypeToArray(type: TypeClass): TypeArray {
-    const jit = getTypeJitContainer(type);
-    if (jit.forwardSetToArray) return jit.forwardSetToArray;
+  const jit = getTypeJitContainer(type);
+  if (jit.forwardSetToArray) return jit.forwardSetToArray;
 
-    const value = type.arguments?.[0] || { kind: ReflectionKind.any };
+  const value = type.arguments?.[0] || { kind: ReflectionKind.any };
 
-    return jit.forwardSetToArray = {
-        kind: ReflectionKind.array, type: value,
-    } as TypeArray;
+  return (jit.forwardSetToArray = {
+    kind: ReflectionKind.array,
+    type: value
+  } as TypeArray);
 }
 
 export function getMapTypeToArray(type: TypeClass): TypeArray {
-    const jit = getTypeJitContainer(type);
-    if (jit.forwardMapToArray) return jit.forwardMapToArray;
-
-    const index = type.arguments?.[0] || { kind: ReflectionKind.any };
-    const value = type.arguments?.[1] || { kind: ReflectionKind.any };
-
-    jit.forwardMapToArray = {
-        kind: ReflectionKind.array, type: copyAndSetParent({
-            kind: ReflectionKind.tuple, types: [
-                { kind: ReflectionKind.tupleMember, name: 'key', type: index },
-                { kind: ReflectionKind.tupleMember, name: 'value', type: value },
-            ],
-        }),
-    };
-
-    return jit.forwardMapToArray;
+  const jit = getTypeJitContainer(type);
+  if (jit.forwardMapToArray) return jit.forwardMapToArray;
+
+  const index = type.arguments?.[0] || { kind: ReflectionKind.any };
+  const value = type.arguments?.[1] || { kind: ReflectionKind.any };
+
+  jit.forwardMapToArray = {
+    kind: ReflectionKind.array,
+    type: copyAndSetParent({
+      kind: ReflectionKind.tuple,
+      types: [
+        { kind: ReflectionKind.tupleMember, name: "key", type: index },
+        { kind: ReflectionKind.tupleMember, name: "value", type: value }
+      ]
+    })
+  };
+
+  return jit.forwardMapToArray;
 }
 
 export function getNTypeToArray(type: TypeClass, n: number): TypeArray {
-    const jit = getTypeJitContainer(type);
-    const name = `forwardNTypeToArray${n}`;
-    if (jit[name]) return jit[name];
+  const jit = getTypeJitContainer(type);
+  const name = `forwardNTypeToArray${n}`;
+  if (jit[name]) return jit[name];
 
-    const value = type.arguments?.[n] || { kind: ReflectionKind.any };
+  const value = type.arguments?.[n] || { kind: ReflectionKind.any };
 
-    return jit[name] = {
-        kind: ReflectionKind.array, type: value,
-    } as TypeArray;
+  return (jit[name] = {
+    kind: ReflectionKind.array,
+    type: value
+  } as TypeArray);
 }
 
-export function executeTypeArgumentAsArray(type: TypeClass, typeIndex: number, state: TemplateState) {
-    executeTemplates(state, getNTypeToArray(type, typeIndex), true, false);
+export function executeTypeArgumentAsArray(
+  type: TypeClass,
+  typeIndex: number,
+  state: TemplateState
+) {
+  executeTemplates(state, getNTypeToArray(type, typeIndex), true, false);
 }
 
 export function forwardSetToArray(type: TypeClass, state: TemplateState) {
-    executeTemplates(state, getSetTypeToArray(type), true, false);
+  executeTemplates(state, getSetTypeToArray(type), true, false);
 }
 
 export function forwardMapToArray(type: TypeClass, state: TemplateState) {
-    executeTemplates(state, getMapTypeToArray(type), true, false);
+  executeTemplates(state, getMapTypeToArray(type), true, false);
 }
 
-export function serializePropertyOrParameter(type: TypePropertySignature | TypeProperty | TypeParameter, state: TemplateState) {
-    if (isOptional(type)) {
-        const nullCheck = isNullable(type) ? `if (${state.accessor} === null) {
+export function serializePropertyOrParameter(
+  type: TypePropertySignature | TypeProperty | TypeParameter,
+  state: TemplateState
+) {
+  if (isOptional(type)) {
+    const nullCheck = isNullable(type)
+      ? `if (${state.accessor} === null) {
                 ${executeTemplates(state.fork(), { kind: ReflectionKind.null })}
-            } else ` : '';
+            } else `
+      : "";
 
-        state.addCode(`
+    state.addCode(`
             ${nullCheck}
             if (${state.accessor} === undefined || ${state.accessor} === null) {
                 ${executeTemplates(state.fork(), { kind: ReflectionKind.undefined })}
@@ -1709,19 +2194,22 @@ export function serializePropertyOrParameter(type: TypePropertySignature | TypeP
                 ${executeTemplates(state.fork(), type.type)}
             }
         `);
-        return;
-    }
+    return;
+  }
 
-    state.addCode(executeTemplates(state.fork(), type.type));
+  state.addCode(executeTemplates(state.fork(), type.type));
 }
 
-export function validatePropertyOrParameter(type: TypePropertySignature | TypeProperty | TypeParameter, state: TemplateState) {
-    const optional = isOptional(type)
-    const hasDefault = hasDefaultValue(type);
+export function validatePropertyOrParameter(
+  type: TypePropertySignature | TypeProperty | TypeParameter,
+  state: TemplateState
+) {
+  const optional = isOptional(type);
+  const hasDefault = hasDefaultValue(type);
 
-    state.addCode(`
+  state.addCode(`
         if (${state.accessor} === undefined) {
-            if (${!optional && !hasDefault && state.isValidation()}) ${state.assignValidationError('type', 'No value given')}
+            if (${!optional && !hasDefault && state.isValidation()}) ${state.assignValidationError("type", "No value given")}
         } else {
             ${executeTemplates(state.fork(), type.type)}
         }
@@ -1729,184 +2217,211 @@ export function validatePropertyOrParameter(type: TypePropertySignature | TypePr
 }
 
 export function handleUnion(type: TypeUnion, state: TemplateState) {
-    //detecting which serializer to use in union is a complex topic and allows a key feature: deserializing an encoding that is entirely based on strings (e.g. URL query string)
-    //to support for example numeric string, we need to have multiple guards being able to detect their 'loosely type' equivalence, for example
-    // - '1234' => number
-    // - 1234 => string
-    // - 1234 => Date
-    // whether one is picked over that strict equivalence (123 => number, '123' => string) depends on the union and whether 'loosely' is active.
-    //The order of the union members is not important, only the order in which the guards are registered.
-
-    //examples with loosely active:
-    //  number | string
-    // -> '1234' => number
-    // -> 1234 => number
-    // -> 1234abc => string
-
-    //examples with loosely active:
-    //  number | boolean
-    // -> '1234' => number
-    // -> 1234 => number
-    // -> 1 => boolean
-    // => 'true' => boolean
-
-    //examples with loosely active:
-    //  number | Date
-    // -> '1234' => number
-    // -> 1234 => number
-    // -> '2021-11-24T16:21:13.425Z' => Date
-
-    //This feature requires that each serializer can have multiple guards registered in different specificality. We use a convention that
-    //the specificality of 1 is the default JS guard (typeof), and anything greater than 2 is a fallback, like number => Date (which should only be used when no other guard tested positively for number).
-    //Withing specificality of 1 there are other nuances that further describe the specificality. For example `literal` is more specific than a `string`, so
-    //that the literal will always picked first in a type of `'a' | string`. e.g. literal=1.1, string 1.5; other examples
-    // Date < string,
-
-    //anything below 0 is a loose guard, for example a numeric string, or numbers as boolean. guards below 0 are only used when enabled manually.
-    //guards between 0 and 1 are standard loose types that are necessary to support JSON, e.g. '2021-11-24T16:21:13.425Z' => Date.
-    const lines: string[] = [];
-
-    //since there are type guards that require to access the container (for example Embedded), its necessary to pass the container (if available) to the type guard function
-    //and change accessor to point to `data` (argument of the type guard) + index name.
-    const property = state.accessor instanceof ContainerAccessor ? `${state.accessor.property}` : 'undefined';
-    const args = `${state.accessor instanceof ContainerAccessor ? state.accessor.container : state.accessor}, state, ${collapsePath(state.path)}, ${property}`;
-    const accessor = state.accessor instanceof ContainerAccessor ? new ContainerAccessor('data', 'property') : 'data';
-
-    const typeGuards = state.registry.serializer.typeGuards.getSortedTemplateRegistries();
-
-    for (const [specificality, typeGuard] of typeGuards) {
-        //loosely type guards are only used for deserialization
-        if (state.target === 'serialize' && specificality < 1) continue;
-
-        //when validation=true and not all specificalities are included, we only use 1, which is used for strict validation()/is().
-        if (state.validation === 'strict' && specificality !== 1) continue;
-        const validation = !state.validation ? 'loose' : state.validation;
-
-        for (const t of type.types) {
-            const fn = createTypeGuardFunction(
-                t,
-                state.fork(undefined, accessor)
-                    .forRegistry(typeGuard)
-                    //if validation is not set, we are in deserialize mode, so we need to activate validation
-                    //for this state.
-                    .withValidation(validation)
-                    .includeAllSpecificalities(state.registry.serializer.typeGuards),
-                undefined, false,
-            );
-            if (!fn) continue;
-            const guard = state.setVariable('guard_' + ReflectionKind[t.kind], fn);
-            const looseCheck = specificality <= 0 ? `state.loosely !== false && ` : '';
-
-            const action = state.isValidation() ? `${state.setter} = true;` : executeTemplates(state.fullFork(), t);
-            lines.push(`else if (${looseCheck}${guard}(${args})) {
+  //detecting which serializer to use in union is a complex topic and allows a key feature: deserializing an encoding that is entirely based on strings (e.g. URL query string)
+  //to support for example numeric string, we need to have multiple guards being able to detect their 'loosely type' equivalence, for example
+  // - '1234' => number
+  // - 1234 => string
+  // - 1234 => Date
+  // whether one is picked over that strict equivalence (123 => number, '123' => string) depends on the union and whether 'loosely' is active.
+  //The order of the union members is not important, only the order in which the guards are registered.
+
+  //examples with loosely active:
+  //  number | string
+  // -> '1234' => number
+  // -> 1234 => number
+  // -> 1234abc => string
+
+  //examples with loosely active:
+  //  number | boolean
+  // -> '1234' => number
+  // -> 1234 => number
+  // -> 1 => boolean
+  // => 'true' => boolean
+
+  //examples with loosely active:
+  //  number | Date
+  // -> '1234' => number
+  // -> 1234 => number
+  // -> '2021-11-24T16:21:13.425Z' => Date
+
+  //This feature requires that each serializer can have multiple guards registered in different specificality. We use a convention that
+  //the specificality of 1 is the default JS guard (typeof), and anything greater than 2 is a fallback, like number => Date (which should only be used when no other guard tested positively for number).
+  //Withing specificality of 1 there are other nuances that further describe the specificality. For example `literal` is more specific than a `string`, so
+  //that the literal will always picked first in a type of `'a' | string`. e.g. literal=1.1, string 1.5; other examples
+  // Date < string,
+
+  //anything below 0 is a loose guard, for example a numeric string, or numbers as boolean. guards below 0 are only used when enabled manually.
+  //guards between 0 and 1 are standard loose types that are necessary to support JSON, e.g. '2021-11-24T16:21:13.425Z' => Date.
+  const lines: string[] = [];
+
+  //since there are type guards that require to access the container (for example Embedded), its necessary to pass the container (if available) to the type guard function
+  //and change accessor to point to `data` (argument of the type guard) + index name.
+  const property =
+    state.accessor instanceof ContainerAccessor
+      ? `${state.accessor.property}`
+      : "undefined";
+  const args = `${state.accessor instanceof ContainerAccessor ? state.accessor.container : state.accessor}, state, ${collapsePath(state.path)}, ${property}`;
+  const accessor =
+    state.accessor instanceof ContainerAccessor
+      ? new ContainerAccessor("data", "property")
+      : "data";
+
+  const typeGuards =
+    state.registry.serializer.typeGuards.getSortedTemplateRegistries();
+
+  for (const [specificality, typeGuard] of typeGuards) {
+    //loosely type guards are only used for deserialization
+    if (state.target === "serialize" && specificality < 1) continue;
+
+    //when validation=true and not all specificalities are included, we only use 1, which is used for strict validation()/is().
+    if (state.validation === "strict" && specificality !== 1) continue;
+    const validation = !state.validation ? "loose" : state.validation;
+
+    for (const t of type.types) {
+      const fn = createTypeGuardFunction(
+        t,
+        state
+          .fork(undefined, accessor)
+          .forRegistry(typeGuard)
+          //if validation is not set, we are in deserialize mode, so we need to activate validation
+          //for this state.
+          .withValidation(validation)
+          .includeAllSpecificalities(state.registry.serializer.typeGuards),
+        undefined,
+        false
+      );
+      if (!fn) continue;
+      const guard = state.setVariable("guard_" + ReflectionKind[t.kind], fn);
+      const looseCheck =
+        specificality <= 0 ? `state.loosely !== false && ` : "";
+
+      const action = state.isValidation()
+        ? `${state.setter} = true;`
+        : executeTemplates(state.fullFork(), t);
+      lines.push(`else if (${looseCheck}${guard}(${args})) {
                 //type = ${ReflectionKind[t.kind]}, specificality=${specificality}
                 ${action}
             }`);
-        }
     }
+  }
 
-    const handleErrors = state.setter ? `
+  const handleErrors = state.setter
+    ? `
         if (state.errors) {
             ${state.setter} = false;
             state.errors = oldErrors;
         }
-    ` : '';
+    `
+    : "";
 
-    state.addCodeForSetter(`
+  state.addCodeForSetter(`
         {
             const oldErrors = state.errors;
             if (state.errors) state.errors = [];
 
             //type guard for union
-            if (false) {} ${lines.join(' ')}
+            if (false) {} ${lines.join(" ")}
             else {
                 ${handleErrors}
-                ${state.assignValidationError('type', 'No valid union member found. Valid: ' + stringifyResolvedType(type))}
+                ${state.assignValidationError("type", "No valid union member found. Valid: " + stringifyResolvedType(type))}
             }
             state.errors = oldErrors;
         }
     `);
 }
 
-export function getNameExpression(name: string | number | symbol | undefined, state: TemplateState): string {
-    if (undefined === name) return 'undefined';
-    if ('string' === typeof name || 'number' === typeof name) return JSON.stringify(name);
-    if (isType(name)) return JSON.stringify(memberNameToString(name));
-    return state.compilerContext.reserveConst(name, 'symbolName');
+export function getNameExpression(
+  name: string | number | symbol | undefined,
+  state: TemplateState
+): string {
+  if (undefined === name) return "undefined";
+  if ("string" === typeof name || "number" === typeof name)
+    return JSON.stringify(name);
+  if (isType(name)) return JSON.stringify(memberNameToString(name));
+  return state.compilerContext.reserveConst(name, "symbolName");
 }
 
 export class TypeGuardRegistry {
-    registry: { [specificality: number]: TemplateRegistry } = {};
-
-    protected sorted?: [specificality: number, registry: TemplateRegistry][];
-
-    /**
-     * Lowest specificality first
-     */
-    getSortedTemplateRegistries() {
-        if (!this.sorted) {
-            this.sorted = [];
-            const registries = Object.entries(this.registry);
-            registries.sort((a, b) => {
-                return Number(a[0]) - Number(b[0]);
-            });
-            for (const [spec, reg] of registries) {
-                this.sorted.push([Number(spec), reg]);
-            }
-        }
-        return this.sorted;
-    }
-
-    constructor(public serializer: Serializer) {
-    }
-
-    clear() {
-        this.registry = {};
-        this.sorted = undefined;
-    }
-
-    /**
-     *
-     * @see register() for specificality explanation.
-     */
-    getRegistry(specificality: number): TemplateRegistry {
-        this.sorted = undefined;
-        return this.registry[specificality] ||= new TemplateRegistry(this.serializer);
-    }
-
-    /**
-     * Registers a new template and replaces all existing (added via register,prepend,append).
-     *
-     * Specificality defines when the given template guard is executed.
-     *
-     * - 1 means its used for JS types - exact types. For example for type string `'string' ==== typeof v` is used. Same for number, bigint, and boolean.
-     *   Guards of this specificality are used for the `is()` function.
-     *
-     * - >1 means it acts as a fallback. For example in a union `number | Date`, when a string is given, the Date can allow `string` type as well, so it gets converted to a Date.
-     *
-     * - >0 && <1 means its acts as a priority guard. For example in a `string | Date`, a string of date-format is converted to a Date instead of a string. This is necessary
-     *   to support regular JSON.
-     *
-     * - <0, anything below 0 means it can optionally be used for loosely types. This is handy when data comes from a string-only encoding like URL query strings.
-     *   In this specificality a numeric string is converted to a number or bigint, a 1|0|true|false string converted to boolean .
-     */
-    register<T extends ReflectionKind>(specificality: number, kind: T, template: Template<FindType<Type, T>>) {
-        this.getRegistry(specificality).register(kind, template);
-    }
-
-    /**
-     * @see register
-     */
-    registerClass(specificality: number, classType: ClassType, template: Template<TypeClass>) {
-        this.getRegistry(specificality).registerClass(classType, template);
-    }
-
-    /**
-     * @see register
-     */
-    registerBinary(specificality: number, template: Template<TypeClass>) {
-        this.getRegistry(specificality).registerBinary(template);
-    }
+  registry: { [specificality: number]: TemplateRegistry } = {};
+
+  protected sorted?: [specificality: number, registry: TemplateRegistry][];
+
+  /**
+   * Lowest specificality first
+   */
+  getSortedTemplateRegistries() {
+    if (!this.sorted) {
+      this.sorted = [];
+      const registries = Object.entries(this.registry);
+      registries.sort((a, b) => {
+        return Number(a[0]) - Number(b[0]);
+      });
+      for (const [spec, reg] of registries) {
+        this.sorted.push([Number(spec), reg]);
+      }
+    }
+    return this.sorted;
+  }
+
+  constructor(public serializer: Serializer) {}
+
+  clear() {
+    this.registry = {};
+    this.sorted = undefined;
+  }
+
+  /**
+   *
+   * @see register() for specificality explanation.
+   */
+  getRegistry(specificality: number): TemplateRegistry {
+    this.sorted = undefined;
+    return (this.registry[specificality] ||= new TemplateRegistry(
+      this.serializer
+    ));
+  }
+
+  /**
+   * Registers a new template and replaces all existing (added via register,prepend,append).
+   *
+   * Specificality defines when the given template guard is executed.
+   *
+   * - 1 means its used for JS types - exact types. For example for type string `'string' ==== typeof v` is used. Same for number, bigint, and boolean.
+   *   Guards of this specificality are used for the `is()` function.
+   *
+   * - >1 means it acts as a fallback. For example in a union `number | Date`, when a string is given, the Date can allow `string` type as well, so it gets converted to a Date.
+   *
+   * - >0 && <1 means its acts as a priority guard. For example in a `string | Date`, a string of date-format is converted to a Date instead of a string. This is necessary
+   *   to support regular JSON.
+   *
+   * - <0, anything below 0 means it can optionally be used for loosely types. This is handy when data comes from a string-only encoding like URL query strings.
+   *   In this specificality a numeric string is converted to a number or bigint, a 1|0|true|false string converted to boolean .
+   */
+  register<T extends ReflectionKind>(
+    specificality: number,
+    kind: T,
+    template: Template<FindType<Type, T>>
+  ) {
+    this.getRegistry(specificality).register(kind, template);
+  }
+
+  /**
+   * @see register
+   */
+  registerClass(
+    specificality: number,
+    classType: ClassType,
+    template: Template<TypeClass>
+  ) {
+    this.getRegistry(specificality).registerClass(classType, template);
+  }
+
+  /**
+   * @see register
+   */
+  registerBinary(specificality: number, template: Template<TypeClass>) {
+    this.getRegistry(specificality).registerBinary(template);
+  }
 }
 
 /**
@@ -1916,141 +2431,227 @@ export class TypeGuardRegistry {
  * JSONSerializer has the same but for JSON data structures.
  */
 export class Serializer {
-    serializeRegistry = new TemplateRegistry(this);
-    deserializeRegistry = new TemplateRegistry(this);
-    typeGuards = new TypeGuardRegistry(this);
-    validators = new TemplateRegistry(this);
-
-    constructor(public name: string = 'json') {
-        this.registerSerializers();
-        this.registerTypeGuards();
-        this.registerValidators();
-    }
-
-    public setExplicitUndefined(type: Type, state: TemplateState): boolean {
-        return true;
-    }
-
-    protected registerValidators() {
-    }
-
-    clear() {
-        this.serializeRegistry.clear();
-        this.deserializeRegistry.clear();
-        this.typeGuards.clear();
-        this.validators.clear();
-    }
-
-    protected registerSerializers() {
-        this.deserializeRegistry.register(ReflectionKind.any, (type, state) => state.addSetter(state.accessor));
-        this.serializeRegistry.register(ReflectionKind.any, (type, state) => state.addSetter(state.accessor));
-
-        this.deserializeRegistry.register(ReflectionKind.object, (type, state) => {
-            state.setContext({ isObject });
-            state.addSetter(`isObject(${state.accessor}) ? ${state.accessor} : {}`);
-        });
-        this.serializeRegistry.register(ReflectionKind.object, (type, state) => state.addSetter(state.accessor));
-
-        this.deserializeRegistry.register(ReflectionKind.class, serializeObjectLiteral);
-        this.serializeRegistry.register(ReflectionKind.class, serializeObjectLiteral);
-        this.deserializeRegistry.register(ReflectionKind.objectLiteral, serializeObjectLiteral);
-        this.serializeRegistry.register(ReflectionKind.objectLiteral, serializeObjectLiteral);
-
-        this.deserializeRegistry.register(ReflectionKind.array, serializeArray);
-        this.serializeRegistry.register(ReflectionKind.array, serializeArray);
-
-        this.deserializeRegistry.register(ReflectionKind.tuple, serializeTuple);
-        this.serializeRegistry.register(ReflectionKind.tuple, serializeTuple);
-
-        this.deserializeRegistry.register(ReflectionKind.union, handleUnion);
-        this.serializeRegistry.register(ReflectionKind.union, handleUnion);
-
-        this.deserializeRegistry.register(ReflectionKind.literal, (type, state) => state.addSetter(state.setVariable('v', type.literal)));
-        this.serializeRegistry.register(ReflectionKind.literal, (type, state) => state.addSetter(state.setVariable('v', type.literal)));
-
-        this.serializeRegistry.register(ReflectionKind.undefined, (type, state) => state.addSetter(`null`));
-        this.deserializeRegistry.register(ReflectionKind.undefined, (type, state) => state.addSetter(`undefined`));
-
-        this.serializeRegistry.register(ReflectionKind.null, (type, state) => state.addSetter(`null`));
-        this.deserializeRegistry.register(ReflectionKind.null, (type, state) => state.addSetter(`null`));
-
-        this.serializeRegistry.register(ReflectionKind.propertySignature, serializePropertyOrParameter);
-        this.serializeRegistry.register(ReflectionKind.property, serializePropertyOrParameter);
-        this.serializeRegistry.register(ReflectionKind.parameter, serializePropertyOrParameter);
-        this.deserializeRegistry.register(ReflectionKind.propertySignature, serializePropertyOrParameter);
-        this.deserializeRegistry.register(ReflectionKind.property, serializePropertyOrParameter);
-        this.deserializeRegistry.register(ReflectionKind.parameter, serializePropertyOrParameter);
-
-        this.deserializeRegistry.registerClass(Date, (type, state) => state.addSetter(`new Date(${state.accessor})`));
-        this.serializeRegistry.registerClass(Date, (type, state) => state.addSetter(`${state.accessor}.toJSON()`));
-
-        this.serializeRegistry.register(ReflectionKind.string, (type, state) => {
-            state.addSetter(`'string' === typeof ${state.accessor} ? ${state.accessor} : ''+ ${state.accessor}`);
-        });
+  serializeRegistry = new TemplateRegistry(this);
+  deserializeRegistry = new TemplateRegistry(this);
+  typeGuards = new TypeGuardRegistry(this);
+  validators = new TemplateRegistry(this);
+
+  constructor(public name: string = "json") {
+    this.registerSerializers();
+    this.registerTypeGuards();
+    this.registerValidators();
+  }
+
+  public setExplicitUndefined(type: Type, state: TemplateState): boolean {
+    return true;
+  }
+
+  protected registerValidators() {}
+
+  clear() {
+    this.serializeRegistry.clear();
+    this.deserializeRegistry.clear();
+    this.typeGuards.clear();
+    this.validators.clear();
+  }
+
+  protected registerSerializers() {
+    this.deserializeRegistry.register(ReflectionKind.any, (type, state) =>
+      state.addSetter(state.accessor)
+    );
+    this.serializeRegistry.register(ReflectionKind.any, (type, state) =>
+      state.addSetter(state.accessor)
+    );
+
+    this.deserializeRegistry.register(ReflectionKind.object, (type, state) => {
+      state.setContext({ isObject });
+      state.addSetter(`isObject(${state.accessor}) ? ${state.accessor} : {}`);
+    });
+    this.serializeRegistry.register(ReflectionKind.object, (type, state) =>
+      state.addSetter(state.accessor)
+    );
+
+    this.deserializeRegistry.register(
+      ReflectionKind.class,
+      serializeObjectLiteral
+    );
+    this.serializeRegistry.register(
+      ReflectionKind.class,
+      serializeObjectLiteral
+    );
+    this.deserializeRegistry.register(
+      ReflectionKind.objectLiteral,
+      serializeObjectLiteral
+    );
+    this.serializeRegistry.register(
+      ReflectionKind.objectLiteral,
+      serializeObjectLiteral
+    );
+
+    this.deserializeRegistry.register(ReflectionKind.array, serializeArray);
+    this.serializeRegistry.register(ReflectionKind.array, serializeArray);
+
+    this.deserializeRegistry.register(ReflectionKind.tuple, serializeTuple);
+    this.serializeRegistry.register(ReflectionKind.tuple, serializeTuple);
+
+    this.deserializeRegistry.register(ReflectionKind.union, handleUnion);
+    this.serializeRegistry.register(ReflectionKind.union, handleUnion);
+
+    this.deserializeRegistry.register(ReflectionKind.literal, (type, state) =>
+      state.addSetter(state.setVariable("v", type.literal))
+    );
+    this.serializeRegistry.register(ReflectionKind.literal, (type, state) =>
+      state.addSetter(state.setVariable("v", type.literal))
+    );
+
+    this.serializeRegistry.register(ReflectionKind.undefined, (type, state) =>
+      state.addSetter(`null`)
+    );
+    this.deserializeRegistry.register(ReflectionKind.undefined, (type, state) =>
+      state.addSetter(`undefined`)
+    );
+
+    this.serializeRegistry.register(ReflectionKind.null, (type, state) =>
+      state.addSetter(`null`)
+    );
+    this.deserializeRegistry.register(ReflectionKind.null, (type, state) =>
+      state.addSetter(`null`)
+    );
+
+    this.serializeRegistry.register(
+      ReflectionKind.propertySignature,
+      serializePropertyOrParameter
+    );
+    this.serializeRegistry.register(
+      ReflectionKind.property,
+      serializePropertyOrParameter
+    );
+    this.serializeRegistry.register(
+      ReflectionKind.parameter,
+      serializePropertyOrParameter
+    );
+    this.deserializeRegistry.register(
+      ReflectionKind.propertySignature,
+      serializePropertyOrParameter
+    );
+    this.deserializeRegistry.register(
+      ReflectionKind.property,
+      serializePropertyOrParameter
+    );
+    this.deserializeRegistry.register(
+      ReflectionKind.parameter,
+      serializePropertyOrParameter
+    );
+
+    this.deserializeRegistry.registerClass(Date, (type, state) =>
+      state.addSetter(`new Date(${state.accessor})`)
+    );
+    this.serializeRegistry.registerClass(Date, (type, state) =>
+      state.addSetter(`${state.accessor}.toJSON()`)
+    );
+
+    this.serializeRegistry.register(ReflectionKind.string, (type, state) => {
+      state.addSetter(
+        `'string' === typeof ${state.accessor} ? ${state.accessor} : ''+ ${state.accessor}`
+      );
+    });
 
-        this.deserializeRegistry.register(ReflectionKind.string, (type, state) => {
-            state.addSetter(`'string' !== typeof ${state.accessor} && state.loosely !== false && undefined !== ${state.accessor} && null !== ${state.accessor} ? ${state.accessor}+'' : ${state.accessor}`);
-        });
+    this.deserializeRegistry.register(ReflectionKind.string, (type, state) => {
+      state.addSetter(
+        `'string' !== typeof ${state.accessor} && state.loosely !== false && undefined !== ${state.accessor} && null !== ${state.accessor} ? ${state.accessor}+'' : ${state.accessor}`
+      );
+    });
 
-        this.deserializeRegistry.addDecorator(isUUIDType, (type, state) => {
-            const v = state.accessor;
-            const check = `${v}.length === 36 && ${v}[23] === '-' && ${v}[18] === '-' && ${v}[13] === '-' && ${v}[8] === '-'`;
-            state.addCode(`
-                if (!(${check})) ${state.throwCode(type, JSON.stringify('Not a UUID'))}
+    this.deserializeRegistry.addDecorator(isUUIDType, (type, state) => {
+      const v = state.accessor;
+      const check = `${v}.length === 36 && ${v}[23] === '-' && ${v}[18] === '-' && ${v}[13] === '-' && ${v}[8] === '-'`;
+      state.addCode(`
+                if (!(${check})) ${state.throwCode(type, JSON.stringify("Not a UUID"))}
             `);
-        });
+    });
 
-        this.deserializeRegistry.addDecorator(isMongoIdType, (type, state) => {
-            const check = `${state.accessor}.length === 24 || ${state.accessor}.length === 0`;
-            state.addCode(`
-                if (!(${check})) ${state.throwCode(type, JSON.stringify('Not a MongoId (ObjectId)'))}
+    this.deserializeRegistry.addDecorator(isMongoIdType, (type, state) => {
+      const check = `${state.accessor}.length === 24 || ${state.accessor}.length === 0`;
+      state.addCode(`
+                if (!(${check})) ${state.throwCode(type, JSON.stringify("Not a MongoId (ObjectId)"))}
             `);
-        });
-
-        this.serializeRegistry.register(ReflectionKind.templateLiteral, (type, state) => state.addSetter(state.accessor));
-        this.deserializeRegistry.register(ReflectionKind.templateLiteral, (type, state) => {
-            state.addSetter(`'string' !== typeof ${state.accessor} ? ${state.accessor}+'' : ${state.accessor}`);
-        });
-
-        this.serializeRegistry.register(ReflectionKind.boolean, (type, state) => state.addSetter(state.accessor));
-        this.deserializeRegistry.register(ReflectionKind.boolean, (type, state) => {
-            state.addSetter(`'boolean' !== typeof ${state.accessor} && state.loosely !== false ? ${state.accessor} == 1 || ${state.accessor} == 'true' : ${state.accessor}`);
-        });
+    });
 
-        this.serializeRegistry.register(ReflectionKind.promise, (type, state) => executeTemplates(state, type.type));
-        this.deserializeRegistry.register(ReflectionKind.promise, (type, state) => executeTemplates(state, type.type));
+    this.serializeRegistry.register(
+      ReflectionKind.templateLiteral,
+      (type, state) => state.addSetter(state.accessor)
+    );
+    this.deserializeRegistry.register(
+      ReflectionKind.templateLiteral,
+      (type, state) => {
+        state.addSetter(
+          `'string' !== typeof ${state.accessor} ? ${state.accessor}+'' : ${state.accessor}`
+        );
+      }
+    );
+
+    this.serializeRegistry.register(ReflectionKind.boolean, (type, state) =>
+      state.addSetter(state.accessor)
+    );
+    this.deserializeRegistry.register(ReflectionKind.boolean, (type, state) => {
+      state.addSetter(
+        `'boolean' !== typeof ${state.accessor} && state.loosely !== false ? ${state.accessor} == 1 || ${state.accessor} == 'true' : ${state.accessor}`
+      );
+    });
 
-        this.serializeRegistry.register(ReflectionKind.bigint, (type, state) => {
-            if (binaryBigIntAnnotation.getFirst(type) === BinaryBigIntType.unsigned) {
-                state.addSetter(`${state.accessor} >= 0 ? ${state.accessor}.toString() : '0'`);
-            } else {
-                state.addSetter(`${state.accessor}.toString()`);
-            }
-        });
-        this.deserializeRegistry.register(ReflectionKind.bigint, (type, state) => {
-            state.setContext({ BigInt });
-            if (binaryBigIntAnnotation.getFirst(type) === BinaryBigIntType.unsigned) {
-                state.addSetter(`'bigint' !== typeof ${state.accessor} ? BigInt(${state.accessor}) : ${state.accessor}`);
-                state.addSetter(`${state.accessor} < 0 ? BigInt(0) : ${state.accessor}`);
-            } else {
-                state.addSetter(`'bigint' !== typeof ${state.accessor} ? BigInt(${state.accessor}) : ${state.accessor}`);
-            }
-        });
+    this.serializeRegistry.register(ReflectionKind.promise, (type, state) =>
+      executeTemplates(state, type.type)
+    );
+    this.deserializeRegistry.register(ReflectionKind.promise, (type, state) =>
+      executeTemplates(state, type.type)
+    );
+
+    this.serializeRegistry.register(ReflectionKind.bigint, (type, state) => {
+      if (binaryBigIntAnnotation.getFirst(type) === BinaryBigIntType.unsigned) {
+        state.addSetter(
+          `${state.accessor} >= 0 ? ${state.accessor}.toString() : '0'`
+        );
+      } else {
+        state.addSetter(`${state.accessor}.toString()`);
+      }
+    });
+    this.deserializeRegistry.register(ReflectionKind.bigint, (type, state) => {
+      state.setContext({ BigInt });
+      if (binaryBigIntAnnotation.getFirst(type) === BinaryBigIntType.unsigned) {
+        state.addSetter(
+          `'bigint' !== typeof ${state.accessor} ? BigInt(${state.accessor}) : ${state.accessor}`
+        );
+        state.addSetter(
+          `${state.accessor} < 0 ? BigInt(0) : ${state.accessor}`
+        );
+      } else {
+        state.addSetter(
+          `'bigint' !== typeof ${state.accessor} ? BigInt(${state.accessor}) : ${state.accessor}`
+        );
+      }
+    });
 
-        this.serializeRegistry.register(ReflectionKind.enum, (type, state) => state.addSetter(state.accessor));
-        this.deserializeRegistry.register(ReflectionKind.enum, (type, state) => {
-            const valuesVar = state.setVariable('values', type.values);
-            const matcher = state.setVariable('enumMatcher', getEnumValueIndexMatcher(type));
-            state.addCodeForSetter(`
+    this.serializeRegistry.register(ReflectionKind.enum, (type, state) =>
+      state.addSetter(state.accessor)
+    );
+    this.deserializeRegistry.register(ReflectionKind.enum, (type, state) => {
+      const valuesVar = state.setVariable("values", type.values);
+      const matcher = state.setVariable(
+        "enumMatcher",
+        getEnumValueIndexMatcher(type)
+      );
+      state.addCodeForSetter(`
                 ${state.setter} = ${valuesVar}[${matcher}(${state.accessor})];
-                if (${valuesVar}.indexOf(${state.setter}) === -1) ${state.throwCode('enum', `'No valid value of ' + ${valuesVar}.join(', ')`)}
+                if (${valuesVar}.indexOf(${state.setter}) === -1) ${state.throwCode("enum", `'No valid value of ' + ${valuesVar}.join(', ')`)}
             `);
-        });
+    });
 
-        this.serializeRegistry.register(ReflectionKind.regexp, (type, state) => state.addSetter(`${state.accessor}.toString()`));
-        this.deserializeRegistry.register(ReflectionKind.regexp, (type, state) => {
-            state.setContext({ RegExp });
-            state.addCodeForSetter(`
+    this.serializeRegistry.register(ReflectionKind.regexp, (type, state) =>
+      state.addSetter(`${state.accessor}.toString()`)
+    );
+    this.deserializeRegistry.register(ReflectionKind.regexp, (type, state) => {
+      state.setContext({ RegExp });
+      state.addCodeForSetter(`
 
             try {
             ${state.setter} = 'string' === typeof ${state.accessor}
@@ -2059,93 +2660,135 @@ export class Serializer {
                     : new RegExp(${state.accessor})
                 : ${state.accessor}
             } catch (error) {
-                ${state.throwCode('regexp', 'error')}
+                ${state.throwCode("regexp", "error")}
             }
             `);
-        });
+    });
 
-        this.serializeRegistry.register(ReflectionKind.number, (type, state) => state.addSetter(state.accessor));
-        this.deserializeRegistry.register(ReflectionKind.number, (type, state) => {
-            if (type.brand !== undefined && type.brand < TypeNumberBrand.float) {
-                state.addSetter(`Math.trunc(${state.accessor})`);
-                if (type.brand === TypeNumberBrand.uint8) {
-                    state.addSetter(`${state.accessor} > 255 ? 255 : ${state.accessor} < 0 ? 0 : ${state.accessor}`);
-                } else if (type.brand === TypeNumberBrand.uint16) {
-                    state.addSetter(`${state.accessor} > 65535 ? 65535 : ${state.accessor} < 0 ? 0 : ${state.accessor}`);
-                } else if (type.brand === TypeNumberBrand.uint32) {
-                    state.addSetter(`${state.accessor} > 4294967295 ? 4294967295 : ${state.accessor} < 0 ? 0 : ${state.accessor}`);
-                } else if (type.brand === TypeNumberBrand.int8) {
-                    state.addSetter(`${state.accessor} > 127 ? 127 : ${state.accessor} < -128 ? -128 : ${state.accessor}`);
-                } else if (type.brand === TypeNumberBrand.int16) {
-                    state.addSetter(`${state.accessor} > 32767 ? 32767 : ${state.accessor} < -32768 ? -32768 : ${state.accessor}`);
-                } else if (type.brand === TypeNumberBrand.int32) {
-                    state.addSetter(`${state.accessor} > 2147483647 ? 2147483647 : ${state.accessor} < -2147483648 ? -2147483648 : ${state.accessor}`);
-                }
-            } else {
-                state.setContext({ Number });
-                state.addSetter(`'number' !== typeof ${state.accessor} && state.loosely !== false ? Number(${state.accessor}) : ${state.accessor}`);
-                if (type.brand === TypeNumberBrand.float32) {
-                    state.addSetter(`${state.accessor} > 3.40282347e+38 ? 3.40282347e+38 : ${state.accessor} < -3.40282347e+38 ? -3.40282347e+38 : ${state.accessor}`);
-                }
-            }
+    this.serializeRegistry.register(ReflectionKind.number, (type, state) =>
+      state.addSetter(state.accessor)
+    );
+    this.deserializeRegistry.register(ReflectionKind.number, (type, state) => {
+      if (type.brand !== undefined && type.brand < TypeNumberBrand.float) {
+        state.addSetter(`Math.trunc(${state.accessor})`);
+        if (type.brand === TypeNumberBrand.uint8) {
+          state.addSetter(
+            `${state.accessor} > 255 ? 255 : ${state.accessor} < 0 ? 0 : ${state.accessor}`
+          );
+        } else if (type.brand === TypeNumberBrand.uint16) {
+          state.addSetter(
+            `${state.accessor} > 65535 ? 65535 : ${state.accessor} < 0 ? 0 : ${state.accessor}`
+          );
+        } else if (type.brand === TypeNumberBrand.uint32) {
+          state.addSetter(
+            `${state.accessor} > 4294967295 ? 4294967295 : ${state.accessor} < 0 ? 0 : ${state.accessor}`
+          );
+        } else if (type.brand === TypeNumberBrand.int8) {
+          state.addSetter(
+            `${state.accessor} > 127 ? 127 : ${state.accessor} < -128 ? -128 : ${state.accessor}`
+          );
+        } else if (type.brand === TypeNumberBrand.int16) {
+          state.addSetter(
+            `${state.accessor} > 32767 ? 32767 : ${state.accessor} < -32768 ? -32768 : ${state.accessor}`
+          );
+        } else if (type.brand === TypeNumberBrand.int32) {
+          state.addSetter(
+            `${state.accessor} > 2147483647 ? 2147483647 : ${state.accessor} < -2147483648 ? -2147483648 : ${state.accessor}`
+          );
+        }
+      } else {
+        state.setContext({ Number });
+        state.addSetter(
+          `'number' !== typeof ${state.accessor} && state.loosely !== false ? Number(${state.accessor}) : ${state.accessor}`
+        );
+        if (type.brand === TypeNumberBrand.float32) {
+          state.addSetter(
+            `${state.accessor} > 3.40282347e+38 ? 3.40282347e+38 : ${state.accessor} < -3.40282347e+38 ? -3.40282347e+38 : ${state.accessor}`
+          );
+        }
+      }
 
-            state.addCodeForSetter(`if (isNaN(${state.accessor})) ${state.throwCode(type)}`);
-        });
+      state.addCodeForSetter(
+        `if (isNaN(${state.accessor})) ${state.throwCode(type)}`
+      );
+    });
 
-        //convert binary to base64 (instead of hex, important for primary key hash)
-        this.serializeRegistry.registerBinary((type, state) => {
-            if (type.classType === ArrayBuffer) {
-                state.setContext({ arrayBufferToBase64 });
-                state.addSetter(`arrayBufferToBase64(${state.accessor})`);
-                return;
-            }
-            state.setContext({ typedArrayToBase64 });
-            state.addSetter(`typedArrayToBase64(${state.accessor})`);
-        });
+    //convert binary to base64 (instead of hex, important for primary key hash)
+    this.serializeRegistry.registerBinary((type, state) => {
+      if (type.classType === ArrayBuffer) {
+        state.setContext({ arrayBufferToBase64 });
+        state.addSetter(`arrayBufferToBase64(${state.accessor})`);
+        return;
+      }
+      state.setContext({ typedArrayToBase64 });
+      state.addSetter(`typedArrayToBase64(${state.accessor})`);
+    });
 
-        this.deserializeRegistry.registerBinary((type, state) => {
-            if (type.classType === ArrayBuffer) {
-                state.setContext({ base64ToArrayBuffer });
-                state.addSetter(`${state.accessor} instanceof ArrayBuffer ? ${state.accessor} : base64ToArrayBuffer(${state.accessor})`);
-                return;
-            }
+    this.deserializeRegistry.registerBinary((type, state) => {
+      if (type.classType === ArrayBuffer) {
+        state.setContext({ base64ToArrayBuffer });
+        state.addSetter(
+          `${state.accessor} instanceof ArrayBuffer ? ${state.accessor} : base64ToArrayBuffer(${state.accessor})`
+        );
+        return;
+      }
 
-            state.setContext({ base64ToTypedArray });
-            const typedArrayVar = state.setVariable('classType', type.classType);
-            state.addSetter(`${state.accessor} instanceof ${typedArrayVar} ? ${state.accessor} : base64ToTypedArray(${state.accessor}, ${typedArrayVar})`);
-        });
+      state.setContext({ base64ToTypedArray });
+      const typedArrayVar = state.setVariable("classType", type.classType);
+      state.addSetter(
+        `${state.accessor} instanceof ${typedArrayVar} ? ${state.accessor} : base64ToTypedArray(${state.accessor}, ${typedArrayVar})`
+      );
+    });
 
-        this.serializeRegistry.registerClass(Set, forwardSetToArray);
-        this.serializeRegistry.registerClass(Map, forwardMapToArray);
+    this.serializeRegistry.registerClass(Set, forwardSetToArray);
+    this.serializeRegistry.registerClass(Map, forwardMapToArray);
 
-        this.deserializeRegistry.registerClass(Set, (type, state) => {
-            forwardSetToArray(type, state);
-            state.addSetter(`new Set(${state.accessor})`);
-        });
-        this.deserializeRegistry.registerClass(Map, (type, state) => {
-            forwardMapToArray(type, state);
-            state.addSetter(`new Map(${state.accessor})`);
-        });
+    this.deserializeRegistry.registerClass(Set, (type, state) => {
+      forwardSetToArray(type, state);
+      state.addSetter(`new Set(${state.accessor})`);
+    });
+    this.deserializeRegistry.registerClass(Map, (type, state) => {
+      forwardMapToArray(type, state);
+      state.addSetter(`new Map(${state.accessor})`);
+    });
 
-        this.deserializeRegistry.addDecorator(
-            type => isReferenceType(type) || isBackReferenceType(type) || (type.parent !== undefined && isBackReferenceType(type.parent)),
-            (type, state) => {
-                if (type.kind !== ReflectionKind.class && type.kind !== ReflectionKind.objectLiteral) return;
-                state.annotationHandled(referenceAnnotation);
-                state.setContext({ isObject, createReference, isReferenceHydrated, isReferenceInstance, getObjectKeysSize });
-                const reflection = ReflectionClass.from(type);
-                const referenceClassTypeVar = state.setVariable('referenceClassType', type.kind === ReflectionKind.class ? type.classType : Object);
-
-                // when an object with primary key is given e.g. {id: 1} we treat it as
-                // reference and assign an instance of Reference to the property.
-                const l: string[] = [`${reflection.getPrimaries().length} > 0 && getObjectKeysSize(${state.accessor}) === ${reflection.getPrimaries().length}`];
-                for (const pk of reflection.getPrimaries()) {
-                    l.push(`${JSON.stringify(pk.name)} in ${state.accessor}`);
-                }
-                const checkIsPrimaryKeyOnly = l.join(' && ');
+    this.deserializeRegistry.addDecorator(
+      type =>
+        isReferenceType(type) ||
+        isBackReferenceType(type) ||
+        (type.parent !== undefined && isBackReferenceType(type.parent)),
+      (type, state) => {
+        if (
+          type.kind !== ReflectionKind.class &&
+          type.kind !== ReflectionKind.objectLiteral
+        )
+          return;
+        state.annotationHandled(referenceAnnotation);
+        state.setContext({
+          isObject,
+          createReference,
+          isReferenceHydrated,
+          isReferenceInstance,
+          getObjectKeysSize
+        });
+        const reflection = ReflectionClass.from(type);
+        const referenceClassTypeVar = state.setVariable(
+          "referenceClassType",
+          type.kind === ReflectionKind.class ? type.classType : Object
+        );
+
+        // when an object with primary key is given e.g. {id: 1} we treat it as
+        // reference and assign an instance of Reference to the property.
+        const l: string[] = [
+          `${reflection.getPrimaries().length} > 0 && getObjectKeysSize(${state.accessor}) === ${reflection.getPrimaries().length}`
+        ];
+        for (const pk of reflection.getPrimaries()) {
+          l.push(`${JSON.stringify(pk.name)} in ${state.accessor}`);
+        }
+        const checkIsPrimaryKeyOnly = l.join(" && ");
 
-                // in deserialization a reference is created when only the primary key is provided (no object given)
-                state.replaceTemplate(`
+        // in deserialization a reference is created when only the primary key is provided (no object given)
+        state.replaceTemplate(`
                     if (isReferenceInstance(${state.accessor})) {
                         ${state.setter} = ${state.accessor};
                     } else if (isObject(${state.accessor}) && ${checkIsPrimaryKeyOnly}) {
@@ -2154,164 +2797,308 @@ export class Serializer {
                         ${state.template}
                     } else {
                         let pk;
-                        ${executeTemplates(state.fork('pk').extendPath(String(reflection.getPrimary().getName())), reflection.getPrimary().getType())}
+                        ${executeTemplates(state.fork("pk").extendPath(String(reflection.getPrimary().getName())), reflection.getPrimary().getType())}
                         ${state.setter} = createReference(${referenceClassTypeVar}, {${JSON.stringify(reflection.getPrimary().getName())}: pk});
                     }
                 `);
-            });
-    }
-
-    protected registerTypeGuards() {
-        this.typeGuards.register(1, ReflectionKind.any, (type, state) => {
-            //if any is part of a union, we use register(20) below. otherwise it would match before anything else.
-            if (type.parent && type.parent.kind === ReflectionKind.union) {
-                return;
-            }
-            state.addSetter('true');
-        });
-        //if nothing else matches in a union, any matches anything
-        this.typeGuards.register(20, ReflectionKind.any, (type, state) => state.addSetter('true'));
-
-        this.typeGuards.register(1, ReflectionKind.object, (type, state) => {
-            state.setContext({ isObject });
-            state.addSetter(`isObject(${state.accessor})`);
-        });
-        this.typeGuards.register(1, ReflectionKind.objectLiteral, (type, state) => typeGuardObjectLiteral(type, state));
-        this.typeGuards.register(1, ReflectionKind.class, (type, state) => typeGuardObjectLiteral(type, state));
-
-        // //for deserialization type guards (specifically > 1) we check for embedded type sas well. this is because an embedded could have totally different field names.
-        // //and only if the property (where the embedded is placed) has no strict type guard do we look for other fields as well.
-        // this.typeGuards.register(2, ReflectionKind.class, (type, state) => typeCheckClassOrObjectLiteral(type, state, true));
-
-        this.typeGuards.register(1, ReflectionKind.string, (type, state) => {
-            state.addSetterAndReportErrorIfInvalid('type', 'Not a string', `'string' === typeof ${state.accessor}`);
-        });
-        this.typeGuards.getRegistry(1).addDecorator(isUUIDType, (type, state) => {
-            const v = state.originalAccessor;
-            const check = `${state.setter} && ${v}.length === 36 && ${v}[23] === '-' && ${v}[18] === '-' && ${v}[13] === '-' && ${v}[8] === '-'`;
-            state.addSetterAndReportErrorIfInvalid('type', 'Not a UUID', check);
-        });
-        this.typeGuards.getRegistry(1).addDecorator(isMongoIdType, (type, state) => {
-            state.addSetterAndReportErrorIfInvalid('type', 'Not a MongoId (ObjectId)', `${state.setter} && (${state.originalAccessor}.length === 24 || ${state.originalAccessor}.length === 0)`);
-        });
-        this.typeGuards.register(50, ReflectionKind.string, (type, state) => state.addSetter(`${state.accessor} !== undefined && ${state.accessor} !== null`)); //at the end, everything can be converted to string
-
-        this.typeGuards.register(1, ReflectionKind.templateLiteral, (type, state) => {
-            state.setContext({ extendTemplateLiteral: extendTemplateLiteral });
-            const typeVar = state.setVariable('type', type);
-            state.addSetterAndReportErrorIfInvalid('type', 'Invalid literal', `'string' === typeof ${state.accessor} && extendTemplateLiteral({kind: ${ReflectionKind.literal}, literal: ${state.accessor}}, ${typeVar})`);
-        });
-
-        this.typeGuards.register(1, ReflectionKind.undefined, (type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not undefined', `'undefined' === typeof ${state.accessor}`));
-        this.typeGuards.register(2, ReflectionKind.undefined, (type, state) => state.addSetter(`null === ${state.accessor}`));
-
-        this.typeGuards.register(1, ReflectionKind.null, (type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not null', `null === ${state.accessor}`));
-        this.typeGuards.register(2, ReflectionKind.null, (type, state) => state.addSetter(`'undefined' === typeof ${state.accessor}`));
-
-        this.typeGuards.register(1, ReflectionKind.propertySignature, validatePropertyOrParameter);
-        this.typeGuards.register(1, ReflectionKind.property, validatePropertyOrParameter);
-        this.typeGuards.register(1, ReflectionKind.parameter, validatePropertyOrParameter);
-
-        this.typeGuards.register(2, ReflectionKind.number, (type, state) => {
-            state.setContext({ isNumeric: isNumeric });
-            state.addSetter(`'bigint' === typeof ${state.accessor} || 'number' === typeof ${state.accessor} || ('string' === typeof ${state.accessor} && isNumeric(${state.accessor}))`);
-        });
-        this.typeGuards.register(-0.5, ReflectionKind.number, (type, state) => {
-            state.setContext({ isNumeric: isNumeric });
-            state.addSetter(`'string' === typeof ${state.accessor} && isNumeric(${state.accessor})`);
-        });
-        this.typeGuards.register(1, ReflectionKind.number, (type, state) => {
-            if (type.brand !== undefined && type.brand >= TypeNumberBrand.integer && type.brand <= TypeNumberBrand.uint32) {
-                state.setContext({ isInteger: isInteger });
-                let check = `'number' === typeof ${state.accessor} && isInteger(${state.accessor})`;
-
-                if (type.brand === TypeNumberBrand.uint8) {
-                    check += `&& ${state.accessor} <= 255 && ${state.accessor} >= 0`;
-                } else if (type.brand === TypeNumberBrand.uint16) {
-                    check += `&& ${state.accessor} <= 65535 && ${state.accessor} >= 0`;
-                } else if (type.brand === TypeNumberBrand.uint32) {
-                    check += `&& ${state.accessor} <= 4294967295 && ${state.accessor} >= 0`;
-                } else if (type.brand === TypeNumberBrand.int8) {
-                    check += `&& ${state.accessor} <= 127 && ${state.accessor} >= -128`;
-                } else if (type.brand === TypeNumberBrand.int16) {
-                    check += `&& ${state.accessor} <= 32767 && ${state.accessor} >= -32768`;
-                } else if (type.brand === TypeNumberBrand.int32) {
-                    check += `&& ${state.accessor} <= 2147483647 && ${state.accessor} >= -2147483648`;
-                }
-                state.addSetterAndReportErrorIfInvalid('type', `Not a ${type.brand === undefined ? 'number' : TypeNumberBrand[type.brand]}`, check);
-            } else {
-                let check = `'number' === typeof ${state.accessor}`;
-
-                if (type.brand === TypeNumberBrand.float32) {
-                    check += `&& ${state.accessor} <= 3.40282347e+38 && ${state.accessor} >= -3.40282347e+38`;
-                }
-
-                state.addSetterAndReportErrorIfInvalid('type', `Not a ${type.brand === undefined ? 'number' : TypeNumberBrand[type.brand]}`, check);
-            }
-        });
-
-        this.typeGuards.register(2, ReflectionKind.bigint, (type, state) => {
-            state.setContext({ isNumeric: isNumeric });
-            state.addSetter(`'number' === typeof ${state.accessor} || ('string' === typeof ${state.accessor} && isNumeric(${state.accessor}))`);
-        });
-        this.typeGuards.register(-0.5, ReflectionKind.bigint, (type, state) => {
-            state.setContext({ isNumeric: isNumeric });
-            state.addSetter(`'string' === typeof ${state.accessor} && isNumeric(${state.accessor})`);
-        });
-        this.typeGuards.register(1, ReflectionKind.bigint, (type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a bigint', `'bigint' === typeof ${state.accessor}`));
-
-        this.typeGuards.register(1, ReflectionKind.boolean, (type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a boolean', `'boolean' === typeof ${state.accessor}`));
-        this.typeGuards.register(-0.9, ReflectionKind.boolean, (type, state) => {
-            let handleNumeric = true;
-            if (type.parent && type.parent.kind === ReflectionKind.union && (type.parent.types.some(v => v.kind === ReflectionKind.number || v.kind === ReflectionKind.bigint))) {
-                handleNumeric = false;
-            }
-            if (handleNumeric) {
-                state.addSetter(`1 === ${state.accessor} || '1' === ${state.accessor} || 0 === ${state.accessor} || 'true' === ${state.accessor} || 'false' === ${state.accessor}`);
-            } else {
-                state.addSetter(`'true' === ${state.accessor} || 'false' === ${state.accessor}`);
-            }
-        });
+      }
+    );
+  }
+
+  protected registerTypeGuards() {
+    this.typeGuards.register(1, ReflectionKind.any, (type, state) => {
+      //if any is part of a union, we use register(20) below. otherwise it would match before anything else.
+      if (type.parent && type.parent.kind === ReflectionKind.union) {
+        return;
+      }
+      state.addSetter("true");
+    });
+    //if nothing else matches in a union, any matches anything
+    this.typeGuards.register(20, ReflectionKind.any, (type, state) =>
+      state.addSetter("true")
+    );
+
+    this.typeGuards.register(1, ReflectionKind.object, (type, state) => {
+      state.setContext({ isObject });
+      state.addSetter(`isObject(${state.accessor})`);
+    });
+    this.typeGuards.register(1, ReflectionKind.objectLiteral, (type, state) =>
+      typeGuardObjectLiteral(type, state)
+    );
+    this.typeGuards.register(1, ReflectionKind.class, (type, state) =>
+      typeGuardObjectLiteral(type, state)
+    );
+
+    // //for deserialization type guards (specifically > 1) we check for embedded type sas well. this is because an embedded could have totally different field names.
+    // //and only if the property (where the embedded is placed) has no strict type guard do we look for other fields as well.
+    // this.typeGuards.register(2, ReflectionKind.class, (type, state) => typeCheckClassOrObjectLiteral(type, state, true));
+
+    this.typeGuards.register(1, ReflectionKind.string, (type, state) => {
+      state.addSetterAndReportErrorIfInvalid(
+        "type",
+        "Not a string",
+        `'string' === typeof ${state.accessor}`
+      );
+    });
+    this.typeGuards.getRegistry(1).addDecorator(isUUIDType, (type, state) => {
+      const v = state.originalAccessor;
+      const check = `${state.setter} && ${v}.length === 36 && ${v}[23] === '-' && ${v}[18] === '-' && ${v}[13] === '-' && ${v}[8] === '-'`;
+      state.addSetterAndReportErrorIfInvalid("type", "Not a UUID", check);
+    });
+    this.typeGuards
+      .getRegistry(1)
+      .addDecorator(isMongoIdType, (type, state) => {
+        state.addSetterAndReportErrorIfInvalid(
+          "type",
+          "Not a MongoId (ObjectId)",
+          `${state.setter} && (${state.originalAccessor}.length === 24 || ${state.originalAccessor}.length === 0)`
+        );
+      });
+    this.typeGuards.register(50, ReflectionKind.string, (type, state) =>
+      state.addSetter(
+        `${state.accessor} !== undefined && ${state.accessor} !== null`
+      )
+    ); //at the end, everything can be converted to string
+
+    this.typeGuards.register(
+      1,
+      ReflectionKind.templateLiteral,
+      (type, state) => {
+        state.setContext({ extendTemplateLiteral: extendTemplateLiteral });
+        const typeVar = state.setVariable("type", type);
+        state.addSetterAndReportErrorIfInvalid(
+          "type",
+          "Invalid literal",
+          `'string' === typeof ${state.accessor} && extendTemplateLiteral({kind: ${ReflectionKind.literal}, literal: ${state.accessor}}, ${typeVar})`
+        );
+      }
+    );
+
+    this.typeGuards.register(1, ReflectionKind.undefined, (type, state) =>
+      state.addSetterAndReportErrorIfInvalid(
+        "type",
+        "Not undefined",
+        `'undefined' === typeof ${state.accessor}`
+      )
+    );
+    this.typeGuards.register(2, ReflectionKind.undefined, (type, state) =>
+      state.addSetter(`null === ${state.accessor}`)
+    );
+
+    this.typeGuards.register(1, ReflectionKind.null, (type, state) =>
+      state.addSetterAndReportErrorIfInvalid(
+        "type",
+        "Not null",
+        `null === ${state.accessor}`
+      )
+    );
+    this.typeGuards.register(2, ReflectionKind.null, (type, state) =>
+      state.addSetter(`'undefined' === typeof ${state.accessor}`)
+    );
+
+    this.typeGuards.register(
+      1,
+      ReflectionKind.propertySignature,
+      validatePropertyOrParameter
+    );
+    this.typeGuards.register(
+      1,
+      ReflectionKind.property,
+      validatePropertyOrParameter
+    );
+    this.typeGuards.register(
+      1,
+      ReflectionKind.parameter,
+      validatePropertyOrParameter
+    );
+
+    this.typeGuards.register(2, ReflectionKind.number, (type, state) => {
+      state.setContext({ isNumeric: isNumeric });
+      state.addSetter(
+        `'bigint' === typeof ${state.accessor} || 'number' === typeof ${state.accessor} || ('string' === typeof ${state.accessor} && isNumeric(${state.accessor}))`
+      );
+    });
+    this.typeGuards.register(-0.5, ReflectionKind.number, (type, state) => {
+      state.setContext({ isNumeric: isNumeric });
+      state.addSetter(
+        `'string' === typeof ${state.accessor} && isNumeric(${state.accessor})`
+      );
+    });
+    this.typeGuards.register(1, ReflectionKind.number, (type, state) => {
+      if (
+        type.brand !== undefined &&
+        type.brand >= TypeNumberBrand.integer &&
+        type.brand <= TypeNumberBrand.uint32
+      ) {
+        state.setContext({ isInteger: isInteger });
+        let check = `'number' === typeof ${state.accessor} && isInteger(${state.accessor})`;
+
+        if (type.brand === TypeNumberBrand.uint8) {
+          check += `&& ${state.accessor} <= 255 && ${state.accessor} >= 0`;
+        } else if (type.brand === TypeNumberBrand.uint16) {
+          check += `&& ${state.accessor} <= 65535 && ${state.accessor} >= 0`;
+        } else if (type.brand === TypeNumberBrand.uint32) {
+          check += `&& ${state.accessor} <= 4294967295 && ${state.accessor} >= 0`;
+        } else if (type.brand === TypeNumberBrand.int8) {
+          check += `&& ${state.accessor} <= 127 && ${state.accessor} >= -128`;
+        } else if (type.brand === TypeNumberBrand.int16) {
+          check += `&& ${state.accessor} <= 32767 && ${state.accessor} >= -32768`;
+        } else if (type.brand === TypeNumberBrand.int32) {
+          check += `&& ${state.accessor} <= 2147483647 && ${state.accessor} >= -2147483648`;
+        }
+        state.addSetterAndReportErrorIfInvalid(
+          "type",
+          `Not a ${type.brand === undefined ? "number" : TypeNumberBrand[type.brand]}`,
+          check
+        );
+      } else {
+        let check = `'number' === typeof ${state.accessor}`;
+
+        if (type.brand === TypeNumberBrand.float32) {
+          check += `&& ${state.accessor} <= 3.40282347e+38 && ${state.accessor} >= -3.40282347e+38`;
+        }
 
-        this.typeGuards.register(1, ReflectionKind.promise, (type, state) => executeTemplates(state, type.type));
-        this.typeGuards.register(1, ReflectionKind.enum, (type, state) => {
-            const matcher = state.setVariable('enumMatcher', getEnumValueIndexMatcher(type));
-            state.addSetterAndReportErrorIfInvalid('type', 'Invalid enum member', `${matcher}(${state.accessor}) >= 0`);
-        });
-        this.typeGuards.register(1, ReflectionKind.array, (type, state) => typeGuardArray(type.type, state));
-        this.typeGuards.register(1, ReflectionKind.tuple, typeGuardTuple);
-        this.typeGuards.register(1, ReflectionKind.literal, (type, state) => {
-            state.addSetterAndReportErrorIfInvalid('type', 'Invalid literal', `${state.setVariable('v', type.literal)} === ${state.accessor}`);
-        });
+        state.addSetterAndReportErrorIfInvalid(
+          "type",
+          `Not a ${type.brand === undefined ? "number" : TypeNumberBrand[type.brand]}`,
+          check
+        );
+      }
+    });
 
-        this.typeGuards.register(-0.5, ReflectionKind.literal, (type, state) => {
-            //loosely only works for number/bigint/boolean, not for symbols/regexp/string
-            if (type.literal === null || type.literal === undefined || typeof type.literal === 'number' || typeof type.literal === 'bigint' || typeof type.literal === 'boolean') {
-                state.addSetter(`'string' === typeof ${state.accessor} && ${state.setVariable('v', String(type.literal))} === ${state.accessor}`);
-            }
-        });
+    this.typeGuards.register(2, ReflectionKind.bigint, (type, state) => {
+      state.setContext({ isNumeric: isNumeric });
+      state.addSetter(
+        `'number' === typeof ${state.accessor} || ('string' === typeof ${state.accessor} && isNumeric(${state.accessor}))`
+      );
+    });
+    this.typeGuards.register(-0.5, ReflectionKind.bigint, (type, state) => {
+      state.setContext({ isNumeric: isNumeric });
+      state.addSetter(
+        `'string' === typeof ${state.accessor} && isNumeric(${state.accessor})`
+      );
+    });
+    this.typeGuards.register(1, ReflectionKind.bigint, (type, state) =>
+      state.addSetterAndReportErrorIfInvalid(
+        "type",
+        "Not a bigint",
+        `'bigint' === typeof ${state.accessor}`
+      )
+    );
+
+    this.typeGuards.register(1, ReflectionKind.boolean, (type, state) =>
+      state.addSetterAndReportErrorIfInvalid(
+        "type",
+        "Not a boolean",
+        `'boolean' === typeof ${state.accessor}`
+      )
+    );
+    this.typeGuards.register(-0.9, ReflectionKind.boolean, (type, state) => {
+      let handleNumeric = true;
+      if (
+        type.parent &&
+        type.parent.kind === ReflectionKind.union &&
+        type.parent.types.some(
+          v =>
+            v.kind === ReflectionKind.number || v.kind === ReflectionKind.bigint
+        )
+      ) {
+        handleNumeric = false;
+      }
+      if (handleNumeric) {
+        state.addSetter(
+          `1 === ${state.accessor} || '1' === ${state.accessor} || 0 === ${state.accessor} || 'true' === ${state.accessor} || 'false' === ${state.accessor}`
+        );
+      } else {
+        state.addSetter(
+          `'true' === ${state.accessor} || 'false' === ${state.accessor}`
+        );
+      }
+    });
 
-        this.typeGuards.register(1, ReflectionKind.regexp, ((type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a RegExp', `${state.accessor} instanceof RegExp`)));
-        this.typeGuards.register(2, ReflectionKind.regexp, ((type, state) => state.addSetter(`'string' === typeof ${state.accessor}`)));
-        this.typeGuards.register(0.5, ReflectionKind.regexp, ((type, state) => state.addSetter(`'string' === typeof ${state.accessor} && ${state.accessor}[0] === '/'`)));
+    this.typeGuards.register(1, ReflectionKind.promise, (type, state) =>
+      executeTemplates(state, type.type)
+    );
+    this.typeGuards.register(1, ReflectionKind.enum, (type, state) => {
+      const matcher = state.setVariable(
+        "enumMatcher",
+        getEnumValueIndexMatcher(type)
+      );
+      state.addSetterAndReportErrorIfInvalid(
+        "type",
+        "Invalid enum member",
+        `${matcher}(${state.accessor}) >= 0`
+      );
+    });
+    this.typeGuards.register(1, ReflectionKind.array, (type, state) =>
+      typeGuardArray(type.type, state)
+    );
+    this.typeGuards.register(1, ReflectionKind.tuple, typeGuardTuple);
+    this.typeGuards.register(1, ReflectionKind.literal, (type, state) => {
+      state.addSetterAndReportErrorIfInvalid(
+        "type",
+        "Invalid literal",
+        `${state.setVariable("v", type.literal)} === ${state.accessor}`
+      );
+    });
 
+    this.typeGuards.register(-0.5, ReflectionKind.literal, (type, state) => {
+      //loosely only works for number/bigint/boolean, not for symbols/regexp/string
+      if (
+        type.literal === null ||
+        type.literal === undefined ||
+        typeof type.literal === "number" ||
+        typeof type.literal === "bigint" ||
+        typeof type.literal === "boolean"
+      ) {
+        state.addSetter(
+          `'string' === typeof ${state.accessor} && ${state.setVariable("v", String(type.literal))} === ${state.accessor}`
+        );
+      }
+    });
 
-        this.typeGuards.getRegistry(1).registerClass(Set, forwardSetToArray);
-        this.typeGuards.getRegistry(1).registerClass(Map, forwardMapToArray);
-        this.typeGuards.getRegistry(1).registerClass(Date, (type, state) => state.addSetterAndReportErrorIfInvalid('type', 'Not a Date', `${state.accessor} instanceof Date`));
-        this.typeGuards.getRegistry(0.5).registerClass(Date, (type, state) => {
-            state.addSetter(`'string' === typeof ${state.accessor} && new Date(${state.accessor}).toString() !== 'Invalid Date'`);
-        });
+    this.typeGuards.register(1, ReflectionKind.regexp, (type, state) =>
+      state.addSetterAndReportErrorIfInvalid(
+        "type",
+        "Not a RegExp",
+        `${state.accessor} instanceof RegExp`
+      )
+    );
+    this.typeGuards.register(2, ReflectionKind.regexp, (type, state) =>
+      state.addSetter(`'string' === typeof ${state.accessor}`)
+    );
+    this.typeGuards.register(0.5, ReflectionKind.regexp, (type, state) =>
+      state.addSetter(
+        `'string' === typeof ${state.accessor} && ${state.accessor}[0] === '/'`
+      )
+    );
+
+    this.typeGuards.getRegistry(1).registerClass(Set, forwardSetToArray);
+    this.typeGuards.getRegistry(1).registerClass(Map, forwardMapToArray);
+    this.typeGuards
+      .getRegistry(1)
+      .registerClass(Date, (type, state) =>
+        state.addSetterAndReportErrorIfInvalid(
+          "type",
+          "Not a Date",
+          `${state.accessor} instanceof Date`
+        )
+      );
+    this.typeGuards.getRegistry(0.5).registerClass(Date, (type, state) => {
+      state.addSetter(
+        `'string' === typeof ${state.accessor} && new Date(${state.accessor}).toString() !== 'Invalid Date'`
+      );
+    });
 
-        //if no type is found (>1), date supports also numbers
-        this.typeGuards.getRegistry(1.5).registerClass(Date, (type, state) => {
-            state.addSetter(`'number' === typeof ${state.accessor}`);
-        });
+    //if no type is found (>1), date supports also numbers
+    this.typeGuards.getRegistry(1.5).registerClass(Date, (type, state) => {
+      state.addSetter(`'number' === typeof ${state.accessor}`);
+    });
 
-        this.typeGuards.register(1, ReflectionKind.function, ((type, state) => {
-            state.setContext({ isFunction, isExtendable, resolveRuntimeType });
-            const t = state.setVariable('type', type);
-            state.addCodeForSetter(`
+    this.typeGuards.register(1, ReflectionKind.function, (type, state) => {
+      state.setContext({ isFunction, isExtendable, resolveRuntimeType });
+      const t = state.setVariable("type", type);
+      state.addCodeForSetter(`
                 if (isFunction(${state.accessor})) {
                     if ('__type' in ${state.accessor}) {
                         ${state.setter} = isExtendable(resolveRuntimeType(${state.accessor}), ${t});
@@ -2319,148 +3106,195 @@ export class Serializer {
                         ${state.setter} = true;
                     }
                 } else {
-                    if (${state.isValidation()}) ${state.assignValidationError('type', 'Not a function')}
+                    if (${state.isValidation()}) ${state.assignValidationError("type", "Not a function")}
                     ${state.setter} = false;
                 }
             `);
-        }));
-
-        this.typeGuards.register(1, ReflectionKind.regexp, (type, state) => state.addSetter(`${state.accessor} instanceof RegExp`));
-        this.typeGuards.register(2, ReflectionKind.regexp, (type, state) => state.addSetter(`'string' === typeof ${state.accessor}`));
-        this.typeGuards.getRegistry(1).addPostHook((type: Type, state: TemplateState) => {
-            for (const validation of validationAnnotation.getAnnotations(type)) {
-                const name = validation.name;
-                const args = validation.args;
-
-                if (name === 'function') {
-                    state.setContext({ ValidationErrorItem: ValidationErrorItem });
-                    assertType(args[0], ReflectionKind.function);
-                    const validatorVar = state.setVariable('validator', args[0].function);
-                    let optionVar: any = undefined;
-                    if (args[1]) {
-                        const optionParameter = args[0].parameters[2];
-                        if (optionParameter) {
-                            const option = typeToObject(args[1]);
-                            if (option === undefined && optionParameter.optional) {
-                            } else {
-                                const errors = validate(option, optionParameter.type);
-                                if (errors.length) {
-                                    throw new Error(`Invalid option value given to validator function ${String(args[0].name)}, expected ${stringifyType(optionParameter)}`);
-                                }
-                                optionVar = state.compilerContext.reserveConst(option);
-                            }
-                        }
-                    }
-                    state.addCode(`
+    });
+
+    this.typeGuards.register(1, ReflectionKind.regexp, (type, state) =>
+      state.addSetter(`${state.accessor} instanceof RegExp`)
+    );
+    this.typeGuards.register(2, ReflectionKind.regexp, (type, state) =>
+      state.addSetter(`'string' === typeof ${state.accessor}`)
+    );
+    this.typeGuards
+      .getRegistry(1)
+      .addPostHook((type: Type, state: TemplateState) => {
+        for (const validation of validationAnnotation.getAnnotations(type)) {
+          const name = validation.name;
+          const args = validation.args;
+
+          if (name === "function") {
+            state.setContext({ ValidationErrorItem: ValidationErrorItem });
+            assertType(args[0], ReflectionKind.function);
+            const validatorVar = state.setVariable(
+              "validator",
+              args[0].function
+            );
+            let optionVar: any = undefined;
+            if (args[1]) {
+              const optionParameter = args[0].parameters[2];
+              if (optionParameter) {
+                const option = typeToObject(args[1]);
+                if (option === undefined && optionParameter.optional) {
+                } else {
+                  const errors = validate(option, optionParameter.type);
+                  if (errors.length) {
+                    throw new Error(
+                      `Invalid option value given to validator function ${String(args[0].name)}, expected ${stringifyType(optionParameter)}`
+                    );
+                  }
+                  optionVar = state.compilerContext.reserveConst(option);
+                }
+              }
+            }
+            state.addCode(`
                         {
-                            let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, 'type')}, ${optionVar ? optionVar : 'undefined'});
+                            let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, "type")}, ${optionVar ? optionVar : "undefined"});
                             if (error) {
                                 ${state.setter} = false;
                                 if (state.errors) state.errors.push(new ValidationErrorItem(${collapsePath(state.path)}, error.code, error.message, ${state.originalAccessor}));
                             }
                         }
                     `);
-                } else {
-                    const validator = validators[name];
-                    if (validator) {
-                        state.setContext({ ValidationErrorItem: ValidationErrorItem });
-                        const validatorVar = state.setVariable('validator', validator(...args));
-                        state.addCode(`
+          } else {
+            const validator = validators[name];
+            if (validator) {
+              state.setContext({ ValidationErrorItem: ValidationErrorItem });
+              const validatorVar = state.setVariable(
+                "validator",
+                validator(...args)
+              );
+              state.addCode(`
                             {
-                                let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, 'type')});
+                                let error = ${validatorVar}(${state.originalAccessor}, ${state.compilerContext.reserveConst(type, "type")});
                                 if (error) {
                                     ${state.setter} = false;
                                     if (state.errors) state.errors.push(new ValidationErrorItem(${collapsePath(state.path)}, error.code, error.message, ${state.originalAccessor}));
                                 }
                             }
                         `);
-                    }
-                }
             }
-        });
+          }
+        }
+      });
 
-        this.typeGuards.register(1, ReflectionKind.union, handleUnion);
-        this.typeGuards.registerBinary(1, (type, state) => {
-            state.addSetter(`${state.accessor} instanceof ${state.setVariable('classType', type.classType)}`);
-        });
-        this.typeGuards.registerBinary(10, (type, state) => {
-            state.addSetter(`'string' === typeof ${state.accessor}`);
-        });
-    }
+    this.typeGuards.register(1, ReflectionKind.union, handleUnion);
+    this.typeGuards.registerBinary(1, (type, state) => {
+      state.addSetter(
+        `${state.accessor} instanceof ${state.setVariable("classType", type.classType)}`
+      );
+    });
+    this.typeGuards.registerBinary(10, (type, state) => {
+      state.addSetter(`'string' === typeof ${state.accessor}`);
+    });
+  }
 }
 
 function assignAccessorTemplate(type: Type, state: TemplateState) {
-    state.addSetter(state.accessor);
+  state.addSetter(state.accessor);
 }
 
 export const serializableKinds: ReflectionKind[] = [
-    ReflectionKind.any,
-    ReflectionKind.unknown,
-    ReflectionKind.object,
-    ReflectionKind.string,
-    ReflectionKind.number,
-    ReflectionKind.boolean,
-    ReflectionKind.symbol,
-    ReflectionKind.bigint,
-    ReflectionKind.null,
-    ReflectionKind.undefined,
-    ReflectionKind.literal,
-    ReflectionKind.templateLiteral,
-    ReflectionKind.property,
-    ReflectionKind.method,
-    ReflectionKind.function,
-    ReflectionKind.promise,
-    ReflectionKind.class,
-    ReflectionKind.enum,
-    ReflectionKind.union,
-    ReflectionKind.array,
-    ReflectionKind.tuple,
-    ReflectionKind.regexp,
-    ReflectionKind.objectLiteral,
+  ReflectionKind.any,
+  ReflectionKind.unknown,
+  ReflectionKind.object,
+  ReflectionKind.string,
+  ReflectionKind.number,
+  ReflectionKind.boolean,
+  ReflectionKind.symbol,
+  ReflectionKind.bigint,
+  ReflectionKind.null,
+  ReflectionKind.undefined,
+  ReflectionKind.literal,
+  ReflectionKind.templateLiteral,
+  ReflectionKind.property,
+  ReflectionKind.method,
+  ReflectionKind.function,
+  ReflectionKind.promise,
+  ReflectionKind.class,
+  ReflectionKind.enum,
+  ReflectionKind.union,
+  ReflectionKind.array,
+  ReflectionKind.tuple,
+  ReflectionKind.regexp,
+  ReflectionKind.objectLiteral
 ];
 
 export class EmptySerializer extends Serializer {
-    constructor(name: string = 'empty') {
-        super(name);
-    }
-
-    protected registerValidators() {
-    }
-
-    protected registerSerializers() {
-        for (const kind of serializableKinds) this.serializeRegistry.register(kind, assignAccessorTemplate);
-        for (const kind of serializableKinds) this.deserializeRegistry.register(kind, assignAccessorTemplate);
-
-        this.deserializeRegistry.register(ReflectionKind.class, serializeObjectLiteral);
-        this.serializeRegistry.register(ReflectionKind.class, serializeObjectLiteral);
-        this.deserializeRegistry.register(ReflectionKind.objectLiteral, serializeObjectLiteral);
-        this.serializeRegistry.register(ReflectionKind.objectLiteral, serializeObjectLiteral);
-
-        this.deserializeRegistry.register(ReflectionKind.array, serializeArray);
-        this.serializeRegistry.register(ReflectionKind.array, serializeArray);
-
-        this.deserializeRegistry.register(ReflectionKind.tuple, serializeTuple);
-        this.serializeRegistry.register(ReflectionKind.tuple, serializeTuple);
-
-        this.deserializeRegistry.register(ReflectionKind.union, handleUnion);
-        this.serializeRegistry.register(ReflectionKind.union, handleUnion);
-
-        this.serializeRegistry.register(ReflectionKind.propertySignature, serializePropertyOrParameter);
-        this.serializeRegistry.register(ReflectionKind.property, serializePropertyOrParameter);
-        this.serializeRegistry.register(ReflectionKind.parameter, serializePropertyOrParameter);
-        this.deserializeRegistry.register(ReflectionKind.propertySignature, serializePropertyOrParameter);
-        this.deserializeRegistry.register(ReflectionKind.property, serializePropertyOrParameter);
-        this.deserializeRegistry.register(ReflectionKind.parameter, serializePropertyOrParameter);
-
-        this.serializeRegistry.registerBinary(assignAccessorTemplate);
-        this.serializeRegistry.registerClass(Date, assignAccessorTemplate);
-        this.serializeRegistry.registerClass(Map, assignAccessorTemplate);
-        this.serializeRegistry.registerClass(Set, assignAccessorTemplate);
-        this.deserializeRegistry.registerBinary(assignAccessorTemplate);
-        this.deserializeRegistry.registerClass(Date, assignAccessorTemplate);
-        this.deserializeRegistry.registerClass(Map, assignAccessorTemplate);
-        this.deserializeRegistry.registerClass(Set, assignAccessorTemplate);
-    }
+  constructor(name: string = "empty") {
+    super(name);
+  }
+
+  protected registerValidators() {}
+
+  protected registerSerializers() {
+    for (const kind of serializableKinds)
+      this.serializeRegistry.register(kind, assignAccessorTemplate);
+    for (const kind of serializableKinds)
+      this.deserializeRegistry.register(kind, assignAccessorTemplate);
+
+    this.deserializeRegistry.register(
+      ReflectionKind.class,
+      serializeObjectLiteral
+    );
+    this.serializeRegistry.register(
+      ReflectionKind.class,
+      serializeObjectLiteral
+    );
+    this.deserializeRegistry.register(
+      ReflectionKind.objectLiteral,
+      serializeObjectLiteral
+    );
+    this.serializeRegistry.register(
+      ReflectionKind.objectLiteral,
+      serializeObjectLiteral
+    );
+
+    this.deserializeRegistry.register(ReflectionKind.array, serializeArray);
+    this.serializeRegistry.register(ReflectionKind.array, serializeArray);
+
+    this.deserializeRegistry.register(ReflectionKind.tuple, serializeTuple);
+    this.serializeRegistry.register(ReflectionKind.tuple, serializeTuple);
+
+    this.deserializeRegistry.register(ReflectionKind.union, handleUnion);
+    this.serializeRegistry.register(ReflectionKind.union, handleUnion);
+
+    this.serializeRegistry.register(
+      ReflectionKind.propertySignature,
+      serializePropertyOrParameter
+    );
+    this.serializeRegistry.register(
+      ReflectionKind.property,
+      serializePropertyOrParameter
+    );
+    this.serializeRegistry.register(
+      ReflectionKind.parameter,
+      serializePropertyOrParameter
+    );
+    this.deserializeRegistry.register(
+      ReflectionKind.propertySignature,
+      serializePropertyOrParameter
+    );
+    this.deserializeRegistry.register(
+      ReflectionKind.property,
+      serializePropertyOrParameter
+    );
+    this.deserializeRegistry.register(
+      ReflectionKind.parameter,
+      serializePropertyOrParameter
+    );
+
+    this.serializeRegistry.registerBinary(assignAccessorTemplate);
+    this.serializeRegistry.registerClass(Date, assignAccessorTemplate);
+    this.serializeRegistry.registerClass(Map, assignAccessorTemplate);
+    this.serializeRegistry.registerClass(Set, assignAccessorTemplate);
+    this.deserializeRegistry.registerBinary(assignAccessorTemplate);
+    this.deserializeRegistry.registerClass(Date, assignAccessorTemplate);
+    this.deserializeRegistry.registerClass(Map, assignAccessorTemplate);
+    this.deserializeRegistry.registerClass(Set, assignAccessorTemplate);
+  }
 }
 
 export const serializer: Serializer = new Serializer();
diff --git a/src/type-serialization.ts b/src/type-serialization.ts
index 9d8edb6a2891c04d02af18e18b4aa71fac8647b0..fae072ec5696c0ef72bb417ca4e5bd1bd774e939 100644
--- a/src/type-serialization.ts
+++ b/src/type-serialization.ts
@@ -1,807 +1,970 @@
+import { getClassName, getParentClass } from "@deepkit/core";
+import { typeSettings } from "./core.js";
+import { reflect, ReflectionClass, typeOf } from "./reflection/reflection.js";
 import {
-    entityAnnotation,
-    EntityOptions,
-    findMember,
-    isSameType,
-    isTypeIncluded,
-    isWithAnnotations,
-    ReflectionKind,
-    ReflectionVisibility,
-    Type,
-    TypeArray,
-    TypeClass,
-    typeDecorators,
-    TypeEnum,
-    TypeFunction,
-    TypeIndexSignature,
-    TypeLiteral,
-    TypeObjectLiteral,
-    TypeParameter,
-    TypeProperty,
-    TypeRest,
-    TypeTuple,
-    TypeTupleMember
-} from './reflection/type.js';
-import { getClassName, getParentClass } from '@deepkit/core';
-import { reflect, ReflectionClass, typeOf } from './reflection/reflection.js';
-import { typeSettings } from './core.js';
-import { regExpFromString } from './utils.js';
+  entityAnnotation,
+  EntityOptions,
+  findMember,
+  isSameType,
+  isTypeIncluded,
+  isWithAnnotations,
+  ReflectionKind,
+  ReflectionVisibility,
+  TagsReflection,
+  Type,
+  TypeArray,
+  TypeClass,
+  typeDecorators,
+  TypeEnum,
+  TypeFunction,
+  TypeIndexSignature,
+  TypeLiteral,
+  TypeObjectLiteral,
+  TypeParameter,
+  TypeProperty,
+  TypeRest,
+  TypeTuple,
+  TypeTupleMember
+} from "./reflection/type.js";
+import { regExpFromString } from "./utils.js";
 
 export interface SerializedTypeAnnotations {
-    entityOptions?: EntityOptions;
+  entityOptions?: EntityOptions;
 
-    typeName?: string;
+  typeName?: string;
 
-    typeArguments?: SerializedTypeReference[];
+  typeArguments?: SerializedTypeReference[];
 
-    indexAccessOrigin?: { container: SerializedTypeReference, index: SerializedTypeReference };
-
-    // annotations will be generated on deserialization from the decorators
-    // annotations?: Annotations; //parsed decorator types as annotations
-
-    decorators?: SerializedTypeReference[]; //original decorator type
-}
-
-interface SerializedTypeObjectLiteral extends SerializedTypeAnnotations {
-    kind: ReflectionKind.objectLiteral,
-    types: SerializedTypeReference[];
-}
-
-interface SerializedTypeClassType extends SerializedTypeAnnotations {
-    kind: ReflectionKind.class,
-    name?: string; //@entity.name
-    globalObject?: true; //Uint8Array, Date, etc
-    classType: string; //getClassName result
-    extendsArguments?: SerializedTypeReference[];
-    arguments?: SerializedTypeReference[];
-    superClass?: SerializedTypeReference;
-    types: SerializedTypeReference[];
-}
-
-interface SerializedTypeFunction extends SerializedTypeAnnotations {
-    kind: ReflectionKind.function,
-    name?: number | string | symbol,
-    parameters: SerializedTypeParameter[];
-    return: SerializedTypeReference;
-}
-
-type SerializedTypeReference = number;
-
-interface SimpleSerializedType extends SerializedTypeAnnotations {
-    kind: ReflectionKind.never | ReflectionKind.any | ReflectionKind.unknown | ReflectionKind.void | ReflectionKind.object | ReflectionKind.string
-        | ReflectionKind.number | ReflectionKind.boolean | ReflectionKind.symbol | ReflectionKind.bigint | ReflectionKind.null | ReflectionKind.undefined | ReflectionKind.regexp;
-    origin?: SerializedTypeReference;
-}
-
-interface SerializedTypeLiteral extends SerializedTypeAnnotations {
-    kind: ReflectionKind.literal,
-    literal: { type: 'symbol', name: string } | string | number | boolean | { type: 'bigint', value: string } | { type: 'regex', regex: string };
-}
-
-interface SerializedTypeTemplateLiteral extends SerializedTypeAnnotations {
-    kind: ReflectionKind.templateLiteral,
-    types: SerializedTypeReference[]
-}
-
-interface SerializedTypeParameter extends SerializedTypeAnnotations {
-    kind: ReflectionKind.parameter,
-    name: string;
-    type: SerializedTypeReference;
-
-    //parameter could be a property as well if visibility is set
-    visibility?: ReflectionVisibility,
-    readonly?: true;
-    optional?: true,
-
-    /**
-     * Set when the parameter has a default value aka initializer.
-     */
-    default?: true
+  indexAccessOrigin?: {
+    container: SerializedTypeReference;
+    index: SerializedTypeReference;
+  };
+
+  // annotations will be generated on deserialization from the decorators
+  // annotations?: Annotations; //parsed decorator types as annotations
+
+  decorators?: SerializedTypeReference[]; //original decorator type
+}
+
+export interface SerializedTypeObjectLiteral extends SerializedTypeAnnotations {
+  kind: ReflectionKind.objectLiteral;
+  types: SerializedTypeReference[];
+  tags?: TagsReflection;
+}
+
+export interface SerializedTypeClassType extends SerializedTypeAnnotations {
+  kind: ReflectionKind.class;
+  name?: string; //@entity.name
+  globalObject?: true; //Uint8Array, Date, etc
+  classType: string; //getClassName result
+  extendsArguments?: SerializedTypeReference[];
+  arguments?: SerializedTypeReference[];
+  superClass?: SerializedTypeReference;
+  types: SerializedTypeReference[];
+  tags?: TagsReflection;
+}
+
+export interface SerializedTypeFunction extends SerializedTypeAnnotations {
+  kind: ReflectionKind.function;
+  name?: number | string | symbol;
+  parameters: SerializedTypeParameter[];
+  return: SerializedTypeReference;
+  tags?: TagsReflection;
+}
+
+export type SerializedTypeReference = number;
+
+export interface SimpleSerializedType extends SerializedTypeAnnotations {
+  kind:
+    | ReflectionKind.never
+    | ReflectionKind.any
+    | ReflectionKind.unknown
+    | ReflectionKind.void
+    | ReflectionKind.object
+    | ReflectionKind.string
+    | ReflectionKind.number
+    | ReflectionKind.boolean
+    | ReflectionKind.symbol
+    | ReflectionKind.bigint
+    | ReflectionKind.null
+    | ReflectionKind.undefined
+    | ReflectionKind.regexp;
+  origin?: SerializedTypeReference;
+}
+
+export interface SerializedTypeLiteral extends SerializedTypeAnnotations {
+  kind: ReflectionKind.literal;
+  literal:
+    | { type: "symbol"; name: string }
+    | string
+    | number
+    | boolean
+    | { type: "bigint"; value: string }
+    | { type: "regex"; regex: string };
+}
+
+export interface SerializedTypeTemplateLiteral
+  extends SerializedTypeAnnotations {
+  kind: ReflectionKind.templateLiteral;
+  types: SerializedTypeReference[];
+}
+
+export interface SerializedTypeParameter extends SerializedTypeAnnotations {
+  kind: ReflectionKind.parameter;
+  name: string;
+  type: SerializedTypeReference;
+
+  //parameter could be a property as well if visibility is set
+  visibility?: ReflectionVisibility;
+  readonly?: true;
+  optional?: true;
+
+  /**
+   * Set when the parameter has a default value aka initializer.
+   */
+  default?: any;
+  tags?: TagsReflection;
 }
 
 export interface SerializedTypeBaseMember extends SerializedTypeAnnotations {
-    visibility: ReflectionVisibility,
-    abstract?: true;
-    optional?: true,
-    readonly?: true;
+  visibility: ReflectionVisibility;
+  abstract?: true;
+  optional?: true;
+  readonly?: true;
+  tags?: TagsReflection;
 }
 
 export interface SerializedTypeMethod extends SerializedTypeBaseMember {
-    kind: ReflectionKind.method,
-    visibility: ReflectionVisibility,
-    name: number | string | symbol;
-    parameters: SerializedTypeParameter[];
-    optional?: true,
-    abstract?: true;
-    return: SerializedTypeReference;
+  kind: ReflectionKind.method;
+  visibility: ReflectionVisibility;
+  name: number | string | symbol;
+  parameters: SerializedTypeParameter[];
+  optional?: true;
+  abstract?: true;
+  return: SerializedTypeReference;
 }
 
-interface SerializedTypeProperty extends SerializedTypeBaseMember {
-    kind: ReflectionKind.property,
-    visibility: ReflectionVisibility,
-    name: number | string | symbol;
-    optional?: true,
-    readonly?: true;
-    abstract?: true;
-    description?: string;
-    type: SerializedTypeReference;
+export interface SerializedTypeProperty extends SerializedTypeBaseMember {
+  kind: ReflectionKind.property;
+  visibility: ReflectionVisibility;
+  name: number | string | symbol;
+  optional?: true;
+  readonly?: true;
+  abstract?: true;
+  description?: string;
+  type: SerializedTypeReference;
 
-    /**
-     * Set when the property has a default value aka initializer.
-     */
-    default?: true
+  /**
+   * Set when the property has a default value aka initializer.
+   */
+  default?: any;
 }
 
-interface SerializedTypePromise extends SerializedTypeAnnotations {
-    kind: ReflectionKind.promise,
-    type: SerializedTypeReference;
+export interface SerializedTypePromise extends SerializedTypeAnnotations {
+  kind: ReflectionKind.promise;
+  type: SerializedTypeReference;
 }
 
-interface SerializedTypeEnum extends SerializedTypeAnnotations {
-    kind: ReflectionKind.enum,
-    enum: { [name: string]: string | number | undefined | null };
-    values: (string | number | undefined | null)[];
-    indexType: SerializedTypeReference;
+export interface SerializedTypeEnum extends SerializedTypeAnnotations {
+  kind: ReflectionKind.enum;
+  enum: { [name: string]: string | number | undefined | null };
+  values: (string | number | undefined | null)[];
+  indexType: SerializedTypeReference;
+  tags?: TagsReflection;
 }
 
 export interface SerializedTypeUnion extends SerializedTypeAnnotations {
-    kind: ReflectionKind.union,
-    types: SerializedTypeReference[];
+  kind: ReflectionKind.union;
+  types: SerializedTypeReference[];
 }
 
 export interface SerializedTypeIntersection extends SerializedTypeAnnotations {
-    kind: ReflectionKind.intersection,
-    types: SerializedTypeReference[];
+  kind: ReflectionKind.intersection;
+  types: SerializedTypeReference[];
 }
 
-interface SerializedTypeArray extends SerializedTypeAnnotations {
-    kind: ReflectionKind.array,
-    type: SerializedTypeReference;
+export interface SerializedTypeArray extends SerializedTypeAnnotations {
+  kind: ReflectionKind.array;
+  type: SerializedTypeReference;
+  tags?: TagsReflection;
 }
 
-interface SerializedTypeIndexSignature extends SerializedTypeAnnotations {
-    kind: ReflectionKind.indexSignature,
-    index: SerializedTypeReference;
-    type: SerializedTypeReference;
+export interface SerializedTypeIndexSignature
+  extends SerializedTypeAnnotations {
+  kind: ReflectionKind.indexSignature;
+  index: SerializedTypeReference;
+  type: SerializedTypeReference;
+
+  /**
+   * Set when the parameter has a default value aka initializer.
+   */
+  default?: any;
 }
 
-interface SerializedTypePropertySignature extends SerializedTypeAnnotations {
-    kind: ReflectionKind.propertySignature,
-    name: number | string | symbol;
-    optional?: true;
-    readonly?: true;
-    description?: string;
-    type: SerializedTypeReference;
+export interface SerializedTypePropertySignature
+  extends SerializedTypeAnnotations {
+  kind: ReflectionKind.propertySignature;
+  name: number | string | symbol;
+  optional?: true;
+  readonly?: true;
+  description?: string;
+  type: SerializedTypeReference;
+
+  /**
+   * Set when the parameter has a default value aka initializer.
+   */
+  default?: any;
+  tags?: TagsReflection;
 }
 
-interface SerializedTypeMethodSignature extends SerializedTypeAnnotations {
-    kind: ReflectionKind.methodSignature,
-    name: number | string | symbol;
-    optional?: true;
-    parameters: SerializedTypeParameter[];
-    return: SerializedTypeReference;
+export interface SerializedTypeMethodSignature
+  extends SerializedTypeAnnotations {
+  kind: ReflectionKind.methodSignature;
+  name: number | string | symbol;
+  optional?: true;
+  parameters: SerializedTypeParameter[];
+  return: SerializedTypeReference;
+  tags?: TagsReflection;
 }
 
 export interface SerializedTypeTypeParameter extends SerializedTypeAnnotations {
-    kind: ReflectionKind.typeParameter,
-    name: string,
+  kind: ReflectionKind.typeParameter;
+  name: string;
 }
 
-interface SerializedTypeInfer extends SerializedTypeAnnotations {
-    kind: ReflectionKind.infer,
+export interface SerializedTypeInfer extends SerializedTypeAnnotations {
+  kind: ReflectionKind.infer;
 }
 
-interface SerializedTypeTupleMember extends SerializedTypeAnnotations {
-    kind: ReflectionKind.tupleMember,
-    type: SerializedTypeReference;
-    optional?: true;
-    name?: string;
+export interface SerializedTypeTupleMember extends SerializedTypeAnnotations {
+  kind: ReflectionKind.tupleMember;
+  type: SerializedTypeReference;
+  optional?: true;
+  name?: string;
 }
 
-interface SerializedTypeTuple extends SerializedTypeAnnotations {
-    kind: ReflectionKind.tuple,
-    types: SerializedTypeTupleMember[]
+export interface SerializedTypeTuple extends SerializedTypeAnnotations {
+  kind: ReflectionKind.tuple;
+  types: SerializedTypeTupleMember[];
 }
 
-interface SerializedTypeRest extends SerializedTypeAnnotations {
-    kind: ReflectionKind.rest,
-    type: SerializedTypeReference,
+export interface SerializedTypeRest extends SerializedTypeAnnotations {
+  kind: ReflectionKind.rest;
+  type: SerializedTypeReference;
 }
 
 export type SerializedType =
-    SimpleSerializedType
-    | SerializedTypeLiteral
-    | SerializedTypeTemplateLiteral
-    | SerializedTypeParameter
-    | SerializedTypeFunction
-    | SerializedTypeMethod
-    | SerializedTypeProperty
-    | SerializedTypePromise
-    | SerializedTypeClassType
-    | SerializedTypeEnum
-    | SerializedTypeUnion
-    | SerializedTypeIntersection
-    | SerializedTypeArray
-    | SerializedTypeObjectLiteral
-    | SerializedTypeIndexSignature
-    | SerializedTypePropertySignature
-    | SerializedTypeMethodSignature
-    | SerializedTypeTypeParameter
-    | SerializedTypeInfer
-    | SerializedTypeTuple
-    | SerializedTypeTupleMember
-    | SerializedTypeRest;
+  | SimpleSerializedType
+  | SerializedTypeLiteral
+  | SerializedTypeTemplateLiteral
+  | SerializedTypeParameter
+  | SerializedTypeFunction
+  | SerializedTypeMethod
+  | SerializedTypeProperty
+  | SerializedTypePromise
+  | SerializedTypeClassType
+  | SerializedTypeEnum
+  | SerializedTypeUnion
+  | SerializedTypeIntersection
+  | SerializedTypeArray
+  | SerializedTypeObjectLiteral
+  | SerializedTypeIndexSignature
+  | SerializedTypePropertySignature
+  | SerializedTypeMethodSignature
+  | SerializedTypeTypeParameter
+  | SerializedTypeInfer
+  | SerializedTypeTuple
+  | SerializedTypeTupleMember
+  | SerializedTypeRest;
 
 export type SerializedTypes = SerializedType[];
 
 declare var window: any;
 
-const envGlobal: any = typeof globalThis !== "undefined"
+const envGlobal: any =
+  typeof globalThis !== "undefined"
     ? globalThis
     : typeof global !== "undefined"
-    ? global
-    : window;
+      ? global
+      : window;
 
-function isWithSerializedAnnotations(type: any): type is SerializedTypeAnnotations {
-    return isWithAnnotations(type);
+function isWithSerializedAnnotations(
+  type: any
+): type is SerializedTypeAnnotations {
+  return isWithAnnotations(type);
 }
 
 export interface SerializerState {
-    types: SerializedTypes;
-    disableMethods?: true;
-    refs: Map<Type, number>;
+  types: SerializedTypes;
+  disableMethods?: true;
+  refs: Map<Type, number>;
 }
 
 function filterRemoveFunctions(v: Type): boolean {
-    return v.kind !== ReflectionKind.function && v.kind !== ReflectionKind.method && v.kind !== ReflectionKind.methodSignature;
-}
-
-function exportEntityOptions(type: TypeClass | TypeObjectLiteral, result: SerializedType): void {
-    const reflection = ReflectionClass.from(type);
+  return (
+    v.kind !== ReflectionKind.function &&
+    v.kind !== ReflectionKind.method &&
+    v.kind !== ReflectionKind.methodSignature
+  );
+}
+
+function exportEntityOptions(
+  type: TypeClass | TypeObjectLiteral,
+  result: SerializedType
+): void {
+  const reflection = ReflectionClass.from(type);
+
+  let changed = false;
+  const entityAttributes: EntityOptions = {};
+  if (reflection.name !== undefined) {
+    changed = true;
+    entityAttributes.name = reflection.name;
+  }
+  if (reflection.description) {
+    changed = true;
+    entityAttributes.description = reflection.description;
+  }
+  if (reflection.databaseSchemaName !== undefined) {
+    changed = true;
+    entityAttributes.database = reflection.databaseSchemaName;
+  }
+  if (reflection.collectionName !== undefined) {
+    changed = true;
+    entityAttributes.collection = reflection.collectionName;
+  }
+  if (reflection.singleTableInheritance) {
+    changed = true;
+    entityAttributes.singleTableInheritance = reflection.singleTableInheritance;
+  }
+  if (reflection.indexes.length) {
+    changed = true;
+    entityAttributes.indexes = reflection.indexes;
+  }
+
+  if (changed) {
+    result.entityOptions = entityAttributes;
+  }
+}
+
+function assignEntityOptions(
+  type: TypeClass | TypeObjectLiteral,
+  serialized: SerializedType
+): void {
+  if (!serialized.entityOptions) return;
+  const entity = entityAnnotation.getFirst(type) || {};
+
+  if (serialized.entityOptions.name !== undefined)
+    entity.name = serialized.entityOptions.name;
+  if (serialized.entityOptions.description !== undefined)
+    entity.description = serialized.entityOptions.description;
+  if (serialized.entityOptions.database !== undefined)
+    entity.database = serialized.entityOptions.database;
+  if (serialized.entityOptions.collection !== undefined)
+    entity.collection = serialized.entityOptions.collection;
+  if (serialized.entityOptions.singleTableInheritance !== undefined)
+    entity.singleTableInheritance =
+      serialized.entityOptions.singleTableInheritance;
+  if (serialized.entityOptions.indexes !== undefined)
+    entity.indexes = serialized.entityOptions.indexes;
+
+  entityAnnotation.replaceType(type, [entity]);
+}
+
+function serialize(
+  type: Type,
+  state: SerializerState
+): SerializedTypeReference {
+  const serialized = state.refs.get(type);
+  if (serialized) return serialized;
+
+  const result: SerializedType = { kind: type.kind } as SerializedType;
+
+  state.types.push(result);
+  const index = state.types.length - 1;
+  state.refs.set(type, index);
+
+  if (type.typeName) result.typeName = type.typeName;
+  if (type.decorators)
+    (result as SerializedTypeAnnotations).decorators = type.decorators.map(v =>
+      serialize(v, state)
+    );
+  if (type.typeArguments)
+    (result as SerializedTypeAnnotations).typeArguments =
+      type.typeArguments.map(v => serialize(v, state));
+  if (type.indexAccessOrigin)
+    (result as SerializedTypeAnnotations).indexAccessOrigin = {
+      index: serialize(type.indexAccessOrigin.index, state),
+      container: serialize(type.indexAccessOrigin.container, state)
+    };
 
-    let changed = false;
-    const entityAttributes: EntityOptions = {};
-    if (reflection.name !== undefined) {
-        changed = true;
-        entityAttributes.name = reflection.name;
+  switch (type.kind) {
+    case ReflectionKind.objectLiteral: {
+      if (type.typeName && type.typeName.startsWith("Type")) {
+        //make sure that Type types are not serialized, as they are way too expensive and
+        //there is no need to actually serialize them.
+        const typeType = typeOf<Type>();
+        if (
+          typeType.kind === ReflectionKind.union &&
+          isTypeIncluded(typeType.types, type)
+        ) {
+          Object.assign(result, {
+            kind: ReflectionKind.any
+          });
+          break;
+        }
+      }
+
+      const types = state.disableMethods
+        ? type.types.filter(filterRemoveFunctions)
+        : type.types;
+      Object.assign(result, {
+        kind: ReflectionKind.objectLiteral,
+        types: types.map(member => serialize(member, state)),
+        tags: type.tags
+      } as SerializedTypeObjectLiteral);
+      exportEntityOptions(type, result);
+      break;
     }
-    if (reflection.description) {
-        changed = true;
-        entityAttributes.description = reflection.description;
+    case ReflectionKind.class: {
+      const types = state.disableMethods
+        ? type.types.filter(filterRemoveFunctions)
+        : type.types;
+      const parent = getParentClass(type.classType);
+      let superClass: SerializedTypeReference | undefined = undefined;
+      try {
+        superClass = parent ? serialize(reflect(parent), state) : undefined;
+      } catch {}
+
+      const classType = getClassName(type.classType);
+      const globalObject: boolean =
+        envGlobal && envGlobal[classType] === type.classType;
+
+      Object.assign(result, {
+        kind: ReflectionKind.class,
+        types: types.map(member => serialize(member, state)),
+        name: ReflectionClass.from(type.classType).name,
+        globalObject: globalObject ? true : undefined,
+        classType,
+        arguments: type.arguments
+          ? type.arguments.map(member => serialize(member, state))
+          : undefined,
+        extendsArguments: type.extendsArguments
+          ? type.extendsArguments.map(member => serialize(member, state))
+          : undefined,
+        superClass,
+        tags: type.tags
+      } as SerializedTypeClassType);
+      exportEntityOptions(type, result);
+      break;
     }
-    if (reflection.databaseSchemaName !== undefined) {
-        changed = true;
-        entityAttributes.database = reflection.databaseSchemaName;
+    case ReflectionKind.literal: {
+      Object.assign(result, {
+        kind: ReflectionKind.literal,
+        literal:
+          "symbol" === typeof type.literal
+            ? { type: "symbol", name: type.literal.toString().slice(7, -1) }
+            : "bigint" === typeof type.literal
+              ? { type: "bigint", value: String(type.literal) }
+              : type.literal instanceof RegExp
+                ? { type: "regex", regex: String(type.literal) }
+                : type.literal
+      } as SerializedTypeLiteral);
+      break;
     }
-    if (reflection.collectionName !== undefined) {
-        changed = true;
-        entityAttributes.collection = reflection.collectionName;
+    case ReflectionKind.tuple: {
+      Object.assign(result, {
+        kind: ReflectionKind.tuple,
+        types: type.types.map(member => ({
+          ...member,
+          jit: undefined,
+          parent: undefined,
+          type: serialize(member.type, state)
+        }))
+      } as SerializedTypeTuple);
+      break;
     }
-    if (reflection.singleTableInheritance) {
-        changed = true;
-        entityAttributes.singleTableInheritance = reflection.singleTableInheritance;
+    case ReflectionKind.union: {
+      if (type.typeName && type.typeName.startsWith("Type")) {
+        //make sure that Type types are not serialized, as they are way too expensive and
+        //there is no need to actually serialize them.
+        const typeType = typeOf<Type>();
+        if (isSameType(typeType, type)) {
+          Object.assign(result, {
+            kind: ReflectionKind.any
+          });
+          break;
+        }
+      }
+
+      const types = state.disableMethods
+        ? type.types.filter(filterRemoveFunctions)
+        : type.types;
+      Object.assign(result, {
+        kind: ReflectionKind.union,
+        types: types.map(member => serialize(member, state))
+      } as SerializedTypeUnion);
+      break;
     }
-    if (reflection.indexes.length) {
-        changed = true;
-        entityAttributes.indexes = reflection.indexes;
+    case ReflectionKind.intersection: {
+      Object.assign(result, {
+        kind: ReflectionKind.intersection,
+        types: type.types.map(member => serialize(member, state))
+      } as SerializedTypeIntersection);
+      break;
     }
-
-    if (changed) {
-        result.entityOptions = entityAttributes;
+    case ReflectionKind.templateLiteral: {
+      Object.assign(result, {
+        kind: ReflectionKind.templateLiteral,
+        types: type.types.map(member => serialize(member, state))
+      } as SerializedTypeTemplateLiteral);
+      break;
     }
-}
-
-function assignEntityOptions(type: TypeClass | TypeObjectLiteral, serialized: SerializedType): void {
-    if (!serialized.entityOptions) return;
-    const entity = entityAnnotation.getFirst(type) || {};
-
-    if (serialized.entityOptions.name !== undefined) entity.name = serialized.entityOptions.name;
-    if (serialized.entityOptions.description !== undefined) entity.description = serialized.entityOptions.description;
-    if (serialized.entityOptions.database !== undefined) entity.database = serialized.entityOptions.database;
-    if (serialized.entityOptions.collection !== undefined) entity.collection = serialized.entityOptions.collection;
-    if (serialized.entityOptions.singleTableInheritance !== undefined) entity.singleTableInheritance = serialized.entityOptions.singleTableInheritance;
-    if (serialized.entityOptions.indexes !== undefined) entity.indexes = serialized.entityOptions.indexes;
-
-    entityAnnotation.replaceType(type, [entity]);
-}
-
-function serialize(type: Type, state: SerializerState): SerializedTypeReference {
-    const serialized = state.refs.get(type);
-    if (serialized) return serialized;
-
-    const result: SerializedType = { kind: type.kind } as SerializedType;
-
-    state.types.push(result);
-    const index = state.types.length - 1;
-    state.refs.set(type, index);
-
-    if (type.typeName) result.typeName = type.typeName;
-    if (type.decorators) (result as SerializedTypeAnnotations).decorators = type.decorators.map(v => serialize(v, state));
-    if (type.typeArguments) (result as SerializedTypeAnnotations).typeArguments = type.typeArguments.map(v => serialize(v, state));
-    if (type.indexAccessOrigin) (result as SerializedTypeAnnotations).indexAccessOrigin = {
-        index: serialize(type.indexAccessOrigin.index, state),
-        container: serialize(type.indexAccessOrigin.container, state)
-    };
-
-    switch (type.kind) {
-        case ReflectionKind.objectLiteral: {
-            if (type.typeName && type.typeName.startsWith('Type')) {
-                //make sure that Type types are not serialized, as they are way too expensive and
-                //there is no need to actually serialize them.
-                const typeType = typeOf<Type>();
-                if (typeType.kind === ReflectionKind.union && isTypeIncluded(typeType.types, type)) {
-                    Object.assign(result, {
-                        kind: ReflectionKind.any,
-                    });
-                    break;
-                }
-            }
-
-            const types = state.disableMethods ? type.types.filter(filterRemoveFunctions) : type.types;
-            Object.assign(result, {
-                kind: ReflectionKind.objectLiteral,
-                types: types.map(member => serialize(member, state)),
-            } as SerializedTypeObjectLiteral);
-            exportEntityOptions(type, result);
-            break;
-        }
-        case ReflectionKind.class: {
-            const types = state.disableMethods ? type.types.filter(filterRemoveFunctions) : type.types;
-            const parent = getParentClass(type.classType);
-            let superClass: SerializedTypeReference | undefined = undefined;
-            try {
-                superClass = parent ? serialize(reflect(parent), state) : undefined;
-            } catch {
-            }
-
-            const classType = getClassName(type.classType);
-            const globalObject: boolean = envGlobal && envGlobal[classType] === type.classType;
-
-            Object.assign(result, {
-                kind: ReflectionKind.class,
-                types: types.map(member => serialize(member, state)),
-                name: ReflectionClass.from(type.classType).name,
-                globalObject: globalObject ? true : undefined,
-                classType,
-                arguments: type.arguments ? type.arguments.map(member => serialize(member, state)) : undefined,
-                extendsArguments: type.extendsArguments ? type.extendsArguments.map(member => serialize(member, state)) : undefined,
-                superClass,
-            } as SerializedTypeClassType);
-            exportEntityOptions(type, result);
-            break;
-        }
-        case ReflectionKind.literal: {
-            Object.assign(result, {
-                kind: ReflectionKind.literal,
-                literal: 'symbol' === typeof type.literal ? { type: 'symbol', name: type.literal.toString().slice(7, -1) } :
-                    'bigint' === typeof type.literal ? { type: 'bigint', value: String(type.literal) } :
-                        type.literal instanceof RegExp ? { type: 'regex', regex: String(type.literal) } :
-                            type.literal
-            } as SerializedTypeLiteral);
-            break;
-        }
-        case ReflectionKind.tuple: {
-            Object.assign(result, {
-                kind: ReflectionKind.tuple,
-                types: type.types.map(member => ({ ...member, jit: undefined, parent: undefined, type: serialize(member.type, state) })),
-
-            } as SerializedTypeTuple);
-            break;
-        }
-        case ReflectionKind.union: {
-            if (type.typeName && type.typeName.startsWith('Type')) {
-                //make sure that Type types are not serialized, as they are way too expensive and
-                //there is no need to actually serialize them.
-                const typeType = typeOf<Type>();
-                if (isSameType(typeType, type)) {
-                    Object.assign(result, {
-                        kind: ReflectionKind.any,
-                    });
-                    break;
-                }
-            }
-
-            const types = state.disableMethods ? type.types.filter(filterRemoveFunctions) : type.types;
-            Object.assign(result, {
-                kind: ReflectionKind.union,
-                types: types.map(member => serialize(member, state)),
-
-            } as SerializedTypeUnion);
-            break;
-        }
-        case ReflectionKind.intersection: {
-            Object.assign(result, {
-                kind: ReflectionKind.intersection,
-                types: type.types.map(member => serialize(member, state)),
-
-            } as SerializedTypeIntersection);
-            break;
-        }
-        case ReflectionKind.templateLiteral: {
-            Object.assign(result, {
-                kind: ReflectionKind.templateLiteral,
-                types: type.types.map(member => serialize(member, state)),
-
-            } as SerializedTypeTemplateLiteral);
-            break;
-        }
-        case ReflectionKind.string:
-        case ReflectionKind.number:
-        case ReflectionKind.boolean:
-        case ReflectionKind.symbol:
-        case ReflectionKind.bigint:
-        case ReflectionKind.regexp: {
-            if (type.origin) (result as SimpleSerializedType).origin = serialize(type.origin, state);
-            break;
-        }
-        case ReflectionKind.function: {
-            if (state.disableMethods) {
-                result.kind = ReflectionKind.never;
-                break;
-            }
-            Object.assign(result, {
-                kind: ReflectionKind.function,
-                parameters: type.parameters.map(v => ({
-                    ...v,
-                    jit: undefined,
-                    parent: undefined,
-                    type: serialize(v.type, state),
-                    default: v.default !== undefined ? true : undefined
-                })),
-                return: serialize(type.return, state)
-            } as SerializedTypeFunction);
-            break;
-        }
-        case ReflectionKind.method: {
-            if (state.disableMethods) {
-                result.kind = ReflectionKind.never;
-                break;
-            }
-            Object.assign(result, {
-                ...type,
-                jit: undefined,
-                parent: undefined,
-                parameters: type.parameters.map(v => ({
-                    ...v,
-                    jit: undefined,
-                    parent: undefined,
-                    type: serialize(v.type, state),
-                    default: v.default !== undefined ? true : undefined
-                } as SerializedTypeParameter)),
-                return: serialize(type.return, state)
-            } as SerializedTypeMethod);
-            break;
-        }
-        case ReflectionKind.methodSignature: {
-            if (state.disableMethods) {
-                result.kind = ReflectionKind.never;
-                break;
-            }
-            Object.assign(result, {
-                ...type,
-                jit: undefined,
-                parent: undefined,
-                parameters: type.parameters.map(v => ({
-                    ...v,
-                    jit: undefined,
-                    parent: undefined,
-                    type: serialize(v.type, state),
-                    default: v.default !== undefined ? true : undefined
-                } as SerializedTypeParameter)),
-                return: serialize(type.return, state)
-            } as SerializedTypeMethodSignature);
-            break;
-        }
-        case ReflectionKind.propertySignature: {
-            Object.assign(result, {
-                ...type,
-                jit: undefined,
-                parent: undefined,
-                type: serialize(type.type, state),
-            } as SerializedTypePropertySignature);
-            break;
-        }
-        case ReflectionKind.property: {
-            Object.assign(result, {
-                ...type,
-                jit: undefined,
-                parent: undefined,
-                default: type.default !== undefined ? true : undefined,
-                type: serialize(type.type, state),
-            } as SerializedTypeProperty);
-            break;
-        }
-        case ReflectionKind.array: {
-            Object.assign(result, {
-                kind: ReflectionKind.array,
-                type: serialize(type.type, state),
-            } as SerializedTypeArray);
-            break;
-        }
-        case ReflectionKind.promise: {
-            Object.assign(result, {
-                kind: ReflectionKind.promise,
-                type: serialize(type.type, state),
-            } as SerializedTypePromise);
-            break;
-        }
-        case ReflectionKind.rest: {
-            Object.assign(result, {
-                kind: ReflectionKind.rest,
-                type: serialize(type.type, state),
-            } as SerializedTypeRest);
-            break;
-        }
-        case ReflectionKind.indexSignature: {
-            Object.assign(result, {
-                kind: ReflectionKind.indexSignature,
-                index: serialize(type.index, state),
-                type: serialize(type.type, state),
-            } as SerializedTypeIndexSignature);
-            break;
-        }
-        case ReflectionKind.enum: {
-            Object.assign(result, {
-                kind: ReflectionKind.enum,
-                enum: type.enum,
-                values: type.values,
-                indexType: serialize(type.indexType, state),
-            } as SerializedTypeEnum);
-            break;
-        }
+    case ReflectionKind.string:
+    case ReflectionKind.number:
+    case ReflectionKind.boolean:
+    case ReflectionKind.symbol:
+    case ReflectionKind.bigint:
+    case ReflectionKind.regexp: {
+      if (type.origin)
+        (result as SimpleSerializedType).origin = serialize(type.origin, state);
+      break;
+    }
+    case ReflectionKind.function: {
+      if (state.disableMethods) {
+        result.kind = ReflectionKind.never;
+        break;
+      }
+      Object.assign(result, {
+        kind: ReflectionKind.function,
+        parameters: type.parameters.map(v => ({
+          ...v,
+          jit: undefined,
+          parent: undefined,
+          type: serialize(v.type, state),
+          default: v.default !== undefined ? true : undefined
+        })),
+        return: serialize(type.return, state),
+        tags: type.tags
+      } as SerializedTypeFunction);
+      break;
+    }
+    case ReflectionKind.method: {
+      if (state.disableMethods) {
+        result.kind = ReflectionKind.never;
+        break;
+      }
+      Object.assign(result, {
+        ...type,
+        jit: undefined,
+        parent: undefined,
+        parameters: type.parameters.map(
+          v =>
+            ({
+              ...v,
+              jit: undefined,
+              parent: undefined,
+              type: serialize(v.type, state),
+              default: v.default !== undefined ? true : undefined
+            }) as SerializedTypeParameter
+        ),
+        return: serialize(type.return, state),
+        tags: type.tags
+      } as SerializedTypeMethod);
+      break;
     }
+    case ReflectionKind.methodSignature: {
+      if (state.disableMethods) {
+        result.kind = ReflectionKind.never;
+        break;
+      }
+      Object.assign(result, {
+        ...type,
+        jit: undefined,
+        parent: undefined,
+        parameters: type.parameters.map(
+          v =>
+            ({
+              ...v,
+              jit: undefined,
+              parent: undefined,
+              type: serialize(v.type, state),
+              default: v.default !== undefined ? true : undefined
+            }) as SerializedTypeParameter
+        ),
+        return: serialize(type.return, state)
+      } as SerializedTypeMethodSignature);
+      break;
+    }
+    case ReflectionKind.propertySignature: {
+      Object.assign(result, {
+        ...type,
+        jit: undefined,
+        parent: undefined,
+        type: serialize(type.type, state)
+      } as SerializedTypePropertySignature);
+      break;
+    }
+    case ReflectionKind.property: {
+      Object.assign(result, {
+        ...type,
+        jit: undefined,
+        parent: undefined,
+        type: serialize(type.type, state)
+      } as SerializedTypeProperty);
+      break;
+    }
+    case ReflectionKind.array: {
+      Object.assign(result, {
+        kind: ReflectionKind.array,
+        type: serialize(type.type, state),
+        tags: type.tags
+      } as SerializedTypeArray);
+      break;
+    }
+    case ReflectionKind.promise: {
+      Object.assign(result, {
+        kind: ReflectionKind.promise,
+        type: serialize(type.type, state)
+      } as SerializedTypePromise);
+      break;
+    }
+    case ReflectionKind.rest: {
+      Object.assign(result, {
+        kind: ReflectionKind.rest,
+        type: serialize(type.type, state)
+      } as SerializedTypeRest);
+      break;
+    }
+    case ReflectionKind.indexSignature: {
+      Object.assign(result, {
+        kind: ReflectionKind.indexSignature,
+        index: serialize(type.index, state),
+        type: serialize(type.type, state),
+        default: type.default
+      } as SerializedTypeIndexSignature);
+      break;
+    }
+    case ReflectionKind.enum: {
+      Object.assign(result, {
+        kind: ReflectionKind.enum,
+        enum: type.enum,
+        values: type.values,
+        indexType: serialize(type.indexType, state),
+        tags: type.tags
+      } as SerializedTypeEnum);
+      break;
+    }
+  }
 
-    return index;
+  return index;
 }
 
 /**
  * Converts a (possibly circular/nested) type into a JSON.stringify'able structure suited to be transmitted over the wire and deserialized back to the correct Type object.
  */
-export function serializeType(type: Type, state: Partial<SerializerState> = {}): SerializedTypes {
-    const types: SerializedTypes = [];
-    const serializedState: SerializerState = { types, refs: new Map, ...state };
-    serialize(type, serializedState);
-    return types;
+export function serializeType(
+  type: Type,
+  state: Partial<SerializerState> = {}
+): SerializedTypes {
+  const types: SerializedTypes = [];
+  const serializedState: SerializerState = { types, refs: new Map(), ...state };
+  serialize(type, serializedState);
+  return types;
 }
 
 interface DeserializeState {
-    types: SerializedTypes;
-    disableReuse?: boolean, //disable entity reuse from entities registered via @entity.name()
-    deserialized: { [index: number]: { type: Type, refs: Type[], active: boolean } };
+  types: SerializedTypes;
+  disableReuse?: boolean; //disable entity reuse from entities registered via @entity.name()
+  deserialized: {
+    [index: number]: { type: Type; refs: Type[]; active: boolean };
+  };
 }
 
 /**
  * @reflection never
  */
-function deserialize(type: SerializedType | SerializedTypeReference, state: DeserializeState, parent?: Type): Type {
-    if ('number' === typeof type) {
-        if (!state.types[type]) return { kind: ReflectionKind.unknown };
-        const typeState = state.deserialized[type];
-        let result: Type = { kind: ReflectionKind.unknown };
-
-        if (typeState) {
-            if (typeState.active) {
-                typeState.refs.push(result);
-            } else {
-                result = typeState.type;
-            }
-        } else {
-            const typeState = { type: result as Type, refs: [], active: true };
-            state.deserialized[type] = typeState;
-            typeState.type = deserialize(state.types[type], state);
-            typeState.active = false;
-            for (const ref of typeState.refs) Object.assign(ref, typeState.type);
-            result = typeState.type;
-        }
-        if (parent) return Object.assign(result, { parent });
-
-        return result;
+function deserialize(
+  type: SerializedType | SerializedTypeReference,
+  state: DeserializeState,
+  parent?: Type
+): Type {
+  if ("number" === typeof type) {
+    if (!state.types[type]) return { kind: ReflectionKind.unknown };
+    const typeState = state.deserialized[type];
+    let result: Type = { kind: ReflectionKind.unknown };
+
+    if (typeState) {
+      if (typeState.active) {
+        typeState.refs.push(result);
+      } else {
+        result = typeState.type;
+      }
+    } else {
+      const typeState = { type: result as Type, refs: [], active: true };
+      state.deserialized[type] = typeState;
+      typeState.type = deserialize(state.types[type], state);
+      typeState.active = false;
+      for (const ref of typeState.refs) Object.assign(ref, typeState.type);
+      result = typeState.type;
     }
-    const result: Type = { kind: type.kind } as Type;
+    if (parent) return Object.assign(result, { parent });
 
-    if (type.typeName) result.typeName = type.typeName;
-    if (type.typeArguments) result.typeArguments = type.typeArguments.map(v => deserialize(v, state)) as Type[];
-    if (type.indexAccessOrigin) result.indexAccessOrigin = {
-        index: deserialize(type.indexAccessOrigin.index, state) as Type,
-        container: deserialize(type.indexAccessOrigin.container, state) as TypeClass | TypeObjectLiteral
+    return result;
+  }
+  const result: Type = { kind: type.kind } as Type;
+
+  if (type.typeName) result.typeName = type.typeName;
+  if (type.typeArguments)
+    result.typeArguments = type.typeArguments.map(v =>
+      deserialize(v, state)
+    ) as Type[];
+  if (type.indexAccessOrigin)
+    result.indexAccessOrigin = {
+      index: deserialize(type.indexAccessOrigin.index, state) as Type,
+      container: deserialize(type.indexAccessOrigin.container, state) as
+        | TypeClass
+        | TypeObjectLiteral
     };
 
-    switch (type.kind) {
-        case ReflectionKind.objectLiteral: {
-            Object.assign(result, {
-                kind: ReflectionKind.objectLiteral,
-                types: type.types.map(v => deserialize(v, state, result))
-            } as TypeObjectLiteral);
-            assignEntityOptions(result as TypeObjectLiteral, type);
-            break;
-        }
-        case ReflectionKind.class: {
-            if (!state.disableReuse && type.name) {
-                const existing = typeSettings.registeredEntities[type.name];
-                if (existing) {
-                    Object.assign(result, ReflectionClass.from(existing).type);
-                    break;
-                }
-            }
-
-            const newClass = !type.globalObject && state.disableReuse === true || (!type.name || !typeSettings.registeredEntities[type.name]);
-
-            const args = type.arguments ? type.arguments.map(v => deserialize(v, state, result)) : undefined;
-            const extendsArguments = type.extendsArguments ? type.extendsArguments.map(v => deserialize(v, state, result)) : undefined;
-            const types = type.types.map(v => deserialize(v, state, result));
-            const constructor = findMember('constructor', types);
-            const initialize: { name: string, index: number }[] = [];
-            if (constructor && constructor.kind === ReflectionKind.method) {
-                for (let i = 0; i < constructor.parameters.length; i++) {
-                    if (constructor.parameters[i].visibility !== undefined) {
-                        initialize.push({ name: constructor.parameters[i].name, index: i });
-                    }
+  switch (type.kind) {
+    case ReflectionKind.objectLiteral: {
+      Object.assign(result, {
+        kind: ReflectionKind.objectLiteral,
+        types: type.types.map(v => deserialize(v, state, result)),
+        tags: type.tags
+      } as TypeObjectLiteral);
+      assignEntityOptions(result as TypeObjectLiteral, type);
+      break;
+    }
+    case ReflectionKind.class: {
+      if (!state.disableReuse && type.name) {
+        const existing = typeSettings.registeredEntities[type.name];
+        if (existing) {
+          Object.assign(result, ReflectionClass.from(existing).type);
+          break;
+        }
+      }
+
+      const newClass =
+        (!type.globalObject && state.disableReuse === true) ||
+        !type.name ||
+        !typeSettings.registeredEntities[type.name];
+
+      const args = type.arguments
+        ? type.arguments.map(v => deserialize(v, state, result))
+        : undefined;
+      const extendsArguments = type.extendsArguments
+        ? type.extendsArguments.map(v => deserialize(v, state, result))
+        : undefined;
+      const types = type.types.map(v => deserialize(v, state, result));
+      const constructor = findMember("constructor", types);
+      const initialize: { name: string; index: number }[] = [];
+      if (constructor && constructor.kind === ReflectionKind.method) {
+        for (let i = 0; i < constructor.parameters.length; i++) {
+          if (constructor.parameters[i].visibility !== undefined) {
+            initialize.push({ name: constructor.parameters[i].name, index: i });
+          }
+        }
+      }
+
+      const classType = type.globalObject
+        ? envGlobal[type.classType]
+        : newClass
+          ? type.superClass
+            ? class extends (deserialize(type.superClass, state) as TypeClass)
+                .classType {
+                constructor(...args: any[]) {
+                  super(...args);
+                  for (const init of initialize) {
+                    this[init.name] = args[init.index];
+                  }
                 }
-            }
-
-            const classType = type.globalObject ? envGlobal[type.classType] : newClass
-                ? (type.superClass ? class extends (deserialize(type.superClass, state) as TypeClass).classType {
-                    constructor(...args: any[]) {
-                        super(...args);
-                        for (const init of initialize) {
-                            this[init.name] = args[init.index];
-                        }
-                    }
-                } : class {
-                    constructor(...args: any[]) {
-                        for (const init of initialize) {
-                            (this as any)[init.name] = args[init.index];
-                        }
-                    }
-                }) : typeSettings.registeredEntities[type.name!];
-
-            if (newClass && !type.globalObject) {
-                Object.defineProperty(classType, 'name', { value: type.classType, writable: true, enumerable: false });
-                if (!classType.__type) {
-                    classType.__type = [];
-                    classType.__type.__type = result;
+              }
+            : class {
+                constructor(...args: any[]) {
+                  for (const init of initialize) {
+                    (this as any)[init.name] = args[init.index];
+                  }
                 }
-            }
-
-            Object.assign(result, {
-                kind: ReflectionKind.class,
-                classType,
-                arguments: args,
-                extendsArguments,
-                types,
-            } as TypeClass);
-            assignEntityOptions(result as TypeClass, type);
-            break;
-        }
-        case ReflectionKind.literal: {
-            Object.assign(result, {
-                kind: ReflectionKind.literal,
-                literal: 'string' === typeof type.literal ? type.literal : 'number' === typeof type.literal ? type.literal : 'boolean' === typeof type.literal ? type.literal :
-                    'symbol' === type.literal.type ? Symbol(type.literal.name) : 'bigint' === type.literal.type ? BigInt(type.literal.value) : 'regex' === type.literal.type ? regExpFromString(type.literal.regex) : false
-            } as TypeLiteral);
-            break;
-        }
-        case ReflectionKind.tuple: {
-            Object.assign(result, {
-                kind: ReflectionKind.tuple,
-                types: []
-            } as TypeTuple);
-            for (const member of type.types) {
-                const deserializedMember: TypeTupleMember = {
-                    ...member,
-                    typeArguments: undefined,
-                    indexAccessOrigin: undefined,
-                    decorators: undefined,
-                    parent: result as TypeTuple,
-                    type: { kind: ReflectionKind.unknown }
-                };
-                deserializedMember.type = deserialize(member.type, state, deserializedMember);
-                (result as TypeTuple).types.push(deserializedMember);
-            }
-            break;
-        }
-        case ReflectionKind.templateLiteral:
-        case ReflectionKind.intersection:
-        case ReflectionKind.union: {
-            Object.assign(result, {
-                kind: type.kind,
-                types: type.types.map(member => deserialize(member, state, result))
-            });
-            break;
-        }
-        case ReflectionKind.string:
-        case ReflectionKind.number:
-        case ReflectionKind.bigint:
-        case ReflectionKind.symbol:
-        case ReflectionKind.regexp:
-        case ReflectionKind.boolean: {
-            result.kind = type.kind;
-            if (type.origin) {
-                Object.assign(result, {
-                    origin: deserialize(type.origin, state, result)
-                });
-            }
-            break;
-        }
-        case ReflectionKind.any:
-        case ReflectionKind.unknown:
-        case ReflectionKind.void:
-        case ReflectionKind.undefined:
-        case ReflectionKind.null: {
-            //nothing to do
-            break;
-        }
-        case ReflectionKind.methodSignature:
-        case ReflectionKind.method:
-        case ReflectionKind.function: {
-            const parameters: TypeParameter[] = [];
-            for (const p of type.parameters) {
-                const parameter: TypeParameter = {
-                    ...p,
-                    typeArguments: undefined,
-                    indexAccessOrigin: undefined,
-                    decorators: undefined,
-                    parent: result as TypeFunction,
-                    default: p.default ? () => undefined : undefined,
-                    type: { kind: ReflectionKind.unknown }
-                };
-                parameter.type = deserialize(p.type, state, parameter) as Type;
-                parameters.push(parameter);
-            }
-            Object.assign(result, {
-                name: type.name,
-                parameters,
-                return: deserialize(type.return, state, result)
-            } as TypeFunction);
-            break;
-        }
-        case ReflectionKind.property:
-        case ReflectionKind.propertySignature: {
-            Object.assign(result, {
-                ...type,
-                default: type.kind === ReflectionKind.property ? type.default ? () => undefined : undefined : undefined,
-                type: deserialize(type.type, state, result),
-            } as TypeProperty);
-            break;
-        }
-        case ReflectionKind.array:
-        case ReflectionKind.promise:
-        case ReflectionKind.rest: {
-            Object.assign(result, {
-                type: deserialize(type.type, state, result)
-            } as TypeArray | TypeProperty | TypeRest);
-            break;
-        }
-        case ReflectionKind.indexSignature: {
-            Object.assign(result, {
-                index: deserialize(type.index, state, result),
-                type: deserialize(type.type, state, result)
-            } as TypeIndexSignature);
-            break;
-        }
-        case ReflectionKind.enum: {
-            Object.assign(result, {
-                enum: type.enum,
-                values: type.values,
-                indexType: deserialize(type.indexType, state, result),
-            } as TypeEnum);
-            break;
-        }
+              }
+          : typeSettings.registeredEntities[type.name!];
+
+      if (newClass && !type.globalObject) {
+        Object.defineProperty(classType, "name", {
+          value: type.classType,
+          writable: true,
+          enumerable: false
+        });
+        if (!classType.__type) {
+          classType.__type = [];
+          classType.__type.__type = result;
+        }
+      }
+
+      Object.assign(result, {
+        kind: ReflectionKind.class,
+        classType,
+        arguments: args,
+        extendsArguments,
+        types,
+        tags: type.tags
+      } as TypeClass);
+      assignEntityOptions(result as TypeClass, type);
+      break;
     }
-
-    if (isWithSerializedAnnotations(type) && isWithAnnotations(result) && type.decorators) {
-        result.annotations ||= {};
-        for (const scheduledDecorator of type.decorators) {
-            for (const decorator of typeDecorators) {
-                const dec = deserialize(scheduledDecorator, state) as TypeObjectLiteral;
-                decorator(result.annotations, dec);
-            }
-        }
+    case ReflectionKind.literal: {
+      Object.assign(result, {
+        kind: ReflectionKind.literal,
+        literal:
+          "string" === typeof type.literal
+            ? type.literal
+            : "number" === typeof type.literal
+              ? type.literal
+              : "boolean" === typeof type.literal
+                ? type.literal
+                : "symbol" === type.literal.type
+                  ? Symbol(type.literal.name)
+                  : "bigint" === type.literal.type
+                    ? BigInt(type.literal.value)
+                    : "regex" === type.literal.type
+                      ? regExpFromString(type.literal.regex)
+                      : false
+      } as TypeLiteral);
+      break;
     }
-    return result;
+    case ReflectionKind.tuple: {
+      Object.assign(result, {
+        kind: ReflectionKind.tuple,
+        types: []
+      } as TypeTuple);
+      for (const member of type.types) {
+        const deserializedMember: TypeTupleMember = {
+          ...member,
+          typeArguments: undefined,
+          indexAccessOrigin: undefined,
+          decorators: undefined,
+          parent: result as TypeTuple,
+          type: { kind: ReflectionKind.unknown }
+        };
+        deserializedMember.type = deserialize(
+          member.type,
+          state,
+          deserializedMember
+        );
+        (result as TypeTuple).types.push(deserializedMember);
+      }
+      break;
+    }
+    case ReflectionKind.templateLiteral:
+    case ReflectionKind.intersection:
+    case ReflectionKind.union: {
+      Object.assign(result, {
+        kind: type.kind,
+        types: type.types.map(member => deserialize(member, state, result))
+      });
+      break;
+    }
+    case ReflectionKind.string:
+    case ReflectionKind.number:
+    case ReflectionKind.bigint:
+    case ReflectionKind.symbol:
+    case ReflectionKind.regexp:
+    case ReflectionKind.boolean: {
+      result.kind = type.kind;
+      if (type.origin) {
+        Object.assign(result, {
+          origin: deserialize(type.origin, state, result)
+        });
+      }
+      break;
+    }
+    case ReflectionKind.any:
+    case ReflectionKind.unknown:
+    case ReflectionKind.void:
+    case ReflectionKind.undefined:
+    case ReflectionKind.null: {
+      //nothing to do
+      break;
+    }
+    case ReflectionKind.methodSignature:
+    case ReflectionKind.method:
+    case ReflectionKind.function: {
+      const parameters: TypeParameter[] = [];
+      for (const p of type.parameters) {
+        const parameter: TypeParameter = {
+          ...p,
+          typeArguments: undefined,
+          indexAccessOrigin: undefined,
+          decorators: undefined,
+          parent: result as TypeFunction,
+          default: p.default ? () => undefined : undefined,
+          type: { kind: ReflectionKind.unknown }
+        };
+        parameter.type = deserialize(p.type, state, parameter) as Type;
+        parameters.push(parameter);
+      }
+      Object.assign(result, {
+        name: type.name,
+        parameters,
+        return: deserialize(type.return, state, result),
+        tags: type.tags
+      } as TypeFunction);
+      break;
+    }
+    case ReflectionKind.property:
+    case ReflectionKind.propertySignature: {
+      Object.assign(result, {
+        ...type,
+        type: deserialize(type.type, state, result)
+      } as TypeProperty);
+      break;
+    }
+    case ReflectionKind.array:
+    case ReflectionKind.promise:
+    case ReflectionKind.rest: {
+      Object.assign(result, {
+        type: deserialize(type.type, state, result)
+      } as TypeArray | TypeProperty | TypeRest);
+      break;
+    }
+    case ReflectionKind.indexSignature: {
+      Object.assign(result, {
+        index: deserialize(type.index, state, result),
+        type: deserialize(type.type, state, result)
+      } as TypeIndexSignature);
+      break;
+    }
+    case ReflectionKind.enum: {
+      Object.assign(result, {
+        enum: type.enum,
+        values: type.values,
+        indexType: deserialize(type.indexType, state, result),
+        tags: type.tags
+      } as TypeEnum);
+      break;
+    }
+  }
+
+  if (
+    isWithSerializedAnnotations(type) &&
+    isWithAnnotations(result) &&
+    type.decorators
+  ) {
+    result.annotations ||= {};
+    for (const scheduledDecorator of type.decorators) {
+      for (const decorator of typeDecorators) {
+        const dec = deserialize(scheduledDecorator, state) as TypeObjectLiteral;
+        decorator(result.annotations, dec);
+      }
+    }
+  }
+  return result;
 }
 
-export function deserializeType(types?: SerializedTypes, state: Partial<DeserializeState> = {}): Type {
-    if (!types || types.length === 0) return { kind: ReflectionKind.unknown };
-    return deserialize(types[0], { ...state, deserialized: {}, types });
+export function deserializeType(
+  types?: SerializedTypes,
+  state: Partial<DeserializeState> = {}
+): Type {
+  if (!types || types.length === 0) return { kind: ReflectionKind.unknown };
+  return deserialize(types[0], { ...state, deserialized: {}, types });
 }
diff --git a/tsconfig.esm.json b/tsconfig.esm.json
index 62a256896e76a70f5012cab289fbed8cf45a4b34..68dca11796d3fe5d4235a9cf32ce01657f76a40e 100644
--- a/tsconfig.esm.json
+++ b/tsconfig.esm.json
@@ -6,13 +6,13 @@
   },
   "references": [
     {
-      "path": "../type-spec/tsconfig.esm.json"
+      "path": "../type-spec@1.0.1/tsconfig.esm.json"
     },
     {
-      "path": "../core/tsconfig.esm.json"
+      "path": "../core@1.0.5/tsconfig.esm.json"
     },
     {
-      "path": "../type-compiler/tsconfig.esm.json"
+      "path": "../type-compiler@1.0.5/tsconfig.esm.json"
     }
   ]
 }
\ No newline at end of file
diff --git a/tsconfig.json b/tsconfig.json
index 90f929405ed6f08ac953cbc5c043276baeabe6a0..6c5963988bf77ad7fb8ccc015a4719c0ab57b066 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -14,26 +14,19 @@
     "outDir": "./dist/cjs",
     "declaration": true,
     "composite": true,
-    "types": [
-      "uuid",
-      "lz-string",
-      "node"
-    ]
+    "types": ["uuid", "lz-string", "node"]
   },
   "reflection": true,
-  "include": [
-    "src",
-    "index.ts"
-  ],
+  "include": ["src", "index.ts"],
   "references": [
     {
-      "path": "../type-spec/tsconfig.json"
+      "path": "../type-spec@1.0.1/tsconfig.json"
     },
     {
-      "path": "../core/tsconfig.json"
+      "path": "../core@1.0.5/tsconfig.json"
     },
     {
-      "path": "../type-compiler/tsconfig.json"
+      "path": "../type-compiler@1.0.5/tsconfig.json"
     }
   ]
 }
