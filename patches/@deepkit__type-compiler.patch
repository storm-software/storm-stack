diff --git a/compiler-debug.ts b/compiler-debug.ts
index af0b29267ad565efa914ebeacaec539b9090016d..e12ecb90afee8afcae00d49332c7e61774f6488f 100644
--- a/compiler-debug.ts
+++ b/compiler-debug.ts
@@ -1,38 +1,36 @@
-import { deepkitType } from './src/plugin.js';
-import { readFileSync } from 'fs';
+import { readFileSync } from "fs";
+import { deepkitType } from "./src/plugin.js";
 
 interface Arguments {
-    file: string;
-    config?: string;
+  file: string;
+  config?: string;
 }
 
 function parseArguments(args: string[]): Arguments {
-    const result: Arguments = {
-        file: '',
-    };
-
-    for (let i = 0; i < args.length; i++) {
-        const arg = args[i];
-        if (arg === '--config') {
-            result.config = args[i + 1];
-            i++;
-        } else {
-            result.file = arg;
-        }
+  const result: Arguments = {
+    file: ""
+  };
+
+  for (let i = 0; i < args.length; i++) {
+    const arg = args[i];
+    if (arg === "--config") {
+      result.config = args[i + 1];
+      i++;
+    } else {
+      result.file = arg;
     }
+  }
 
-    return result;
+  return result;
 }
 
 const args = parseArguments(process.argv.slice(2));
 
-
-
 const transformer = deepkitType({
-    tsConfig: args.config,
+  tsConfig: args.config
 });
 
-const code = readFileSync(args.file, 'utf8');
+const code = readFileSync(args.file, "utf8");
 const transformed = transformer(code, args.file);
 
 console.log(transformed?.code);
diff --git a/dependencies.d.ts b/dependencies.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..5503ccbcc6afa2bc1edce391ed73f0ec578caf59
--- /dev/null
+++ b/dependencies.d.ts
@@ -0,0 +1,3 @@
+declare module "micromatch" {
+  export function isMatch(path: string, include: string[], options: any): boolean;
+}
diff --git a/dist/cjs/compiler-debug.js b/dist/cjs/compiler-debug.js
index fc2c0ea0a838fd470c2500d9cc12c583e50e39a9..82b8b5baedf99966c135defaf5dd762f334728e0 100644
--- a/dist/cjs/compiler-debug.js
+++ b/dist/cjs/compiler-debug.js
@@ -1,14 +1,14 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-const plugin_js_1 = require("./src/plugin.js");
 const fs_1 = require("fs");
+const plugin_js_1 = require("./src/plugin.js");
 function parseArguments(args) {
     const result = {
-        file: '',
+        file: ""
     };
     for (let i = 0; i < args.length; i++) {
         const arg = args[i];
-        if (arg === '--config') {
+        if (arg === "--config") {
             result.config = args[i + 1];
             i++;
         }
@@ -20,9 +20,9 @@ function parseArguments(args) {
 }
 const args = parseArguments(process.argv.slice(2));
 const transformer = (0, plugin_js_1.deepkitType)({
-    tsConfig: args.config,
+    tsConfig: args.config
 });
-const code = (0, fs_1.readFileSync)(args.file, 'utf8');
+const code = (0, fs_1.readFileSync)(args.file, "utf8");
 const transformed = transformer(code, args.file);
 console.log(transformed?.code);
 //# sourceMappingURL=compiler-debug.js.map
\ No newline at end of file
diff --git a/dist/cjs/compiler-debug.js.map b/dist/cjs/compiler-debug.js.map
index 0129d1a28e401b9c7fe949b5cdc07140616f70c9..3ac61d2cf86d7a72354e4428fcbbdeb06129155a 100644
--- a/dist/cjs/compiler-debug.js.map
+++ b/dist/cjs/compiler-debug.js.map
@@ -1 +1 @@
-{"version":3,"file":"compiler-debug.js","sourceRoot":"","sources":["../../compiler-debug.ts"],"names":[],"mappings":";;AAAA,+CAA8C;AAC9C,2BAAkC;AAOlC,SAAS,cAAc,CAAC,IAAc;IAClC,MAAM,MAAM,GAAc;QACtB,IAAI,EAAE,EAAE;KACX,CAAC;IAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACnC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,GAAG,KAAK,UAAU,EAAE,CAAC;YACrB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,CAAC,EAAE,CAAC;QACR,CAAC;aAAM,CAAC;YACJ,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;QACtB,CAAC;IACL,CAAC;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,MAAM,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAInD,MAAM,WAAW,GAAG,IAAA,uBAAW,EAAC;IAC5B,QAAQ,EAAE,IAAI,CAAC,MAAM;CACxB,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,IAAA,iBAAY,EAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAEjD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC"}
\ No newline at end of file
+{"version":3,"file":"compiler-debug.js","sourceRoot":"","sources":["../../compiler-debug.ts"],"names":[],"mappings":";;AAAA,2BAAkC;AAClC,+CAA8C;AAO9C,SAAS,cAAc,CAAC,IAAc;IACpC,MAAM,MAAM,GAAc;QACxB,IAAI,EAAE,EAAE;KACT,CAAC;IAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,GAAG,KAAK,UAAU,EAAE,CAAC;YACvB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,CAAC,EAAE,CAAC;QACN,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;QACpB,CAAC;IACH,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAEnD,MAAM,WAAW,GAAG,IAAA,uBAAW,EAAC;IAC9B,QAAQ,EAAE,IAAI,CAAC,MAAM;CACtB,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,IAAA,iBAAY,EAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAEjD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC"}
\ No newline at end of file
diff --git a/dist/cjs/index.d.ts b/dist/cjs/index.d.ts
index f23523d5f37ad4d9a3c527a8a0830d5cd7dedd52..d25a4bfc6b682828fbff7b3be720a64a6fb80daa 100644
--- a/dist/cjs/index.d.ts
+++ b/dist/cjs/index.d.ts
@@ -1,7 +1,7 @@
-import type { Program } from 'typescript';
-export * from './src/compiler.js';
-export * from './src/loader.js';
-export default function myTransformerPlugin(program: Program, opts: {}): {
+import type { Program } from "typescript";
+export * from "./src/compiler.js";
+export * from "./src/loader.js";
+export default function transformerPlugin(program: Program, opts: {}): {
     before: import("typescript").CustomTransformerFactory;
     afterDeclarations: import("typescript").CustomTransformerFactory;
 };
diff --git a/dist/cjs/index.js b/dist/cjs/index.js
index afbed4b38f38bc33400d6e952f991e6866c11c1c..44996bea3d75691dd31fa7c4d9ab810dc43f6020 100644
--- a/dist/cjs/index.js
+++ b/dist/cjs/index.js
@@ -23,14 +23,14 @@ var __exportStar = (this && this.__exportStar) || function(m, exports) {
     for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.default = myTransformerPlugin;
+exports.default = transformerPlugin;
 const compiler_js_1 = require("./src/compiler.js");
 __exportStar(require("./src/compiler.js"), exports);
 __exportStar(require("./src/loader.js"), exports);
-function myTransformerPlugin(program, opts) {
+function transformerPlugin(program, opts) {
     return {
         before: compiler_js_1.transformer,
-        afterDeclarations: compiler_js_1.declarationTransformer,
+        afterDeclarations: compiler_js_1.declarationTransformer
     };
 }
 //# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/dist/cjs/index.js.map b/dist/cjs/index.js.map
index 1375e2a50aa5b09accac2dbaace70fb7f607b443..e081f57244a3a65897065cd488c86ca45cff1e3c 100644
--- a/dist/cjs/index.js.map
+++ b/dist/cjs/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../index.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;;;;;;;;;;;;;;;;AAQH,sCAKC;AAXD,mDAAwE;AAGxE,oDAAkC;AAClC,kDAAgC;AAEhC,SAAwB,mBAAmB,CAAC,OAAgB,EAAE,IAAQ;IAClE,OAAO;QACH,MAAM,EAAE,yBAAW;QACnB,iBAAiB,EAAE,oCAAsB;KAC5C,CAAC;AACN,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../index.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;;;;;;;;;;;;;;;;AAQH,oCAKC;AAVD,mDAAwE;AAExE,oDAAkC;AAClC,kDAAgC;AAEhC,SAAwB,iBAAiB,CAAC,OAAgB,EAAE,IAAQ;IAClE,OAAO;QACL,MAAM,EAAE,yBAAW;QACnB,iBAAiB,EAAE,oCAAsB;KAC1C,CAAC;AACJ,CAAC"}
\ No newline at end of file
diff --git a/dist/cjs/install-transformer.js b/dist/cjs/install-transformer.js
index 623d28e1b1695de0b2261053f9bae28a5f1f3f03..25a101f4b4bbc96bbff58268ba64134b4de74931 100644
--- a/dist/cjs/install-transformer.js
+++ b/dist/cjs/install-transformer.js
@@ -6,11 +6,11 @@
  * The critical section that needs adjustment is in the `function getScriptTransformers` in `node_modules/typescript/lib/tsc.js`.
  */
 Object.defineProperty(exports, "__esModule", { value: true });
-const path_1 = require("path");
 const fs_1 = require("fs");
+const path_1 = require("path");
 let to = process.argv[2] || process.cwd();
 function getPatchId(id) {
-    return 'deepkit_type_patch_' + id;
+    return "deepkit_type_patch_" + id;
 }
 function getCode(deepkitDistPath, varName, id) {
     return `
@@ -47,31 +47,31 @@ function isPatched(code, id) {
     return code.includes(getPatchId(id));
 }
 function patchGetTransformers(deepkitDistPath, code) {
-    const id = 'patchGetTransformers';
+    const id = "patchGetTransformers";
     if (isPatched(code, id))
-        return '';
+        return "";
     const find = /function getTransformers\([^)]+\)\s*{/;
     if (!code.match(find))
-        return '';
+        return "";
     code = code.replace(find, function (a) {
-        return a + '\n    ' + getCode(deepkitDistPath, 'customTransformers', id);
+        return a + "\n    " + getCode(deepkitDistPath, "customTransformers", id);
     });
     return code;
 }
-if (to + '/dist/cjs' === __dirname) {
-    to = (0, path_1.join)(to, '..'); //we exclude type-compiler/node_modules
+if (to + "/dist/cjs" === __dirname) {
+    to = (0, path_1.join)(to, ".."); //we exclude type-compiler/node_modules
 }
-const typeScriptPath = (0, path_1.dirname)(require.resolve('typescript', { paths: [to] }));
+const typeScriptPath = (0, path_1.dirname)(require.resolve("typescript", { paths: [to] }));
 const deepkitDistPath = (0, path_1.relative)(typeScriptPath, __dirname);
-const paths = ['tsc.js', '_tsc.js', 'typescript.js'];
+const paths = ["tsc.js", "_tsc.js", "typescript.js"];
 for (const fileName of paths) {
     const file = (0, path_1.join)(typeScriptPath, fileName);
     if (!(0, fs_1.existsSync)(file))
         continue;
-    const content = patchGetTransformers(deepkitDistPath, (0, fs_1.readFileSync)(file, 'utf8'));
+    const content = patchGetTransformers(deepkitDistPath, (0, fs_1.readFileSync)(file, "utf8"));
     if (!content)
         continue;
     (0, fs_1.writeFileSync)(file, content);
-    console.log('Deepkit Type: Injected TypeScript transformer at', file);
+    console.log("Deepkit Type: Injected TypeScript transformer at", file);
 }
 //# sourceMappingURL=install-transformer.js.map
\ No newline at end of file
diff --git a/dist/cjs/install-transformer.js.map b/dist/cjs/install-transformer.js.map
index f87735c782bd515d4a88ac41257c2345ac49e526..12c9b96ab816f37fb1b6ff282b2d1ff12b2849f2 100644
--- a/dist/cjs/install-transformer.js.map
+++ b/dist/cjs/install-transformer.js.map
@@ -1 +1 @@
-{"version":3,"file":"install-transformer.js","sourceRoot":"","sources":["../../install-transformer.ts"],"names":[],"mappings":";;AAEA;;;;GAIG;;AAEH,+BAA+C;AAC/C,2BAA6D;AAE7D,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;AAE1C,SAAS,UAAU,CAAC,EAAU;IAC1B,OAAO,qBAAqB,GAAG,EAAE,CAAC;AACtC,CAAC;AAED,SAAS,OAAO,CAAC,eAAuB,EAAE,OAAe,EAAE,EAAU;IACjE,OAAO;YACC,UAAU,CAAC,EAAE,CAAC;;;;;;4CAMkB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;;;2CAGhC,OAAO;uBAC3B,OAAO,YAAY,OAAO;;iCAEhB,OAAO;;;;2BAIb,OAAO,kDAAkD,OAAO;;2BAEhE,OAAO,uBAAuB,OAAO;2BACrC,OAAO;0BACR,OAAO;;;;;;YAMrB,UAAU,CAAC,EAAE,CAAC;KACrB,CAAC;AACN,CAAC;AAED,SAAS,SAAS,CAAC,IAAY,EAAE,EAAU;IACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,CAAC;AAED,SAAS,oBAAoB,CAAC,eAAuB,EAAE,IAAY;IAC/D,MAAM,EAAE,GAAG,sBAAsB,CAAC;IAClC,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC;QAAE,OAAO,EAAE,CAAC;IAEnC,MAAM,IAAI,GAAG,uCAAuC,CAAC;IACrD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAAE,OAAO,EAAE,CAAC;IAEjC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC;QACjC,OAAO,CAAC,GAAG,QAAQ,GAAG,OAAO,CAAC,eAAe,EAAE,oBAAoB,EAAE,EAAE,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,IAAI,EAAE,GAAG,WAAW,KAAK,SAAS,EAAE,CAAC;IACjC,EAAE,GAAG,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,uCAAuC;AAChE,CAAC;AAED,MAAM,cAAc,GAAG,IAAA,cAAO,EAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/E,MAAM,eAAe,GAAG,IAAA,eAAQ,EAAC,cAAc,EAAE,SAAS,CAAC,CAAC;AAE5D,MAAM,KAAK,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;AAErD,KAAK,MAAM,QAAQ,IAAI,KAAK,EAAE,CAAC;IAC3B,MAAM,IAAI,GAAG,IAAA,WAAI,EAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IAC5C,IAAI,CAAC,IAAA,eAAU,EAAC,IAAI,CAAC;QAAE,SAAS;IAChC,MAAM,OAAO,GAAG,oBAAoB,CAAC,eAAe,EAAE,IAAA,iBAAY,EAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IAClF,IAAI,CAAC,OAAO;QAAE,SAAS;IACvB,IAAA,kBAAa,EAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC7B,OAAO,CAAC,GAAG,CAAC,kDAAkD,EAAE,IAAI,CAAC,CAAC;AAC1E,CAAC"}
\ No newline at end of file
+{"version":3,"file":"install-transformer.js","sourceRoot":"","sources":["../../install-transformer.ts"],"names":[],"mappings":";;AAEA;;;;GAIG;;AAEH,2BAA6D;AAC7D,+BAA+C;AAE/C,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;AAE1C,SAAS,UAAU,CAAC,EAAU;IAC5B,OAAO,qBAAqB,GAAG,EAAE,CAAC;AACpC,CAAC;AAED,SAAS,OAAO,CAAC,eAAuB,EAAE,OAAe,EAAE,EAAU;IACnE,OAAO;YACG,UAAU,CAAC,EAAE,CAAC;;;;;;4CAMkB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;;;2CAGhC,OAAO;uBAC3B,OAAO,YAAY,OAAO;;iCAEhB,OAAO;;;;2BAIb,OAAO,kDAAkD,OAAO;;2BAEhE,OAAO,uBAAuB,OAAO;2BACrC,OAAO;0BACR,OAAO;;;;;;YAMrB,UAAU,CAAC,EAAE,CAAC;KACrB,CAAC;AACN,CAAC;AAED,SAAS,SAAS,CAAC,IAAY,EAAE,EAAU;IACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;AACvC,CAAC;AAED,SAAS,oBAAoB,CAAC,eAAuB,EAAE,IAAY;IACjE,MAAM,EAAE,GAAG,sBAAsB,CAAC;IAClC,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC;QAAE,OAAO,EAAE,CAAC;IAEnC,MAAM,IAAI,GAAG,uCAAuC,CAAC;IACrD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAAE,OAAO,EAAE,CAAC;IAEjC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC;QACnC,OAAO,CAAC,GAAG,QAAQ,GAAG,OAAO,CAAC,eAAe,EAAE,oBAAoB,EAAE,EAAE,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACd,CAAC;AAED,IAAI,EAAE,GAAG,WAAW,KAAK,SAAS,EAAE,CAAC;IACnC,EAAE,GAAG,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,uCAAuC;AAC9D,CAAC;AAED,MAAM,cAAc,GAAG,IAAA,cAAO,EAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/E,MAAM,eAAe,GAAG,IAAA,eAAQ,EAAC,cAAc,EAAE,SAAS,CAAC,CAAC;AAE5D,MAAM,KAAK,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;AAErD,KAAK,MAAM,QAAQ,IAAI,KAAK,EAAE,CAAC;IAC7B,MAAM,IAAI,GAAG,IAAA,WAAI,EAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IAC5C,IAAI,CAAC,IAAA,eAAU,EAAC,IAAI,CAAC;QAAE,SAAS;IAChC,MAAM,OAAO,GAAG,oBAAoB,CAClC,eAAe,EACf,IAAA,iBAAY,EAAC,IAAI,EAAE,MAAM,CAAC,CAC3B,CAAC;IACF,IAAI,CAAC,OAAO;QAAE,SAAS;IACvB,IAAA,kBAAa,EAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC7B,OAAO,CAAC,GAAG,CAAC,kDAAkD,EAAE,IAAI,CAAC,CAAC;AACxE,CAAC"}
\ No newline at end of file
diff --git a/dist/cjs/package.json b/dist/cjs/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..b731bd61b9cefea28f38a00e57c8cb9a3866bd84
--- /dev/null
+++ b/dist/cjs/package.json
@@ -0,0 +1 @@
+{"type": "commonjs"}
diff --git a/dist/cjs/src/compiler.d.ts b/dist/cjs/src/compiler.d.ts
index 40fe46536960038266a8bd326de1eb29b5a6cf98..36aca6411cc7c9945a30042c68271bc66624bbbe 100644
--- a/dist/cjs/src/compiler.d.ts
+++ b/dist/cjs/src/compiler.d.ts
@@ -1,15 +1,24 @@
-import ts, { ArrowFunction, Bundle, ClassDeclaration, ClassExpression, CompilerHost, CompilerOptions, ConstructorDeclaration, CustomTransformer, CustomTransformerFactory, Declaration, EntityName, ExportDeclaration, Expression, ExpressionWithTypeArguments, FunctionDeclaration, FunctionExpression, Identifier, ImportDeclaration, JSDocImportTag, MethodDeclaration, ModuleDeclaration, ModuleExportName, Node, NodeFactory, ParseConfigHost, PropertyAccessExpression, QualifiedName, Statement, TransformationContext, TypeAliasDeclaration, TypeChecker, TypeParameterDeclaration, TypeReferenceNode } from 'typescript';
-import { NodeConverter, PackExpression } from './reflection-ast.js';
-import { SourceFile } from './ts-types.js';
-import { ReflectionOp } from '@deepkit/type-spec';
-import { Resolver } from './resolver.js';
-import { ConfigResolver, MatchResult, ReflectionConfig, ReflectionConfigCache } from './config.js';
+import ts, { ArrowFunction, Bundle, ClassDeclaration, ClassExpression, CompilerHost, CompilerOptions, ConstructorDeclaration, CustomTransformer, CustomTransformerFactory, Declaration, EntityName, ExportDeclaration, Expression, ExpressionWithTypeArguments, FunctionDeclaration, FunctionExpression, Identifier, ImportDeclaration, JSDocImportTag, MethodDeclaration, ModuleDeclaration, ModuleExportName, Node, NodeFactory, ParseConfigHost, PropertyAccessExpression, QualifiedName, Statement, TransformationContext, TypeAliasDeclaration, TypeChecker, TypeParameterDeclaration, TypeReferenceNode } from "typescript";
+import { ReflectionOp } from "@deepkit/type-spec";
+import { ConfigResolver, MatchResult, ReflectionConfig, ReflectionConfigCache } from "./config.js";
+import { NodeConverter, PackExpression } from "./reflection-ast.js";
+import { Resolver } from "./resolver.js";
+import { SourceFile } from "./ts-types.js";
 export declare function encodeOps(ops: ReflectionOp[]): string;
 export declare const packSizeByte: number;
 /**
  * It can't be more ops than this given number
  */
 export declare const packSize: number;
+export interface TagsReflectionStruct {
+    hidden?: boolean;
+    ignore?: boolean;
+    internal?: boolean;
+    alias?: string[];
+    title?: string;
+    permission?: string[];
+    domain?: string;
+}
 export declare function debugPackStruct(sourceFile: SourceFile, forType: Node, pack: {
     ops: ReflectionOp[];
     stack: PackExpression[];
@@ -109,7 +118,7 @@ export declare class ReflectionTransformer implements CustomTransformer {
      * Types added to this map will get a type program directly under it.
      * This is for types used in the very same file.
      */
-    protected compileDeclarations: Map<ts.TypeAliasDeclaration | ts.InterfaceDeclaration | ts.EnumDeclaration, {
+    protected compileDeclarations: Map<ts.EnumDeclaration | ts.InterfaceDeclaration | ts.TypeAliasDeclaration, {
         name: EntityName;
         sourceFile: SourceFile;
         compiled?: Statement[];
@@ -159,11 +168,16 @@ export declare class ReflectionTransformer implements CustomTransformer {
         __deepkitConfig?: ReflectionConfig;
     }): boolean;
     transformSourceFile(sourceFile: SourceFile): SourceFile;
-    protected getModuleType(): 'cjs' | 'esm';
+    protected getModuleType(): "cjs" | "esm";
     protected getArrowFunctionΩPropertyAccessIdentifier(node: ArrowFunction): Identifier | undefined;
     protected injectResetΩ<T extends FunctionDeclaration | FunctionExpression | MethodDeclaration | ConstructorDeclaration | ArrowFunction>(node: T): T;
     protected createProgramVarFromNode(node: Node, name: EntityName, sourceFile?: SourceFile): Statement[];
     protected extractPackStructOfExpression(node: Expression, program: CompilerProgram): void;
+    protected parseDefaultValue(kind: ts.SyntaxKind, defaultValue: string): any;
+    protected parseTagReflection(node: Node | Declaration | ClassDeclaration | ClassExpression): TagsReflectionStruct;
+    protected extractTagReflections(program: CompilerProgram, node?: Node): void;
+    protected extractDefaultValueReflection(program: CompilerProgram, node?: Node): void;
+    protected extractDescriptionReflection(program: CompilerProgram, node?: Node): void;
     protected extractPackStructOfType(node: Node | Declaration | ClassDeclaration | ClassExpression, program: CompilerProgram): void;
     protected knownClasses: {
         [name: string]: ReflectionOp;
@@ -280,12 +294,12 @@ export declare class ReflectionTransformer implements CustomTransformer {
      *
      * => function name() {}; name.__type = 34;
      */
-    protected decorateFunctionDeclaration(declaration: FunctionDeclaration): ts.Statement[] | ts.FunctionDeclaration | ts.ExportAssignment | undefined;
+    protected decorateFunctionDeclaration(declaration: FunctionDeclaration): ts.ExportAssignment | ts.FunctionDeclaration | ts.Statement[] | undefined;
     /**
      * const fn = () => {}
      * => const fn = __assignType(() => {}, [34])
      */
-    protected decorateArrowFunction(expression: ArrowFunction): ts.CallExpression | ts.ArrowFunction;
+    protected decorateArrowFunction(expression: ArrowFunction): ts.ArrowFunction | ts.CallExpression;
     /**
      * Object.assign(fn, {__type: []}) is much slower than a custom implementation like
      *
diff --git a/dist/cjs/src/compiler.js b/dist/cjs/src/compiler.js
index b371b9897069505d3ff8e8171e7eff7c1fcdd63a..8f9d1b90ddae4da20d6100be29466c81c84d70f9 100644
--- a/dist/cjs/src/compiler.js
+++ b/dist/cjs/src/compiler.js
@@ -16,21 +16,20 @@ exports.declarationTransformer = exports.transformer = exports.DeclarationTransf
 exports.encodeOps = encodeOps;
 exports.debugPackStruct = debugPackStruct;
 const typescript_1 = __importDefault(require("typescript"));
-const reflection_ast_js_1 = require("./reflection-ast.js");
 const type_spec_1 = require("@deepkit/type-spec");
-const resolver_js_1 = require("./resolver.js");
 const vfs_1 = require("@typescript/vfs");
-const debug_js_1 = require("./debug.js");
 const config_js_1 = require("./config.js");
-const { visitEachChild, visitNode, isPropertyAssignment, isArrayTypeNode, isArrowFunction, isBlock, isCallExpression, isCallSignatureDeclaration, isClassDeclaration, isClassExpression, isConstructorDeclaration, isConstructorTypeNode, isConstructSignatureDeclaration, isEnumDeclaration, isExportDeclaration, isExpression, isExpressionWithTypeArguments, isFunctionDeclaration, isFunctionExpression, isFunctionLike, isIdentifier, isImportClause, isImportDeclaration, isImportSpecifier, isInferTypeNode, isInterfaceDeclaration, isMethodDeclaration, isMethodSignature, isModuleDeclaration, isNamedExports, isNamedTupleMember, isNewExpression, isObjectLiteralExpression, isOptionalTypeNode, isParameter, isParenthesizedExpression, isParenthesizedTypeNode, isPropertyAccessExpression, isQualifiedName, isSourceFile, isStringLiteral, isTypeAliasDeclaration, isTypeLiteralNode, isTypeParameterDeclaration, isTypeQueryNode, isTypeReferenceNode, isUnionTypeNode, isExpressionStatement, isVariableDeclaration, getEffectiveConstraintOfTypeParameter, addSyntheticLeadingComment, createCompilerHost, createPrinter, escapeLeadingUnderscores, EmitHint, NodeFlags, SyntaxKind, ScriptTarget, ModifierFlags, ScriptKind, } = typescript_1.default;
+const debug_js_1 = require("./debug.js");
+const reflection_ast_js_1 = require("./reflection-ast.js");
+const resolver_js_1 = require("./resolver.js");
+const { visitEachChild, visitNode, isPropertyAssignment, isArrayTypeNode, isArrowFunction, isBlock, isCallExpression, isCallSignatureDeclaration, isClassDeclaration, isClassExpression, isConstructorDeclaration, isConstructorTypeNode, isConstructSignatureDeclaration, isEnumDeclaration, isExportDeclaration, isExpression, isExpressionWithTypeArguments, isFunctionDeclaration, isFunctionExpression, isFunctionLike, isIdentifier, isImportClause, isImportDeclaration, isImportSpecifier, isInferTypeNode, isInterfaceDeclaration, isMethodDeclaration, isMethodSignature, isModuleDeclaration, isNamedExports, isNamedTupleMember, isNewExpression, isObjectLiteralExpression, isOptionalTypeNode, isParameter, isParenthesizedExpression, isParenthesizedTypeNode, isPropertyAccessExpression, isQualifiedName, isSourceFile, isStringLiteral, isTypeAliasDeclaration, isTypeLiteralNode, isTypeParameterDeclaration, isTypeQueryNode, isTypeReferenceNode, isUnionTypeNode, isExpressionStatement, isVariableDeclaration, getEffectiveConstraintOfTypeParameter, addSyntheticLeadingComment, createCompilerHost, createPrinter, escapeLeadingUnderscores, EmitHint, NodeFlags, SyntaxKind, ScriptTarget, ModifierFlags, ScriptKind } = typescript_1.default;
 function encodeOps(ops) {
-    return ops.map(v => String.fromCharCode(v + 33)).join('');
+    return ops.map(v => String.fromCharCode(v + 33)).join("");
 }
 function filterUndefined(object) {
     return Object.fromEntries(Object.entries(object).filter(([, v]) => v !== undefined));
 }
 exports.packSizeByte = 6;
-const serverEnv = 'undefined' !== typeof process;
 /**
  * It can't be more ops than this given number
  */
@@ -66,6 +65,7 @@ const OPs = {
     [type_spec_1.ReflectionOp.jumpCondition]: { params: 2 },
     [type_spec_1.ReflectionOp.typeName]: { params: 1 },
     [type_spec_1.ReflectionOp.implements]: { params: 1 },
+    [type_spec_1.ReflectionOp.tags]: { params: 1 }
 };
 function debugPackStruct(sourceFile, forType, pack) {
     const items = [];
@@ -83,14 +83,14 @@ function debugPackStruct(sourceFile, forType, pack) {
     const printer = createPrinter();
     const stack = [];
     for (const s of pack.stack) {
-        if ('object' === typeof s && 'getText' in s) {
+        if ("object" === typeof s && "getText" in s) {
             stack.push(printer.printNode(EmitHint.Unspecified, s, sourceFile));
         }
         else {
             stack.push(JSON.stringify(s));
         }
     }
-    console.log(stack.join(','), '|', ...items);
+    console.log(stack.join(","), "|", ...items);
 }
 function findVariable(frame, name, frameOffset = 0) {
     const variable = frame.variables.find(v => v.name === name);
@@ -151,7 +151,7 @@ class CompilerProgram {
     popCoRoutine() {
         const coRoutine = this.activeCoRoutines.pop();
         if (!coRoutine)
-            throw new Error('No active co routine found');
+            throw new Error("No active co routine found");
         this.popFrameImplicit();
         if (this.mainOffset === 0) {
             this.mainOffset = 2; //we add JUMP + index when building the program
@@ -164,8 +164,8 @@ class CompilerProgram {
     }
     pushOp(...ops) {
         for (const op of ops) {
-            if ('number' !== typeof op) {
-                throw new Error('No valid OP added');
+            if ("number" !== typeof op) {
+                throw new Error("No valid OP added");
             }
             // if (op + 33 > 126) {
             //todo: encode as var int
@@ -216,7 +216,9 @@ class CompilerProgram {
     pushFrame(implicit = false) {
         if (!implicit)
             this.pushOp(type_spec_1.ReflectionOp.frame);
-        const opIndex = this.activeCoRoutines.length ? this.activeCoRoutines[this.activeCoRoutines.length - 1].ops.length : this.ops.length;
+        const opIndex = this.activeCoRoutines.length
+            ? this.activeCoRoutines[this.activeCoRoutines.length - 1].ops.length
+            : this.ops.length;
         this.frame = { previous: this.frame, variables: [], opIndex };
         return this.frame;
     }
@@ -240,15 +242,17 @@ class CompilerProgram {
         this.pushOpAtFrame(frame, type_spec_1.ReflectionOp.var);
         frame.variables.push({
             index: frame.variables.length,
-            name,
+            name
         });
         return frame.variables.length - 1;
     }
     pushTemplateParameter(name, withDefault = false) {
-        this.pushOp(withDefault ? type_spec_1.ReflectionOp.typeParameterDefault : type_spec_1.ReflectionOp.typeParameter, this.findOrAddStackEntry(name));
+        this.pushOp(withDefault
+            ? type_spec_1.ReflectionOp.typeParameterDefault
+            : type_spec_1.ReflectionOp.typeParameter, this.findOrAddStackEntry(name));
         this.frame.variables.push({
             index: this.frame.variables.length,
-            name,
+            name
         });
         return this.frame.variables.length - 1;
     }
@@ -260,7 +264,10 @@ function getAssignTypeExpression(call) {
     if (isParenthesizedExpression(call) && isCallExpression(call.expression)) {
         call = call.expression;
     }
-    if (isCallExpression(call) && isIdentifier(call.expression) && (0, reflection_ast_js_1.getIdentifierName)(call.expression) === '__assignType' && call.arguments.length > 0) {
+    if (isCallExpression(call) &&
+        isIdentifier(call.expression) &&
+        (0, reflection_ast_js_1.getIdentifierName)(call.expression) === "__assignType" &&
+        call.arguments.length > 0) {
         return call.arguments[0];
     }
     return;
@@ -273,9 +280,11 @@ function getReceiveTypeParameter(type) {
                 return rfn;
         }
     }
-    else if (isTypeReferenceNode(type) && isIdentifier(type.typeName)
-        && (0, reflection_ast_js_1.getIdentifierName)(type.typeName) === 'ReceiveType' && !!type.typeArguments
-        && type.typeArguments.length === 1)
+    else if (isTypeReferenceNode(type) &&
+        isIdentifier(type.typeName) &&
+        (0, reflection_ast_js_1.getIdentifierName)(type.typeName) === "ReceiveType" &&
+        !!type.typeArguments &&
+        type.typeArguments.length === 1)
         return type;
     return;
 }
@@ -302,7 +311,7 @@ exports.Cache = Cache;
  * Deepkit/type can then extract and decode them on-demand.
  */
 class ReflectionTransformer {
-    constructor(context, cache = new Cache) {
+    constructor(context, cache = new Cache()) {
         this.context = context;
         this.cache = cache;
         this.embedAssignType = false;
@@ -323,23 +332,23 @@ class ReflectionTransformer {
         this.addImports = [];
         this.overriddenHost = false;
         this.knownClasses = {
-            'Int8Array': type_spec_1.ReflectionOp.int8Array,
-            'Uint8Array': type_spec_1.ReflectionOp.uint8Array,
-            'Uint8ClampedArray': type_spec_1.ReflectionOp.uint8ClampedArray,
-            'Int16Array': type_spec_1.ReflectionOp.int16Array,
-            'Uint16Array': type_spec_1.ReflectionOp.uint16Array,
-            'Int32Array': type_spec_1.ReflectionOp.int32Array,
-            'Uint32Array': type_spec_1.ReflectionOp.uint32Array,
-            'Float32Array': type_spec_1.ReflectionOp.float32Array,
-            'Float64Array': type_spec_1.ReflectionOp.float64Array,
-            'ArrayBuffer': type_spec_1.ReflectionOp.arrayBuffer,
-            'BigInt64Array': type_spec_1.ReflectionOp.bigInt64Array,
-            'Date': type_spec_1.ReflectionOp.date,
-            'RegExp': type_spec_1.ReflectionOp.regexp,
-            'String': type_spec_1.ReflectionOp.string,
-            'Number': type_spec_1.ReflectionOp.number,
-            'BigInt': type_spec_1.ReflectionOp.bigint,
-            'Boolean': type_spec_1.ReflectionOp.boolean,
+            "Int8Array": type_spec_1.ReflectionOp.int8Array,
+            "Uint8Array": type_spec_1.ReflectionOp.uint8Array,
+            "Uint8ClampedArray": type_spec_1.ReflectionOp.uint8ClampedArray,
+            "Int16Array": type_spec_1.ReflectionOp.int16Array,
+            "Uint16Array": type_spec_1.ReflectionOp.uint16Array,
+            "Int32Array": type_spec_1.ReflectionOp.int32Array,
+            "Uint32Array": type_spec_1.ReflectionOp.uint32Array,
+            "Float32Array": type_spec_1.ReflectionOp.float32Array,
+            "Float64Array": type_spec_1.ReflectionOp.float64Array,
+            "ArrayBuffer": type_spec_1.ReflectionOp.arrayBuffer,
+            "BigInt64Array": type_spec_1.ReflectionOp.bigInt64Array,
+            "Date": type_spec_1.ReflectionOp.date,
+            "RegExp": type_spec_1.ReflectionOp.regexp,
+            "String": type_spec_1.ReflectionOp.string,
+            "Number": type_spec_1.ReflectionOp.number,
+            "BigInt": type_spec_1.ReflectionOp.bigint,
+            "Boolean": type_spec_1.ReflectionOp.boolean
         };
         this.f = context.factory;
         this.nodeConverter = new reflection_ast_js_1.NodeConverter(this.f);
@@ -358,23 +367,23 @@ class ReflectionTransformer {
                 if (!this.host.readDirectory)
                     return [];
                 return this.host.readDirectory(path, extensions || [], exclude, include || [], depth);
-            },
+            }
         };
         {
             // TypeAnnotation<T, Options> = { __meta?: never & [T, Options] }
-            const T = this.f.createIdentifier('T');
-            const Options = this.f.createIdentifier('Options');
-            this.intrinsicMetaDeclaration = this.f.createTypeAliasDeclaration([], 'TypeAnnotation', [
+            const T = this.f.createIdentifier("T");
+            const Options = this.f.createIdentifier("Options");
+            this.intrinsicMetaDeclaration = this.f.createTypeAliasDeclaration([], "TypeAnnotation", [
                 this.f.createTypeParameterDeclaration([], T),
-                this.f.createTypeParameterDeclaration([], Options, undefined, this.f.createTypeReferenceNode('never')),
+                this.f.createTypeParameterDeclaration([], Options, undefined, this.f.createTypeReferenceNode("never"))
             ], this.f.createTypeLiteralNode([
-                this.f.createPropertySignature(undefined, '__meta', this.f.createToken(SyntaxKind.QuestionToken), this.f.createIntersectionTypeNode([
-                    this.f.createTypeReferenceNode('never'),
+                this.f.createPropertySignature(undefined, "__meta", this.f.createToken(SyntaxKind.QuestionToken), this.f.createIntersectionTypeNode([
+                    this.f.createTypeReferenceNode("never"),
                     this.f.createTupleTypeNode([
                         this.f.createTypeReferenceNode(T),
-                        this.f.createTypeReferenceNode(Options),
-                    ]),
-                ])),
+                        this.f.createTypeReferenceNode(Options)
+                    ])
+                ]))
             ]));
         }
     }
@@ -385,11 +394,17 @@ class ReflectionTransformer {
         return this;
     }
     withReflection(config) {
+        const configResolver = {
+            reflectionLevel: "normal",
+            ...config,
+            path: "",
+            mergeStrategy: "replace",
+            compilerOptions: this.compilerOptions
+        };
         const match = (path) => {
             const mode = (0, config_js_1.reflectionModeMatcher)(config, path);
-            return { mode, tsConfigPath: '' };
+            return { mode, tsConfigPath: "", level: configResolver.reflectionLevel };
         };
-        const configResolver = { ...config, path: '', mergeStrategy: 'replace', compilerOptions: this.compilerOptions };
         this.overriddenConfigResolver = { config: configResolver, match };
         return this;
     }
@@ -399,24 +414,27 @@ class ReflectionTransformer {
     getTempResultIdentifier() {
         if (this.tempResultIdentifier)
             return this.tempResultIdentifier;
-        const locals = (0, reflection_ast_js_1.isNodeWithLocals)(this.sourceFile) ? this.sourceFile.locals : undefined;
+        const locals = (0, reflection_ast_js_1.isNodeWithLocals)(this.sourceFile)
+            ? this.sourceFile.locals
+            : undefined;
         if (locals) {
-            let found = 'Ωr';
+            let found = "Ωr";
             for (let i = 0;; i++) {
-                found = 'Ωr' + (i ? i : '');
+                found = "Ωr" + (i ? i : "");
                 if (!locals.has(escapeLeadingUnderscores(found)))
                     break;
             }
             this.tempResultIdentifier = this.f.createIdentifier(found);
         }
         else {
-            this.tempResultIdentifier = this.f.createIdentifier('Ωr');
+            this.tempResultIdentifier = this.f.createIdentifier("Ωr");
         }
         return this.tempResultIdentifier;
     }
     getConfigResolver(sourceFile) {
-        if (this.overriddenConfigResolver)
+        if (this.overriddenConfigResolver) {
             return this.overriddenConfigResolver;
+        }
         return (0, config_js_1.getConfigResolver)(this.cache.resolver, this.parseConfigHost, this.compilerOptions, sourceFile);
     }
     getReflectionConfig(sourceFile) {
@@ -431,14 +449,15 @@ class ReflectionTransformer {
             return true; // intrinsic types are always with reflection
         const reflection = this.getReflectionConfig(sourceFile);
         // explicit means reflection needs to be enabled per Node/File via @reflection
-        if (reflection.mode === 'explicit')
+        if (reflection.mode === "explicit")
             return mode === true;
-        return reflection.mode === 'default';
+        return reflection.mode === "default";
     }
     transformSourceFile(sourceFile) {
         this.sourceFile = sourceFile;
         //if it's not a TS/TSX file, we do not transform it
-        if (sourceFile.scriptKind !== ScriptKind.TS && sourceFile.scriptKind !== ScriptKind.TSX)
+        if (sourceFile.scriptKind !== ScriptKind.TS &&
+            sourceFile.scriptKind !== ScriptKind.TSX)
             return sourceFile;
         if (sourceFile.deepkitTransformed)
             return sourceFile;
@@ -452,8 +471,8 @@ class ReflectionTransformer {
         // ConfigResolver resolves the whole config.
         // Since this.compilerOptions was already passed to Resolver, we update its values by reference.
         Object.assign(this.compilerOptions, configResolver.config.compilerOptions);
-        if (reflection.mode === 'never') {
-            (0, debug_js_1.debug)(`Transform file with reflection=${reflection.mode} took ${Date.now() - start}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || 'none'}.`);
+        if (reflection.mode === "never") {
+            (0, debug_js_1.debug)(`Transform file with reflection=${reflection.mode} took ${Date.now() - start}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || "none"}.`);
             return sourceFile;
         }
         if (!sourceFile.locals) {
@@ -461,29 +480,35 @@ class ReflectionTransformer {
             typescript_1.default.bindSourceFile(sourceFile, this.compilerOptions);
         }
         if (sourceFile.kind !== SyntaxKind.SourceFile) {
-            if ('undefined' === typeof require) {
+            if ("undefined" === typeof require) {
                 throw new Error(`Invalid TypeScript library imported. SyntaxKind different ${sourceFile.kind} !== ${SyntaxKind.SourceFile}.`);
             }
-            const path = require.resolve('typescript');
+            const path = require.resolve("typescript");
             throw new Error(`Invalid TypeScript library imported. SyntaxKind different ${sourceFile.kind} !== ${SyntaxKind.SourceFile}. typescript package path: ${path}`);
         }
         const visitor = (node) => {
             node = visitEachChild(node, visitor, this.context);
-            if ((isInterfaceDeclaration(node) || isTypeAliasDeclaration(node) || isEnumDeclaration(node))) {
+            if (isInterfaceDeclaration(node) ||
+                isTypeAliasDeclaration(node) ||
+                isEnumDeclaration(node)) {
                 if (this.isWithReflection(sourceFile, node)) {
                     this.compileDeclarations.set(node, {
                         name: node.name,
-                        sourceFile: this.sourceFile,
+                        sourceFile: this.sourceFile
                     });
                 }
             }
-            if (isMethodDeclaration(node) && node.parent && node.body && isObjectLiteralExpression(node.parent)) {
+            if (isMethodDeclaration(node) &&
+                node.parent &&
+                node.body &&
+                isObjectLiteralExpression(node.parent)) {
                 //replace MethodDeclaration with MethodExpression
                 // {add(v: number) {}} => {add: function (v: number) {}}
                 //so that __type can be added.
                 //{default(){}} can not be converted without losing the function name, so we skip that for the moment.
                 let valid = true;
-                if (node.name.kind === SyntaxKind.Identifier && (0, reflection_ast_js_1.getIdentifierName)(node.name) === 'default')
+                if (node.name.kind === SyntaxKind.Identifier &&
+                    (0, reflection_ast_js_1.getIdentifierName)(node.name) === "default")
                     valid = false;
                 if (valid) {
                     const method = this.decorateFunctionExpression(this.f.createFunctionExpression(node.modifiers, node.asteriskToken, isIdentifier(node.name) ? node.name : undefined, node.typeParameters, node.parameters, node.type, node.body));
@@ -495,33 +520,40 @@ class ReflectionTransformer {
             }
             else if (isParameter(node) && node.parent && node.type) {
                 // ReceiveType
-                const typeParameters = isConstructorDeclaration(node.parent) ? node.parent.parent.typeParameters : node.parent.typeParameters;
+                const typeParameters = isConstructorDeclaration(node.parent)
+                    ? node.parent.parent.typeParameters
+                    : node.parent.typeParameters;
                 if (!typeParameters)
                     return node;
                 const receiveType = getReceiveTypeParameter(node.type);
                 if (receiveType && receiveType.typeArguments) {
                     const first = receiveType.typeArguments[0];
-                    if (first && isTypeReferenceNode(first) && isIdentifier(first.typeName)) {
+                    if (first &&
+                        isTypeReferenceNode(first) &&
+                        isIdentifier(first.typeName)) {
                         const name = (0, reflection_ast_js_1.getIdentifierName)(first.typeName);
                         //find type parameter position
                         const index = typeParameters.findIndex(v => (0, reflection_ast_js_1.getIdentifierName)(v.name) === name);
-                        let container = this.f.createIdentifier('globalThis');
+                        let container = this.f.createIdentifier("globalThis");
                         if (isArrowFunction(node.parent)) {
                             const next = this.getArrowFunctionΩPropertyAccessIdentifier(node.parent);
                             if (!next)
                                 return node;
                             container = next;
                         }
-                        else if ((isFunctionDeclaration(node.parent) || isFunctionExpression(node.parent)) && node.parent.name) {
+                        else if ((isFunctionDeclaration(node.parent) ||
+                            isFunctionExpression(node.parent)) &&
+                            node.parent.name) {
                             container = node.parent.name;
                         }
-                        else if (isMethodDeclaration(node.parent) && isIdentifier(node.parent.name)) {
-                            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), node.parent.name);
+                        else if (isMethodDeclaration(node.parent) &&
+                            isIdentifier(node.parent.name)) {
+                            container = this.f.createPropertyAccessExpression(this.f.createIdentifier("this"), node.parent.name);
                         }
                         else if (isConstructorDeclaration(node.parent)) {
-                            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), 'constructor');
+                            container = this.f.createPropertyAccessExpression(this.f.createIdentifier("this"), "constructor");
                         }
-                        return this.f.updateParameterDeclaration(node, node.modifiers, node.dotDotDotToken, node.name, node.questionToken, receiveType, this.f.createElementAccessChain(this.f.createPropertyAccessExpression(container, this.f.createIdentifier('Ω')), this.f.createToken(SyntaxKind.QuestionDotToken), this.f.createNumericLiteral(index)));
+                        return this.f.updateParameterDeclaration(node, node.modifiers, node.dotDotDotToken, node.name, node.questionToken, receiveType, this.f.createElementAccessChain(this.f.createPropertyAccessExpression(container, this.f.createIdentifier("Ω")), this.f.createToken(SyntaxKind.QuestionDotToken), this.f.createNumericLiteral(index)));
                     }
                 }
             }
@@ -540,10 +572,13 @@ class ReflectionTransformer {
             else if (isArrowFunction(node)) {
                 return this.decorateArrowFunction(this.injectResetΩ(node));
             }
-            else if ((isNewExpression(node) || isCallExpression(node)) && node.typeArguments && node.typeArguments.length > 0) {
+            else if ((isNewExpression(node) || isCallExpression(node)) &&
+                node.typeArguments &&
+                node.typeArguments.length > 0) {
                 if (isCallExpression(node)) {
-                    const autoTypeFunctions = ['valuesOf', 'propertiesOf', 'typeOf'];
-                    if (isIdentifier(node.expression) && autoTypeFunctions.includes((0, reflection_ast_js_1.getIdentifierName)(node.expression))) {
+                    const autoTypeFunctions = ["valuesOf", "propertiesOf", "typeOf"];
+                    if (isIdentifier(node.expression) &&
+                        autoTypeFunctions.includes((0, reflection_ast_js_1.getIdentifierName)(node.expression))) {
                         const args = [...node.arguments];
                         if (!args.length) {
                             args.push(this.f.createArrayLiteralExpression());
@@ -565,24 +600,26 @@ class ReflectionTransformer {
                 const typeExpressions = [];
                 for (const a of node.typeArguments) {
                     const type = this.getTypeOfType(a);
-                    typeExpressions.push(type || this.f.createIdentifier('undefined'));
+                    typeExpressions.push(type || this.f.createIdentifier("undefined"));
                 }
-                let container = this.f.createIdentifier('globalThis');
+                let container = this.f.createIdentifier("globalThis");
                 if (isIdentifier(node.expression)) {
                     container = node.expression;
                 }
                 else if (isPropertyAccessExpression(node.expression)) {
                     container = node.expression;
                 }
-                const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(container, 'Ω'), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
-                const update = isNewExpression(node) ? this.f.updateNewExpression : this.f.updateCallExpression;
+                const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(container, "Ω"), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
+                const update = isNewExpression(node)
+                    ? this.f.updateNewExpression
+                    : this.f.updateCallExpression;
                 if (isPropertyAccessExpression(node.expression)) {
                     //e.g. http.deep.response();
                     if (isCallExpression(node.expression.expression)) {
                         //e.g. http.deep().response();
                         //change to (Ωr = http.deep(), Ωr.response.Ω = [], Ωr).response()
                         const r = this.getTempResultIdentifier();
-                        const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createPropertyAccessExpression(r, node.expression.name), 'Ω'), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
+                        const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createPropertyAccessExpression(r, node.expression.name), "Ω"), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
                         return update(node, this.f.createPropertyAccessExpression(this.f.createParenthesizedExpression(this.f.createBinaryExpression(this.f.createBinaryExpression(this.f.createBinaryExpression(r, this.f.createToken(typescript_1.default.SyntaxKind.EqualsToken), node.expression.expression), this.f.createToken(typescript_1.default.SyntaxKind.CommaToken), assignQ), this.f.createToken(typescript_1.default.SyntaxKind.CommaToken), r)), node.expression.name), node.typeArguments, node.arguments);
                     }
                     else if (isParenthesizedExpression(node.expression.expression)) {
@@ -593,7 +630,7 @@ class ReflectionTransformer {
                         //which needs to be converted so that Ω is correctly read by the last call
                         //(r = (obj.method.Ω = [['a']], obj.method()), obj.method.Ω = [['b']], r).method());
                         const r = this.getTempResultIdentifier();
-                        const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createPropertyAccessExpression(r, node.expression.name), 'Ω'), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
+                        const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createPropertyAccessExpression(r, node.expression.name), "Ω"), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
                         const updatedNode = update(node, this.f.updatePropertyAccessExpression(node.expression, this.f.updateParenthesizedExpression(node.expression.expression, this.f.createBinaryExpression(this.f.createBinaryExpression(this.f.createBinaryExpression(r, this.f.createToken(SyntaxKind.EqualsToken), node.expression.expression.expression), this.f.createToken(SyntaxKind.CommaToken), assignQ), this.f.createToken(SyntaxKind.CommaToken), r)), node.expression.name), node.typeArguments, node.arguments);
                         return this.f.createParenthesizedExpression(updatedNode);
                     }
@@ -638,7 +675,9 @@ class ReflectionTransformer {
         //externalize type aliases
         const compileDeclarations = (node) => {
             node = visitEachChild(node, compileDeclarations, this.context);
-            if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node) || isEnumDeclaration(node))) {
+            if (isTypeAliasDeclaration(node) ||
+                isInterfaceDeclaration(node) ||
+                isEnumDeclaration(node)) {
                 const d = this.compileDeclarations.get(node);
                 if (!d) {
                     return node;
@@ -658,11 +697,15 @@ class ReflectionTransformer {
                 if (handledIdentifier.includes((0, reflection_ast_js_1.getIdentifierName)(imp.identifier)))
                     continue;
                 handledIdentifier.push((0, reflection_ast_js_1.getIdentifierName)(imp.identifier));
-                if (this.getModuleType() === 'cjs') {
+                if (this.getModuleType() === "cjs") {
                     //var {identifier} = require('./bar')
                     const test = this.f.createIdentifier((0, reflection_ast_js_1.getIdentifierName)(imp.identifier));
-                    const variable = this.f.createVariableStatement(undefined, this.f.createVariableDeclarationList([this.f.createVariableDeclaration(this.f.createObjectBindingPattern([this.f.createBindingElement(undefined, undefined, test)]), undefined, undefined, this.f.createCallExpression(this.f.createIdentifier('require'), undefined, [imp.from]))], NodeFlags.Const));
-                    const typeDeclWithComment = addSyntheticLeadingComment(variable, SyntaxKind.MultiLineCommentTrivia, '@ts-ignore', true);
+                    const variable = this.f.createVariableStatement(undefined, this.f.createVariableDeclarationList([
+                        this.f.createVariableDeclaration(this.f.createObjectBindingPattern([
+                            this.f.createBindingElement(undefined, undefined, test)
+                        ]), undefined, undefined, this.f.createCallExpression(this.f.createIdentifier("require"), undefined, [imp.from]))
+                    ], NodeFlags.Const));
+                    const typeDeclWithComment = addSyntheticLeadingComment(variable, SyntaxKind.MultiLineCommentTrivia, "@ts-ignore", true);
                     newTopStatements.push(typeDeclWithComment);
                 }
                 else {
@@ -672,54 +715,59 @@ class ReflectionTransformer {
                     const specifier = this.f.createImportSpecifier(false, undefined, imp.identifier);
                     const namedImports = this.f.createNamedImports([specifier]);
                     const importStatement = this.f.createImportDeclaration(undefined, this.f.createImportClause(false, undefined, namedImports), imp.from);
-                    const typeDeclWithComment = addSyntheticLeadingComment(importStatement, SyntaxKind.MultiLineCommentTrivia, '@ts-ignore', true);
+                    const typeDeclWithComment = addSyntheticLeadingComment(importStatement, SyntaxKind.MultiLineCommentTrivia, "@ts-ignore", true);
                     newTopStatements.push(typeDeclWithComment);
                 }
             }
         }
         if (this.embedAssignType) {
-            const assignType = this.f.createFunctionDeclaration(undefined, undefined, this.f.createIdentifier('__assignType'), undefined, [
-                this.f.createParameterDeclaration(undefined, undefined, this.f.createIdentifier('fn'), undefined, undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
-                undefined),
-                this.f.createParameterDeclaration(undefined, undefined, this.f.createIdentifier('args'), undefined, undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
+            const assignType = this.f.createFunctionDeclaration(undefined, undefined, this.f.createIdentifier("__assignType"), undefined, [
+                this.f.createParameterDeclaration(undefined, undefined, this.f.createIdentifier("fn"), undefined, undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
                 undefined),
+                this.f.createParameterDeclaration(undefined, undefined, this.f.createIdentifier("args"), undefined, undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
+                undefined)
             ], undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
             this.f.createBlock([
-                this.f.createExpressionStatement(this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createIdentifier('fn'), this.f.createIdentifier('__type')), this.f.createToken(SyntaxKind.EqualsToken), this.f.createIdentifier('args'))),
-                this.f.createReturnStatement(this.f.createIdentifier('fn')),
+                this.f.createExpressionStatement(this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createIdentifier("fn"), this.f.createIdentifier("__type")), this.f.createToken(SyntaxKind.EqualsToken), this.f.createIdentifier("args"))),
+                this.f.createReturnStatement(this.f.createIdentifier("fn"))
             ], true));
             newTopStatements.push(assignType);
         }
         if (this.tempResultIdentifier) {
-            newTopStatements.push(this.f.createVariableStatement(undefined, this.f.createVariableDeclarationList([this.f.createVariableDeclaration(this.tempResultIdentifier, undefined, undefined, undefined)], typescript_1.default.NodeFlags.None)));
+            newTopStatements.push(this.f.createVariableStatement(undefined, this.f.createVariableDeclarationList([
+                this.f.createVariableDeclaration(this.tempResultIdentifier, undefined, undefined, undefined)
+            ], typescript_1.default.NodeFlags.None)));
         }
         if (newTopStatements.length) {
             // we want to keep "use strict", or "use client", etc at the very top
-            const indexOfFirstLiteralExpression = this.sourceFile.statements.findIndex(v => isExpressionStatement(v) && isStringLiteral(v.expression));
+            const indexOfFirstLiteralExpression = this.sourceFile.statements.findIndex((v) => isExpressionStatement(v) && isStringLiteral(v.expression));
             const newStatements = indexOfFirstLiteralExpression === -1
                 ? [...newTopStatements, ...this.sourceFile.statements]
                 : [
                     ...this.sourceFile.statements.slice(0, indexOfFirstLiteralExpression + 1),
                     ...newTopStatements,
-                    ...this.sourceFile.statements.slice(indexOfFirstLiteralExpression + 1),
+                    ...this.sourceFile.statements.slice(indexOfFirstLiteralExpression + 1)
                 ];
             this.sourceFile = this.f.updateSourceFile(this.sourceFile, newStatements);
             // this.sourceFile = this.f.updateSourceFile(this.sourceFile, [...newTopStatements, ...this.sourceFile.statements]);
         }
         // console.log(createPrinter().printNode(EmitHint.SourceFile, this.sourceFile, this.sourceFile));
         const took = Date.now() - start;
-        (0, debug_js_1.debug)(`Transform file with reflection=${reflection.mode} took ${took}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || 'none'}.`);
+        (0, debug_js_1.debug)(`Transform file with reflection=${reflection.mode} took ${took}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || "none"}.`);
         this.sourceFile.deepkitTransformed = true;
         return this.sourceFile;
     }
     getModuleType() {
-        if (this.compilerOptions.module === typescript_1.default.ModuleKind.Node16 || this.compilerOptions.module === typescript_1.default.ModuleKind.NodeNext) {
+        if (this.compilerOptions.module === typescript_1.default.ModuleKind.Node16 ||
+            this.compilerOptions.module === typescript_1.default.ModuleKind.NodeNext) {
             if (this.sourceFile.impliedNodeFormat === typescript_1.default.ModuleKind.ESNext) {
-                return 'esm';
+                return "esm";
             }
-            return 'cjs';
+            return "cjs";
         }
-        return this.compilerOptions.module === typescript_1.default.ModuleKind.CommonJS ? 'cjs' : 'esm';
+        return this.compilerOptions.module === typescript_1.default.ModuleKind.CommonJS
+            ? "cjs"
+            : "esm";
     }
     getArrowFunctionΩPropertyAccessIdentifier(node) {
         let { parent } = node.original || node;
@@ -744,7 +792,7 @@ class ReflectionTransformer {
                     return;
                 }
             }
-            return this.f.createIdentifier(names.join('.'));
+            return this.f.createIdentifier(names.join("."));
         }
         return;
     }
@@ -756,23 +804,24 @@ class ReflectionTransformer {
         }
         if (!hasReceiveType)
             return node;
-        let container = this.f.createIdentifier('globalThis');
+        let container = this.f.createIdentifier("globalThis");
         if (isArrowFunction(node)) {
             const next = this.getArrowFunctionΩPropertyAccessIdentifier(node);
             if (!next)
                 return node;
             container = next;
         }
-        else if ((isFunctionDeclaration(node) || isFunctionExpression(node)) && node.name) {
+        else if ((isFunctionDeclaration(node) || isFunctionExpression(node)) &&
+            node.name) {
             container = node.name;
         }
         else if (isMethodDeclaration(node) && isIdentifier(node.name)) {
-            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), node.name);
+            container = this.f.createPropertyAccessExpression(this.f.createIdentifier("this"), node.name);
         }
         else if (isConstructorDeclaration(node)) {
-            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), 'constructor');
+            container = this.f.createPropertyAccessExpression(this.f.createIdentifier("this"), "constructor");
         }
-        const reset = this.f.createExpressionStatement(this.f.createBinaryExpression(this.f.createPropertyAccessExpression(container, this.f.createIdentifier('Ω')), this.f.createToken(typescript_1.default.SyntaxKind.EqualsToken), this.f.createIdentifier('undefined')));
+        const reset = this.f.createExpressionStatement(this.f.createBinaryExpression(this.f.createPropertyAccessExpression(container, this.f.createIdentifier("Ω")), this.f.createToken(typescript_1.default.SyntaxKind.EqualsToken), this.f.createIdentifier("undefined")));
         // convert expression into statements array
         let body = node.body && isBlock(node.body) ? node.body : undefined;
         let bodyStatements = node.body && isBlock(node.body) ? [...node.body.statements] : [];
@@ -801,7 +850,8 @@ class ReflectionTransformer {
     }
     createProgramVarFromNode(node, name, sourceFile) {
         const typeProgram = new CompilerProgram(node, sourceFile);
-        if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node)) && node.typeParameters) {
+        if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node)) &&
+            node.typeParameters) {
             for (const param of node.typeParameters) {
                 if (param.default) {
                     //push default on the stack
@@ -811,12 +861,15 @@ class ReflectionTransformer {
             }
         }
         this.extractPackStructOfType(node, typeProgram);
-        if (isTypeAliasDeclaration(node) || isInterfaceDeclaration(node) || isClassDeclaration(node) || isClassExpression(node)) {
+        if (isTypeAliasDeclaration(node) ||
+            isInterfaceDeclaration(node) ||
+            isClassDeclaration(node) ||
+            isClassExpression(node)) {
             typeProgram.pushOp(type_spec_1.ReflectionOp.nominal);
         }
         const typeProgramExpression = this.packOpsAndStack(typeProgram);
         const variable = this.f.createVariableStatement([], this.f.createVariableDeclarationList([
-            this.f.createVariableDeclaration(this.getDeclarationVariableName(name), undefined, undefined, typeProgramExpression),
+            this.f.createVariableDeclaration(this.getDeclarationVariableName(name), undefined, undefined, typeProgramExpression)
         ], NodeFlags.Const));
         //when its commonJS, the `variable` would be exported as `exports.$name = $value`, but all references point just to $name.
         //so the idea is, that we create a normal variable and export it via `export {$name}`.
@@ -825,7 +878,7 @@ class ReflectionTransformer {
             // TypeError: Cannot read properties of undefined (reading 'escapedText')
             //   at Object.idText (/Users/marc/bude/deepkit-framework/packages/benchmark/node_modules/typescript/lib/typescript.js:11875:67)
             const exportNode = this.f.createExportDeclaration(undefined, false, this.f.createNamedExports([
-                this.f.createExportSpecifier(false, this.getDeclarationVariableName(name), this.getDeclarationVariableName(name)),
+                this.f.createExportSpecifier(false, this.getDeclarationVariableName(name), this.getDeclarationVariableName(name))
             ]));
             return [variable, exportNode];
         }
@@ -853,7 +906,8 @@ class ReflectionTransformer {
             //Symbol() is a function call, so we need to check for that
             case SyntaxKind.CallExpression: {
                 const call = node;
-                if (isIdentifier(call.expression) && (0, reflection_ast_js_1.getIdentifierName)(call.expression) === 'Symbol') {
+                if (isIdentifier(call.expression) &&
+                    (0, reflection_ast_js_1.getIdentifierName)(call.expression) === "Symbol") {
                     program.pushOp(type_spec_1.ReflectionOp.symbol);
                     return;
                 }
@@ -864,18 +918,18 @@ class ReflectionTransformer {
                 const call = node;
                 if (isIdentifier(call.expression)) {
                     const map = {
-                        'Date': type_spec_1.ReflectionOp.date,
-                        'RegExp': type_spec_1.ReflectionOp.regexp,
-                        'Uint8Array': type_spec_1.ReflectionOp.uint8Array,
-                        'Uint8ClampedArray': type_spec_1.ReflectionOp.uint8ClampedArray,
-                        'Uint16Array': type_spec_1.ReflectionOp.uint16Array,
-                        'Uint32Array': type_spec_1.ReflectionOp.uint32Array,
-                        'Int8Array': type_spec_1.ReflectionOp.int8Array,
-                        'Int16Array': type_spec_1.ReflectionOp.int16Array,
-                        'Int32Array': type_spec_1.ReflectionOp.int32Array,
-                        'Float32Array': type_spec_1.ReflectionOp.float32Array,
-                        'Float64Array': type_spec_1.ReflectionOp.float64Array,
-                        'ArrayBuffer': type_spec_1.ReflectionOp.arrayBuffer,
+                        "Date": type_spec_1.ReflectionOp.date,
+                        "RegExp": type_spec_1.ReflectionOp.regexp,
+                        "Uint8Array": type_spec_1.ReflectionOp.uint8Array,
+                        "Uint8ClampedArray": type_spec_1.ReflectionOp.uint8ClampedArray,
+                        "Uint16Array": type_spec_1.ReflectionOp.uint16Array,
+                        "Uint32Array": type_spec_1.ReflectionOp.uint32Array,
+                        "Int8Array": type_spec_1.ReflectionOp.int8Array,
+                        "Int16Array": type_spec_1.ReflectionOp.int16Array,
+                        "Int32Array": type_spec_1.ReflectionOp.int32Array,
+                        "Float32Array": type_spec_1.ReflectionOp.float32Array,
+                        "Float64Array": type_spec_1.ReflectionOp.float64Array,
+                        "ArrayBuffer": type_spec_1.ReflectionOp.arrayBuffer
                     };
                     const op = map[(0, reflection_ast_js_1.getIdentifierName)(call.expression)];
                     if (op) {
@@ -888,6 +942,109 @@ class ReflectionTransformer {
         }
         program.pushOp(type_spec_1.ReflectionOp.never);
     }
+    parseDefaultValue(kind, defaultValue) {
+        switch (kind) {
+            case SyntaxKind.NumberKeyword: {
+                return Number.isInteger(Number.parseFloat(defaultValue))
+                    ? Number.parseInt(defaultValue)
+                    : Number.parseFloat(defaultValue);
+            }
+            case SyntaxKind.BooleanKeyword: {
+                return Boolean(defaultValue?.trim());
+            }
+            case SyntaxKind.BigIntKeyword: {
+                return Number.parseInt(defaultValue);
+            }
+            case SyntaxKind.ObjectKeyword: {
+                return JSON.parse(defaultValue);
+            }
+            case SyntaxKind.NullKeyword: {
+                return null;
+            }
+            case SyntaxKind.TrueKeyword: {
+                return true;
+            }
+            case SyntaxKind.FalseKeyword: {
+                return false;
+            }
+            case SyntaxKind.UndefinedKeyword: {
+                return undefined;
+            }
+            case SyntaxKind.StringLiteral:
+            case SyntaxKind.StringKeyword:
+            default: {
+                if (defaultValue?.trim().toLowerCase() === "false") {
+                    return false;
+                }
+                else if (defaultValue?.trim().toLowerCase() === "true") {
+                    return true;
+                }
+                return defaultValue;
+            }
+        }
+    }
+    parseTagReflection(node) {
+        const tags = {};
+        tags.hidden = (0, reflection_ast_js_1.extractJSDocBoolean)(this.sourceFile, node, "hidden");
+        tags.ignore = (0, reflection_ast_js_1.extractJSDocBoolean)(this.sourceFile, node, "ignore");
+        tags.internal = (0, reflection_ast_js_1.extractJSDocBoolean)(this.sourceFile, node, "internal");
+        tags.alias = (0, reflection_ast_js_1.extractJSDocArray)(this.sourceFile, node, "alias");
+        tags.permission = (0, reflection_ast_js_1.extractJSDocArray)(this.sourceFile, node, "permission");
+        tags.domain = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, node, "domain");
+        if (this.getReflectionConfig(this.sourceFile).level === "verbose") {
+            tags.title = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, node, "title");
+        }
+        return tags;
+    }
+    extractTagReflections(program, node) {
+        if (!node)
+            return;
+        const tags = this.parseTagReflection(node);
+        if (Object.entries(tags).filter(([, value]) => value !== undefined &&
+            (!Array.isArray(value) || value.length > 0) &&
+            (typeof value !== "string" ||
+                value?.trim().replace(/^"/gm, "").replace(/"$/gm, ""))).length > 0) {
+            program.pushOp(type_spec_1.ReflectionOp.tags, program.findOrAddStackEntry(this.f.createObjectLiteralExpression(this.f.createNodeArray(Object.entries(tags)
+                .filter(([, value]) => value !== undefined &&
+                (!Array.isArray(value) || value.length > 0) &&
+                (typeof value !== "string" ||
+                    value.trim().replace(/^"/gm, "").replace(/"$/gm, "")))
+                .map(([key, value]) => {
+                return this.f.createPropertyAssignment(key, Array.isArray(value)
+                    ? this.f.createArrayLiteralExpression(value.map(item => this.valueToExpression(item)))
+                    : typeof value === "boolean"
+                        ? value
+                            ? this.f.createTrue()
+                            : this.f.createFalse()
+                        : this.valueToExpression(value));
+            })))));
+        }
+    }
+    extractDefaultValueReflection(program, node) {
+        if (!node)
+            return;
+        let defaultValue = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, node, "defaultValue");
+        if (!defaultValue) {
+            defaultValue = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, node, "default");
+        }
+        if (defaultValue) {
+            program.pushOp(type_spec_1.ReflectionOp.defaultValue, program.findOrAddStackEntry(this.parseDefaultValue((node.kind === SyntaxKind.ClassDeclaration ||
+                node.kind === SyntaxKind.ClassExpression
+                ? node?.name?.parent?.kind
+                : node.kind === SyntaxKind.PropertySignature ||
+                    node.kind === SyntaxKind.PropertyDeclaration
+                    ? node.type?.kind
+                    : node.kind) || SyntaxKind.StringKeyword, defaultValue.trim().replace(/^"/gm, "").replace(/"$/gm, ""))));
+        }
+    }
+    extractDescriptionReflection(program, node) {
+        if (!node || this.getReflectionConfig(this.sourceFile).level !== "verbose")
+            return;
+        const description = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, node, "description");
+        if (description) {
+            program.pushOp(type_spec_1.ReflectionOp.description, program.findOrAddStackEntry(description.trim().replace(/^"/gm, "").replace(/"$/gm, "")));
+        }
+    }
     extractPackStructOfType(node, program) {
         if (isParenthesizedTypeNode(node))
             return this.extractPackStructOfType(node.type, program);
@@ -998,7 +1155,8 @@ class ReflectionTransformer {
                             if (heritageClause.token === SyntaxKind.ExtendsKeyword) {
                                 //extends only supports extending one class
                                 const first = heritageClause.types[0];
-                                if (isExpressionWithTypeArguments(first) && first.typeArguments) {
+                                if (isExpressionWithTypeArguments(first) &&
+                                    first.typeArguments) {
                                     for (const typeArgument of first.typeArguments) {
                                         this.extractPackStructOfType(typeArgument, program);
                                     }
@@ -1016,9 +1174,9 @@ class ReflectionTransformer {
                     if (narrowed.name)
                         this.resolveTypeName((0, reflection_ast_js_1.getIdentifierName)(narrowed.name), program);
                     // for whatever reason: narrowed.name.parent !== narrowed. narrowed.name.parent has jsDoc, narrowed.name not.
-                    const description = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, narrowed.name?.parent, 'description');
-                    if (description)
-                        program.pushOp(type_spec_1.ReflectionOp.description, program.findOrAddStackEntry(description));
+                    this.extractDefaultValueReflection(program, narrowed.name?.parent);
+                    this.extractDescriptionReflection(program, narrowed.name?.parent);
+                    this.extractTagReflections(program, narrowed.name?.parent);
                 }
                 break;
             }
@@ -1089,8 +1247,9 @@ class ReflectionTransformer {
             }
             case SyntaxKind.TypeAliasDeclaration: {
                 let narrowed = node;
-                if (program.sourceFile && (0, reflection_ast_js_1.getNameAsString)(narrowed.name) === 'TypeAnnotation') {
-                    const attribute = (0, reflection_ast_js_1.extractJSDocAttribute)(program.sourceFile, narrowed, 'intrinsic');
+                if (program.sourceFile &&
+                    (0, reflection_ast_js_1.getNameAsString)(narrowed.name) === "TypeAnnotation") {
+                    const attribute = (0, reflection_ast_js_1.extractJSDocAttribute)(program.sourceFile, narrowed, "intrinsic");
                     if (attribute !== undefined) {
                         // TypeAnnotation<T> is like an intrinsic type, so we don't need to resolve it
                         narrowed = this.intrinsicMetaDeclaration;
@@ -1124,9 +1283,9 @@ class ReflectionTransformer {
                 if (isTypeLiteralNode(narrowed)) {
                     descriptionNode = narrowed.parent;
                 }
-                const description = descriptionNode && (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, descriptionNode, 'description');
-                if (description)
-                    program.pushOp(type_spec_1.ReflectionOp.description, program.findOrAddStackEntry(description));
+                this.extractDefaultValueReflection(program, descriptionNode);
+                this.extractDescriptionReflection(program, descriptionNode);
+                this.extractTagReflections(program, descriptionNode);
                 if (isInterfaceDeclaration(narrowed)) {
                     if (narrowed.name)
                         this.resolveTypeName((0, reflection_ast_js_1.getIdentifierName)(narrowed.name), program);
@@ -1193,13 +1352,20 @@ class ReflectionTransformer {
                     this.extractPackStructOfType(narrowed.type, program);
                     const name = (0, reflection_ast_js_1.getPropertyName)(this.f, narrowed.name);
                     program.pushOp(type_spec_1.ReflectionOp.propertySignature, program.findOrAddStackEntry(name));
-                    if (narrowed.questionToken)
+                    if (narrowed.questionToken) {
                         program.pushOp(type_spec_1.ReflectionOp.optional);
+                    }
                     if ((0, reflection_ast_js_1.hasModifier)(narrowed, SyntaxKind.ReadonlyKeyword))
                         program.pushOp(type_spec_1.ReflectionOp.readonly);
-                    const description = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, narrowed, 'description');
-                    if (description)
-                        program.pushOp(type_spec_1.ReflectionOp.description, program.findOrAddStackEntry(description));
+                    else {
+                        const readonly = (0, reflection_ast_js_1.extractJSDocBoolean)(this.sourceFile, narrowed, "readonly");
+                        if (readonly) {
+                            program.pushOp(type_spec_1.ReflectionOp.readonly);
+                        }
+                    }
+                    this.extractDefaultValueReflection(program, narrowed);
+                    this.extractDescriptionReflection(program, narrowed);
+                    this.extractTagReflections(program, narrowed);
                 }
                 else {
                     program.pushOp(type_spec_1.ReflectionOp.unknown);
@@ -1221,12 +1387,18 @@ class ReflectionTransformer {
                 else {
                     program.pushOp(type_spec_1.ReflectionOp.unknown);
                 }
-                const name = (0, reflection_ast_js_1.getPropertyName)(this.f, narrowed.name);
-                program.pushOp(type_spec_1.ReflectionOp.property, program.findOrAddStackEntry(name));
+                program.pushOp(type_spec_1.ReflectionOp.property, program.findOrAddStackEntry((0, reflection_ast_js_1.getPropertyName)(this.f, narrowed.name)));
                 if (narrowed.questionToken)
                     program.pushOp(type_spec_1.ReflectionOp.optional);
-                if ((0, reflection_ast_js_1.hasModifier)(narrowed, SyntaxKind.ReadonlyKeyword))
+                if ((0, reflection_ast_js_1.hasModifier)(narrowed, SyntaxKind.ReadonlyKeyword)) {
                     program.pushOp(type_spec_1.ReflectionOp.readonly);
+                }
+                else {
+                    const readonly = (0, reflection_ast_js_1.extractJSDocBoolean)(this.sourceFile, narrowed, "readonly");
+                    if (readonly) {
+                        program.pushOp(type_spec_1.ReflectionOp.readonly);
+                    }
+                }
                 if ((0, reflection_ast_js_1.hasModifier)(narrowed, SyntaxKind.PrivateKeyword))
                     program.pushOp(type_spec_1.ReflectionOp.private);
                 if ((0, reflection_ast_js_1.hasModifier)(narrowed, SyntaxKind.ProtectedKeyword))
@@ -1237,11 +1409,15 @@ class ReflectionTransformer {
                     program.pushOp(type_spec_1.ReflectionOp.static);
                 if (narrowed.initializer) {
                     //important to use Function, since it will be called using a different `this`
-                    program.pushOp(type_spec_1.ReflectionOp.defaultValue, program.findOrAddStackEntry(this.f.createFunctionExpression(undefined, undefined, undefined, undefined, undefined, undefined, this.f.createBlock([this.f.createReturnStatement(narrowed.initializer)]))));
+                    program.pushOp(type_spec_1.ReflectionOp.defaultValue, program.findOrAddStackEntry(this.f.createFunctionExpression(undefined, undefined, undefined, undefined, undefined, undefined, this.f.createBlock([
+                        this.f.createReturnStatement(narrowed.initializer)
+                    ]))));
                 }
-                const description = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, narrowed, 'description');
-                if (description)
-                    program.pushOp(type_spec_1.ReflectionOp.description, program.findOrAddStackEntry(description));
+                else {
+                    this.extractDefaultValueReflection(program, narrowed);
+                }
+                this.extractDescriptionReflection(program, narrowed);
+                this.extractTagReflections(program, narrowed);
                 break;
             }
             case SyntaxKind.ConditionalType: {
@@ -1250,8 +1426,10 @@ class ReflectionTransformer {
                 // Depending on whether this a distributive conditional type or not, it has to be moved to its own function
                 // my understanding of when a distributive conditional type is used is:
                 // 1. the `checkType` is a simple identifier (just `T`, no `[T]`, no `T | x`, no `{a: T}`, etc)
-                const distributiveOverIdentifier = isTypeReferenceNode(narrowed.checkType) && isIdentifier(narrowed.checkType.typeName)
-                    ? narrowed.checkType.typeName : undefined;
+                const distributiveOverIdentifier = isTypeReferenceNode(narrowed.checkType) &&
+                    isIdentifier(narrowed.checkType.typeName)
+                    ? narrowed.checkType.typeName
+                    : undefined;
                 if (distributiveOverIdentifier) {
                     program.pushFrame();
                     //first we add to the stack the origin type we distribute over.
@@ -1291,7 +1469,7 @@ class ReflectionTransformer {
                         program.pushVariable(typeParameterName, frame);
                         variable = program.findVariable(typeParameterName);
                         if (!variable)
-                            throw new Error('Could not find inserted infer variable');
+                            throw new Error("Could not find inserted infer variable");
                     }
                     program.pushOp(type_spec_1.ReflectionOp.infer, variable.frameOffset, variable.stackIndex);
                 }
@@ -1318,16 +1496,26 @@ class ReflectionTransformer {
                     return;
                 }
                 const name = isCallSignatureDeclaration(node)
-                    ? '' : isConstructorTypeNode(narrowed) || isConstructSignatureDeclaration(node)
-                    ? 'new' : isConstructorDeclaration(narrowed) ? 'constructor' : (0, reflection_ast_js_1.getPropertyName)(this.f, narrowed.name);
+                    ? ""
+                    : isConstructorTypeNode(narrowed) ||
+                        isConstructSignatureDeclaration(node)
+                        ? "new"
+                        : isConstructorDeclaration(narrowed)
+                            ? "constructor"
+                            : (0, reflection_ast_js_1.getPropertyName)(this.f, narrowed.name);
                 if (!narrowed.type && narrowed.parameters.length === 0 && !name)
                     return;
                 program.pushFrame();
                 for (let i = 0; i < narrowed.parameters.length; i++) {
                     const parameter = narrowed.parameters[i];
-                    const parameterName = isIdentifier(parameter.name) ? (0, reflection_ast_js_1.getNameAsString)(parameter.name) : 'param' + i;
+                    const parameterName = isIdentifier(parameter.name)
+                        ? (0, reflection_ast_js_1.getNameAsString)(parameter.name)
+                        : "param" + i;
                     const type = parameter.type
-                        ? (parameter.dotDotDotToken && isArrayTypeNode(parameter.type) ? parameter.type.elementType : parameter.type) : undefined;
+                        ? parameter.dotDotDotToken && isArrayTypeNode(parameter.type)
+                            ? parameter.type.elementType
+                            : parameter.type
+                        : undefined;
                     if (type) {
                         this.extractPackStructOfType(type, program);
                     }
@@ -1348,12 +1536,27 @@ class ReflectionTransformer {
                         program.pushOp(type_spec_1.ReflectionOp.protected);
                     if ((0, reflection_ast_js_1.hasModifier)(parameter, SyntaxKind.ReadonlyKeyword))
                         program.pushOp(type_spec_1.ReflectionOp.readonly);
-                    const description = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, parameter, 'description');
-                    if (description)
-                        program.pushOp(type_spec_1.ReflectionOp.description, program.findOrAddStackEntry(description));
-                    if (parameter.initializer && parameter.type && !getReceiveTypeParameter(parameter.type)) {
+                    else {
+                        let readonly = (0, reflection_ast_js_1.extractJSDocBoolean)(this.sourceFile, parameter, "readonly");
+                        if (readonly) {
+                            program.pushOp(type_spec_1.ReflectionOp.readonly);
+                        }
+                        else {
+                            readonly = (0, reflection_ast_js_1.extractJSDocBoolean)(this.sourceFile, narrowed, "readonly");
+                            if (readonly) {
+                                program.pushOp(type_spec_1.ReflectionOp.readonly);
+                            }
+                        }
+                    }
+                    if (parameter.initializer &&
+                        parameter.type &&
+                        !getReceiveTypeParameter(parameter.type)) {
                         program.pushOp(type_spec_1.ReflectionOp.defaultValue, program.findOrAddStackEntry(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, parameter.initializer)));
                     }
+                    else {
+                        this.extractDefaultValueReflection(program, parameter);
+                    }
+                    this.extractDescriptionReflection(program, parameter);
                 }
                 if (narrowed.type) {
                     this.extractPackStructOfType(narrowed.type, program);
@@ -1361,11 +1564,15 @@ class ReflectionTransformer {
                 else {
                     program.pushOp(type_spec_1.ReflectionOp.any);
                 }
-                program.pushOp(isCallSignatureDeclaration(node) ? type_spec_1.ReflectionOp.callSignature :
-                    isMethodSignature(narrowed) || isConstructSignatureDeclaration(narrowed)
+                program.pushOp(isCallSignatureDeclaration(node)
+                    ? type_spec_1.ReflectionOp.callSignature
+                    : isMethodSignature(narrowed) ||
+                        isConstructSignatureDeclaration(narrowed)
                         ? type_spec_1.ReflectionOp.methodSignature
-                        : isMethodDeclaration(narrowed) || isConstructorDeclaration(narrowed)
-                            ? type_spec_1.ReflectionOp.method : type_spec_1.ReflectionOp.function, program.findOrAddStackEntry(name));
+                        : isMethodDeclaration(narrowed) ||
+                            isConstructorDeclaration(narrowed)
+                            ? type_spec_1.ReflectionOp.method
+                            : type_spec_1.ReflectionOp.function, program.findOrAddStackEntry(name));
                 if (isMethodDeclaration(narrowed)) {
                     if ((0, reflection_ast_js_1.hasModifier)(narrowed, SyntaxKind.PrivateKeyword))
                         program.pushOp(type_spec_1.ReflectionOp.private);
@@ -1376,9 +1583,9 @@ class ReflectionTransformer {
                     if ((0, reflection_ast_js_1.hasModifier)(narrowed, SyntaxKind.StaticKeyword))
                         program.pushOp(type_spec_1.ReflectionOp.static);
                 }
-                const description = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, narrowed, 'description');
-                if (description)
-                    program.pushOp(type_spec_1.ReflectionOp.description, program.findOrAddStackEntry(description));
+                this.extractDefaultValueReflection(program, narrowed);
+                this.extractDescriptionReflection(program, narrowed);
+                this.extractTagReflections(program, narrowed);
                 program.popFrameImplicit();
                 break;
             }
@@ -1437,14 +1644,15 @@ class ReflectionTransformer {
                 for (const type of narrowed.members) {
                     const name = (0, reflection_ast_js_1.getPropertyName)(this.f, type.name);
                     program.pushOp(type_spec_1.ReflectionOp.enumMember, program.findOrAddStackEntry(name));
+                    this.extractDescriptionReflection(program, type);
                     if (type.initializer) {
                         program.pushOp(type_spec_1.ReflectionOp.defaultValue, program.findOrAddStackEntry(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, type.initializer)));
                     }
                 }
                 program.pushOp(type_spec_1.ReflectionOp.enum);
-                const description = (0, reflection_ast_js_1.extractJSDocAttribute)(this.sourceFile, narrowed, 'description');
-                if (description)
-                    program.pushOp(type_spec_1.ReflectionOp.description, program.findOrAddStackEntry(description));
+                this.extractDefaultValueReflection(program, narrowed);
+                this.extractDescriptionReflection(program, narrowed);
+                this.extractTagReflections(program, narrowed);
                 if (narrowed.name)
                     this.resolveTypeName((0, reflection_ast_js_1.getIdentifierName)(narrowed.name), program);
                 program.popFrameImplicit();
@@ -1478,7 +1686,9 @@ class ReflectionTransformer {
                 // }
                 if (isIdentifier(narrowed.exprName)) {
                     const resolved = this.resolveDeclaration(narrowed.exprName);
-                    if (resolved && (0, reflection_ast_js_1.findSourceFile)(resolved.declaration) !== this.sourceFile && resolved.importDeclaration) {
+                    if (resolved &&
+                        (0, reflection_ast_js_1.findSourceFile)(resolved.declaration) !== this.sourceFile &&
+                        resolved.importDeclaration) {
                         (0, reflection_ast_js_1.ensureImportIsEmitted)(resolved.importDeclaration, narrowed.exprName);
                     }
                 }
@@ -1546,14 +1756,14 @@ class ReflectionTransformer {
         //currently knownLibFilesForCompilerOptions from @typescript/vfs doesn't return correct lib files for esnext,
         //so we switch here to es2022 if bigger than es2022.
         const options = { ...this.compilerOptions };
-        if (options.target && (options.target === ScriptTarget.ESNext)) {
+        if (options.target && options.target === ScriptTarget.ESNext) {
             options.target = ScriptTarget.ES2022;
         }
         const libs = (0, vfs_1.knownLibFilesForCompilerOptions)(options, typescript_1.default);
         for (const lib of libs) {
             if (this.isExcluded(lib))
                 continue;
-            const sourceFile = this.resolver.resolveSourceFile(this.sourceFile, this.f.createStringLiteral('typescript/lib/' + lib.replace('.d.ts', '')));
+            const sourceFile = this.resolver.resolveSourceFile(this.sourceFile, this.f.createStringLiteral("typescript/lib/" + lib.replace(".d.ts", "")));
             if (!sourceFile)
                 continue;
             this.cache.globalSourceFiles.push(sourceFile);
@@ -1567,7 +1777,7 @@ class ReflectionTransformer {
     resolveDeclaration(typeName) {
         let current = typeName.parent;
         if (typeName.kind === SyntaxKind.QualifiedName)
-            return; //namespace access not supported yet, e.g. type a = Namespace.X;
+            return; // namespace access not supported yet, e.g. type a = Namespace.X;
         let declaration = undefined;
         while (current) {
             if ((0, reflection_ast_js_1.isNodeWithLocals)(current) && current.locals) {
@@ -1625,11 +1835,14 @@ class ReflectionTransformer {
             importDeclaration = declaration.parent;
         }
         if (importDeclaration) {
-            if (importDeclaration.importClause && importDeclaration.importClause.isTypeOnly)
+            if (importDeclaration.importClause &&
+                importDeclaration.importClause.isTypeOnly)
                 typeOnly = true;
             declaration = this.resolveImportSpecifier((0, reflection_ast_js_1.getEscapedText)(typeName), importDeclaration, this.sourceFile);
         }
-        if (declaration && declaration.kind === SyntaxKind.TypeParameter && declaration.parent.kind === SyntaxKind.TypeAliasDeclaration) {
+        if (declaration &&
+            declaration.kind === SyntaxKind.TypeParameter &&
+            declaration.parent.kind === SyntaxKind.TypeAliasDeclaration) {
             //for alias like `type MyAlias<T> = T`, `T` is returned from `typeChecker.getDeclaredTypeOfSymbol(symbol)`.
             declaration = declaration.parent;
         }
@@ -1639,14 +1852,14 @@ class ReflectionTransformer {
     }
     getDeclarationVariableName(typeName) {
         if (isIdentifier(typeName)) {
-            return this.f.createIdentifier('__Ω' + (0, reflection_ast_js_1.getIdentifierName)(typeName));
+            return this.f.createIdentifier("__Ω" + (0, reflection_ast_js_1.getIdentifierName)(typeName));
         }
         function joinQualifiedName(name) {
             if (isIdentifier(name))
                 return (0, reflection_ast_js_1.getIdentifierName)(name);
-            return joinQualifiedName(name.left) + '_' + (0, reflection_ast_js_1.getIdentifierName)(name.right);
+            return joinQualifiedName(name.left) + "_" + (0, reflection_ast_js_1.getIdentifierName)(name.right);
         }
-        return this.f.createIdentifier('__Ω' + joinQualifiedName(typeName));
+        return this.f.createIdentifier("__Ω" + joinQualifiedName(typeName));
     }
     /**
      * The semantic of isExcluded is different from checking if the fileName is part
@@ -1655,27 +1868,39 @@ class ReflectionTransformer {
      */
     isExcluded(fileName) {
         // getConfigResolver depends on the current source file, so we know the "exclude" option from deepkit config
-        const resolver = this.overriddenConfigResolver || (0, config_js_1.getConfigResolver)(this.cache.resolver, this.parseConfigHost, this.compilerOptions, this.sourceFile);
-        const res = (0, config_js_1.reflectionModeMatcher)({ reflection: 'default', exclude: resolver.config.exclude }, fileName);
-        return res === 'never';
+        const resolver = this.overriddenConfigResolver ||
+            (0, config_js_1.getConfigResolver)(this.cache.resolver, this.parseConfigHost, this.compilerOptions, this.sourceFile);
+        const res = (0, config_js_1.reflectionModeMatcher)({ reflection: "default", exclude: resolver.config.exclude }, fileName);
+        return res === "never";
     }
     extractPackStructOfTypeReference(type, program) {
-        const typeName = isTypeReferenceNode(type) ? type.typeName : (isIdentifier(type.expression) ? type.expression : undefined);
+        const typeName = isTypeReferenceNode(type)
+            ? type.typeName
+            : isIdentifier(type.expression)
+                ? type.expression
+                : undefined;
         if (!typeName) {
             program.pushOp(type_spec_1.ReflectionOp.any);
             return;
         }
-        if (isIdentifier(typeName) && (0, reflection_ast_js_1.getIdentifierName)(typeName) === 'InlineRuntimeType' && type.typeArguments && type.typeArguments[0] && isTypeQueryNode(type.typeArguments[0])) {
+        if (isIdentifier(typeName) &&
+            (0, reflection_ast_js_1.getIdentifierName)(typeName) === "InlineRuntimeType" &&
+            type.typeArguments &&
+            type.typeArguments[0] &&
+            isTypeQueryNode(type.typeArguments[0])) {
             const expression = (0, reflection_ast_js_1.serializeEntityNameAsExpression)(this.f, type.typeArguments[0].exprName);
             program.pushOp(type_spec_1.ReflectionOp.arg, program.pushStack(expression));
             return;
         }
-        if (isIdentifier(typeName) && (0, reflection_ast_js_1.getIdentifierName)(typeName) !== 'constructor' && this.knownClasses[(0, reflection_ast_js_1.getIdentifierName)(typeName)]) {
+        if (isIdentifier(typeName) &&
+            (0, reflection_ast_js_1.getIdentifierName)(typeName) !== "constructor" &&
+            this.knownClasses[(0, reflection_ast_js_1.getIdentifierName)(typeName)]) {
             const name = (0, reflection_ast_js_1.getIdentifierName)(typeName);
             const op = this.knownClasses[name];
             program.pushOp(op);
         }
-        else if (isIdentifier(typeName) && (0, reflection_ast_js_1.getIdentifierName)(typeName) === 'Promise') {
+        else if (isIdentifier(typeName) &&
+            (0, reflection_ast_js_1.getIdentifierName)(typeName) === "Promise") {
             //promise has always one sub type
             if (type.typeArguments && type.typeArguments[0]) {
                 this.extractPackStructOfType(type.typeArguments[0], program);
@@ -1685,10 +1910,13 @@ class ReflectionTransformer {
             }
             program.pushOp(type_spec_1.ReflectionOp.promise);
         }
-        else if (isIdentifier(typeName) && (0, reflection_ast_js_1.getIdentifierName)(typeName) === 'integer') {
+        else if (isIdentifier(typeName) &&
+            (0, reflection_ast_js_1.getIdentifierName)(typeName) === "integer") {
             program.pushOp(type_spec_1.ReflectionOp.numberBrand, type_spec_1.TypeNumberBrand.integer);
         }
-        else if (isIdentifier(typeName) && (0, reflection_ast_js_1.getIdentifierName)(typeName) !== 'constructor' && type_spec_1.TypeNumberBrand[(0, reflection_ast_js_1.getIdentifierName)(typeName)] !== undefined) {
+        else if (isIdentifier(typeName) &&
+            (0, reflection_ast_js_1.getIdentifierName)(typeName) !== "constructor" &&
+            type_spec_1.TypeNumberBrand[(0, reflection_ast_js_1.getIdentifierName)(typeName)] !== undefined) {
             program.pushOp(type_spec_1.ReflectionOp.numberBrand, type_spec_1.TypeNumberBrand[(0, reflection_ast_js_1.getIdentifierName)(typeName)]);
         }
         else {
@@ -1714,7 +1942,8 @@ class ReflectionTransformer {
                             let lastExpression;
                             let indexValue = 0;
                             for (const member of resolved.declaration.members) {
-                                if ((0, reflection_ast_js_1.getNameAsString)(member.name) === (0, reflection_ast_js_1.getNameAsString)(typeName.right)) {
+                                if ((0, reflection_ast_js_1.getNameAsString)(member.name) ===
+                                    (0, reflection_ast_js_1.getNameAsString)(typeName.right)) {
                                     if (member.initializer) {
                                         program.pushOp(type_spec_1.ReflectionOp.arg, program.pushStack(this.nodeConverter.toExpression(member.initializer)));
                                     }
@@ -1741,7 +1970,7 @@ class ReflectionTransformer {
                 }
                 //non-existing references are ignored.
                 program.pushOp(type_spec_1.ReflectionOp.never);
-                (0, debug_js_1.debug2)(`Could not resolve ${(0, reflection_ast_js_1.getNameAsString)(typeName)} in ${program.sourceFile?.fileName || 'intrinsic'}`);
+                (0, debug_js_1.debug2)(`Could not resolve ${(0, reflection_ast_js_1.getNameAsString)(typeName)} in ${program.sourceFile?.fileName || "intrinsic"}`);
                 return;
             }
             let declaration = resolved.declaration;
@@ -1751,7 +1980,9 @@ class ReflectionTransformer {
             //     debug2(`Could not find source file for ${getNameAsString(typeName)} in ${program.sourceFile.fileName}`);
             //     return;
             // }
-            const isGlobal = !declarationSourceFile || (resolved.importDeclaration === undefined && declarationSourceFile.fileName !== this.sourceFile.fileName);
+            const isGlobal = !declarationSourceFile ||
+                (resolved.importDeclaration === undefined &&
+                    declarationSourceFile.fileName !== this.sourceFile.fileName);
             const isFromImport = resolved.importDeclaration !== undefined;
             if (isVariableDeclaration(declaration)) {
                 if (declaration.type) {
@@ -1767,10 +1998,12 @@ class ReflectionTransformer {
                 //we can not infer from module declaration, so do `typeof T` in runtime
                 program.pushOp(type_spec_1.ReflectionOp.typeof, program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, (0, reflection_ast_js_1.serializeEntityNameAsExpression)(this.f, typeName))));
             }
-            else if (isTypeAliasDeclaration(declaration) || isInterfaceDeclaration(declaration) || isEnumDeclaration(declaration)) {
+            else if (isTypeAliasDeclaration(declaration) ||
+                isInterfaceDeclaration(declaration) ||
+                isEnumDeclaration(declaration)) {
                 //Set/Map are interface declarations
                 const name = (0, reflection_ast_js_1.getNameAsString)(typeName);
-                if (name === 'Array') {
+                if (name === "Array") {
                     if (type.typeArguments && type.typeArguments[0]) {
                         this.extractPackStructOfType(type.typeArguments[0], program);
                     }
@@ -1780,14 +2013,14 @@ class ReflectionTransformer {
                     program.pushOp(type_spec_1.ReflectionOp.array);
                     return;
                 }
-                else if (name === 'Function') {
+                else if (name === "Function") {
                     program.pushFrame();
-                    const index = program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, this.f.createIdentifier('Function')));
+                    const index = program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, this.f.createIdentifier("Function")));
                     program.pushOp(type_spec_1.ReflectionOp.functionReference, index);
                     program.popFrameImplicit();
                     return;
                 }
-                else if (name === 'Set') {
+                else if (name === "Set") {
                     if (type.typeArguments && type.typeArguments[0]) {
                         this.extractPackStructOfType(type.typeArguments[0], program);
                     }
@@ -1797,7 +2030,7 @@ class ReflectionTransformer {
                     program.pushOp(type_spec_1.ReflectionOp.set);
                     return;
                 }
-                else if (name === 'Map') {
+                else if (name === "Map") {
                     if (type.typeArguments && type.typeArguments[0]) {
                         this.extractPackStructOfType(type.typeArguments[0], program);
                     }
@@ -1815,8 +2048,10 @@ class ReflectionTransformer {
                 }
                 const runtimeTypeName = this.getDeclarationVariableName(typeName);
                 //to break recursion, we track which declaration has already been compiled
-                if (!this.compiledDeclarations.has(declaration) && !this.compileDeclarations.has(declaration)) {
-                    if (declarationSourceFile && this.isExcluded(declarationSourceFile.fileName)) {
+                if (!this.compiledDeclarations.has(declaration) &&
+                    !this.compileDeclarations.has(declaration)) {
+                    if (declarationSourceFile &&
+                        this.isExcluded(declarationSourceFile.fileName)) {
                         program.pushOp(type_spec_1.ReflectionOp.any);
                         return;
                     }
@@ -1824,7 +2059,7 @@ class ReflectionTransformer {
                         //we don't embed non-global imported declarations anymore, only globals
                         this.embedDeclarations.set(declaration, {
                             name: typeName,
-                            sourceFile: declarationSourceFile,
+                            sourceFile: declarationSourceFile
                         });
                     }
                     else if (isFromImport) {
@@ -1842,7 +2077,7 @@ class ReflectionTransformer {
                             // Note that if `found` is a TypeScript file (not d.ts), then we need to check using the fileName
                             // since it is part of the current transpilation phase. Thus, it depends on the
                             // current config + @reflection decorator instead.
-                            if (declarationSourceFile.fileName.endsWith('.d.ts')) {
+                            if (declarationSourceFile.fileName.endsWith(".d.ts")) {
                                 // Note that if import was something like `import { XY } from 'my-module'` then resolve()
                                 // returns the index.d.ts file of the module, not the actual file where XY is exported.
                                 // this is necessary since we emit an additional import `import { __ΩXY } from 'my-module'`,
@@ -1854,12 +2089,15 @@ class ReflectionTransformer {
                                     this.resolveTypeOnlyImport(typeName, program);
                                     return;
                                 }
-                                this.addImports.push({ identifier: runtimeTypeName, from: resolved.importDeclaration.moduleSpecifier });
+                                this.addImports.push({
+                                    identifier: runtimeTypeName,
+                                    from: resolved.importDeclaration.moduleSpecifier
+                                });
                             }
                             else {
                                 const reflection = this.getReflectionConfig(declarationSourceFile);
                                 // if this is never, then its generally disabled for this file
-                                if (reflection.mode === 'never') {
+                                if (reflection.mode === "never") {
                                     this.resolveTypeOnlyImport(typeName, program);
                                     return;
                                 }
@@ -1868,7 +2106,10 @@ class ReflectionTransformer {
                                     this.resolveTypeOnlyImport(typeName, program);
                                     return;
                                 }
-                                this.addImports.push({ identifier: runtimeTypeName, from: resolved.importDeclaration.moduleSpecifier });
+                                this.addImports.push({
+                                    identifier: runtimeTypeName,
+                                    from: resolved.importDeclaration.moduleSpecifier
+                                });
                             }
                         }
                     }
@@ -1881,11 +2122,13 @@ class ReflectionTransformer {
                         }
                         this.compileDeclarations.set(declaration, {
                             name: typeName,
-                            sourceFile: declarationSourceFile,
+                            sourceFile: declarationSourceFile
                         });
                     }
                 }
-                const index = program.pushStack(program.forNode === declaration ? 0 : this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, runtimeTypeName));
+                const index = program.pushStack(program.forNode === declaration
+                    ? 0
+                    : this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, runtimeTypeName));
                 if (type.typeArguments) {
                     for (const argument of type.typeArguments) {
                         this.extractPackStructOfType(argument, program);
@@ -1911,7 +2154,10 @@ class ReflectionTransformer {
                 //     this.extractPackStructOfType(declaration, program);
                 //     return;
             }
-            else if (isClassDeclaration(declaration) || isFunctionDeclaration(declaration) || isFunctionExpression(declaration) || isArrowFunction(declaration)) {
+            else if (isClassDeclaration(declaration) ||
+                isFunctionDeclaration(declaration) ||
+                isFunctionExpression(declaration) ||
+                isArrowFunction(declaration)) {
                 // classes, functions and arrow functions are handled differently, since they exist in runtime.
                 //if explicit `import {type T}`, we do not emit an import and instead push any
                 if (resolved.typeOnly) {
@@ -1921,7 +2167,8 @@ class ReflectionTransformer {
                 // If a function/class declarations comes from a built library (e.g. node_modules), then we
                 // declarationSourceFile is a d.ts file. We do know if they are built in runtime by checking `xy.__type`.
                 // Otherwise, check if the file will be built with runtime types.
-                const reflection = declarationSourceFile?.fileName.endsWith('.d.ts') || this.isWithReflection(program.sourceFile, declaration);
+                const reflection = declarationSourceFile?.fileName.endsWith(".d.ts") ||
+                    this.isWithReflection(program.sourceFile, declaration);
                 if (!reflection) {
                     this.resolveTypeOnlyImport(typeName, program);
                     return;
@@ -1934,9 +2181,13 @@ class ReflectionTransformer {
                         this.extractPackStructOfType(typeArgument, program);
                     }
                 }
-                const body = isIdentifier(typeName) ? typeName : this.createAccessorForEntityName(typeName);
+                const body = isIdentifier(typeName)
+                    ? typeName
+                    : this.createAccessorForEntityName(typeName);
                 const index = program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, body));
-                program.pushOp(isClassDeclaration(declaration) ? type_spec_1.ReflectionOp.classReference : type_spec_1.ReflectionOp.functionReference, index);
+                program.pushOp(isClassDeclaration(declaration)
+                    ? type_spec_1.ReflectionOp.classReference
+                    : type_spec_1.ReflectionOp.functionReference, index);
                 program.popFrameImplicit();
             }
             else if (isTypeParameterDeclaration(declaration)) {
@@ -1963,7 +2214,9 @@ class ReflectionTransformer {
                 return current.parent; //return the class
             if (current.kind === SyntaxKind.MethodDeclaration)
                 return current.parent; //return the class
-            if (current.kind === SyntaxKind.ArrowFunction || current.kind === SyntaxKind.FunctionDeclaration || current.kind === SyntaxKind.FunctionExpression)
+            if (current.kind === SyntaxKind.ArrowFunction ||
+                current.kind === SyntaxKind.FunctionDeclaration ||
+                current.kind === SyntaxKind.FunctionExpression)
                 return current;
             current = current.parent;
         }
@@ -2043,21 +2296,26 @@ class ReflectionTransformer {
     resolveTypeParameter(declaration, type, program) {
         //check if `type` was used in an expression. if so, we need to resolve it from runtime, otherwise we mark it as T
         const isUsedInFunction = isFunctionLike(declaration.parent);
-        const resolveRuntimeTypeParameter = (isUsedInFunction && program.isResolveFunctionParameters(declaration.parent)) || (this.needsToBeInferred(declaration, type));
+        const resolveRuntimeTypeParameter = (isUsedInFunction &&
+            program.isResolveFunctionParameters(declaration.parent)) ||
+            this.needsToBeInferred(declaration, type);
         if (resolveRuntimeTypeParameter) {
             //go through all parameters and look where `type.name.escapedText` is used (recursively).
             //go through all found parameters and replace `T` with `infer T` and embed its type in `typeof parameter extends Type<infer T> ? T : never`, if T is not directly used
             const argumentName = declaration.name.escapedText; //T
             const foundUsers = [];
             if (isUsedInFunction) {
-                for (const parameter of declaration.parent.parameters) {
+                for (const parameter of declaration.parent
+                    .parameters) {
                     if (!parameter.type)
                         continue;
                     //if deeply available?
                     let found = false;
                     const searchArgument = (node) => {
                         node = visitEachChild(node, searchArgument, this.context);
-                        if (isIdentifier(node) && node.escapedText === argumentName) {
+                        if (isTypeReferenceNode(node) &&
+                            isIdentifier(node.typeName) &&
+                            node.typeName.escapedText === argumentName) {
                             //transform to infer T
                             found = true;
                             node = this.f.createInferTypeNode(declaration);
@@ -2067,7 +2325,10 @@ class ReflectionTransformer {
                     if (isIdentifier(parameter.name)) {
                         const updatedParameterType = visitEachChild(parameter.type, searchArgument, this.context);
                         if (found) {
-                            foundUsers.push({ type: updatedParameterType, parameterName: parameter.name });
+                            foundUsers.push({
+                                type: updatedParameterType,
+                                parameterName: parameter.name
+                            });
                         }
                     }
                 }
@@ -2077,7 +2338,9 @@ class ReflectionTransformer {
                 if (foundUsers.length > 1) {
                     //todo: intersection start
                 }
-                const isReceiveType = foundUsers.find(v => isTypeReferenceNode(v.type) && isIdentifier(v.type.typeName) && (0, reflection_ast_js_1.getIdentifierName)(v.type.typeName) === 'ReceiveType');
+                const isReceiveType = foundUsers.find(v => isTypeReferenceNode(v.type) &&
+                    isIdentifier(v.type.typeName) &&
+                    (0, reflection_ast_js_1.getIdentifierName)(v.type.typeName) === "ReceiveType");
                 if (isReceiveType) {
                     // If it's used in ReceiveType<T>, then we can just use T directly without trying to infer it from ReceiveType<T> itself
                     program.pushOp(type_spec_1.ReflectionOp.inline, program.pushStack(isReceiveType.parameterName));
@@ -2133,20 +2396,25 @@ class ReflectionTransformer {
     findDeclarationInFile(sourceFile, declarationName) {
         if ((0, reflection_ast_js_1.isNodeWithLocals)(sourceFile) && sourceFile.locals) {
             const declarationSymbol = sourceFile.locals.get(declarationName);
-            if (declarationSymbol && declarationSymbol.declarations && declarationSymbol.declarations[0]) {
+            if (declarationSymbol &&
+                declarationSymbol.declarations &&
+                declarationSymbol.declarations[0]) {
                 return declarationSymbol.declarations[0];
             }
         }
         return;
     }
     resolveImportSpecifier(_declarationName, importOrExport, sourceFile) {
-        const declarationName = 'string' === typeof _declarationName ? _declarationName : (0, reflection_ast_js_1.getIdentifierName)(_declarationName);
-        if (!importOrExport.moduleSpecifier || !isStringLiteral(importOrExport.moduleSpecifier)) {
+        const declarationName = "string" === typeof _declarationName
+            ? _declarationName
+            : (0, reflection_ast_js_1.getIdentifierName)(_declarationName);
+        if (!importOrExport.moduleSpecifier ||
+            !isStringLiteral(importOrExport.moduleSpecifier)) {
             return;
         }
         const source = this.resolver.resolve(sourceFile, importOrExport);
         if (!source) {
-            (0, debug_js_1.debug)('module not found', importOrExport.moduleSpecifier.text, 'Is transpileOnly enabled? It needs to be disabled.');
+            (0, debug_js_1.debug)("module not found", importOrExport.moduleSpecifier.text, "Is transpileOnly enabled? It needs to be disabled.");
             return;
         }
         const declaration = this.findDeclarationInFile(source, declarationName);
@@ -2180,9 +2448,11 @@ class ReflectionTransformer {
                 for (const element of statement.exportClause.elements) {
                     //see if declarationName is exported
                     if ((0, reflection_ast_js_1.getEscapedText)(element.name) === declarationName) {
-                        if (!statement.moduleSpecifier || !isStringLiteral(statement.moduleSpecifier)) {
+                        if (!statement.moduleSpecifier ||
+                            !isStringLiteral(statement.moduleSpecifier)) {
                             // it's `export {Class}` and Class is either a Declaration or ImportSpecifier
-                            if (!statement.moduleSpecifier || !isStringLiteral(statement.moduleSpecifier)) {
+                            if (!statement.moduleSpecifier ||
+                                !isStringLiteral(statement.moduleSpecifier)) {
                                 // it's `export {Class};` and Class is either a Declaration or ImportSpecifier
                                 if ((0, reflection_ast_js_1.isNodeWithLocals)(sourceFile) && sourceFile.locals) {
                                     const found = sourceFile.locals.get(declarationName);
@@ -2190,7 +2460,9 @@ class ReflectionTransformer {
                                         const declaration = found.declarations[0];
                                         if (declaration && isImportSpecifier(declaration)) {
                                             const importOrExport = declaration.parent.parent.parent;
-                                            const found = this.resolveImportSpecifier(element.propertyName ? (0, reflection_ast_js_1.getEscapedText)(element.propertyName) : declarationName, importOrExport, sourceFile);
+                                            const found = this.resolveImportSpecifier(element.propertyName
+                                                ? (0, reflection_ast_js_1.getEscapedText)(element.propertyName)
+                                                : declarationName, importOrExport, sourceFile);
                                             if (found)
                                                 return found;
                                         }
@@ -2203,7 +2475,9 @@ class ReflectionTransformer {
                         }
                         else {
                             // it's `export {Class} from 'x'`
-                            const found = this.resolveImportSpecifier(element.propertyName ? (0, reflection_ast_js_1.getEscapedText)(element.propertyName) : declarationName, statement, sourceFile);
+                            const found = this.resolveImportSpecifier(element.propertyName
+                                ? (0, reflection_ast_js_1.getEscapedText)(element.propertyName)
+                                : declarationName, statement, sourceFile);
                             if (found)
                                 return found;
                         }
@@ -2259,7 +2533,7 @@ class ReflectionTransformer {
             return node;
         }
         const type = this.getTypeOfType(node);
-        const __type = this.f.createPropertyDeclaration(this.f.createModifiersFromModifierFlags(ModifierFlags.Static), '__type', undefined, undefined, type);
+        const __type = this.f.createPropertyDeclaration(this.f.createModifiersFromModifierFlags(ModifierFlags.Static), "__type", undefined, undefined, type);
         if (isClassDeclaration(node)) {
             // return node;
             return this.f.updateClassDeclaration(node, node.modifiers, node.name, node.typeParameters, node.heritageClauses, this.f.createNodeArray([...node.members, __type]));
@@ -2293,12 +2567,14 @@ class ReflectionTransformer {
             //since a new default export is created, we do not need ExportKey&DefaultKeyword on the function anymore,
             //but it should preserve all others like Async.
             const modifier = declaration.modifiers
-                ? declaration.modifiers.filter(v => v.kind !== SyntaxKind.ExportKeyword && v.kind !== SyntaxKind.DefaultKeyword && v.kind !== SyntaxKind.Decorator)
+                ? declaration.modifiers.filter(v => v.kind !== SyntaxKind.ExportKeyword &&
+                    v.kind !== SyntaxKind.DefaultKeyword &&
+                    v.kind !== SyntaxKind.Decorator)
                 : [];
             return this.f.createExportAssignment(undefined, undefined, this.wrapWithAssignType(this.f.createFunctionExpression(modifier, declaration.asteriskToken, declaration.name, declaration.typeParameters, declaration.parameters, declaration.type, declaration.body), encodedType));
         }
         const statements = [declaration];
-        statements.push(this.f.createExpressionStatement(this.f.createAssignment(this.f.createPropertyAccessExpression((0, reflection_ast_js_1.serializeEntityNameAsExpression)(this.f, declaration.name), '__type'), encodedType)));
+        statements.push(this.f.createExpressionStatement(this.f.createAssignment(this.f.createPropertyAccessExpression((0, reflection_ast_js_1.serializeEntityNameAsExpression)(this.f, declaration.name), "__type"), encodedType)));
         return statements;
     }
     /**
@@ -2320,10 +2596,7 @@ class ReflectionTransformer {
      */
     wrapWithAssignType(fn, type) {
         this.embedAssignType = true;
-        return this.f.createCallExpression(this.f.createIdentifier('__assignType'), undefined, [
-            fn,
-            type,
-        ]);
+        return this.f.createCallExpression(this.f.createIdentifier("__assignType"), undefined, [fn, type]);
     }
     /**
      * Checks if reflection was disabled/enabled in file via JSDoc attribute for a particular
@@ -2332,18 +2605,24 @@ class ReflectionTransformer {
     getExplicitReflectionMode(sourceFile, node) {
         let current = node;
         let reflectionComment = undefined;
-        while ('undefined' === typeof reflectionComment && current) {
-            const next = sourceFile && (0, reflection_ast_js_1.extractJSDocAttribute)(sourceFile, current, 'reflection');
-            if ('undefined' !== typeof next)
+        while ("undefined" === typeof reflectionComment && current) {
+            const next = sourceFile && (0, reflection_ast_js_1.extractJSDocAttribute)(sourceFile, current, "reflection");
+            if ("undefined" !== typeof next)
                 reflectionComment = next;
             current = current.parent;
         }
-        if (reflectionComment === '' || reflectionComment === 'true' || reflectionComment === 'default'
-            || reflectionComment === 'enabled' || reflectionComment === '1') {
+        if (reflectionComment === "" ||
+            reflectionComment === "true" ||
+            reflectionComment === "default" ||
+            reflectionComment === "enabled" ||
+            reflectionComment === "1") {
             return true;
         }
-        if (reflectionComment === 'false' || reflectionComment === 'disabled' || reflectionComment === 'never'
-            || reflectionComment === 'no' || reflectionComment === '0') {
+        if (reflectionComment === "false" ||
+            reflectionComment === "disabled" ||
+            reflectionComment === "never" ||
+            reflectionComment === "no" ||
+            reflectionComment === "0") {
             return false;
         }
         return;
@@ -2367,14 +2646,19 @@ class DeclarationTransformer extends ReflectionTransformer {
         // ConfigResolver resolves the whole config.
         // Since this.compilerOptions was already passed to Resolver, we update its values by reference.
         Object.assign(this.compilerOptions, configResolver.config.compilerOptions);
-        if (reflection.mode === 'never')
+        if (reflection.mode === "never")
             return sourceFile;
         const visitor = (node) => {
             node = visitEachChild(node, visitor, this.context);
-            if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node) || isEnumDeclaration(node)) && (0, reflection_ast_js_1.hasModifier)(node, SyntaxKind.ExportKeyword)) {
+            if ((isTypeAliasDeclaration(node) ||
+                isInterfaceDeclaration(node) ||
+                isEnumDeclaration(node)) &&
+                (0, reflection_ast_js_1.hasModifier)(node, SyntaxKind.ExportKeyword)) {
                 const reflection = this.isWithReflection(sourceFile, node);
                 if (reflection) {
-                    this.addExports.push({ identifier: (0, reflection_ast_js_1.getIdentifierName)(this.getDeclarationVariableName(node.name)) });
+                    this.addExports.push({
+                        identifier: (0, reflection_ast_js_1.getIdentifierName)(this.getDeclarationVariableName(node.name))
+                    });
                 }
             }
             return node;
@@ -2390,10 +2674,13 @@ class DeclarationTransformer extends ReflectionTransformer {
                 //export declare type __ΩXY = any[];
                 exports.push(this.f.createTypeAliasDeclaration([
                     this.f.createModifier(SyntaxKind.ExportKeyword),
-                    this.f.createModifier(SyntaxKind.DeclareKeyword),
+                    this.f.createModifier(SyntaxKind.DeclareKeyword)
                 ], this.f.createIdentifier(imp.identifier), undefined, this.f.createArrayTypeNode(this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword))));
             }
-            this.sourceFile = this.f.updateSourceFile(this.sourceFile, [...this.sourceFile.statements, ...exports]);
+            this.sourceFile = this.f.updateSourceFile(this.sourceFile, [
+                ...this.sourceFile.statements,
+                ...exports
+            ]);
         }
         this.sourceFile.deepkitDeclarationTransformed = true;
         return this.sourceFile;
@@ -2401,10 +2688,10 @@ class DeclarationTransformer extends ReflectionTransformer {
 }
 exports.DeclarationTransformer = DeclarationTransformer;
 let loaded = false;
-const cache = new Cache;
+const cache = new Cache();
 const transformer = function deepkitTransformer(context) {
     if (!loaded) {
-        (0, debug_js_1.debug)('@deepkit/type transformer loaded\n');
+        (0, debug_js_1.debug)("@deepkit/type transformer loaded\n");
         loaded = true;
     }
     cache.tick();
diff --git a/dist/cjs/src/compiler.js.map b/dist/cjs/src/compiler.js.map
index fca7028d005948ad927866d143cbda33c76c0d06..9214600f41a4c5d146736e99273ebcf6f7f2a658 100644
--- a/dist/cjs/src/compiler.js.map
+++ b/dist/cjs/src/compiler.js.map
@@ -1 +1 @@
-{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../src/compiler.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../src/compiler.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/src/config.d.ts b/dist/cjs/src/config.d.ts
index 5ecb084a52c3a741f271d3c5b53da772a7d33e3c..1d51361bf4f3747f4db2ad9345e09a6ac960fb89 100644
--- a/dist/cjs/src/config.d.ts
+++ b/dist/cjs/src/config.d.ts
@@ -1,5 +1,5 @@
-import type { CompilerOptions, ParseConfigHost } from 'typescript';
-import ts from 'typescript';
+import type { CompilerOptions, ParseConfigHost } from "typescript";
+import ts from "typescript";
 /**
  * Default means reflection is enabled for this file.
  * Never means the whole reflection is disabled for this file.
@@ -8,10 +8,12 @@ import ts from 'typescript';
  */
 export declare const reflectionModes: readonly ["default", "explicit", "never"];
 export type Mode = (typeof reflectionModes)[number];
-export type RawMode = Mode | '' | boolean | string | string[] | undefined;
+export type RawMode = Mode | "" | boolean | string | string[] | undefined;
 export declare function isObject(obj: any): obj is {
     [key: string]: any;
 };
+export declare const reflectionLevel: string[];
+export type Level = (typeof reflectionLevel)[number];
 /**
  * These are the values that can be in the tsconfig.json file.
  */
@@ -19,6 +21,16 @@ export interface TsConfigJson {
     extends?: string;
     compilerOptions?: any;
     reflection?: RawMode;
+    /**
+     * Defines the level of reflection to be used during the transpilation process.
+     *
+     * @remarks
+     * The level determines how much extra data is captured in the byte code for each type. This can be one of the following values:
+     * - `minimal` - Only the essential type information is captured.
+     * - `normal` - Additional type information is captured, including some contextual data.
+     * - `verbose` - All available type information is captured, including detailed contextual data.
+     */
+    reflectionLevel?: Level;
     deepkitCompilerOptions?: {
         /**
          * Either true to activate reflection for all files compiled using this tsconfig,
@@ -26,13 +38,23 @@ export interface TsConfigJson {
          * Globs/file paths can be prefixed with a ! to exclude them.
          */
         reflection?: RawMode;
+        /**
+         * Defines the level of reflection to be used during the transpilation process.
+         *
+         * @remarks
+         * The level determines how much extra data is captured in the byte code for each type. This can be one of the following values:
+         * - `minimal` - Only the essential type information is captured.
+         * - `normal` - Additional type information is captured, including some contextual data.
+         * - `verbose` - All available type information is captured, including detailed contextual data.
+         */
+        reflectionLevel?: Level;
         /**
          * If a tsconfig extends another tsconfig, this option defines how the reflection/exclude
          * options are merged. The default strategy is `merge`, which means that the reflection/exclude
          * options are merged with the parent tsconfig.json. If set to `replace`, the reflection/exclude
          * options are not merged, but the parent tsconfig.json is ignored.
          */
-        mergeStrategy?: 'merge' | 'replace';
+        mergeStrategy?: "merge" | "replace";
         /**
          * List of globs/file paths relative to this tsconfig.json
          * which are then excluded from the type compilation step.
@@ -52,22 +74,28 @@ export interface ReflectionConfig {
      * or a list of globs to match against.
      */
     reflection?: string[] | Mode;
+    /**
+     * Defines the level of reflection to be used during the transpilation process.
+     */
+    reflectionLevel?: Level;
 }
 export interface CurrentConfig extends ReflectionConfig {
     compilerOptions: ts.CompilerOptions;
-    mergeStrategy?: 'merge' | 'replace';
+    mergeStrategy?: "merge" | "replace";
     extends?: string;
 }
 export interface ResolvedConfig extends ReflectionConfig {
     path: string;
     compilerOptions: ts.CompilerOptions;
-    mergeStrategy: 'merge' | 'replace';
+    mergeStrategy: "merge" | "replace";
+    reflectionLevel: Level;
 }
 export declare function reflectionModeMatcher(config: ReflectionConfig, filePath: string): Mode;
 export declare function parseRawMode(mode: RawMode): string[] | Mode;
 export interface MatchResult {
     tsConfigPath: string;
     mode: (typeof reflectionModes)[number];
+    level: (typeof reflectionLevel)[number];
 }
 export declare const defaultExcluded: string[];
 export type Matcher = (path: string) => MatchResult;
diff --git a/dist/cjs/src/config.js b/dist/cjs/src/config.js
index c3aa25073462c7c10f640b94c97acc0c55e75949..4dd7f84077c18b0c79901d4c9b9d42262975e63b 100644
--- a/dist/cjs/src/config.js
+++ b/dist/cjs/src/config.js
@@ -3,13 +3,14 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.defaultExcluded = exports.reflectionModes = void 0;
+exports.defaultExcluded = exports.reflectionLevel = exports.reflectionModes = void 0;
 exports.isObject = isObject;
 exports.reflectionModeMatcher = reflectionModeMatcher;
 exports.parseRawMode = parseRawMode;
 exports.getConfigResolver = getConfigResolver;
 const path_1 = require("path");
 const typescript_1 = __importDefault(require("typescript"));
+const fs_1 = require("fs");
 const debug_js_1 = require("./debug.js");
 const resolver_js_1 = require("./resolver.js");
 /**
@@ -18,15 +19,16 @@ const resolver_js_1 = require("./resolver.js");
  * Explicit means that reflection is per default disabled for this file, but each symbol/type
  * in it is allowed to enable it using jsdoc `@reflection`.
  */
-exports.reflectionModes = ['default', 'explicit', 'never'];
+exports.reflectionModes = ["default", "explicit", "never"];
 // don't use from @deepkit/core since we don't want to have a dependency to @deepkit/core
 function isObject(obj) {
     if (!obj) {
         return false;
     }
-    return typeof obj === 'object' && !Array.isArray(obj);
+    return typeof obj === "object" && !Array.isArray(obj);
 }
-const defaultMergeStrategy = 'merge';
+const defaultMergeStrategy = "merge";
+exports.reflectionLevel = ["minimal", "normal", "verbose"];
 /**
  * Read config and parses under TypeScript specification.
  */
@@ -39,47 +41,52 @@ function readTsConfig(parseConfigHost, path) {
     const parsed = typescript_1.default.parseJsonConfigFileContent(configFile.config, parseConfigHost, (0, path_1.dirname)(path));
     // errors we ignore entirely
     const ignoredErrors = [
-        18003, // No inputs were found in config file.
+        18003 // No inputs were found in config file.
     ];
     // errors we soft ignore but still log
     const softErrors = [
-        18000, // Circularity detected while resolving configuration
+        18000 // Circularity detected while resolving configuration
     ];
     const errors = parsed.errors.filter(v => !ignoredErrors.includes(v.code));
     if (errors.length) {
-        (0, debug_js_1.debug)(`Failed to parse tsconfig ${path}: ${parsed.errors.map(v => v.messageText).join(', ')}`);
+        (0, debug_js_1.debug)(`Failed to parse tsconfig ${path}: ${parsed.errors.map(v => v.messageText).join(", ")}`);
     }
     const hardErrors = errors.filter(v => !softErrors.includes(v.code));
     if (hardErrors.length) {
         return;
     }
+    const json = (0, fs_1.readFileSync)(path, "utf8");
+    const tsconfig = JSON.parse(json);
     return Object.assign(configFile.config, {
         compilerOptions: parsed.options,
+        reflectionLevel: tsconfig.reflectionLevel
+            ? String(tsconfig.reflectionLevel)
+            : undefined
     });
 }
 function reflectionModeMatcher(config, filePath) {
     if (Array.isArray(config.exclude)) {
         if ((0, resolver_js_1.patternMatch)(filePath, config.exclude))
-            return 'never';
+            return "never";
     }
     if (Array.isArray(config.reflection)) {
-        return (0, resolver_js_1.patternMatch)(filePath, config.reflection) ? 'default' : 'never';
+        return (0, resolver_js_1.patternMatch)(filePath, config.reflection) ? "default" : "never";
     }
-    if (config.reflection === 'default' || config.reflection === 'explicit')
+    if (config.reflection === "default" || config.reflection === "explicit")
         return config.reflection;
-    return 'never';
+    return "never";
 }
 function ensureStringArray(value) {
     if (Array.isArray(value))
-        return value.map(v => '' + v);
-    if ('string' === typeof value)
+        return value.map(v => "" + v);
+    if ("string" === typeof value)
         return [value];
     return [];
 }
 function parseRawMode(mode) {
-    if ('boolean' === typeof mode)
-        return mode ? 'default' : 'never';
-    if (mode === 'default' || mode === 'explicit')
+    if ("boolean" === typeof mode)
+        return mode ? "default" : "never";
+    if (mode === "default" || mode === "explicit")
         return mode;
     return ensureStringArray(mode);
 }
@@ -87,30 +94,30 @@ function resolvePaths(baseDir, paths) {
     if (!paths || !Array.isArray(paths))
         return;
     for (let i = 0; i < paths.length; i++) {
-        if ('string' !== typeof paths[i])
+        if ("string" !== typeof paths[i])
             continue;
         if ((0, path_1.isAbsolute)(paths[i]))
             continue;
         let path = paths[i];
         let exclude = false;
-        if (path.startsWith('!')) {
+        if (path.startsWith("!")) {
             exclude = true;
             path = path.substring(1);
         }
         // we treat as relative if it starts with ./ or contains a /
-        if (path.startsWith('./') || path.includes('/')) {
+        if (path.startsWith("./") || path.includes("/")) {
             path = (0, path_1.join)(baseDir, path);
         }
         // ensure backslashes are forward slashes
-        path = path.replace(/\\/g, '/');
+        path = path.replace(/\\/g, "/");
         if (exclude)
-            path = '!' + path;
+            path = "!" + path;
         paths[i] = path;
     }
 }
 function appendPaths(strategy = defaultMergeStrategy, parent, existing) {
     // important to always return a new array, otherwise we would modify the parent array with subsequent calls
-    if (strategy === 'replace') {
+    if (strategy === "replace") {
         // replace means we stick with existing if it is defined, otherwise we use parent
         return [...(existing || parent)];
     }
@@ -122,24 +129,33 @@ function applyConfigValues(existing, parent, baseDir) {
     const parentReflection = isObject(parent.deepkitCompilerOptions)
         ? parent.deepkitCompilerOptions?.reflection
         : parent.reflection;
-    if (isObject(parent.deepkitCompilerOptions) && 'undefined' === typeof existing.mergeStrategy) {
+    const parentReflectionLevel = parent.deepkitCompilerOptions?.reflectionLevel ||
+        parent.reflectionLevel ||
+        parent.compilerOptions?.reflectionLevel;
+    if (isObject(parent.deepkitCompilerOptions) &&
+        "undefined" === typeof existing.mergeStrategy) {
         existing.mergeStrategy = parent.deepkitCompilerOptions.mergeStrategy;
     }
-    if ('undefined' !== typeof parentReflection) {
+    if ("undefined" !== typeof parentReflection) {
         const next = parseRawMode(parentReflection);
-        if ('undefined' === typeof existing.reflection) {
+        if ("undefined" === typeof existing.reflection) {
             existing.reflection = next;
         }
-        else if ('string' === typeof existing.reflection) {
+        else if ("string" === typeof existing.reflection) {
             // if existing is already a string, there is nothing to inherit from parent
         }
         else if (Array.isArray(next) && Array.isArray(existing.reflection)) {
             existing.reflection = appendPaths(existing.mergeStrategy, next, existing.reflection);
         }
-        else if ('string' === typeof next && Array.isArray(existing.reflection)) {
+        else if ("string" === typeof next && Array.isArray(existing.reflection)) {
             // debug(`Warning: config parent tsconfig has reflection=${next}, but child tsconfig has reflection=${JSON.stringify(existing.reflection)}. reflection stays as array.`);
         }
     }
+    if ("undefined" !== typeof parentReflectionLevel) {
+        if ("undefined" === typeof existing.reflectionLevel) {
+            existing.reflectionLevel = parentReflectionLevel;
+        }
+    }
     if (isObject(parent.deepkitCompilerOptions)) {
         if (`undefined` !== typeof parent.deepkitCompilerOptions.exclude) {
             const next = ensureStringArray(parent.deepkitCompilerOptions.exclude);
@@ -157,27 +173,32 @@ function applyConfigValues(existing, parent, baseDir) {
     existing.extends = parent.extends;
 }
 exports.defaultExcluded = [
-    'lib.dom*.d.ts',
-    '*typedarrays.d.ts',
-    'lib.webworker*.d.ts',
-    'lib.decorator*.d.ts',
-    'lib.es2015.proxy.d.ts',
-    'lib.es2020.sharedmemory.d.ts',
-    'lib.es2015.core.d.ts',
+    "lib.dom*.d.ts",
+    "*typedarrays.d.ts",
+    "lib.webworker*.d.ts",
+    "lib.decorator*.d.ts",
+    "lib.es2015.proxy.d.ts",
+    "lib.es2020.sharedmemory.d.ts",
+    "lib.es2015.core.d.ts"
 ];
-function getConfigResolver(cache, host, compilerOptions, sourceFile, tsConfigPath = '') {
+function getConfigResolver(cache, host, compilerOptions, sourceFile, tsConfigPath = "") {
     let config = {
         // We use the parameter `compilerOptions` only for compilerOptions.configFilePath.
         // We load the compilerOptions manually since transformers don't get the full picture
         // (path aliases are missing for example).
         // It's important to load compilerOptions manually if there is compilerOptions.configFilePath
         // since not all build tools provide the full compilerOptions.
-        compilerOptions: {},
+        compilerOptions: {}
     };
-    tsConfigPath = tsConfigPath || ('string' === typeof compilerOptions.configFilePath ? compilerOptions.configFilePath : '');
+    tsConfigPath =
+        tsConfigPath ||
+            ("string" === typeof compilerOptions.configFilePath
+                ? compilerOptions.configFilePath
+                : "");
     if (tsConfigPath) {
-        if (cache[tsConfigPath])
+        if (cache[tsConfigPath]) {
             return cache[tsConfigPath];
+        }
         const configFile = readTsConfig(host, tsConfigPath);
         if (configFile)
             applyConfigValues(config, configFile, (0, path_1.dirname)(tsConfigPath));
@@ -193,7 +214,9 @@ function getConfigResolver(cache, host, compilerOptions, sourceFile, tsConfigPat
             (0, debug_js_1.debug2)(`No tsConfigPath|compilerOptions.configFilePath provided. Manually searching for tsconfig.json in ${baseDir} returned ${configPath}`);
             if (configPath) {
                 //configPath might be relative to passed basedir
-                tsConfigPath = (0, path_1.isAbsolute)(configPath) ? configPath : (0, path_1.join)(baseDir, configPath);
+                tsConfigPath = (0, path_1.isAbsolute)(configPath)
+                    ? configPath
+                    : (0, path_1.join)(baseDir, configPath);
             }
         }
         if (tsConfigPath) {
@@ -226,7 +249,9 @@ function getConfigResolver(cache, host, compilerOptions, sourceFile, tsConfigPat
     else {
         throw new Error(`No tsconfig found for ${sourceFile?.fileName}, that is weird. Either provide a tsconfig or compilerOptions.configFilePath`);
     }
-    config.exclude = config.exclude ? [...exports.defaultExcluded, ...config.exclude] : [...exports.defaultExcluded];
+    config.exclude = config.exclude
+        ? [...exports.defaultExcluded, ...config.exclude]
+        : [...exports.defaultExcluded];
     config.compilerOptions.configFilePath = tsConfigPath;
     const resolvedConfig = {
         path: tsConfigPath,
@@ -234,14 +259,19 @@ function getConfigResolver(cache, host, compilerOptions, sourceFile, tsConfigPat
         compilerOptions: Object.assign(config.compilerOptions, compilerOptions),
         exclude: config.exclude,
         reflection: config.reflection,
-        mergeStrategy: config.mergeStrategy || defaultMergeStrategy,
+        reflectionLevel: config.reflectionLevel ||
+            (config.compilerOptions?.reflectionLevel
+                ? String(config.compilerOptions?.reflectionLevel)
+                : undefined) ||
+            "normal",
+        mergeStrategy: config.mergeStrategy || defaultMergeStrategy
     };
     if ((0, debug_js_1.isDebug)()) {
         (0, debug_js_1.debug)(`Found config ${resolvedConfig.path}:\nreflection:`, resolvedConfig.reflection, `\nexclude:`, resolvedConfig.exclude, `\npaths:`, resolvedConfig.compilerOptions.paths);
     }
     const match = (path) => {
         const mode = reflectionModeMatcher(config, path);
-        return { mode, tsConfigPath };
+        return { mode, tsConfigPath, level: resolvedConfig.reflectionLevel };
     };
     return (cache[tsConfigPath] = { config: resolvedConfig, match });
 }
diff --git a/dist/cjs/src/config.js.map b/dist/cjs/src/config.js.map
index fb04d209e8cfa957d0d628e36321f8602e932168..186367ff369b7d27bfb4b37ed5ec6e6ab8b3769a 100644
--- a/dist/cjs/src/config.js.map
+++ b/dist/cjs/src/config.js.map
@@ -1 +1 @@
-{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../src/config.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../src/config.ts"],"names":[],"mappings":";;;;;;AAmBA,4BAKC;AAiJD,sDAcC;AAQD,oCAIC;AA8HD,8CAwHC;AAzbD,+BAAiD;AAEjD,4DAA4B;AAE5B,2BAAkC;AAClC,yCAAoD;AACpD,+CAA6C;AAE7C;;;;;GAKG;AACU,QAAA,eAAe,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAU,CAAC;AAIzE,yFAAyF;AACzF,SAAgB,QAAQ,CAAC,GAAQ;IAC/B,IAAI,CAAC,GAAG,EAAE,CAAC;QACT,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACxD,CAAC;AAED,MAAM,oBAAoB,GAAG,OAAO,CAAC;AAExB,QAAA,eAAe,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;AA2DhE;;GAEG;AACH,SAAS,YAAY,CACnB,eAAgC,EAChC,IAAY;IAEZ,MAAM,UAAU,GAAG,oBAAE,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAY,EAAE,EAAE,CAC1D,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAC/B,CAAC;IACF,IAAI,UAAU,CAAC,KAAK,EAAE,CAAC;QACrB,IAAA,gBAAK,EAAC,2BAA2B,IAAI,KAAK,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAC1E,OAAO;IACT,CAAC;IAED,MAAM,MAAM,GAAG,oBAAE,CAAC,0BAA0B,CAC1C,UAAU,CAAC,MAAM,EACjB,eAAe,EACf,IAAA,cAAO,EAAC,IAAI,CAAC,CACd,CAAC;IACF,4BAA4B;IAC5B,MAAM,aAAa,GAAG;QACpB,KAAK,CAAC,uCAAuC;KAC9C,CAAC;IACF,sCAAsC;IACtC,MAAM,UAAU,GAAa;QAC3B,KAAK,CAAC,qDAAqD;KAC5D,CAAC;IACF,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1E,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;QAClB,IAAA,gBAAK,EACH,4BAA4B,IAAI,KAAK,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CACxF,CAAC;IACJ,CAAC;IACD,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACpE,IAAI,UAAU,CAAC,MAAM,EAAE,CAAC;QACtB,OAAO;IACT,CAAC;IAED,MAAM,IAAI,GAAG,IAAA,iBAAY,EAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAElC,OAAO,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE;QACtC,eAAe,EAAE,MAAM,CAAC,OAAO;QAC/B,eAAe,EAAE,QAAQ,CAAC,eAAe;YACvC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC;YAClC,CAAC,CAAC,SAAS;KACd,CAAC,CAAC;AACL,CAAC;AAkCD,SAAgB,qBAAqB,CACnC,MAAwB,EACxB,QAAgB;IAEhB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;QAClC,IAAI,IAAA,0BAAY,EAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAC;YAAE,OAAO,OAAO,CAAC;IAC7D,CAAC;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;QACrC,OAAO,IAAA,0BAAY,EAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;IACzE,CAAC;IACD,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,IAAI,MAAM,CAAC,UAAU,KAAK,UAAU;QACrE,OAAO,MAAM,CAAC,UAAU,CAAC;IAE3B,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,iBAAiB,CAAC,KAAU;IACnC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACxD,IAAI,QAAQ,KAAK,OAAO,KAAK;QAAE,OAAO,CAAC,KAAK,CAAC,CAAC;IAC9C,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,SAAgB,YAAY,CAAC,IAAa;IACxC,IAAI,SAAS,KAAK,OAAO,IAAI;QAAE,OAAO,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;IACjE,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,UAAU;QAAE,OAAO,IAAI,CAAC;IAC3D,OAAO,iBAAiB,CAAC,IAAI,CAAC,CAAC;AACjC,CAAC;AAED,SAAS,YAAY,CAAC,OAAe,EAAE,KAAU;IAC/C,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;QAAE,OAAO;IAE5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,IAAI,QAAQ,KAAK,OAAO,KAAK,CAAC,CAAC,CAAC;YAAE,SAAS;QAC3C,IAAI,IAAA,iBAAU,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAAE,SAAS;QACnC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;YACzB,OAAO,GAAG,IAAI,CAAC;YACf,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;QAED,4DAA4D;QAC5D,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;YAChD,IAAI,GAAG,IAAA,WAAI,EAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC7B,CAAC;QACD,yCAAyC;QACzC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAChC,IAAI,OAAO;YAAE,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;QAC/B,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAClB,CAAC;AACH,CAAC;AAED,SAAS,WAAW,CAClB,WAAgC,oBAAoB,EACpD,MAAgB,EAChB,QAAmB;IAEnB,2GAA2G;IAC3G,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;QAC3B,iFAAiF;QACjF,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,IAAI,CAAC,QAAQ;QAAE,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC;IAClC,OAAO,CAAC,GAAG,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC;AAClC,CAAC;AAED,SAAS,iBAAiB,CACxB,QAAuB,EACvB,MAAoB,EACpB,OAAe;IAEf,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,sBAAsB,CAAC;QAC9D,CAAC,CAAC,MAAM,CAAC,sBAAsB,EAAE,UAAU;QAC3C,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;IACtB,MAAM,qBAAqB,GACzB,MAAM,CAAC,sBAAsB,EAAE,eAAe;QAC9C,MAAM,CAAC,eAAe;QACtB,MAAM,CAAC,eAAe,EAAE,eAAe,CAAC;IAE1C,IACE,QAAQ,CAAC,MAAM,CAAC,sBAAsB,CAAC;QACvC,WAAW,KAAK,OAAO,QAAQ,CAAC,aAAa,EAC7C,CAAC;QACD,QAAQ,CAAC,aAAa,GAAG,MAAM,CAAC,sBAAsB,CAAC,aAAa,CAAC;IACvE,CAAC;IAED,IAAI,WAAW,KAAK,OAAO,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAC5C,IAAI,WAAW,KAAK,OAAO,QAAQ,CAAC,UAAU,EAAE,CAAC;YAC/C,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;QAC7B,CAAC;aAAM,IAAI,QAAQ,KAAK,OAAO,QAAQ,CAAC,UAAU,EAAE,CAAC;YACnD,2EAA2E;QAC7E,CAAC;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YACrE,QAAQ,CAAC,UAAU,GAAG,WAAW,CAC/B,QAAQ,CAAC,aAAa,EACtB,IAAI,EACJ,QAAQ,CAAC,UAAU,CACpB,CAAC;QACJ,CAAC;aAAM,IAAI,QAAQ,KAAK,OAAO,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YAC1E,yKAAyK;QAC3K,CAAC;IACH,CAAC;IAED,IAAI,WAAW,KAAK,OAAO,qBAAqB,EAAE,CAAC;QACjD,IAAI,WAAW,KAAK,OAAO,QAAQ,CAAC,eAAe,EAAE,CAAC;YACpD,QAAQ,CAAC,eAAe,GAAG,qBAAqB,CAAC;QACnD,CAAC;IACH,CAAC;IAED,IAAI,QAAQ,CAAC,MAAM,CAAC,sBAAsB,CAAC,EAAE,CAAC;QAC5C,IAAI,WAAW,KAAK,OAAO,MAAM,CAAC,sBAAsB,CAAC,OAAO,EAAE,CAAC;YACjE,MAAM,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;YACtE,QAAQ,CAAC,OAAO,GAAG,WAAW,CAC5B,QAAQ,CAAC,aAAa,EACtB,IAAI,EACJ,QAAQ,CAAC,OAAO,CACjB,CAAC;QACJ,CAAC;IACH,CAAC;IAED,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC3C,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;IAExC,IAAI,MAAM,CAAC,eAAe,EAAE,CAAC;QAC3B,2DAA2D;QAC3D,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACvD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC;QAClE,CAAC;IACH,CAAC;IACD,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AACpC,CAAC;AAQY,QAAA,eAAe,GAAG;IAC7B,eAAe;IACf,mBAAmB;IACnB,qBAAqB;IACrB,qBAAqB;IACrB,uBAAuB;IACvB,8BAA8B;IAC9B,sBAAsB;CACvB,CAAC;AAMF,SAAgB,iBAAiB,CAC/B,KAA4B,EAC5B,IAAqB,EACrB,eAAgC,EAChC,UAAgC,EAChC,eAAuB,EAAE;IAEzB,IAAI,MAAM,GAAkB;QAC1B,kFAAkF;QAClF,qFAAqF;QACrF,0CAA0C;QAC1C,6FAA6F;QAC7F,8DAA8D;QAC9D,eAAe,EAAE,EAAE;KACpB,CAAC;IAEF,YAAY;QACV,YAAY;YACZ,CAAC,QAAQ,KAAK,OAAO,eAAe,CAAC,cAAc;gBACjD,CAAC,CAAC,eAAe,CAAC,cAAc;gBAChC,CAAC,CAAC,EAAE,CAAC,CAAC;IAEV,IAAI,YAAY,EAAE,CAAC;QACjB,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC;YACxB,OAAO,KAAK,CAAC,YAAY,CAAC,CAAC;QAC7B,CAAC;QAED,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QACpD,IAAI,UAAU;YACZ,iBAAiB,CAAC,MAAM,EAAE,UAAU,EAAE,IAAA,cAAO,EAAC,YAAY,CAAC,CAAC,CAAC;IACjE,CAAC;SAAM,CAAC;QACN,IAAI,CAAC,YAAY,IAAI,UAAU,EAAE,CAAC;YAChC,uCAAuC;YACvC,MAAM,OAAO,GAAG,IAAA,cAAO,EAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC7C,MAAM,UAAU,GAAG,oBAAE,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;gBACnD,IAAI,GAAG,IAAA,iBAAU,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAA,WAAI,EAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBACrD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,IAAA,iBAAM,EACJ,oGAAoG,OAAO,aAAa,UAAU,EAAE,CACrI,CAAC;YACF,IAAI,UAAU,EAAE,CAAC;gBACf,gDAAgD;gBAChD,YAAY,GAAG,IAAA,iBAAU,EAAC,UAAU,CAAC;oBACnC,CAAC,CAAC,UAAU;oBACZ,CAAC,CAAC,IAAA,WAAI,EAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YAChC,CAAC;QACH,CAAC;QAED,IAAI,YAAY,EAAE,CAAC;YACjB,IAAI,KAAK,CAAC,YAAY,CAAC;gBAAE,OAAO,KAAK,CAAC,YAAY,CAAC,CAAC;YACpD,gDAAgD;YAChD,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YACpD,IAAI,UAAU;gBACZ,iBAAiB,CAAC,MAAM,EAAE,UAAU,EAAE,IAAA,cAAO,EAAC,YAAY,CAAC,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED,IAAI,YAAY,EAAE,CAAC;QACjB,IAAI,QAAQ,GAAG,IAAA,cAAO,EAAC,YAAY,CAAC,CAAC;QACrC,IAAI,aAAa,GAAG,MAAM,CAAC;QAC3B,MAAM,IAAI,GAAG,IAAI,GAAG,EAAU,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACvB,+FAA+F;QAC/F,OAAO,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,MAAM,IAAI,GAAG,IAAA,WAAI,EAAC,QAAQ,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC;YACnD,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;gBAAE,MAAM;YAC1B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACf,MAAM,UAAU,GAAG,oBAAE,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAY,EAAE,EAAE,CAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CACpB,CAAC;YAEF,IAAI,CAAC,UAAU;gBAAE,MAAM;YACvB,QAAQ,GAAG,IAAA,cAAO,EAAC,IAAI,CAAC,CAAC;YACzB,iBAAiB,CAAC,aAAa,EAAE,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAChE,CAAC;IACH,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,KAAK,CACb,yBAAyB,UAAU,EAAE,QAAQ,8EAA8E,CAC5H,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;QAC7B,CAAC,CAAC,CAAC,GAAG,uBAAe,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC;QACzC,CAAC,CAAC,CAAC,GAAG,uBAAe,CAAC,CAAC;IAEzB,MAAM,CAAC,eAAe,CAAC,cAAc,GAAG,YAAY,CAAC;IAErD,MAAM,cAAc,GAAmB;QACrC,IAAI,EAAE,YAAY;QAClB,uEAAuE;QACvE,eAAe,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,eAAe,CAAC;QACvE,OAAO,EAAE,MAAM,CAAC,OAAO;QACvB,UAAU,EAAE,MAAM,CAAC,UAAU;QAC7B,eAAe,EACb,MAAM,CAAC,eAAe;YACtB,CAAC,MAAM,CAAC,eAAe,EAAE,eAAe;gBACtC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,eAAe,CAAC;gBACjD,CAAC,CAAC,SAAS,CAAC;YACd,QAAQ;QACV,aAAa,EAAE,MAAM,CAAC,aAAa,IAAI,oBAAoB;KAC5D,CAAC;IAEF,IAAI,IAAA,kBAAO,GAAE,EAAE,CAAC;QACd,IAAA,gBAAK,EACH,gBAAgB,cAAc,CAAC,IAAI,gBAAgB,EACnD,cAAc,CAAC,UAAU,EACzB,YAAY,EACZ,cAAc,CAAC,OAAO,EACtB,UAAU,EACV,cAAc,CAAC,eAAe,CAAC,KAAK,CACrC,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,GAAG,CAAC,IAAY,EAAE,EAAE;QAC7B,MAAM,IAAI,GAAG,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACjD,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,cAAc,CAAC,eAAe,EAAE,CAAC;IACvE,CAAC,CAAC;IAEF,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;AACnE,CAAC"}
\ No newline at end of file
diff --git a/dist/cjs/src/loader.d.ts b/dist/cjs/src/loader.d.ts
index 3c17744c605f664b3ab42a2e3c92cd4b160e7e4e..4b6bba7807d3a10823d188ec9bd15b4a9735ae99 100644
--- a/dist/cjs/src/loader.d.ts
+++ b/dist/cjs/src/loader.d.ts
@@ -1,6 +1,6 @@
-import type { CompilerOptions, SourceFile } from 'typescript';
-import ts from 'typescript';
-import { Cache } from './compiler.js';
+import type { CompilerOptions, SourceFile } from "typescript";
+import ts from "typescript";
+import { Cache } from "./compiler.js";
 export declare class DeepkitLoader {
     protected options: CompilerOptions;
     protected host: ts.CompilerHost;
diff --git a/dist/cjs/src/loader.js b/dist/cjs/src/loader.js
index 06d57b9764ad12de390c2b63701d59491402817d..f38a48dbbc014277152d1b20d9ba4d8109f4ac0d 100644
--- a/dist/cjs/src/loader.js
+++ b/dist/cjs/src/loader.js
@@ -10,12 +10,12 @@ class DeepkitLoader {
     constructor() {
         this.options = {
             allowJs: true,
-            declaration: false,
+            declaration: false
         };
         this.host = typescript_1.default.createCompilerHost(this.options);
         this.program = typescript_1.default.createProgram([], this.options, this.host);
         this.printer = typescript_1.default.createPrinter({ newLine: typescript_1.default.NewLineKind.LineFeed });
-        this.cache = new compiler_js_1.Cache;
+        this.cache = new compiler_js_1.Cache();
         this.knownFiles = {};
         this.sourceFiles = {};
         const originReadFile = this.host.readFile;
@@ -25,8 +25,7 @@ class DeepkitLoader {
             return originReadFile.call(this.host, fileName);
         };
         //the program should not write any files
-        this.host.writeFile = () => {
-        };
+        this.host.writeFile = () => { };
         const originalGetSourceFile = this.host.getSourceFile;
         this.host.getSourceFile = (fileName, languageVersion, onError, shouldCreateNewSourceFile) => {
             if (this.sourceFiles[fileName])
@@ -36,11 +35,16 @@ class DeepkitLoader {
     }
     transform(source, path) {
         this.knownFiles[path] = source;
-        const sourceFile = typescript_1.default.createSourceFile(path, source, typescript_1.default.ScriptTarget.ESNext, true, path.endsWith('.tsx') ? typescript_1.default.ScriptKind.TSX : typescript_1.default.ScriptKind.TS);
+        const sourceFile = typescript_1.default.createSourceFile(path, source, typescript_1.default.ScriptTarget.ESNext, true, path.endsWith(".tsx") ? typescript_1.default.ScriptKind.TSX : typescript_1.default.ScriptKind.TS);
         let newSource = source;
         typescript_1.default.transform(sourceFile, [
             (context) => {
-                const transformer = new compiler_js_1.ReflectionTransformer(context, this.cache).forHost(this.host).withReflection({ reflection: 'default' });
+                const transformer = new compiler_js_1.ReflectionTransformer(context, this.cache)
+                    .forHost(this.host)
+                    .withReflection({
+                    reflection: "default",
+                    reflectionLevel: "normal"
+                });
                 return (node) => {
                     const sourceFile = transformer.transformSourceFile(node);
                     newSource = this.printer.printNode(typescript_1.default.EmitHint.SourceFile, sourceFile, sourceFile);
diff --git a/dist/cjs/src/loader.js.map b/dist/cjs/src/loader.js.map
index 415b877a4075c67c152a9bb55f82a67953154de1..1f28253c084e65ff8a15255a1cac785a01d34071 100644
--- a/dist/cjs/src/loader.js.map
+++ b/dist/cjs/src/loader.js.map
@@ -1 +1 @@
-{"version":3,"file":"loader.js","sourceRoot":"","sources":["../../../src/loader.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"loader.js","sourceRoot":"","sources":["../../../src/loader.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/src/reflection-ast.d.ts b/dist/cjs/src/reflection-ast.d.ts
index fb953d5353e83e179a07ab010d7ccda21bb76111..9b6a84cce9cb6c9b51a45c5575d37a9157e6827d 100644
--- a/dist/cjs/src/reflection-ast.d.ts
+++ b/dist/cjs/src/reflection-ast.d.ts
@@ -1,13 +1,17 @@
-import ts, { __String, ArrowFunction, BinaryExpression, EntityName, Expression, Identifier, ImportDeclaration, JSDoc, JSDocImportTag, ModifierLike, Node, NodeArray, NodeFactory, PrivateIdentifier, PropertyAccessExpression, PropertyName, QualifiedName, StringLiteral, SymbolTable } from 'typescript';
-import { SourceFile } from './ts-types.js';
+import ts, { __String, ArrowFunction, BinaryExpression, EntityName, Expression, Identifier, ImportDeclaration, JSDoc, JSDocImportTag, ModifierLike, Node, NodeArray, NodeFactory, PrivateIdentifier, PropertyAccessExpression, PropertyName, QualifiedName, StringLiteral, SymbolTable } from "typescript";
+import { SourceFile } from "./ts-types.js";
 export type PackExpression = Expression | string | number | boolean | bigint;
 export declare function getIdentifierName(node: Identifier | PrivateIdentifier | StringLiteral | __String): string;
 export declare function getEscapedText(node: Identifier | PrivateIdentifier | StringLiteral | __String): string;
 export declare function findSourceFile(node: Node): SourceFile | undefined;
 export declare function joinQualifiedName(name: EntityName): string;
 export declare function getCommentOfNode(sourceFile: SourceFile, node: Node): string | undefined;
-export declare function parseJSDocAttributeFromText(comment: string, attribute: string): string | undefined;
+export declare function parseJSDocAttributeFromText(comment: string, attribute: string): [string | undefined, number];
+export declare function parseJSDocBooleanFromText(comment: string, attribute: string): boolean | undefined;
+export declare function parseJSDocDescription(comment: string): string | undefined;
 export declare function extractJSDocAttribute(sourceFile: SourceFile, node: Node | undefined, attribute: string): string | undefined;
+export declare function extractJSDocArray(sourceFile: SourceFile, node: Node | undefined, attribute: string): string[] | undefined;
+export declare function extractJSDocBoolean(sourceFile: SourceFile, node: Node | undefined, attribute: string): boolean | undefined;
 export declare function getPropertyName(f: NodeFactory, node?: PropertyName): string | symbol | number | ArrowFunction;
 export declare function getNameAsString(node?: PropertyName | QualifiedName): string;
 export declare function hasModifier(node: Node & {
@@ -18,9 +22,9 @@ export declare class NodeConverter {
     constructor(f: NodeFactory);
     toExpression<T extends PackExpression | PackExpression[]>(node?: T): Expression;
 }
-export declare function isNodeWithLocals(node: Node): node is (Node & {
+export declare function isNodeWithLocals(node: Node): node is Node & {
     locals: SymbolTable | undefined;
-});
+};
 export declare function getGlobalsOfSourceFile(file: SourceFile): SymbolTable | void;
 /**
  * For imports that can removed (like a class import only used as type only, like `p: Model[]`) we have
diff --git a/dist/cjs/src/reflection-ast.js b/dist/cjs/src/reflection-ast.js
index b651183880d04b5d742c35eff8d8f16bfc229fad..bd9d55e46cd50a0c1def8ee053b37262a299a22a 100644
--- a/dist/cjs/src/reflection-ast.js
+++ b/dist/cjs/src/reflection-ast.js
@@ -49,7 +49,11 @@ exports.findSourceFile = findSourceFile;
 exports.joinQualifiedName = joinQualifiedName;
 exports.getCommentOfNode = getCommentOfNode;
 exports.parseJSDocAttributeFromText = parseJSDocAttributeFromText;
+exports.parseJSDocBooleanFromText = parseJSDocBooleanFromText;
+exports.parseJSDocDescription = parseJSDocDescription;
 exports.extractJSDocAttribute = extractJSDocAttribute;
+exports.extractJSDocArray = extractJSDocArray;
+exports.extractJSDocBoolean = extractJSDocBoolean;
 exports.getPropertyName = getPropertyName;
 exports.getNameAsString = getNameAsString;
 exports.hasModifier = hasModifier;
@@ -57,11 +61,11 @@ exports.isNodeWithLocals = isNodeWithLocals;
 exports.getGlobalsOfSourceFile = getGlobalsOfSourceFile;
 exports.ensureImportIsEmitted = ensureImportIsEmitted;
 exports.serializeEntityNameAsExpression = serializeEntityNameAsExpression;
-const typescript_1 = __importStar(require("typescript"));
 const ts_clone_node_1 = require("@marcj/ts-clone-node");
-const { isArrowFunction, isComputedPropertyName, isIdentifier, isNamedImports, isNumericLiteral, isPrivateIdentifier, isStringLiteral, isStringLiteralLike, setOriginalNode, getLeadingCommentRanges, isNoSubstitutionTemplateLiteral, NodeFlags, SyntaxKind, } = typescript_1.default;
+const typescript_1 = __importStar(require("typescript"));
+const { isArrowFunction, isComputedPropertyName, isIdentifier, isNamedImports, isNumericLiteral, isPrivateIdentifier, isStringLiteral, isStringLiteralLike, setOriginalNode, getLeadingCommentRanges, isNoSubstitutionTemplateLiteral, NodeFlags, SyntaxKind } = typescript_1.default;
 function is__String(value) {
-    return typeof value === 'string';
+    return typeof value === "string";
 }
 function getIdentifierName(node) {
     if (is__String(node))
@@ -71,7 +75,7 @@ function getIdentifierName(node) {
     }
     if (isStringLiteral(node))
         return node.text;
-    return '';
+    return "";
 }
 function getEscapedText(node) {
     if (is__String(node))
@@ -92,45 +96,88 @@ function findSourceFile(node) {
 function joinQualifiedName(name) {
     if (isIdentifier(name))
         return getIdentifierName(name);
-    return joinQualifiedName(name.left) + '_' + getIdentifierName(name.right);
+    return joinQualifiedName(name.left) + "_" + getIdentifierName(name.right);
 }
+const BANNER_REGEX = /^\/\*\s---.*\n[\s\S]*\s*---\s*\*\//;
 function getCommentOfNode(sourceFile, node) {
-    const comment = getLeadingCommentRanges(sourceFile.text, node.pos);
-    if (!comment)
+    const commentLines = getLeadingCommentRanges(sourceFile.text, node.pos);
+    if (!commentLines || commentLines.length === 0)
         return;
-    return comment.map(v => sourceFile.text.substring(v.pos, v.end)).join('\n');
+    const commentLine = commentLines.slice(-1)[0];
+    if (!commentLine)
+        return;
+    const comment = sourceFile.text.slice(commentLine.pos, commentLine.end);
+    if (comment.match(BANNER_REGEX)) {
+        return undefined;
+    }
+    return comment;
 }
 function parseJSDocAttributeFromText(comment, attribute) {
     // no regex
-    const index = comment.indexOf('@' + attribute + ' ');
+    const attributeStr = `@${attribute} `;
+    const index = comment.indexOf(attributeStr);
     if (index === -1) {
         let start = 0;
         while (true) {
-            const withoutContent = comment.indexOf('@' + attribute, start);
-            if (withoutContent === -1)
-                return undefined;
-            //make sure next character is space or end of comment
+            const withoutContent = comment.indexOf(`@${attribute}`, start);
+            if (withoutContent === -1) {
+                return [undefined, -1];
+            }
+            // make sure next character is space or end of comment
             const nextCharacter = comment[withoutContent + attribute.length + 1];
-            if (!nextCharacter || nextCharacter === ' ' || nextCharacter === '\n' || nextCharacter === '\r' || nextCharacter === '\t') {
-                return '';
+            if (!nextCharacter ||
+                nextCharacter === " " ||
+                nextCharacter === "\n" ||
+                nextCharacter === "\r" ||
+                nextCharacter === "\t") {
+                return [undefined, withoutContent + attribute.length + 1];
             }
             start = withoutContent + attribute.length + 1;
         }
-        return undefined;
     }
-    const start = index + attribute.length + 2;
+    const start = index + attributeStr.length;
     // end is either next attribute @ or end of comment.
-    const nextAttribute = comment.indexOf('@', start);
-    const endOfComment = comment.indexOf('*/', start);
+    const nextAttribute = comment.indexOf("@", start);
+    const endOfComment = comment.indexOf("*/", start);
     const end = nextAttribute === -1 ? endOfComment : Math.min(nextAttribute, endOfComment);
     const content = comment.substring(start, end).trim();
     // make sure multiline comments are supported, and each line is trimmed and `\s\s\s\*` removed
-    return content.split('\n').map(v => {
-        const indexOfStar = v.indexOf('*');
-        if (indexOfStar === -1)
-            return v.trim();
-        return v.substring(indexOfStar + 1).trim();
-    }).join('\n');
+    return [
+        content
+            .split("\n")
+            .map(v => {
+            const indexOfStar = v.indexOf("*");
+            if (indexOfStar === -1) {
+                return v.trim();
+            }
+            return v.substring(indexOfStar + 1).trim();
+        })
+            .join("\n")
+            .replace(/\n*$/g, ""),
+        end + 1
+    ];
+}
+function parseJSDocBooleanFromText(comment, attribute) {
+    return new RegExp(`^\s*@(${attribute?.trim()})\s*(false|False|FALSE|0|n|N|no|No|NO)\s*$`, "gm").test(comment?.trim())
+        ? false
+        : new RegExp(`^\s*@(${attribute?.trim()})\s*(true|True|TRUE|1|y|Y|yes|Yes|YES)?\s*$`, "gm").test(comment?.trim())
+            ? true
+            : undefined;
+}
+const JS_DOC_REGEX = /^\s*\*\s\@[a-z]+\:?(.*)\s[a-zA-Z0-9_]+$/gim;
+function parseJSDocDescription(comment) {
+    let lines = comment
+        .split("\n")
+        .filter(line => line && !line.includes("/**") && !line.includes("*/"))
+        .map(line => line
+        .replace(/^\s*\*\s*/g, "")
+        .replace(/^\*\s*/g, "")
+        .trim());
+    const attribute = lines.findIndex(line => line.startsWith("@"));
+    if (attribute !== -1) {
+        lines = lines.slice(0, attribute);
+    }
+    return lines.join("\n").trim() || undefined;
 }
 function extractJSDocAttribute(sourceFile, node, attribute) {
     // in TypeScript 5.3 they made JSDoc parsing optional and disabled by default.
@@ -142,11 +189,64 @@ function extractJSDocAttribute(sourceFile, node, attribute) {
     const comment = getCommentOfNode(sourceFile, node);
     if (!comment)
         return undefined;
-    return parseJSDocAttributeFromText(comment, attribute);
+    let result = parseJSDocAttributeFromText(comment, attribute);
+    if (!result[0] && attribute === "description") {
+        result[0] = parseJSDocDescription(comment);
+    }
+    return result[0];
+}
+function extractJSDocArray(sourceFile, node, attribute) {
+    // in TypeScript 5.3 they made JSDoc parsing optional and disabled by default.
+    // we need to read the comments manually and then parse @{attribute} {value} manually.
+    // we need reference to SourceFile, since Node.getSourceFile() although available in types,
+    // is not available at runtime sometimes (works in tests, but fails with tsc).
+    if (!node)
+        return undefined;
+    const comment = getCommentOfNode(sourceFile, node);
+    if (!comment)
+        return undefined;
+    const results = [];
+    try {
+        let result = parseJSDocAttributeFromText(comment, attribute);
+        if (result.length < 2) {
+            return undefined;
+        }
+        if (result[0] && result[1] > -1) {
+            results.push(result[0]);
+        }
+        let currentComment = comment;
+        while (result[1] > -1 && currentComment.length > result[1]) {
+            currentComment = currentComment.substring(result[1]);
+            // search for next attribute
+            result = parseJSDocAttributeFromText(currentComment, attribute);
+            if (result[0]) {
+                results.push(result[0]);
+            }
+        }
+    }
+    catch (error) {
+        console.error("Error parsing JSDoc attribute:", attribute, "in comment:", comment);
+        console.error(error);
+    }
+    return results;
+}
+function extractJSDocBoolean(sourceFile, node, attribute) {
+    // in TypeScript 5.3 they made JSDoc parsing optional and disabled by default.
+    // we need to read the comments manually and then parse @{attribute} {value} manually.
+    // we need reference to SourceFile, since Node.getSourceFile() although available in types,
+    // is not available at runtime sometimes (works in tests, but fails with tsc).
+    if (!node) {
+        return undefined;
+    }
+    const comment = getCommentOfNode(sourceFile, node);
+    if (!comment) {
+        return undefined;
+    }
+    return parseJSDocBooleanFromText(comment, attribute);
 }
 function getPropertyName(f, node) {
     if (!node)
-        return '';
+        return "";
     if (isIdentifier(node))
         return getIdentifierName(node);
     if (isStringLiteral(node))
@@ -160,11 +260,11 @@ function getPropertyName(f, node) {
     }
     if (isPrivateIdentifier(node))
         return getIdentifierName(node);
-    return '';
+    return "";
 }
 function getNameAsString(node) {
     if (!node)
-        return '';
+        return "";
     if (isIdentifier(node))
         return getIdentifierName(node);
     if (isStringLiteral(node))
@@ -178,7 +278,7 @@ function getNameAsString(node) {
     if (isComputedPropertyName(node)) {
         if (isStringLiteralLike(node) || isNumericLiteral(node))
             return node.text;
-        return '';
+        return "";
     }
     if (isPrivateIdentifier(node))
         return getIdentifierName(node);
@@ -195,7 +295,7 @@ const cloneHook = (node, payload) => {
         return {
             text: () => {
                 return getIdentifierName(node);
-            },
+            }
         };
     }
     return;
@@ -206,21 +306,23 @@ class NodeConverter {
     }
     toExpression(node) {
         if (node === undefined)
-            return this.f.createIdentifier('undefined');
+            return this.f.createIdentifier("undefined");
         if (Array.isArray(node)) {
             return this.f.createArrayLiteralExpression(this.f.createNodeArray(node.map(v => this.toExpression(v))));
         }
-        if ('string' === typeof node)
+        if ("string" === typeof node)
             return this.f.createStringLiteral(node, true);
-        if ('number' === typeof node)
+        if ("number" === typeof node)
             return this.f.createNumericLiteral(node);
-        if ('bigint' === typeof node)
+        if ("bigint" === typeof node)
             return this.f.createBigIntLiteral(String(node));
-        if ('boolean' === typeof node)
+        if ("boolean" === typeof node)
             return node ? this.f.createTrue() : this.f.createFalse();
         if (node.pos === -1 && node.end === -1 && node.parent === undefined) {
             if (isArrowFunction(node)) {
-                if (node.body.pos === -1 && node.body.end === -1 && node.body.parent === undefined)
+                if (node.body.pos === -1 &&
+                    node.body.end === -1 &&
+                    node.body.parent === undefined)
                     return node;
                 return this.f.createArrowFunction(node.modifiers, node.typeParameters, node.parameters, node.type, node.equalsGreaterThanToken, this.toExpression(node.body));
             }
@@ -252,11 +354,11 @@ class NodeConverter {
                 setOriginalNodes: true,
                 preserveSymbols: true,
                 setParents: true,
-                hook: cloneHook,
+                hook: cloneHook
             });
         }
         catch (error) {
-            console.error('could not clone node', node);
+            console.error("could not clone node", node);
             throw error;
         }
     }
@@ -264,10 +366,10 @@ class NodeConverter {
 exports.NodeConverter = NodeConverter;
 function isExternalOrCommonJsModule(file) {
     //both attributes are internal and not yet public
-    return (file.externalModuleIndicator || file.commonJsModuleIndicator) !== undefined;
+    return ((file.externalModuleIndicator || file.commonJsModuleIndicator) !== undefined);
 }
 function isNodeWithLocals(node) {
-    return 'locals' in node;
+    return "locals" in node;
 }
 //logic copied from typescript
 function getGlobalsOfSourceFile(file) {
@@ -287,10 +389,13 @@ function getGlobalsOfSourceFile(file) {
  * to modify the import so TS does not remove it.
  */
 function ensureImportIsEmitted(importDeclaration, specifierName) {
-    if (specifierName && importDeclaration.importClause && importDeclaration.importClause.namedBindings) {
+    if (specifierName &&
+        importDeclaration.importClause &&
+        importDeclaration.importClause.namedBindings) {
         // const binding = importDeclaration.importClause.namedBindings;
         if (isNamedImports(importDeclaration.importClause.namedBindings)) {
-            for (const element of importDeclaration.importClause.namedBindings.elements) {
+            for (const element of importDeclaration.importClause.namedBindings
+                .elements) {
                 if (element.name.escapedText === specifierName.escapedText) {
                     element.flags |= NodeFlags.Synthesized;
                     return;
diff --git a/dist/cjs/src/reflection-ast.js.map b/dist/cjs/src/reflection-ast.js.map
index 47f257043512fc7f48e3e16396fa2c1600ea795d..05beb0c638a5c8763f4a66194dd93ee137927ca2 100644
--- a/dist/cjs/src/reflection-ast.js.map
+++ b/dist/cjs/src/reflection-ast.js.map
@@ -1 +1 @@
-{"version":3,"file":"reflection-ast.js","sourceRoot":"","sources":["../../../src/reflection-ast.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"reflection-ast.js","sourceRoot":"","sources":["../../../src/reflection-ast.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/tsconfig.tsbuildinfo b/dist/cjs/tsconfig.tsbuildinfo
index 860243e67cb36b33f53aeed9aded57a2a2eadac8..4c4d2bbc90c83fdab49ace3d975b5e3368a59e2e 100644
--- a/dist/cjs/tsconfig.tsbuildinfo
+++ b/dist/cjs/tsconfig.tsbuildinfo
@@ -1 +1 @@
-{"fileNames":["../../../../node_modules/typescript/lib/lib.es5.d.ts","../../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../../node_modules/typescript/lib/lib.dom.d.ts","../../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../../node_modules/typescript/lib/lib.dom.asynciterable.d.ts","../../../../node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../../../node_modules/typescript/lib/lib.scripthost.d.ts","../../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../../node_modules/typescript/lib/lib.es2020.full.d.ts","../../../../node_modules/typescript/lib/typescript.d.ts","../../../../node_modules/@marcj/ts-clone-node/dist/esm/index.d.ts","../../src/ts-types.ts","../../src/reflection-ast.ts","../../../type-spec/dist/cjs/src/type.d.ts","../../../type-spec/dist/cjs/index.d.ts","../../../../node_modules/@types/braces/index.d.ts","../../../../node_modules/@types/micromatch/index.d.ts","../../src/resolver.ts","../../../../node_modules/lz-string/typings/lz-string.d.ts","../../node_modules/@typescript/vfs/dist/index.d.ts","../../src/debug.ts","../../src/config.ts","../../src/compiler.ts","../../src/loader.ts","../../../../node_modules/@rollup/pluginutils/node_modules/@types/estree/index.d.ts","../../../../node_modules/@rollup/pluginutils/types/index.d.ts","../../src/plugin.ts","../../install-transformer.ts","../../compiler-debug.ts","../../index.ts","../../../../node_modules/@types/lz-string/index.d.ts","../../../../node_modules/@types/node/compatibility/disposable.d.ts","../../../../node_modules/@types/node/compatibility/indexable.d.ts","../../../../node_modules/@types/node/compatibility/iterators.d.ts","../../../../node_modules/@types/node/compatibility/index.d.ts","../../../../node_modules/@types/node/globals.typedarray.d.ts","../../../../node_modules/@types/node/buffer.buffer.d.ts","../../../../node_modules/buffer/index.d.ts","../../../../node_modules/undici-types/header.d.ts","../../../../node_modules/undici-types/readable.d.ts","../../../../node_modules/undici-types/file.d.ts","../../../../node_modules/undici-types/fetch.d.ts","../../../../node_modules/undici-types/formdata.d.ts","../../../../node_modules/undici-types/connector.d.ts","../../../../node_modules/undici-types/client.d.ts","../../../../node_modules/undici-types/errors.d.ts","../../../../node_modules/undici-types/dispatcher.d.ts","../../../../node_modules/undici-types/global-dispatcher.d.ts","../../../../node_modules/undici-types/global-origin.d.ts","../../../../node_modules/undici-types/pool-stats.d.ts","../../../../node_modules/undici-types/pool.d.ts","../../../../node_modules/undici-types/handlers.d.ts","../../../../node_modules/undici-types/balanced-pool.d.ts","../../../../node_modules/undici-types/agent.d.ts","../../../../node_modules/undici-types/mock-interceptor.d.ts","../../../../node_modules/undici-types/mock-agent.d.ts","../../../../node_modules/undici-types/mock-client.d.ts","../../../../node_modules/undici-types/mock-pool.d.ts","../../../../node_modules/undici-types/mock-errors.d.ts","../../../../node_modules/undici-types/proxy-agent.d.ts","../../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../../node_modules/undici-types/retry-handler.d.ts","../../../../node_modules/undici-types/retry-agent.d.ts","../../../../node_modules/undici-types/api.d.ts","../../../../node_modules/undici-types/interceptors.d.ts","../../../../node_modules/undici-types/util.d.ts","../../../../node_modules/undici-types/cookies.d.ts","../../../../node_modules/undici-types/patch.d.ts","../../../../node_modules/undici-types/websocket.d.ts","../../../../node_modules/undici-types/eventsource.d.ts","../../../../node_modules/undici-types/filereader.d.ts","../../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../../node_modules/undici-types/content-type.d.ts","../../../../node_modules/undici-types/cache.d.ts","../../../../node_modules/undici-types/index.d.ts","../../../../node_modules/@types/node/globals.d.ts","../../../../node_modules/@types/node/assert.d.ts","../../../../node_modules/@types/node/assert/strict.d.ts","../../../../node_modules/@types/node/async_hooks.d.ts","../../../../node_modules/@types/node/buffer.d.ts","../../../../node_modules/@types/node/child_process.d.ts","../../../../node_modules/@types/node/cluster.d.ts","../../../../node_modules/@types/node/console.d.ts","../../../../node_modules/@types/node/constants.d.ts","../../../../node_modules/@types/node/crypto.d.ts","../../../../node_modules/@types/node/dgram.d.ts","../../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../../node_modules/@types/node/dns.d.ts","../../../../node_modules/@types/node/dns/promises.d.ts","../../../../node_modules/@types/node/domain.d.ts","../../../../node_modules/@types/node/dom-events.d.ts","../../../../node_modules/@types/node/events.d.ts","../../../../node_modules/@types/node/fs.d.ts","../../../../node_modules/@types/node/fs/promises.d.ts","../../../../node_modules/@types/node/http.d.ts","../../../../node_modules/@types/node/http2.d.ts","../../../../node_modules/@types/node/https.d.ts","../../../../node_modules/@types/node/inspector.d.ts","../../../../node_modules/@types/node/module.d.ts","../../../../node_modules/@types/node/net.d.ts","../../../../node_modules/@types/node/os.d.ts","../../../../node_modules/@types/node/path.d.ts","../../../../node_modules/@types/node/perf_hooks.d.ts","../../../../node_modules/@types/node/process.d.ts","../../../../node_modules/@types/node/punycode.d.ts","../../../../node_modules/@types/node/querystring.d.ts","../../../../node_modules/@types/node/readline.d.ts","../../../../node_modules/@types/node/readline/promises.d.ts","../../../../node_modules/@types/node/repl.d.ts","../../../../node_modules/@types/node/sea.d.ts","../../../../node_modules/@types/node/sqlite.d.ts","../../../../node_modules/@types/node/stream.d.ts","../../../../node_modules/@types/node/stream/promises.d.ts","../../../../node_modules/@types/node/stream/consumers.d.ts","../../../../node_modules/@types/node/stream/web.d.ts","../../../../node_modules/@types/node/string_decoder.d.ts","../../../../node_modules/@types/node/test.d.ts","../../../../node_modules/@types/node/timers.d.ts","../../../../node_modules/@types/node/timers/promises.d.ts","../../../../node_modules/@types/node/tls.d.ts","../../../../node_modules/@types/node/trace_events.d.ts","../../../../node_modules/@types/node/tty.d.ts","../../../../node_modules/@types/node/url.d.ts","../../../../node_modules/@types/node/util.d.ts","../../../../node_modules/@types/node/v8.d.ts","../../../../node_modules/@types/node/vm.d.ts","../../../../node_modules/@types/node/wasi.d.ts","../../../../node_modules/@types/node/worker_threads.d.ts","../../../../node_modules/@types/node/zlib.d.ts","../../../../node_modules/@types/node/index.d.ts"],"fileIdsList":[[52,79,122],[79,122],[67,79,122],[58,79,122],[79,119,122],[79,121,122],[122],[79,122,127,157],[79,122,123,128,134,135,142,154,165],[79,122,123,124,134,142],[74,75,76,79,122],[79,122,125,166],[79,122,126,127,135,143],[79,122,127,154,162],[79,122,128,130,134,142],[79,121,122,129],[79,122,130,131],[79,122,134],[79,122,132,134],[79,121,122,134],[79,122,134,135,136,154,165],[79,122,134,135,136,149,154,157],[79,117,122,170],[79,117,122,130,134,137,142,154,165],[79,122,134,135,137,138,142,154,162,165],[79,122,137,139,154,162,165],[77,78,79,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],[79,122,134,140],[79,122,141,165],[79,122,130,134,142,154],[79,122,143],[79,122,144],[79,121,122,145],[79,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],[79,122,147],[79,122,148],[79,122,134,149,150],[79,122,149,151,166,168],[79,122,134,154,155,156,157],[79,122,154,156],[79,122,154,155],[79,122,157],[79,122,158],[79,119,122,154],[79,122,134,160,161],[79,122,160,161],[79,122,127,142,154,162],[79,122,163],[79,122,142,164],[79,122,137,148,165],[79,122,127,166],[79,122,154,167],[79,122,141,168],[79,122,169],[79,122,127,134,136,145,154,165,168,170],[79,122,154,171],[79,89,93,122,165],[79,89,122,154,165],[79,84,122],[79,86,89,122,162,165],[79,122,142,162],[79,122,172],[79,84,122,172],[79,86,89,122,142,165],[79,81,82,85,88,122,134,154,165],[79,89,96,122],[79,81,87,122],[79,89,110,111,122],[79,85,89,122,157,165,172],[79,110,122,172],[79,83,84,122,172],[79,89,122],[79,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,122],[79,89,104,122],[79,89,96,97,122],[79,87,89,97,98,122],[79,88,122],[79,81,84,89,122],[79,89,93,97,98,122],[79,93,122],[79,87,89,92,122,165],[79,81,86,89,96,122],[79,122,154],[79,84,89,110,122,170,172],[69,79,122,135],[52,65,66,79,122],[79,122,135,144],[52,61,79,122],[52,54,55,57,60,62,63,64,79,122],[52,60,63,79,122,144],[52,65,79,122],[52,65,68,79,122,146],[52,53,54,79,122],[52,59,79,122],[56,79,122]],"fileInfos":[{"version":"e41c290ef7dd7dab3493e6cbe5909e0148edf4a8dad0271be08edec368a0f7b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"4fd3f3422b2d2a3dfd5cdd0f387b3a8ec45f006c6ea896a4cb41264c2100bb2c","affectsGlobalScope":true,"impliedFormat":1},{"version":"69e65d976bf166ce4a9e6f6c18f94d2424bf116e90837ace179610dbccad9b42","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7a3c8b952931daebdfc7a2897c53c0a1c73624593fa070e46bd537e64dcd20a","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"62bb211266ee48b2d0edf0d8d1b191f0c24fc379a82bd4c1692a082c540bc6b1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"f1e2a172204962276504466a6393426d2ca9c54894b1ad0a6c9dad867a65f876","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1305d1e76ca44e30fb8b2b8075fa522b83f60c0bcf5d4326a9d2cf79b53724f8","impliedFormat":1},{"version":"7f9c8c4fd31e6e0f137ded52f026f97934abcc4624db1c9c8120b91a170798e0","impliedFormat":1},{"version":"2b85fbb08890bf05fa33eb7a62f83514d152b42ff7179e74c502a4df641c6513","impliedFormat":99},{"version":"43082f9859a895f743078697409561db22bdd3b46211a7f31fab739eaf57aab6","signature":"e7b004cfd30d9c1cfd9e555305957bf0c5f9e893847e695e819b13d33d8e88cd"},{"version":"76cbc143ff74f24eec41b685cef5e8037c7d02c4fa03b3b05c9d1de8ca1e7094","signature":"0a4df072fb60fd800b27d7b785fa292fcd5ab930c65c9aafa16b6a98735f8a1e"},"04ad7f4a76339aff3e37651d3777b1b065b19c3f5d368e44633da92b3b72ade3","bd8305ea3955dad684e52167c0c6f0bf7970cb8a9a3c9e73fc4d597120d5ec27",{"version":"2b91a6a00be41e4dea6d25220ef9d4d1c843872d1ad6b9f0597c720d2d45c256","impliedFormat":1},{"version":"33a0782502805f6dac67362b4290250e29755139a9c0d93a42e9da3a6e282e85","impliedFormat":1},{"version":"d07a5ee0f3be094334f483e984c7d878b3d2198cbb4124ea99c077fb3b90dd8a","signature":"b0893808ca5afabfd8e13988f0d127fefa8e244552451685d8376d9018f92ea0"},{"version":"5a9ffc0682aeb335925a4a676d0a15130ae678f198aac62d8436bdfd9c266bf8","impliedFormat":1},{"version":"b65501b7e485545b47d370bf0018fdb4bea02fd5ae94ea4d88132f091d963aec","impliedFormat":1},{"version":"d1b511ca204df4b2d8c8a9631237575b2e389e23c3533cec038da2876d53b253","signature":"6c0d5fb372ac7ba32e66304b31d3536f0bbe2a9599e67d4ecfbee7be59d6fa2d"},{"version":"b57569f0cb0aae2a661e4a2bd4d6aadd74cd469b0056346e9a4703a219e6980b","signature":"9969cc3e6fceb0f8b6fd16fc2810e214ff1816d3fa4854d695d9f8abf4c3c0e4"},{"version":"6cafd74baeb1e7329df7750a505e9892d2d91d938563bbc1c7d06cbaffd58f73","signature":"1a6a6b76f767b30b42d2ce2e89ac1c6e112ceadce16619904dc660968532e4ee"},{"version":"6b804ad6fe19ba150f8de1a387c7970586e73f2f3e6b186c5aca76e4bffbdc12","signature":"a656b9869571419766be41dbe7f1c47dc8b40cbe358205697f03a64fbb802ccf"},{"version":"785b9d575b49124ce01b46f5b9402157c7611e6532effa562ac6aebec0074dfc","impliedFormat":1},{"version":"77b55f8bfab90aa408704132d98b72f8762e2fe955eeda093ace44120d6adc1a","impliedFormat":1},{"version":"9a8c6c97f82470a4ac37faa7457e3b74a07a5d3d7b39e6a1458b8709c9d1fd0d","signature":"7d74ab36a2869f3c9526c77220dd2d826281a177a4211eb67ba93561d4328278"},{"version":"8425dbb0fc36ec610321023f7d40c4798d0ede2ac15ec095cb3a904df02e6aed","signature":"2f0f05724895d8f23262cd92001776976beae85303eada0d8bd157d7bd60be28"},{"version":"e349130fd1e7c71af70ec371086281c6e7133db3b4b677b02187188c209034be","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"cb6d7c0ef7222cc1511eaaa4eafc17bc82bc7fdf29cb51e37a9dcd4102a7b3cf","signature":"ff60f75a2d3863e8ebcb36f8dfa67effadbb0a872fc10eb8ce58631d00280ffb"},{"version":"a72d313bb91d97bca7fba7da3681cb8ee00cd2bf98d9a545727f91f0345330c9","impliedFormat":1},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"13af9e8fb6757946c48117315866177b95e554d1e773577bb6ca6e40083b6d73","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"d2bc987ae352271d0d615a420dcf98cc886aa16b87fb2b569358c1fe0ca0773d","affectsGlobalScope":true,"impliedFormat":1},{"version":"f550093acc8ad4f64ad1c7e96153615f3351b81919dae5473375b81e1e8f272c","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"76103716ba397bbb61f9fa9c9090dca59f39f9047cb1352b2179c5d8e7f4e8d0","impliedFormat":1},{"version":"53eac70430b30089a3a1959d8306b0f9cfaf0de75224b68ef25243e0b5ad1ca3","affectsGlobalScope":true,"impliedFormat":1},{"version":"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","impliedFormat":1},{"version":"115971d64632ea4742b5b115fb64ed04bcaae2c3c342f13d9ba7e3f9ee39c4e7","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb","impliedFormat":1},{"version":"86956cc2eb9dd371d6fab493d326a574afedebf76eef3fa7833b8e0d9b52d6f1","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"e6f5a38687bebe43a4cef426b69d34373ef68be9a6b1538ec0a371e69f309354","impliedFormat":1},{"version":"a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","impliedFormat":1},{"version":"e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1ff5a53a58e756d2661b73ba60ffe274231a4432d21f7a2d0d9e4f6aa99f4283","impliedFormat":1},{"version":"1e289f30a48126935a5d408a91129a13a59c9b0f8c007a816f9f16ef821e144e","impliedFormat":1},{"version":"2ea254f944dfe131df1264d1fb96e4b1f7d110195b21f1f5dbb68fdd394e5518","impliedFormat":1},{"version":"5135bdd72cc05a8192bd2e92f0914d7fc43ee077d1293dc622a049b7035a0afb","impliedFormat":1},{"version":"4f80de3a11c0d2f1329a72e92c7416b2f7eab14f67e92cac63bb4e8d01c6edc8","impliedFormat":1},{"version":"6d386bc0d7f3afa1d401afc3e00ed6b09205a354a9795196caed937494a713e6","impliedFormat":1},{"version":"fcc4b974b1cf7eca347490f11143ab2f5bc3c449b2073eb4d9494f6a16651e75","affectsGlobalScope":true,"impliedFormat":1},{"version":"23459c1915878a7c1e86e8bdb9c187cddd3aea105b8b1dfce512f093c969bc7e","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true,"impliedFormat":1},{"version":"5f6f1d54779d0b9ed152b0516b0958cd34889764c1190434bbf18e7a8bb884cd","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"c6b4e0a02545304935ecbf7de7a8e056a31bb50939b5b321c9d50a405b5a0bba","impliedFormat":1},{"version":"fab29e6d649aa074a6b91e3bdf2bff484934a46067f6ee97a30fcd9762ae2213","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"1cbae62b67f180291d211f0e1045fb923a8ec800cfbf9caa13223d769013dae2","impliedFormat":1},{"version":"553870e516f8c772b89f3820576152ebc70181d7994d96917bb943e37da7f8a7","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633","impliedFormat":1},{"version":"745c4240220559bd340c8aeb6e3c5270a709d3565e934dc22a69c304703956bc","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"92949391eab12082218333a61b9070996f404ad662ff488d48ebb09564963d2b","affectsGlobalScope":true,"impliedFormat":1},{"version":"bef91efa0baea5d0e0f0f27b574a8bc100ce62a6d7e70220a0d58af6acab5e89","affectsGlobalScope":true,"impliedFormat":1},{"version":"282fd2a1268a25345b830497b4b7bf5037a5e04f6a9c44c840cb605e19fea841","impliedFormat":1},{"version":"5360a27d3ebca11b224d7d3e38e3e2c63f8290cb1fcf6c3610401898f8e68bc3","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true,"impliedFormat":1},{"version":"cb094bb347d7df3380299eb69836c2c8758626ecf45917577707c03cf816b6f4","affectsGlobalScope":true,"impliedFormat":1},{"version":"f689c4237b70ae6be5f0e4180e8833f34ace40529d1acc0676ab8fb8f70457d7","impliedFormat":1},{"version":"ae25afbbf1ed5df63a177d67b9048bf7481067f1b8dc9c39212e59db94fc9fc6","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"52a8e7e8a1454b6d1b5ad428efae3870ffc56f2c02d923467f2940c454aa9aec","affectsGlobalScope":true,"impliedFormat":1},{"version":"78dc0513cc4f1642906b74dda42146bcbd9df7401717d6e89ea6d72d12ecb539","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1}],"root":[54,55,60,[63,66],[69,72]],"options":{"composite":true,"declaration":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"module":1,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"outDir":"./","sourceMap":true,"strict":true,"target":7},"referencedMap":[[53,1],[67,2],[68,3],[58,2],[73,2],[59,4],[119,5],[120,5],[121,6],[79,7],[122,8],[123,9],[124,10],[74,2],[77,11],[75,2],[76,2],[125,12],[126,13],[127,14],[128,15],[129,16],[130,17],[131,17],[133,18],[132,19],[134,20],[135,21],[136,22],[118,23],[78,2],[137,24],[138,25],[139,26],[172,27],[140,28],[141,29],[142,30],[143,31],[144,32],[145,33],[146,34],[147,35],[148,36],[149,37],[150,37],[151,38],[152,2],[153,2],[154,39],[156,40],[155,41],[157,42],[158,43],[159,44],[160,45],[161,46],[162,47],[163,48],[164,49],[165,50],[166,51],[167,52],[168,53],[169,54],[170,55],[171,56],[80,2],[61,2],[49,2],[50,2],[10,2],[8,2],[9,2],[14,2],[13,2],[2,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[3,2],[23,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[51,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[1,2],[12,2],[11,2],[52,2],[96,57],[106,58],[95,57],[116,59],[87,60],[86,61],[115,62],[109,63],[114,64],[89,65],[103,66],[88,67],[112,68],[84,69],[83,62],[113,70],[85,71],[90,72],[91,2],[94,72],[81,2],[117,73],[107,74],[98,75],[99,76],[101,77],[97,78],[100,79],[110,62],[92,80],[93,81],[102,82],[82,83],[105,74],[104,72],[108,2],[111,84],[71,85],[72,86],[70,87],[62,88],[65,89],[64,90],[63,2],[66,91],[69,92],[55,93],[60,94],[54,1],[57,95],[56,2]],"latestChangedDtsFile":"./src/compiler.d.ts","version":"5.7.3"}
\ No newline at end of file
+{"fileNames":["../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es5.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.asynciterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.scripthost.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.core.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.date.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.object.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.array.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.object.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.date.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.number.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.decorators.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.full.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/typescript.d.ts","../../../../../.pnpm/@deepkit+type-spec@1.0.1_patch_hash=f3c3a4fd486751022d78f17d39a5a79f493bca20b185964ca1aba41fbfc93244/node_modules/@deepkit/type-spec/dist/cjs/src/type.d.ts","../../../../../.pnpm/@deepkit+type-spec@1.0.1_patch_hash=f3c3a4fd486751022d78f17d39a5a79f493bca20b185964ca1aba41fbfc93244/node_modules/@deepkit/type-spec/dist/cjs/index.d.ts","../../../../../.pnpm/lz-string@1.5.0/node_modules/lz-string/typings/lz-string.d.ts","../../../../../.pnpm/@typescript+vfs@1.5.0/node_modules/@typescript/vfs/dist/index.d.ts","../../src/debug.ts","../../src/resolver.ts","../../src/config.ts","../../../../../.pnpm/@marcj+ts-clone-node@2.2.0_typescript@5.9.2/node_modules/@marcj/ts-clone-node/dist/esm/index.d.ts","../../src/ts-types.ts","../../src/reflection-ast.ts","../../src/compiler.ts","../../src/loader.ts","../../../../../.pnpm/@types+estree@1.0.8/node_modules/@types/estree/index.d.ts","../../../../../.pnpm/@rollup+pluginutils@5.2.0_rollup@4.49.0/node_modules/@rollup/pluginutils/types/index.d.ts","../../src/plugin.ts","../../install-transformer.ts","../../compiler-debug.ts","../../index.ts","../../dependencies.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/compatibility/disposable.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/compatibility/indexable.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/compatibility/iterators.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/compatibility/index.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/globals.typedarray.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/buffer.buffer.d.ts","../../../../../.pnpm/buffer@5.7.1/node_modules/buffer/index.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/header.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/readable.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/file.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/fetch.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/formdata.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/connector.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/client.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/errors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/dispatcher.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/global-dispatcher.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/global-origin.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/pool-stats.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/handlers.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/balanced-pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-interceptor.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-client.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-errors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/proxy-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/env-http-proxy-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/retry-handler.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/retry-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/api.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/interceptors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/util.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/cookies.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/patch.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/websocket.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/eventsource.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/filereader.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/diagnostics-channel.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/content-type.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/cache.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/index.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/globals.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/assert.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/assert/strict.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/async_hooks.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/buffer.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/child_process.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/cluster.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/console.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/constants.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/crypto.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/dgram.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/diagnostics_channel.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/dns.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/dns/promises.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/domain.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/dom-events.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/events.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/fs.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/fs/promises.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/http.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/http2.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/https.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/inspector.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/module.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/net.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/os.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/path.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/perf_hooks.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/decode.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/encode.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/index.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/process.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/punycode.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/querystring.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/readline.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/readline/promises.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/repl.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/sea.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/sqlite.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/stream.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/stream/promises.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/stream/consumers.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/stream/web.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/string_decoder.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/test.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/timers.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/timers/promises.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/tls.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/trace_events.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/tty.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/url.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/util.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/v8.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/vm.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/wasi.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/worker_threads.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/zlib.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/index.d.ts"],"fileIdsList":[[53,77,120],[77,120],[52,77,120],[65,77,120],[77,117,120],[77,119,120],[120],[77,120,125,158],[77,120,121,126,132,140,155,166],[77,120,121,122,132,140],[72,73,74,77,120],[77,120,123,167],[77,120,124,125,133,141],[77,120,125,155,163],[77,120,126,128,132,140],[77,119,120,127],[77,120,128,129],[77,120,130,132],[77,119,120,132],[77,120,132,133,134,155,166],[77,120,132,133,134,150,155,158],[77,115,120],[77,115,120,128,132,135,140,155,166],[77,120,132,133,135,136,140,155,163,166],[77,120,135,137,155,163,166],[75,76,77,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],[77,120,132,138],[77,120,139,166],[77,120,128,132,140,155],[77,120,141],[77,120,142],[77,119,120,143],[77,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],[77,120,148],[77,120,149],[77,120,132,150,151],[77,120,150,152,167,169],[77,120,132,155,156,158],[77,120,157,158],[77,120,155,156],[77,120,158],[77,120,159],[77,117,120,155,160],[77,120,132,161,162],[77,120,161,162],[77,120,125,140,155,163],[77,120,164],[77,120,140,165],[77,120,135,149,166],[77,120,125,167],[77,120,155,168],[77,120,139,169],[77,120,170],[77,120,132,134,143,155,158,166,168,169,171],[77,120,155,172],[52,55,77,120],[77,120,144,145],[77,87,91,120,166],[77,87,120,155,166],[77,82,120],[77,84,87,120,163,166],[77,120,140,163],[77,120,173],[77,82,120,173],[77,84,87,120,140,166],[77,79,80,83,86,120,132,155,166],[77,87,94,120],[77,79,85,120],[77,87,108,109,120],[77,83,87,120,158,166,173],[77,108,120,173],[77,81,82,120,173],[77,87,120],[77,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,120],[77,87,102,120],[77,87,94,95,120],[77,85,87,95,96,120],[77,86,120],[77,79,82,87,120],[77,87,91,95,96,120],[77,91,120],[77,85,87,90,120,166],[77,79,84,87,94,120],[77,120,155],[77,82,87,108,120,171,173],[67,77,120,133],[52,63,64,77,120],[77,120,133,142],[52,54,56,57,58,59,61,62,77,120],[52,57,58,77,120,133,142],[52,63,77,120],[52,63,66,77,120,147],[52,60,61,77,120],[52,71,77,120]],"fileInfos":[{"version":"c430d44666289dae81f30fa7b2edebf186ecc91a2d4c71266ea6ae76388792e1","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"080941d9f9ff9307f7e27a83bcd888b7c8270716c39af943532438932ec1d0b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2e80ee7a49e8ac312cc11b77f1475804bee36b3b2bc896bead8b6e1266befb43","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7a3c8b952931daebdfc7a2897c53c0a1c73624593fa070e46bd537e64dcd20a","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"fb0f136d372979348d59b3f5020b4cdb81b5504192b1cacff5d1fbba29378aa1","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"a680117f487a4d2f30ea46f1b4b7f58bef1480456e18ba53ee85c2746eeca012","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1305d1e76ca44e30fb8b2b8075fa522b83f60c0bcf5d4326a9d2cf79b53724f8","impliedFormat":1},{"version":"bddc8143c3b0fe2a6462f9811d3b28ea422ffee80d75d3d97d65d6b69f583fad","impliedFormat":1},{"version":"320217defa5f5efc928f9dd07135cc90086a76f56305174a4748ac24a42fa033","impliedFormat":1},{"version":"bd8305ea3955dad684e52167c0c6f0bf7970cb8a9a3c9e73fc4d597120d5ec27","impliedFormat":1},{"version":"5a9ffc0682aeb335925a4a676d0a15130ae678f198aac62d8436bdfd9c266bf8","impliedFormat":1},{"version":"b65501b7e485545b47d370bf0018fdb4bea02fd5ae94ea4d88132f091d963aec","impliedFormat":1},{"version":"d1b511ca204df4b2d8c8a9631237575b2e389e23c3533cec038da2876d53b253","signature":"6c0d5fb372ac7ba32e66304b31d3536f0bbe2a9599e67d4ecfbee7be59d6fa2d","impliedFormat":1},{"version":"d07a5ee0f3be094334f483e984c7d878b3d2198cbb4124ea99c077fb3b90dd8a","signature":"b0893808ca5afabfd8e13988f0d127fefa8e244552451685d8376d9018f92ea0","impliedFormat":1},{"version":"b79e2fb48b200d568262914530b6b12d4e8826acc0b8fe604ed530e361c21d63","signature":"f9677c253f314736073ea944aa85c2fcb878639968c6c63d091301d5d0477a87","impliedFormat":1},{"version":"2b85fbb08890bf05fa33eb7a62f83514d152b42ff7179e74c502a4df641c6513","impliedFormat":99},{"version":"43082f9859a895f743078697409561db22bdd3b46211a7f31fab739eaf57aab6","signature":"e7b004cfd30d9c1cfd9e555305957bf0c5f9e893847e695e819b13d33d8e88cd","impliedFormat":1},{"version":"08970e5d7d4f1954f546bb7b467ec959f86220de076dc4b8867e32bb4fac09bc","signature":"3d532e8433a30d050ce47501e754710003094740e17c003482f438947973494d","impliedFormat":1},{"version":"0a11d7e1a3872287ea8b541f1f325c38b35423785a39b9c0c0633651254a06ac","signature":"4f54a3d9d47e0a2d0b1b2bb17b5626121cd84f1b5e3360a4f28d6accdc7c9242","impliedFormat":1},{"version":"5dd8e3ae3aac3669f0a72db2644b2147b535776db6ed284d71f982a93b690e6b","signature":"89646f6fc8dea939cf0feaf379c6e8e1f0fc79fe9ac995f8098732561f307c4c","impliedFormat":1},{"version":"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","impliedFormat":1},{"version":"abc2a3d5e2d3dd761edf42f6b701d37ae9df764862acbee50a10871c5a4b7260","impliedFormat":1},{"version":"9a8c6c97f82470a4ac37faa7457e3b74a07a5d3d7b39e6a1458b8709c9d1fd0d","signature":"7d74ab36a2869f3c9526c77220dd2d826281a177a4211eb67ba93561d4328278","impliedFormat":1},{"version":"588b9dc856f37398b059082879be4013f9dd4ea35901cf4a61b9b2dad5e0734f","signature":"2f0f05724895d8f23262cd92001776976beae85303eada0d8bd157d7bd60be28","impliedFormat":1},{"version":"dad1ec856ea71b6dd047e21774c22c8d5c8cbb209b9ec2549e1d16e968aa7327","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881","impliedFormat":1},{"version":"ffc2a76bfac5bc8fd821b15473659dd72ad88bc73a66ecbbf091ed2c086f603d","signature":"32454060459b4687aa184960d706abbb0fc7945f3a06753158f87b71446a19af","impliedFormat":1},{"version":"dbcbd5e2492927ba3d982ee53b93f2ded8b504b6460f16be46105a4519852638","impliedFormat":1},{"version":"6c7176368037af28cb72f2392010fa1cef295d6d6744bca8cfb54985f3a18c3e","affectsGlobalScope":true,"impliedFormat":1},{"version":"ab41ef1f2cdafb8df48be20cd969d875602483859dc194e9c97c8a576892c052","affectsGlobalScope":true,"impliedFormat":1},{"version":"437e20f2ba32abaeb7985e0afe0002de1917bc74e949ba585e49feba65da6ca1","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"d802f0e6b5188646d307f070d83512e8eb94651858de8a82d1e47f60fb6da4e2","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"763fe0f42b3d79b440a9b6e51e9ba3f3f91352469c1e4b3b67bfa4ff6352f3f4","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"7f182617db458e98fc18dfb272d40aa2fff3a353c44a89b2c0ccb3937709bfb5","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"a12d953aa755b14ac1d28ecdc1e184f3285b01d6d1e58abc11bf1826bc9d80e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"a38efe83ff77c34e0f418a806a01ca3910c02ee7d64212a59d59bca6c2c38fa1","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"2b06b93fd01bcd49d1a6bd1f9b65ddcae6480b9a86e9061634d6f8e354c1468f","impliedFormat":1},{"version":"7b988bc259155186e6b09dd8b32856d9e45c8d261e63c19abaf590bb6550f922","affectsGlobalScope":true,"impliedFormat":1},{"version":"fe7b52f993f9336b595190f3c1fcc259bb2cf6dcb4ac8fdb1e0454cc5df7301e","impliedFormat":1},{"version":"e9b97d69510658d2f4199b7d384326b7c4053b9e6645f5c19e1c2a54ede427fc","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"81711af669f63d43ccb4c08e15beda796656dd46673d0def001c7055db53852d","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"9855e02d837744303391e5623a531734443a5f8e6e8755e018c41d63ad797db2","impliedFormat":1},{"version":"bdba81959361810be44bcfdd283f4d601e406ab5ad1d2bdff0ed480cf983c9d7","impliedFormat":1},{"version":"836a356aae992ff3c28a0212e3eabcb76dd4b0cc06bcb9607aeef560661b860d","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true,"impliedFormat":1},{"version":"b326f4813b90d230ec3950f66bd5b5ce3971aac5fac67cfafc54aa07b39fd07f","affectsGlobalScope":true,"impliedFormat":1},{"version":"c8420c7c2b778b334587a4c0311833b5212ff2f684ea37b2f0e2b117f1d7210d","impliedFormat":1},{"version":"b6b08215821c9833b0e8e30ea1ed178009f2f3ff5d7fae3865ee42f97cc87784","impliedFormat":1},{"version":"b795c3e47a26be91ac33d8115acdc37bfa41ecc701fb237c64a23da4d2b7e1d8","impliedFormat":1},{"version":"73cf6cc19f16c0191e4e9d497ab0c11c7b38f1ca3f01ad0f09a3a5a971aac4b8","impliedFormat":1},{"version":"528b62e4272e3ddfb50e8eed9e359dedea0a4d171c3eb8f337f4892aac37b24b","impliedFormat":1},{"version":"ed58b9974bb3114f39806c9c2c6258c4ffa6a255921976a7c53dfa94bf178f42","impliedFormat":1},{"version":"e6fa9ad47c5f71ff733744a029d1dc472c618de53804eae08ffc243b936f87ff","affectsGlobalScope":true,"impliedFormat":1},{"version":"f72bc8fe16da67e4e3268599295797b202b95e54bd215a03f97e925dd1502a36","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"915e18c559321c0afaa8d34674d3eb77e1ded12c3e85bf2a9891ec48b07a1ca5","affectsGlobalScope":true,"impliedFormat":1},{"version":"ad7e61eca7f2f8bf47e72695f9f6663b75e41d87ef49abdb17c0cb843862f8aa","impliedFormat":1},{"version":"ecba2e44af95b0599c269a92628cec22e752868bce37396740deb51a5c547a26","impliedFormat":1},{"version":"46a9fb41a8f3bc7539eeebc15a6e04b9e55d7537a081615ad3614220d34c3e0f","impliedFormat":1},{"version":"e9727a118ce60808e62457c89762fe5a4e2be8e9fd0112d12432d1bafdba942f","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"933921f0bb0ec12ef45d1062a1fc0f27635318f4d294e4d99de9a5493e618ca2","impliedFormat":1},{"version":"71a0f3ad612c123b57239a7749770017ecfe6b66411488000aba83e4546fde25","impliedFormat":1},{"version":"70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","impliedFormat":1},{"version":"4f9d8ca0c417b67b69eeb54c7ca1bedd7b56034bb9bfd27c5d4f3bc4692daca7","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"3a90b9beac4c2bfdf6517faae0940a042b81652badf747df0a7c7593456f6ebe","impliedFormat":1},{"version":"8302157cd431b3943eed09ad439b4441826c673d9f870dcb0e1f48e891a4211e","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"dba28a419aec76ed864ef43e5f577a5c99a010c32e5949fe4e17a4d57c58dd11","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"a5890565ed564c7b29eb1b1038d4e10c03a3f5231b0a8d48fea4b41ab19f4f46","impliedFormat":1},{"version":"f0be1b8078cd549d91f37c30c222c2a187ac1cf981d994fb476a1adc61387b14","affectsGlobalScope":true,"impliedFormat":1},{"version":"0aaed1d72199b01234152f7a60046bc947f1f37d78d182e9ae09c4289e06a592","impliedFormat":1},{"version":"98ffdf93dfdd206516971d28e3e473f417a5cfd41172e46b4ce45008f640588e","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"cee74f5970ffc01041e5bffc3f324c20450534af4054d2c043cb49dbbd4ec8f7","affectsGlobalScope":true,"impliedFormat":1},{"version":"1a654e0d950353614ba4637a8de4f9d367903a0692b748e11fccf8c880c99735","affectsGlobalScope":true,"impliedFormat":1},{"version":"42da246c46ca3fd421b6fd88bb4466cda7137cf33e87ba5ceeded30219c428bd","impliedFormat":1},{"version":"3a051941721a7f905544732b0eb819c8d88333a96576b13af08b82c4f17581e4","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"f2feb9696208311cdcf1936df2b7cbec96a3f0ab9d403952bf170546d4253a90","affectsGlobalScope":true,"impliedFormat":1},{"version":"db3d77167a7da6c5ba0c51c5b654820e3464093f21724ccd774c0b9bc3f81bc0","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1}],"root":[[57,59],[61,64],[67,71]],"options":{"composite":true,"declaration":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"module":1,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"outDir":"./","sourceMap":true,"strict":true,"target":7},"referencedMap":[[54,1],[53,2],[60,3],[66,4],[65,2],[117,5],[118,5],[119,6],[77,7],[120,8],[121,9],[122,10],[72,2],[75,11],[73,2],[74,2],[123,12],[124,13],[125,14],[126,15],[127,16],[128,17],[129,17],[131,2],[130,18],[132,19],[133,20],[134,21],[116,22],[76,2],[135,23],[136,24],[137,25],[173,26],[138,27],[139,28],[140,29],[141,30],[142,31],[143,32],[147,33],[148,34],[149,35],[150,36],[151,36],[152,37],[153,2],[154,2],[155,38],[157,39],[156,40],[158,41],[159,42],[160,43],[161,44],[162,45],[163,46],[164,47],[165,48],[166,49],[167,50],[168,51],[169,52],[170,53],[171,54],[172,55],[56,56],[78,2],[55,2],[144,2],[145,2],[146,57],[49,2],[50,2],[10,2],[8,2],[9,2],[14,2],[13,2],[2,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[3,2],[23,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[51,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[1,2],[12,2],[11,2],[52,2],[94,58],[104,59],[93,58],[114,60],[85,61],[84,62],[113,63],[107,64],[112,65],[87,66],[101,67],[86,68],[110,69],[82,70],[81,63],[111,71],[83,72],[88,73],[89,2],[92,73],[79,2],[115,74],[105,75],[96,76],[97,77],[99,78],[95,79],[98,80],[108,63],[90,81],[91,82],[100,83],[80,84],[103,75],[102,73],[106,2],[109,85],[69,86],[71,2],[70,87],[68,88],[63,89],[59,90],[57,2],[64,91],[67,92],[62,93],[58,94],[61,3]],"latestChangedDtsFile":"./index.d.ts","version":"5.9.2"}
\ No newline at end of file
diff --git a/dist/esm/compiler-debug.js b/dist/esm/compiler-debug.js
index 87d992db78add55298707b3acd1ea76bcaa85aaa..27163612788b608775f38754d420a80a0b5a8b4b 100644
--- a/dist/esm/compiler-debug.js
+++ b/dist/esm/compiler-debug.js
@@ -1,12 +1,12 @@
-import { deepkitType } from './src/plugin.js';
-import { readFileSync } from 'fs';
+import { readFileSync } from "fs";
+import { deepkitType } from "./src/plugin.js";
 function parseArguments(args) {
     const result = {
-        file: '',
+        file: ""
     };
     for (let i = 0; i < args.length; i++) {
         const arg = args[i];
-        if (arg === '--config') {
+        if (arg === "--config") {
             result.config = args[i + 1];
             i++;
         }
@@ -18,9 +18,9 @@ function parseArguments(args) {
 }
 const args = parseArguments(process.argv.slice(2));
 const transformer = deepkitType({
-    tsConfig: args.config,
+    tsConfig: args.config
 });
-const code = readFileSync(args.file, 'utf8');
+const code = readFileSync(args.file, "utf8");
 const transformed = transformer(code, args.file);
 console.log(transformed?.code);
 //# sourceMappingURL=compiler-debug.js.map
\ No newline at end of file
diff --git a/dist/esm/compiler-debug.js.map b/dist/esm/compiler-debug.js.map
index fc66dc2aa934fe74b0b16506e5ed6c139048a13f..d54d93a45182bb26b90ef44f547f1e4e20c60656 100644
--- a/dist/esm/compiler-debug.js.map
+++ b/dist/esm/compiler-debug.js.map
@@ -1 +1 @@
-{"version":3,"file":"compiler-debug.js","sourceRoot":"","sources":["../../compiler-debug.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,YAAY,EAAE,MAAM,IAAI,CAAC;AAOlC,SAAS,cAAc,CAAC,IAAc;IAClC,MAAM,MAAM,GAAc;QACtB,IAAI,EAAE,EAAE;KACX,CAAC;IAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACnC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,GAAG,KAAK,UAAU,EAAE,CAAC;YACrB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,CAAC,EAAE,CAAC;QACR,CAAC;aAAM,CAAC;YACJ,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;QACtB,CAAC;IACL,CAAC;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,MAAM,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAInD,MAAM,WAAW,GAAG,WAAW,CAAC;IAC5B,QAAQ,EAAE,IAAI,CAAC,MAAM;CACxB,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAEjD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC"}
\ No newline at end of file
+{"version":3,"file":"compiler-debug.js","sourceRoot":"","sources":["../../compiler-debug.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,IAAI,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAO9C,SAAS,cAAc,CAAC,IAAc;IACpC,MAAM,MAAM,GAAc;QACxB,IAAI,EAAE,EAAE;KACT,CAAC;IAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,GAAG,KAAK,UAAU,EAAE,CAAC;YACvB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,CAAC,EAAE,CAAC;QACN,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;QACpB,CAAC;IACH,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAEnD,MAAM,WAAW,GAAG,WAAW,CAAC;IAC9B,QAAQ,EAAE,IAAI,CAAC,MAAM;CACtB,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAEjD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC"}
\ No newline at end of file
diff --git a/dist/esm/index.d.ts b/dist/esm/index.d.ts
index f23523d5f37ad4d9a3c527a8a0830d5cd7dedd52..d25a4bfc6b682828fbff7b3be720a64a6fb80daa 100644
--- a/dist/esm/index.d.ts
+++ b/dist/esm/index.d.ts
@@ -1,7 +1,7 @@
-import type { Program } from 'typescript';
-export * from './src/compiler.js';
-export * from './src/loader.js';
-export default function myTransformerPlugin(program: Program, opts: {}): {
+import type { Program } from "typescript";
+export * from "./src/compiler.js";
+export * from "./src/loader.js";
+export default function transformerPlugin(program: Program, opts: {}): {
     before: import("typescript").CustomTransformerFactory;
     afterDeclarations: import("typescript").CustomTransformerFactory;
 };
diff --git a/dist/esm/index.js b/dist/esm/index.js
index 902e5aefaf0463b6a070aa46b4c0319ae4ce042a..381194cd89df6bb7e84a20f1f3a30941530d8ac0 100644
--- a/dist/esm/index.js
+++ b/dist/esm/index.js
@@ -7,13 +7,13 @@
  *
  * You should have received a copy of the MIT License along with this program.
  */
-import { declarationTransformer, transformer } from './src/compiler.js';
-export * from './src/compiler.js';
-export * from './src/loader.js';
-export default function myTransformerPlugin(program, opts) {
+import { declarationTransformer, transformer } from "./src/compiler.js";
+export * from "./src/compiler.js";
+export * from "./src/loader.js";
+export default function transformerPlugin(program, opts) {
     return {
         before: transformer,
-        afterDeclarations: declarationTransformer,
+        afterDeclarations: declarationTransformer
     };
 }
 //# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/dist/esm/index.js.map b/dist/esm/index.js.map
index 0ee868545685a4f96411b6af9ef0eb127423ba9d..3975cfc9267bfe8789cc712c5d49e12cba182a30 100644
--- a/dist/esm/index.js.map
+++ b/dist/esm/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../index.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAEH,OAAO,EAAE,sBAAsB,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAGxE,cAAc,mBAAmB,CAAC;AAClC,cAAc,iBAAiB,CAAC;AAEhC,MAAM,CAAC,OAAO,UAAU,mBAAmB,CAAC,OAAgB,EAAE,IAAQ;IAClE,OAAO;QACH,MAAM,EAAE,WAAW;QACnB,iBAAiB,EAAE,sBAAsB;KAC5C,CAAC;AACN,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../index.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAGH,OAAO,EAAE,sBAAsB,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAExE,cAAc,mBAAmB,CAAC;AAClC,cAAc,iBAAiB,CAAC;AAEhC,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAC,OAAgB,EAAE,IAAQ;IAClE,OAAO;QACL,MAAM,EAAE,WAAW;QACnB,iBAAiB,EAAE,sBAAsB;KAC1C,CAAC;AACJ,CAAC"}
\ No newline at end of file
diff --git a/dist/esm/install-transformer.js b/dist/esm/install-transformer.js
index a6d1166aee0da2155148768225293c6221494479..10466af24ca105badc3bff48c898102d33e550e4 100644
--- a/dist/esm/install-transformer.js
+++ b/dist/esm/install-transformer.js
@@ -4,11 +4,11 @@
  *
  * The critical section that needs adjustment is in the `function getScriptTransformers` in `node_modules/typescript/lib/tsc.js`.
  */
-import { dirname, join, relative } from 'path';
-import { existsSync, readFileSync, writeFileSync } from 'fs';
+import { existsSync, readFileSync, writeFileSync } from "fs";
+import { dirname, join, relative } from "path";
 let to = process.argv[2] || process.cwd();
 function getPatchId(id) {
-    return 'deepkit_type_patch_' + id;
+    return "deepkit_type_patch_" + id;
 }
 function getCode(deepkitDistPath, varName, id) {
     return `
@@ -45,31 +45,31 @@ function isPatched(code, id) {
     return code.includes(getPatchId(id));
 }
 function patchGetTransformers(deepkitDistPath, code) {
-    const id = 'patchGetTransformers';
+    const id = "patchGetTransformers";
     if (isPatched(code, id))
-        return '';
+        return "";
     const find = /function getTransformers\([^)]+\)\s*{/;
     if (!code.match(find))
-        return '';
+        return "";
     code = code.replace(find, function (a) {
-        return a + '\n    ' + getCode(deepkitDistPath, 'customTransformers', id);
+        return a + "\n    " + getCode(deepkitDistPath, "customTransformers", id);
     });
     return code;
 }
-if (to + '/dist/cjs' === __dirname) {
-    to = join(to, '..'); //we exclude type-compiler/node_modules
+if (to + "/dist/cjs" === __dirname) {
+    to = join(to, ".."); //we exclude type-compiler/node_modules
 }
-const typeScriptPath = dirname(require.resolve('typescript', { paths: [to] }));
+const typeScriptPath = dirname(require.resolve("typescript", { paths: [to] }));
 const deepkitDistPath = relative(typeScriptPath, __dirname);
-const paths = ['tsc.js', '_tsc.js', 'typescript.js'];
+const paths = ["tsc.js", "_tsc.js", "typescript.js"];
 for (const fileName of paths) {
     const file = join(typeScriptPath, fileName);
     if (!existsSync(file))
         continue;
-    const content = patchGetTransformers(deepkitDistPath, readFileSync(file, 'utf8'));
+    const content = patchGetTransformers(deepkitDistPath, readFileSync(file, "utf8"));
     if (!content)
         continue;
     writeFileSync(file, content);
-    console.log('Deepkit Type: Injected TypeScript transformer at', file);
+    console.log("Deepkit Type: Injected TypeScript transformer at", file);
 }
 //# sourceMappingURL=install-transformer.js.map
\ No newline at end of file
diff --git a/dist/esm/install-transformer.js.map b/dist/esm/install-transformer.js.map
index 1883ffa7706ccb600706b1677045d18147790536..bb1ba946adfafdb0f6c90ee87900d08534f2afde 100644
--- a/dist/esm/install-transformer.js.map
+++ b/dist/esm/install-transformer.js.map
@@ -1 +1 @@
-{"version":3,"file":"install-transformer.js","sourceRoot":"","sources":["../../install-transformer.ts"],"names":[],"mappings":";AAEA;;;;GAIG;AAEH,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,MAAM,CAAC;AAC/C,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,IAAI,CAAC;AAE7D,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;AAE1C,SAAS,UAAU,CAAC,EAAU;IAC1B,OAAO,qBAAqB,GAAG,EAAE,CAAC;AACtC,CAAC;AAED,SAAS,OAAO,CAAC,eAAuB,EAAE,OAAe,EAAE,EAAU;IACjE,OAAO;YACC,UAAU,CAAC,EAAE,CAAC;;;;;;4CAMkB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;;;2CAGhC,OAAO;uBAC3B,OAAO,YAAY,OAAO;;iCAEhB,OAAO;;;;2BAIb,OAAO,kDAAkD,OAAO;;2BAEhE,OAAO,uBAAuB,OAAO;2BACrC,OAAO;0BACR,OAAO;;;;;;YAMrB,UAAU,CAAC,EAAE,CAAC;KACrB,CAAC;AACN,CAAC;AAED,SAAS,SAAS,CAAC,IAAY,EAAE,EAAU;IACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,CAAC;AAED,SAAS,oBAAoB,CAAC,eAAuB,EAAE,IAAY;IAC/D,MAAM,EAAE,GAAG,sBAAsB,CAAC;IAClC,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC;QAAE,OAAO,EAAE,CAAC;IAEnC,MAAM,IAAI,GAAG,uCAAuC,CAAC;IACrD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAAE,OAAO,EAAE,CAAC;IAEjC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC;QACjC,OAAO,CAAC,GAAG,QAAQ,GAAG,OAAO,CAAC,eAAe,EAAE,oBAAoB,EAAE,EAAE,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,IAAI,EAAE,GAAG,WAAW,KAAK,SAAS,EAAE,CAAC;IACjC,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,uCAAuC;AAChE,CAAC;AAED,MAAM,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/E,MAAM,eAAe,GAAG,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;AAE5D,MAAM,KAAK,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;AAErD,KAAK,MAAM,QAAQ,IAAI,KAAK,EAAE,CAAC;IAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAAE,SAAS;IAChC,MAAM,OAAO,GAAG,oBAAoB,CAAC,eAAe,EAAE,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IAClF,IAAI,CAAC,OAAO;QAAE,SAAS;IACvB,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC7B,OAAO,CAAC,GAAG,CAAC,kDAAkD,EAAE,IAAI,CAAC,CAAC;AAC1E,CAAC"}
\ No newline at end of file
+{"version":3,"file":"install-transformer.js","sourceRoot":"","sources":["../../install-transformer.ts"],"names":[],"mappings":";AAEA;;;;GAIG;AAEH,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,IAAI,CAAC;AAC7D,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,MAAM,CAAC;AAE/C,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;AAE1C,SAAS,UAAU,CAAC,EAAU;IAC5B,OAAO,qBAAqB,GAAG,EAAE,CAAC;AACpC,CAAC;AAED,SAAS,OAAO,CAAC,eAAuB,EAAE,OAAe,EAAE,EAAU;IACnE,OAAO;YACG,UAAU,CAAC,EAAE,CAAC;;;;;;4CAMkB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;;;2CAGhC,OAAO;uBAC3B,OAAO,YAAY,OAAO;;iCAEhB,OAAO;;;;2BAIb,OAAO,kDAAkD,OAAO;;2BAEhE,OAAO,uBAAuB,OAAO;2BACrC,OAAO;0BACR,OAAO;;;;;;YAMrB,UAAU,CAAC,EAAE,CAAC;KACrB,CAAC;AACN,CAAC;AAED,SAAS,SAAS,CAAC,IAAY,EAAE,EAAU;IACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;AACvC,CAAC;AAED,SAAS,oBAAoB,CAAC,eAAuB,EAAE,IAAY;IACjE,MAAM,EAAE,GAAG,sBAAsB,CAAC;IAClC,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC;QAAE,OAAO,EAAE,CAAC;IAEnC,MAAM,IAAI,GAAG,uCAAuC,CAAC;IACrD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAAE,OAAO,EAAE,CAAC;IAEjC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC;QACnC,OAAO,CAAC,GAAG,QAAQ,GAAG,OAAO,CAAC,eAAe,EAAE,oBAAoB,EAAE,EAAE,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACd,CAAC;AAED,IAAI,EAAE,GAAG,WAAW,KAAK,SAAS,EAAE,CAAC;IACnC,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,uCAAuC;AAC9D,CAAC;AAED,MAAM,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/E,MAAM,eAAe,GAAG,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;AAE5D,MAAM,KAAK,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;AAErD,KAAK,MAAM,QAAQ,IAAI,KAAK,EAAE,CAAC;IAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAAE,SAAS;IAChC,MAAM,OAAO,GAAG,oBAAoB,CAClC,eAAe,EACf,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAC3B,CAAC;IACF,IAAI,CAAC,OAAO;QAAE,SAAS;IACvB,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC7B,OAAO,CAAC,GAAG,CAAC,kDAAkD,EAAE,IAAI,CAAC,CAAC;AACxE,CAAC"}
\ No newline at end of file
diff --git a/dist/esm/src/compiler.d.ts b/dist/esm/src/compiler.d.ts
index 40fe46536960038266a8bd326de1eb29b5a6cf98..36aca6411cc7c9945a30042c68271bc66624bbbe 100644
--- a/dist/esm/src/compiler.d.ts
+++ b/dist/esm/src/compiler.d.ts
@@ -1,15 +1,24 @@
-import ts, { ArrowFunction, Bundle, ClassDeclaration, ClassExpression, CompilerHost, CompilerOptions, ConstructorDeclaration, CustomTransformer, CustomTransformerFactory, Declaration, EntityName, ExportDeclaration, Expression, ExpressionWithTypeArguments, FunctionDeclaration, FunctionExpression, Identifier, ImportDeclaration, JSDocImportTag, MethodDeclaration, ModuleDeclaration, ModuleExportName, Node, NodeFactory, ParseConfigHost, PropertyAccessExpression, QualifiedName, Statement, TransformationContext, TypeAliasDeclaration, TypeChecker, TypeParameterDeclaration, TypeReferenceNode } from 'typescript';
-import { NodeConverter, PackExpression } from './reflection-ast.js';
-import { SourceFile } from './ts-types.js';
-import { ReflectionOp } from '@deepkit/type-spec';
-import { Resolver } from './resolver.js';
-import { ConfigResolver, MatchResult, ReflectionConfig, ReflectionConfigCache } from './config.js';
+import ts, { ArrowFunction, Bundle, ClassDeclaration, ClassExpression, CompilerHost, CompilerOptions, ConstructorDeclaration, CustomTransformer, CustomTransformerFactory, Declaration, EntityName, ExportDeclaration, Expression, ExpressionWithTypeArguments, FunctionDeclaration, FunctionExpression, Identifier, ImportDeclaration, JSDocImportTag, MethodDeclaration, ModuleDeclaration, ModuleExportName, Node, NodeFactory, ParseConfigHost, PropertyAccessExpression, QualifiedName, Statement, TransformationContext, TypeAliasDeclaration, TypeChecker, TypeParameterDeclaration, TypeReferenceNode } from "typescript";
+import { ReflectionOp } from "@deepkit/type-spec";
+import { ConfigResolver, MatchResult, ReflectionConfig, ReflectionConfigCache } from "./config.js";
+import { NodeConverter, PackExpression } from "./reflection-ast.js";
+import { Resolver } from "./resolver.js";
+import { SourceFile } from "./ts-types.js";
 export declare function encodeOps(ops: ReflectionOp[]): string;
 export declare const packSizeByte: number;
 /**
  * It can't be more ops than this given number
  */
 export declare const packSize: number;
+export interface TagsReflectionStruct {
+    hidden?: boolean;
+    ignore?: boolean;
+    internal?: boolean;
+    alias?: string[];
+    title?: string;
+    permission?: string[];
+    domain?: string;
+}
 export declare function debugPackStruct(sourceFile: SourceFile, forType: Node, pack: {
     ops: ReflectionOp[];
     stack: PackExpression[];
@@ -109,7 +118,7 @@ export declare class ReflectionTransformer implements CustomTransformer {
      * Types added to this map will get a type program directly under it.
      * This is for types used in the very same file.
      */
-    protected compileDeclarations: Map<ts.TypeAliasDeclaration | ts.InterfaceDeclaration | ts.EnumDeclaration, {
+    protected compileDeclarations: Map<ts.EnumDeclaration | ts.InterfaceDeclaration | ts.TypeAliasDeclaration, {
         name: EntityName;
         sourceFile: SourceFile;
         compiled?: Statement[];
@@ -159,11 +168,16 @@ export declare class ReflectionTransformer implements CustomTransformer {
         __deepkitConfig?: ReflectionConfig;
     }): boolean;
     transformSourceFile(sourceFile: SourceFile): SourceFile;
-    protected getModuleType(): 'cjs' | 'esm';
+    protected getModuleType(): "cjs" | "esm";
     protected getArrowFunctionΩPropertyAccessIdentifier(node: ArrowFunction): Identifier | undefined;
     protected injectResetΩ<T extends FunctionDeclaration | FunctionExpression | MethodDeclaration | ConstructorDeclaration | ArrowFunction>(node: T): T;
     protected createProgramVarFromNode(node: Node, name: EntityName, sourceFile?: SourceFile): Statement[];
     protected extractPackStructOfExpression(node: Expression, program: CompilerProgram): void;
+    protected parseDefaultValue(kind: ts.SyntaxKind, defaultValue: string): any;
+    protected parseTagReflection(node: Node | Declaration | ClassDeclaration | ClassExpression): TagsReflectionStruct;
+    protected extractTagReflections(program: CompilerProgram, node?: Node): void;
+    protected extractDefaultValueReflection(program: CompilerProgram, node?: Node): void;
+    protected extractDescriptionReflection(program: CompilerProgram, node?: Node): void;
     protected extractPackStructOfType(node: Node | Declaration | ClassDeclaration | ClassExpression, program: CompilerProgram): void;
     protected knownClasses: {
         [name: string]: ReflectionOp;
@@ -280,12 +294,12 @@ export declare class ReflectionTransformer implements CustomTransformer {
      *
      * => function name() {}; name.__type = 34;
      */
-    protected decorateFunctionDeclaration(declaration: FunctionDeclaration): ts.Statement[] | ts.FunctionDeclaration | ts.ExportAssignment | undefined;
+    protected decorateFunctionDeclaration(declaration: FunctionDeclaration): ts.ExportAssignment | ts.FunctionDeclaration | ts.Statement[] | undefined;
     /**
      * const fn = () => {}
      * => const fn = __assignType(() => {}, [34])
      */
-    protected decorateArrowFunction(expression: ArrowFunction): ts.CallExpression | ts.ArrowFunction;
+    protected decorateArrowFunction(expression: ArrowFunction): ts.ArrowFunction | ts.CallExpression;
     /**
      * Object.assign(fn, {__type: []}) is much slower than a custom implementation like
      *
diff --git a/dist/esm/src/compiler.js b/dist/esm/src/compiler.js
index 331e52a7500ace764575fc24580b1812b24eb606..c03cfa8c3e50dd4af056fe33f20681ee647743fe 100644
--- a/dist/esm/src/compiler.js
+++ b/dist/esm/src/compiler.js
@@ -7,22 +7,21 @@
  *
  * You should have received a copy of the MIT License along with this program.
  */
-import ts from 'typescript';
-import { ensureImportIsEmitted, extractJSDocAttribute, findSourceFile, getEscapedText, getGlobalsOfSourceFile, getIdentifierName, getNameAsString, getPropertyName, hasModifier, isNodeWithLocals, NodeConverter, serializeEntityNameAsExpression, } from './reflection-ast.js';
-import { ReflectionOp, TypeNumberBrand } from '@deepkit/type-spec';
-import { Resolver } from './resolver.js';
-import { knownLibFilesForCompilerOptions } from '@typescript/vfs';
-import { debug, debug2 } from './debug.js';
-import { getConfigResolver, reflectionModeMatcher } from './config.js';
-const { visitEachChild, visitNode, isPropertyAssignment, isArrayTypeNode, isArrowFunction, isBlock, isCallExpression, isCallSignatureDeclaration, isClassDeclaration, isClassExpression, isConstructorDeclaration, isConstructorTypeNode, isConstructSignatureDeclaration, isEnumDeclaration, isExportDeclaration, isExpression, isExpressionWithTypeArguments, isFunctionDeclaration, isFunctionExpression, isFunctionLike, isIdentifier, isImportClause, isImportDeclaration, isImportSpecifier, isInferTypeNode, isInterfaceDeclaration, isMethodDeclaration, isMethodSignature, isModuleDeclaration, isNamedExports, isNamedTupleMember, isNewExpression, isObjectLiteralExpression, isOptionalTypeNode, isParameter, isParenthesizedExpression, isParenthesizedTypeNode, isPropertyAccessExpression, isQualifiedName, isSourceFile, isStringLiteral, isTypeAliasDeclaration, isTypeLiteralNode, isTypeParameterDeclaration, isTypeQueryNode, isTypeReferenceNode, isUnionTypeNode, isExpressionStatement, isVariableDeclaration, getEffectiveConstraintOfTypeParameter, addSyntheticLeadingComment, createCompilerHost, createPrinter, escapeLeadingUnderscores, EmitHint, NodeFlags, SyntaxKind, ScriptTarget, ModifierFlags, ScriptKind, } = ts;
+import ts from "typescript";
+import { ReflectionOp, TypeNumberBrand } from "@deepkit/type-spec";
+import { knownLibFilesForCompilerOptions } from "@typescript/vfs";
+import { getConfigResolver, reflectionModeMatcher } from "./config.js";
+import { debug, debug2 } from "./debug.js";
+import { ensureImportIsEmitted, extractJSDocArray, extractJSDocAttribute, extractJSDocBoolean, findSourceFile, getEscapedText, getGlobalsOfSourceFile, getIdentifierName, getNameAsString, getPropertyName, hasModifier, isNodeWithLocals, NodeConverter, serializeEntityNameAsExpression } from "./reflection-ast.js";
+import { Resolver } from "./resolver.js";
+const { visitEachChild, visitNode, isPropertyAssignment, isArrayTypeNode, isArrowFunction, isBlock, isCallExpression, isCallSignatureDeclaration, isClassDeclaration, isClassExpression, isConstructorDeclaration, isConstructorTypeNode, isConstructSignatureDeclaration, isEnumDeclaration, isExportDeclaration, isExpression, isExpressionWithTypeArguments, isFunctionDeclaration, isFunctionExpression, isFunctionLike, isIdentifier, isImportClause, isImportDeclaration, isImportSpecifier, isInferTypeNode, isInterfaceDeclaration, isMethodDeclaration, isMethodSignature, isModuleDeclaration, isNamedExports, isNamedTupleMember, isNewExpression, isObjectLiteralExpression, isOptionalTypeNode, isParameter, isParenthesizedExpression, isParenthesizedTypeNode, isPropertyAccessExpression, isQualifiedName, isSourceFile, isStringLiteral, isTypeAliasDeclaration, isTypeLiteralNode, isTypeParameterDeclaration, isTypeQueryNode, isTypeReferenceNode, isUnionTypeNode, isExpressionStatement, isVariableDeclaration, getEffectiveConstraintOfTypeParameter, addSyntheticLeadingComment, createCompilerHost, createPrinter, escapeLeadingUnderscores, EmitHint, NodeFlags, SyntaxKind, ScriptTarget, ModifierFlags, ScriptKind } = ts;
 export function encodeOps(ops) {
-    return ops.map(v => String.fromCharCode(v + 33)).join('');
+    return ops.map(v => String.fromCharCode(v + 33)).join("");
 }
 function filterUndefined(object) {
     return Object.fromEntries(Object.entries(object).filter(([, v]) => v !== undefined));
 }
 export const packSizeByte = 6;
-const serverEnv = 'undefined' !== typeof process;
 /**
  * It can't be more ops than this given number
  */
@@ -58,6 +57,7 @@ const OPs = {
     [ReflectionOp.jumpCondition]: { params: 2 },
     [ReflectionOp.typeName]: { params: 1 },
     [ReflectionOp.implements]: { params: 1 },
+    [ReflectionOp.tags]: { params: 1 }
 };
 export function debugPackStruct(sourceFile, forType, pack) {
     const items = [];
@@ -75,14 +75,14 @@ export function debugPackStruct(sourceFile, forType, pack) {
     const printer = createPrinter();
     const stack = [];
     for (const s of pack.stack) {
-        if ('object' === typeof s && 'getText' in s) {
+        if ("object" === typeof s && "getText" in s) {
             stack.push(printer.printNode(EmitHint.Unspecified, s, sourceFile));
         }
         else {
             stack.push(JSON.stringify(s));
         }
     }
-    console.log(stack.join(','), '|', ...items);
+    console.log(stack.join(","), "|", ...items);
 }
 function findVariable(frame, name, frameOffset = 0) {
     const variable = frame.variables.find(v => v.name === name);
@@ -143,7 +143,7 @@ class CompilerProgram {
     popCoRoutine() {
         const coRoutine = this.activeCoRoutines.pop();
         if (!coRoutine)
-            throw new Error('No active co routine found');
+            throw new Error("No active co routine found");
         this.popFrameImplicit();
         if (this.mainOffset === 0) {
             this.mainOffset = 2; //we add JUMP + index when building the program
@@ -156,8 +156,8 @@ class CompilerProgram {
     }
     pushOp(...ops) {
         for (const op of ops) {
-            if ('number' !== typeof op) {
-                throw new Error('No valid OP added');
+            if ("number" !== typeof op) {
+                throw new Error("No valid OP added");
             }
             // if (op + 33 > 126) {
             //todo: encode as var int
@@ -208,7 +208,9 @@ class CompilerProgram {
     pushFrame(implicit = false) {
         if (!implicit)
             this.pushOp(ReflectionOp.frame);
-        const opIndex = this.activeCoRoutines.length ? this.activeCoRoutines[this.activeCoRoutines.length - 1].ops.length : this.ops.length;
+        const opIndex = this.activeCoRoutines.length
+            ? this.activeCoRoutines[this.activeCoRoutines.length - 1].ops.length
+            : this.ops.length;
         this.frame = { previous: this.frame, variables: [], opIndex };
         return this.frame;
     }
@@ -232,15 +234,17 @@ class CompilerProgram {
         this.pushOpAtFrame(frame, ReflectionOp.var);
         frame.variables.push({
             index: frame.variables.length,
-            name,
+            name
         });
         return frame.variables.length - 1;
     }
     pushTemplateParameter(name, withDefault = false) {
-        this.pushOp(withDefault ? ReflectionOp.typeParameterDefault : ReflectionOp.typeParameter, this.findOrAddStackEntry(name));
+        this.pushOp(withDefault
+            ? ReflectionOp.typeParameterDefault
+            : ReflectionOp.typeParameter, this.findOrAddStackEntry(name));
         this.frame.variables.push({
             index: this.frame.variables.length,
-            name,
+            name
         });
         return this.frame.variables.length - 1;
     }
@@ -252,7 +256,10 @@ function getAssignTypeExpression(call) {
     if (isParenthesizedExpression(call) && isCallExpression(call.expression)) {
         call = call.expression;
     }
-    if (isCallExpression(call) && isIdentifier(call.expression) && getIdentifierName(call.expression) === '__assignType' && call.arguments.length > 0) {
+    if (isCallExpression(call) &&
+        isIdentifier(call.expression) &&
+        getIdentifierName(call.expression) === "__assignType" &&
+        call.arguments.length > 0) {
         return call.arguments[0];
     }
     return;
@@ -265,9 +272,11 @@ function getReceiveTypeParameter(type) {
                 return rfn;
         }
     }
-    else if (isTypeReferenceNode(type) && isIdentifier(type.typeName)
-        && getIdentifierName(type.typeName) === 'ReceiveType' && !!type.typeArguments
-        && type.typeArguments.length === 1)
+    else if (isTypeReferenceNode(type) &&
+        isIdentifier(type.typeName) &&
+        getIdentifierName(type.typeName) === "ReceiveType" &&
+        !!type.typeArguments &&
+        type.typeArguments.length === 1)
         return type;
     return;
 }
@@ -293,7 +302,7 @@ export class Cache {
  * Deepkit/type can then extract and decode them on-demand.
  */
 export class ReflectionTransformer {
-    constructor(context, cache = new Cache) {
+    constructor(context, cache = new Cache()) {
         this.context = context;
         this.cache = cache;
         this.embedAssignType = false;
@@ -314,23 +323,23 @@ export class ReflectionTransformer {
         this.addImports = [];
         this.overriddenHost = false;
         this.knownClasses = {
-            'Int8Array': ReflectionOp.int8Array,
-            'Uint8Array': ReflectionOp.uint8Array,
-            'Uint8ClampedArray': ReflectionOp.uint8ClampedArray,
-            'Int16Array': ReflectionOp.int16Array,
-            'Uint16Array': ReflectionOp.uint16Array,
-            'Int32Array': ReflectionOp.int32Array,
-            'Uint32Array': ReflectionOp.uint32Array,
-            'Float32Array': ReflectionOp.float32Array,
-            'Float64Array': ReflectionOp.float64Array,
-            'ArrayBuffer': ReflectionOp.arrayBuffer,
-            'BigInt64Array': ReflectionOp.bigInt64Array,
-            'Date': ReflectionOp.date,
-            'RegExp': ReflectionOp.regexp,
-            'String': ReflectionOp.string,
-            'Number': ReflectionOp.number,
-            'BigInt': ReflectionOp.bigint,
-            'Boolean': ReflectionOp.boolean,
+            "Int8Array": ReflectionOp.int8Array,
+            "Uint8Array": ReflectionOp.uint8Array,
+            "Uint8ClampedArray": ReflectionOp.uint8ClampedArray,
+            "Int16Array": ReflectionOp.int16Array,
+            "Uint16Array": ReflectionOp.uint16Array,
+            "Int32Array": ReflectionOp.int32Array,
+            "Uint32Array": ReflectionOp.uint32Array,
+            "Float32Array": ReflectionOp.float32Array,
+            "Float64Array": ReflectionOp.float64Array,
+            "ArrayBuffer": ReflectionOp.arrayBuffer,
+            "BigInt64Array": ReflectionOp.bigInt64Array,
+            "Date": ReflectionOp.date,
+            "RegExp": ReflectionOp.regexp,
+            "String": ReflectionOp.string,
+            "Number": ReflectionOp.number,
+            "BigInt": ReflectionOp.bigint,
+            "Boolean": ReflectionOp.boolean
         };
         this.f = context.factory;
         this.nodeConverter = new NodeConverter(this.f);
@@ -349,23 +358,23 @@ export class ReflectionTransformer {
                 if (!this.host.readDirectory)
                     return [];
                 return this.host.readDirectory(path, extensions || [], exclude, include || [], depth);
-            },
+            }
         };
         {
             // TypeAnnotation<T, Options> = { __meta?: never & [T, Options] }
-            const T = this.f.createIdentifier('T');
-            const Options = this.f.createIdentifier('Options');
-            this.intrinsicMetaDeclaration = this.f.createTypeAliasDeclaration([], 'TypeAnnotation', [
+            const T = this.f.createIdentifier("T");
+            const Options = this.f.createIdentifier("Options");
+            this.intrinsicMetaDeclaration = this.f.createTypeAliasDeclaration([], "TypeAnnotation", [
                 this.f.createTypeParameterDeclaration([], T),
-                this.f.createTypeParameterDeclaration([], Options, undefined, this.f.createTypeReferenceNode('never')),
+                this.f.createTypeParameterDeclaration([], Options, undefined, this.f.createTypeReferenceNode("never"))
             ], this.f.createTypeLiteralNode([
-                this.f.createPropertySignature(undefined, '__meta', this.f.createToken(SyntaxKind.QuestionToken), this.f.createIntersectionTypeNode([
-                    this.f.createTypeReferenceNode('never'),
+                this.f.createPropertySignature(undefined, "__meta", this.f.createToken(SyntaxKind.QuestionToken), this.f.createIntersectionTypeNode([
+                    this.f.createTypeReferenceNode("never"),
                     this.f.createTupleTypeNode([
                         this.f.createTypeReferenceNode(T),
-                        this.f.createTypeReferenceNode(Options),
-                    ]),
-                ])),
+                        this.f.createTypeReferenceNode(Options)
+                    ])
+                ]))
             ]));
         }
     }
@@ -376,11 +385,17 @@ export class ReflectionTransformer {
         return this;
     }
     withReflection(config) {
+        const configResolver = {
+            reflectionLevel: "normal",
+            ...config,
+            path: "",
+            mergeStrategy: "replace",
+            compilerOptions: this.compilerOptions
+        };
         const match = (path) => {
             const mode = reflectionModeMatcher(config, path);
-            return { mode, tsConfigPath: '' };
+            return { mode, tsConfigPath: "", level: configResolver.reflectionLevel };
         };
-        const configResolver = { ...config, path: '', mergeStrategy: 'replace', compilerOptions: this.compilerOptions };
         this.overriddenConfigResolver = { config: configResolver, match };
         return this;
     }
@@ -390,24 +405,27 @@ export class ReflectionTransformer {
     getTempResultIdentifier() {
         if (this.tempResultIdentifier)
             return this.tempResultIdentifier;
-        const locals = isNodeWithLocals(this.sourceFile) ? this.sourceFile.locals : undefined;
+        const locals = isNodeWithLocals(this.sourceFile)
+            ? this.sourceFile.locals
+            : undefined;
         if (locals) {
-            let found = 'Ωr';
+            let found = "Ωr";
             for (let i = 0;; i++) {
-                found = 'Ωr' + (i ? i : '');
+                found = "Ωr" + (i ? i : "");
                 if (!locals.has(escapeLeadingUnderscores(found)))
                     break;
             }
             this.tempResultIdentifier = this.f.createIdentifier(found);
         }
         else {
-            this.tempResultIdentifier = this.f.createIdentifier('Ωr');
+            this.tempResultIdentifier = this.f.createIdentifier("Ωr");
         }
         return this.tempResultIdentifier;
     }
     getConfigResolver(sourceFile) {
-        if (this.overriddenConfigResolver)
+        if (this.overriddenConfigResolver) {
             return this.overriddenConfigResolver;
+        }
         return getConfigResolver(this.cache.resolver, this.parseConfigHost, this.compilerOptions, sourceFile);
     }
     getReflectionConfig(sourceFile) {
@@ -422,14 +440,15 @@ export class ReflectionTransformer {
             return true; // intrinsic types are always with reflection
         const reflection = this.getReflectionConfig(sourceFile);
         // explicit means reflection needs to be enabled per Node/File via @reflection
-        if (reflection.mode === 'explicit')
+        if (reflection.mode === "explicit")
             return mode === true;
-        return reflection.mode === 'default';
+        return reflection.mode === "default";
     }
     transformSourceFile(sourceFile) {
         this.sourceFile = sourceFile;
         //if it's not a TS/TSX file, we do not transform it
-        if (sourceFile.scriptKind !== ScriptKind.TS && sourceFile.scriptKind !== ScriptKind.TSX)
+        if (sourceFile.scriptKind !== ScriptKind.TS &&
+            sourceFile.scriptKind !== ScriptKind.TSX)
             return sourceFile;
         if (sourceFile.deepkitTransformed)
             return sourceFile;
@@ -443,8 +462,8 @@ export class ReflectionTransformer {
         // ConfigResolver resolves the whole config.
         // Since this.compilerOptions was already passed to Resolver, we update its values by reference.
         Object.assign(this.compilerOptions, configResolver.config.compilerOptions);
-        if (reflection.mode === 'never') {
-            debug(`Transform file with reflection=${reflection.mode} took ${Date.now() - start}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || 'none'}.`);
+        if (reflection.mode === "never") {
+            debug(`Transform file with reflection=${reflection.mode} took ${Date.now() - start}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || "none"}.`);
             return sourceFile;
         }
         if (!sourceFile.locals) {
@@ -452,29 +471,35 @@ export class ReflectionTransformer {
             ts.bindSourceFile(sourceFile, this.compilerOptions);
         }
         if (sourceFile.kind !== SyntaxKind.SourceFile) {
-            if ('undefined' === typeof require) {
+            if ("undefined" === typeof require) {
                 throw new Error(`Invalid TypeScript library imported. SyntaxKind different ${sourceFile.kind} !== ${SyntaxKind.SourceFile}.`);
             }
-            const path = require.resolve('typescript');
+            const path = require.resolve("typescript");
             throw new Error(`Invalid TypeScript library imported. SyntaxKind different ${sourceFile.kind} !== ${SyntaxKind.SourceFile}. typescript package path: ${path}`);
         }
         const visitor = (node) => {
             node = visitEachChild(node, visitor, this.context);
-            if ((isInterfaceDeclaration(node) || isTypeAliasDeclaration(node) || isEnumDeclaration(node))) {
+            if (isInterfaceDeclaration(node) ||
+                isTypeAliasDeclaration(node) ||
+                isEnumDeclaration(node)) {
                 if (this.isWithReflection(sourceFile, node)) {
                     this.compileDeclarations.set(node, {
                         name: node.name,
-                        sourceFile: this.sourceFile,
+                        sourceFile: this.sourceFile
                     });
                 }
             }
-            if (isMethodDeclaration(node) && node.parent && node.body && isObjectLiteralExpression(node.parent)) {
+            if (isMethodDeclaration(node) &&
+                node.parent &&
+                node.body &&
+                isObjectLiteralExpression(node.parent)) {
                 //replace MethodDeclaration with MethodExpression
                 // {add(v: number) {}} => {add: function (v: number) {}}
                 //so that __type can be added.
                 //{default(){}} can not be converted without losing the function name, so we skip that for the moment.
                 let valid = true;
-                if (node.name.kind === SyntaxKind.Identifier && getIdentifierName(node.name) === 'default')
+                if (node.name.kind === SyntaxKind.Identifier &&
+                    getIdentifierName(node.name) === "default")
                     valid = false;
                 if (valid) {
                     const method = this.decorateFunctionExpression(this.f.createFunctionExpression(node.modifiers, node.asteriskToken, isIdentifier(node.name) ? node.name : undefined, node.typeParameters, node.parameters, node.type, node.body));
@@ -486,33 +511,40 @@ export class ReflectionTransformer {
             }
             else if (isParameter(node) && node.parent && node.type) {
                 // ReceiveType
-                const typeParameters = isConstructorDeclaration(node.parent) ? node.parent.parent.typeParameters : node.parent.typeParameters;
+                const typeParameters = isConstructorDeclaration(node.parent)
+                    ? node.parent.parent.typeParameters
+                    : node.parent.typeParameters;
                 if (!typeParameters)
                     return node;
                 const receiveType = getReceiveTypeParameter(node.type);
                 if (receiveType && receiveType.typeArguments) {
                     const first = receiveType.typeArguments[0];
-                    if (first && isTypeReferenceNode(first) && isIdentifier(first.typeName)) {
+                    if (first &&
+                        isTypeReferenceNode(first) &&
+                        isIdentifier(first.typeName)) {
                         const name = getIdentifierName(first.typeName);
                         //find type parameter position
                         const index = typeParameters.findIndex(v => getIdentifierName(v.name) === name);
-                        let container = this.f.createIdentifier('globalThis');
+                        let container = this.f.createIdentifier("globalThis");
                         if (isArrowFunction(node.parent)) {
                             const next = this.getArrowFunctionΩPropertyAccessIdentifier(node.parent);
                             if (!next)
                                 return node;
                             container = next;
                         }
-                        else if ((isFunctionDeclaration(node.parent) || isFunctionExpression(node.parent)) && node.parent.name) {
+                        else if ((isFunctionDeclaration(node.parent) ||
+                            isFunctionExpression(node.parent)) &&
+                            node.parent.name) {
                             container = node.parent.name;
                         }
-                        else if (isMethodDeclaration(node.parent) && isIdentifier(node.parent.name)) {
-                            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), node.parent.name);
+                        else if (isMethodDeclaration(node.parent) &&
+                            isIdentifier(node.parent.name)) {
+                            container = this.f.createPropertyAccessExpression(this.f.createIdentifier("this"), node.parent.name);
                         }
                         else if (isConstructorDeclaration(node.parent)) {
-                            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), 'constructor');
+                            container = this.f.createPropertyAccessExpression(this.f.createIdentifier("this"), "constructor");
                         }
-                        return this.f.updateParameterDeclaration(node, node.modifiers, node.dotDotDotToken, node.name, node.questionToken, receiveType, this.f.createElementAccessChain(this.f.createPropertyAccessExpression(container, this.f.createIdentifier('Ω')), this.f.createToken(SyntaxKind.QuestionDotToken), this.f.createNumericLiteral(index)));
+                        return this.f.updateParameterDeclaration(node, node.modifiers, node.dotDotDotToken, node.name, node.questionToken, receiveType, this.f.createElementAccessChain(this.f.createPropertyAccessExpression(container, this.f.createIdentifier("Ω")), this.f.createToken(SyntaxKind.QuestionDotToken), this.f.createNumericLiteral(index)));
                     }
                 }
             }
@@ -531,10 +563,13 @@ export class ReflectionTransformer {
             else if (isArrowFunction(node)) {
                 return this.decorateArrowFunction(this.injectResetΩ(node));
             }
-            else if ((isNewExpression(node) || isCallExpression(node)) && node.typeArguments && node.typeArguments.length > 0) {
+            else if ((isNewExpression(node) || isCallExpression(node)) &&
+                node.typeArguments &&
+                node.typeArguments.length > 0) {
                 if (isCallExpression(node)) {
-                    const autoTypeFunctions = ['valuesOf', 'propertiesOf', 'typeOf'];
-                    if (isIdentifier(node.expression) && autoTypeFunctions.includes(getIdentifierName(node.expression))) {
+                    const autoTypeFunctions = ["valuesOf", "propertiesOf", "typeOf"];
+                    if (isIdentifier(node.expression) &&
+                        autoTypeFunctions.includes(getIdentifierName(node.expression))) {
                         const args = [...node.arguments];
                         if (!args.length) {
                             args.push(this.f.createArrayLiteralExpression());
@@ -556,24 +591,26 @@ export class ReflectionTransformer {
                 const typeExpressions = [];
                 for (const a of node.typeArguments) {
                     const type = this.getTypeOfType(a);
-                    typeExpressions.push(type || this.f.createIdentifier('undefined'));
+                    typeExpressions.push(type || this.f.createIdentifier("undefined"));
                 }
-                let container = this.f.createIdentifier('globalThis');
+                let container = this.f.createIdentifier("globalThis");
                 if (isIdentifier(node.expression)) {
                     container = node.expression;
                 }
                 else if (isPropertyAccessExpression(node.expression)) {
                     container = node.expression;
                 }
-                const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(container, 'Ω'), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
-                const update = isNewExpression(node) ? this.f.updateNewExpression : this.f.updateCallExpression;
+                const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(container, "Ω"), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
+                const update = isNewExpression(node)
+                    ? this.f.updateNewExpression
+                    : this.f.updateCallExpression;
                 if (isPropertyAccessExpression(node.expression)) {
                     //e.g. http.deep.response();
                     if (isCallExpression(node.expression.expression)) {
                         //e.g. http.deep().response();
                         //change to (Ωr = http.deep(), Ωr.response.Ω = [], Ωr).response()
                         const r = this.getTempResultIdentifier();
-                        const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createPropertyAccessExpression(r, node.expression.name), 'Ω'), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
+                        const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createPropertyAccessExpression(r, node.expression.name), "Ω"), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
                         return update(node, this.f.createPropertyAccessExpression(this.f.createParenthesizedExpression(this.f.createBinaryExpression(this.f.createBinaryExpression(this.f.createBinaryExpression(r, this.f.createToken(ts.SyntaxKind.EqualsToken), node.expression.expression), this.f.createToken(ts.SyntaxKind.CommaToken), assignQ), this.f.createToken(ts.SyntaxKind.CommaToken), r)), node.expression.name), node.typeArguments, node.arguments);
                     }
                     else if (isParenthesizedExpression(node.expression.expression)) {
@@ -584,7 +621,7 @@ export class ReflectionTransformer {
                         //which needs to be converted so that Ω is correctly read by the last call
                         //(r = (obj.method.Ω = [['a']], obj.method()), obj.method.Ω = [['b']], r).method());
                         const r = this.getTempResultIdentifier();
-                        const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createPropertyAccessExpression(r, node.expression.name), 'Ω'), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
+                        const assignQ = this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createPropertyAccessExpression(r, node.expression.name), "Ω"), this.f.createToken(SyntaxKind.EqualsToken), this.f.createArrayLiteralExpression(typeExpressions));
                         const updatedNode = update(node, this.f.updatePropertyAccessExpression(node.expression, this.f.updateParenthesizedExpression(node.expression.expression, this.f.createBinaryExpression(this.f.createBinaryExpression(this.f.createBinaryExpression(r, this.f.createToken(SyntaxKind.EqualsToken), node.expression.expression.expression), this.f.createToken(SyntaxKind.CommaToken), assignQ), this.f.createToken(SyntaxKind.CommaToken), r)), node.expression.name), node.typeArguments, node.arguments);
                         return this.f.createParenthesizedExpression(updatedNode);
                     }
@@ -629,7 +666,9 @@ export class ReflectionTransformer {
         //externalize type aliases
         const compileDeclarations = (node) => {
             node = visitEachChild(node, compileDeclarations, this.context);
-            if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node) || isEnumDeclaration(node))) {
+            if (isTypeAliasDeclaration(node) ||
+                isInterfaceDeclaration(node) ||
+                isEnumDeclaration(node)) {
                 const d = this.compileDeclarations.get(node);
                 if (!d) {
                     return node;
@@ -649,11 +688,15 @@ export class ReflectionTransformer {
                 if (handledIdentifier.includes(getIdentifierName(imp.identifier)))
                     continue;
                 handledIdentifier.push(getIdentifierName(imp.identifier));
-                if (this.getModuleType() === 'cjs') {
+                if (this.getModuleType() === "cjs") {
                     //var {identifier} = require('./bar')
                     const test = this.f.createIdentifier(getIdentifierName(imp.identifier));
-                    const variable = this.f.createVariableStatement(undefined, this.f.createVariableDeclarationList([this.f.createVariableDeclaration(this.f.createObjectBindingPattern([this.f.createBindingElement(undefined, undefined, test)]), undefined, undefined, this.f.createCallExpression(this.f.createIdentifier('require'), undefined, [imp.from]))], NodeFlags.Const));
-                    const typeDeclWithComment = addSyntheticLeadingComment(variable, SyntaxKind.MultiLineCommentTrivia, '@ts-ignore', true);
+                    const variable = this.f.createVariableStatement(undefined, this.f.createVariableDeclarationList([
+                        this.f.createVariableDeclaration(this.f.createObjectBindingPattern([
+                            this.f.createBindingElement(undefined, undefined, test)
+                        ]), undefined, undefined, this.f.createCallExpression(this.f.createIdentifier("require"), undefined, [imp.from]))
+                    ], NodeFlags.Const));
+                    const typeDeclWithComment = addSyntheticLeadingComment(variable, SyntaxKind.MultiLineCommentTrivia, "@ts-ignore", true);
                     newTopStatements.push(typeDeclWithComment);
                 }
                 else {
@@ -663,54 +706,59 @@ export class ReflectionTransformer {
                     const specifier = this.f.createImportSpecifier(false, undefined, imp.identifier);
                     const namedImports = this.f.createNamedImports([specifier]);
                     const importStatement = this.f.createImportDeclaration(undefined, this.f.createImportClause(false, undefined, namedImports), imp.from);
-                    const typeDeclWithComment = addSyntheticLeadingComment(importStatement, SyntaxKind.MultiLineCommentTrivia, '@ts-ignore', true);
+                    const typeDeclWithComment = addSyntheticLeadingComment(importStatement, SyntaxKind.MultiLineCommentTrivia, "@ts-ignore", true);
                     newTopStatements.push(typeDeclWithComment);
                 }
             }
         }
         if (this.embedAssignType) {
-            const assignType = this.f.createFunctionDeclaration(undefined, undefined, this.f.createIdentifier('__assignType'), undefined, [
-                this.f.createParameterDeclaration(undefined, undefined, this.f.createIdentifier('fn'), undefined, undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
-                undefined),
-                this.f.createParameterDeclaration(undefined, undefined, this.f.createIdentifier('args'), undefined, undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
+            const assignType = this.f.createFunctionDeclaration(undefined, undefined, this.f.createIdentifier("__assignType"), undefined, [
+                this.f.createParameterDeclaration(undefined, undefined, this.f.createIdentifier("fn"), undefined, undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
                 undefined),
+                this.f.createParameterDeclaration(undefined, undefined, this.f.createIdentifier("args"), undefined, undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
+                undefined)
             ], undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
             this.f.createBlock([
-                this.f.createExpressionStatement(this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createIdentifier('fn'), this.f.createIdentifier('__type')), this.f.createToken(SyntaxKind.EqualsToken), this.f.createIdentifier('args'))),
-                this.f.createReturnStatement(this.f.createIdentifier('fn')),
+                this.f.createExpressionStatement(this.f.createBinaryExpression(this.f.createPropertyAccessExpression(this.f.createIdentifier("fn"), this.f.createIdentifier("__type")), this.f.createToken(SyntaxKind.EqualsToken), this.f.createIdentifier("args"))),
+                this.f.createReturnStatement(this.f.createIdentifier("fn"))
             ], true));
             newTopStatements.push(assignType);
         }
         if (this.tempResultIdentifier) {
-            newTopStatements.push(this.f.createVariableStatement(undefined, this.f.createVariableDeclarationList([this.f.createVariableDeclaration(this.tempResultIdentifier, undefined, undefined, undefined)], ts.NodeFlags.None)));
+            newTopStatements.push(this.f.createVariableStatement(undefined, this.f.createVariableDeclarationList([
+                this.f.createVariableDeclaration(this.tempResultIdentifier, undefined, undefined, undefined)
+            ], ts.NodeFlags.None)));
         }
         if (newTopStatements.length) {
             // we want to keep "use strict", or "use client", etc at the very top
-            const indexOfFirstLiteralExpression = this.sourceFile.statements.findIndex(v => isExpressionStatement(v) && isStringLiteral(v.expression));
+            const indexOfFirstLiteralExpression = this.sourceFile.statements.findIndex((v) => isExpressionStatement(v) && isStringLiteral(v.expression));
             const newStatements = indexOfFirstLiteralExpression === -1
                 ? [...newTopStatements, ...this.sourceFile.statements]
                 : [
                     ...this.sourceFile.statements.slice(0, indexOfFirstLiteralExpression + 1),
                     ...newTopStatements,
-                    ...this.sourceFile.statements.slice(indexOfFirstLiteralExpression + 1),
+                    ...this.sourceFile.statements.slice(indexOfFirstLiteralExpression + 1)
                 ];
             this.sourceFile = this.f.updateSourceFile(this.sourceFile, newStatements);
             // this.sourceFile = this.f.updateSourceFile(this.sourceFile, [...newTopStatements, ...this.sourceFile.statements]);
         }
         // console.log(createPrinter().printNode(EmitHint.SourceFile, this.sourceFile, this.sourceFile));
         const took = Date.now() - start;
-        debug(`Transform file with reflection=${reflection.mode} took ${took}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || 'none'}.`);
+        debug(`Transform file with reflection=${reflection.mode} took ${took}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || "none"}.`);
         this.sourceFile.deepkitTransformed = true;
         return this.sourceFile;
     }
     getModuleType() {
-        if (this.compilerOptions.module === ts.ModuleKind.Node16 || this.compilerOptions.module === ts.ModuleKind.NodeNext) {
+        if (this.compilerOptions.module === ts.ModuleKind.Node16 ||
+            this.compilerOptions.module === ts.ModuleKind.NodeNext) {
             if (this.sourceFile.impliedNodeFormat === ts.ModuleKind.ESNext) {
-                return 'esm';
+                return "esm";
             }
-            return 'cjs';
+            return "cjs";
         }
-        return this.compilerOptions.module === ts.ModuleKind.CommonJS ? 'cjs' : 'esm';
+        return this.compilerOptions.module === ts.ModuleKind.CommonJS
+            ? "cjs"
+            : "esm";
     }
     getArrowFunctionΩPropertyAccessIdentifier(node) {
         let { parent } = node.original || node;
@@ -735,7 +783,7 @@ export class ReflectionTransformer {
                     return;
                 }
             }
-            return this.f.createIdentifier(names.join('.'));
+            return this.f.createIdentifier(names.join("."));
         }
         return;
     }
@@ -747,23 +795,24 @@ export class ReflectionTransformer {
         }
         if (!hasReceiveType)
             return node;
-        let container = this.f.createIdentifier('globalThis');
+        let container = this.f.createIdentifier("globalThis");
         if (isArrowFunction(node)) {
             const next = this.getArrowFunctionΩPropertyAccessIdentifier(node);
             if (!next)
                 return node;
             container = next;
         }
-        else if ((isFunctionDeclaration(node) || isFunctionExpression(node)) && node.name) {
+        else if ((isFunctionDeclaration(node) || isFunctionExpression(node)) &&
+            node.name) {
             container = node.name;
         }
         else if (isMethodDeclaration(node) && isIdentifier(node.name)) {
-            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), node.name);
+            container = this.f.createPropertyAccessExpression(this.f.createIdentifier("this"), node.name);
         }
         else if (isConstructorDeclaration(node)) {
-            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), 'constructor');
+            container = this.f.createPropertyAccessExpression(this.f.createIdentifier("this"), "constructor");
         }
-        const reset = this.f.createExpressionStatement(this.f.createBinaryExpression(this.f.createPropertyAccessExpression(container, this.f.createIdentifier('Ω')), this.f.createToken(ts.SyntaxKind.EqualsToken), this.f.createIdentifier('undefined')));
+        const reset = this.f.createExpressionStatement(this.f.createBinaryExpression(this.f.createPropertyAccessExpression(container, this.f.createIdentifier("Ω")), this.f.createToken(ts.SyntaxKind.EqualsToken), this.f.createIdentifier("undefined")));
         // convert expression into statements array
         let body = node.body && isBlock(node.body) ? node.body : undefined;
         let bodyStatements = node.body && isBlock(node.body) ? [...node.body.statements] : [];
@@ -792,7 +841,8 @@ export class ReflectionTransformer {
     }
     createProgramVarFromNode(node, name, sourceFile) {
         const typeProgram = new CompilerProgram(node, sourceFile);
-        if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node)) && node.typeParameters) {
+        if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node)) &&
+            node.typeParameters) {
             for (const param of node.typeParameters) {
                 if (param.default) {
                     //push default on the stack
@@ -802,12 +852,15 @@ export class ReflectionTransformer {
             }
         }
         this.extractPackStructOfType(node, typeProgram);
-        if (isTypeAliasDeclaration(node) || isInterfaceDeclaration(node) || isClassDeclaration(node) || isClassExpression(node)) {
+        if (isTypeAliasDeclaration(node) ||
+            isInterfaceDeclaration(node) ||
+            isClassDeclaration(node) ||
+            isClassExpression(node)) {
             typeProgram.pushOp(ReflectionOp.nominal);
         }
         const typeProgramExpression = this.packOpsAndStack(typeProgram);
         const variable = this.f.createVariableStatement([], this.f.createVariableDeclarationList([
-            this.f.createVariableDeclaration(this.getDeclarationVariableName(name), undefined, undefined, typeProgramExpression),
+            this.f.createVariableDeclaration(this.getDeclarationVariableName(name), undefined, undefined, typeProgramExpression)
         ], NodeFlags.Const));
         //when its commonJS, the `variable` would be exported as `exports.$name = $value`, but all references point just to $name.
         //so the idea is, that we create a normal variable and export it via `export {$name}`.
@@ -816,7 +869,7 @@ export class ReflectionTransformer {
             // TypeError: Cannot read properties of undefined (reading 'escapedText')
             //   at Object.idText (/Users/marc/bude/deepkit-framework/packages/benchmark/node_modules/typescript/lib/typescript.js:11875:67)
             const exportNode = this.f.createExportDeclaration(undefined, false, this.f.createNamedExports([
-                this.f.createExportSpecifier(false, this.getDeclarationVariableName(name), this.getDeclarationVariableName(name)),
+                this.f.createExportSpecifier(false, this.getDeclarationVariableName(name), this.getDeclarationVariableName(name))
             ]));
             return [variable, exportNode];
         }
@@ -844,7 +897,8 @@ export class ReflectionTransformer {
             //Symbol() is a function call, so we need to check for that
             case SyntaxKind.CallExpression: {
                 const call = node;
-                if (isIdentifier(call.expression) && getIdentifierName(call.expression) === 'Symbol') {
+                if (isIdentifier(call.expression) &&
+                    getIdentifierName(call.expression) === "Symbol") {
                     program.pushOp(ReflectionOp.symbol);
                     return;
                 }
@@ -855,18 +909,18 @@ export class ReflectionTransformer {
                 const call = node;
                 if (isIdentifier(call.expression)) {
                     const map = {
-                        'Date': ReflectionOp.date,
-                        'RegExp': ReflectionOp.regexp,
-                        'Uint8Array': ReflectionOp.uint8Array,
-                        'Uint8ClampedArray': ReflectionOp.uint8ClampedArray,
-                        'Uint16Array': ReflectionOp.uint16Array,
-                        'Uint32Array': ReflectionOp.uint32Array,
-                        'Int8Array': ReflectionOp.int8Array,
-                        'Int16Array': ReflectionOp.int16Array,
-                        'Int32Array': ReflectionOp.int32Array,
-                        'Float32Array': ReflectionOp.float32Array,
-                        'Float64Array': ReflectionOp.float64Array,
-                        'ArrayBuffer': ReflectionOp.arrayBuffer,
+                        "Date": ReflectionOp.date,
+                        "RegExp": ReflectionOp.regexp,
+                        "Uint8Array": ReflectionOp.uint8Array,
+                        "Uint8ClampedArray": ReflectionOp.uint8ClampedArray,
+                        "Uint16Array": ReflectionOp.uint16Array,
+                        "Uint32Array": ReflectionOp.uint32Array,
+                        "Int8Array": ReflectionOp.int8Array,
+                        "Int16Array": ReflectionOp.int16Array,
+                        "Int32Array": ReflectionOp.int32Array,
+                        "Float32Array": ReflectionOp.float32Array,
+                        "Float64Array": ReflectionOp.float64Array,
+                        "ArrayBuffer": ReflectionOp.arrayBuffer
                     };
                     const op = map[getIdentifierName(call.expression)];
                     if (op) {
@@ -879,6 +933,109 @@ export class ReflectionTransformer {
         }
         program.pushOp(ReflectionOp.never);
     }
+    parseDefaultValue(kind, defaultValue) {
+        switch (kind) {
+            case SyntaxKind.NumberKeyword: {
+                return Number.isInteger(Number.parseFloat(defaultValue))
+                    ? Number.parseInt(defaultValue)
+                    : Number.parseFloat(defaultValue);
+            }
+            case SyntaxKind.BooleanKeyword: {
+                return Boolean(defaultValue?.trim());
+            }
+            case SyntaxKind.BigIntKeyword: {
+                return Number.parseInt(defaultValue);
+            }
+            case SyntaxKind.ObjectKeyword: {
+                return JSON.parse(defaultValue);
+            }
+            case SyntaxKind.NullKeyword: {
+                return null;
+            }
+            case SyntaxKind.TrueKeyword: {
+                return true;
+            }
+            case SyntaxKind.FalseKeyword: {
+                return false;
+            }
+            case SyntaxKind.UndefinedKeyword: {
+                return undefined;
+            }
+            case SyntaxKind.StringLiteral:
+            case SyntaxKind.StringKeyword:
+            default: {
+                if (defaultValue?.trim().toLowerCase() === "false") {
+                    return false;
+                }
+                else if (defaultValue?.trim().toLowerCase() === "true") {
+                    return true;
+                }
+                return defaultValue;
+            }
+        }
+    }
+    parseTagReflection(node) {
+        const tags = {};
+        tags.hidden = extractJSDocBoolean(this.sourceFile, node, "hidden");
+        tags.ignore = extractJSDocBoolean(this.sourceFile, node, "ignore");
+        tags.internal = extractJSDocBoolean(this.sourceFile, node, "internal");
+        tags.alias = extractJSDocArray(this.sourceFile, node, "alias");
+        tags.permission = extractJSDocArray(this.sourceFile, node, "permission");
+        tags.domain = extractJSDocAttribute(this.sourceFile, node, "domain");
+        if (this.getReflectionConfig(this.sourceFile).level === "verbose") {
+            tags.title = extractJSDocAttribute(this.sourceFile, node, "title");
+        }
+        return tags;
+    }
+    extractTagReflections(program, node) {
+        if (!node)
+            return;
+        const tags = this.parseTagReflection(node);
+        if (Object.entries(tags).filter(([, value]) => value !== undefined &&
+            (!Array.isArray(value) || value.length > 0) &&
+            (typeof value !== "string" ||
+                value?.trim().replace(/^"/gm, "").replace(/"$/gm, ""))).length > 0) {
+            program.pushOp(ReflectionOp.tags, program.findOrAddStackEntry(this.f.createObjectLiteralExpression(this.f.createNodeArray(Object.entries(tags)
+                .filter(([, value]) => value !== undefined &&
+                (!Array.isArray(value) || value.length > 0) &&
+                (typeof value !== "string" ||
+                    value.trim().replace(/^"/gm, "").replace(/"$/gm, "")))
+                .map(([key, value]) => {
+                return this.f.createPropertyAssignment(key, Array.isArray(value)
+                    ? this.f.createArrayLiteralExpression(value.map(item => this.valueToExpression(item)))
+                    : typeof value === "boolean"
+                        ? value
+                            ? this.f.createTrue()
+                            : this.f.createFalse()
+                        : this.valueToExpression(value));
+            })))));
+        }
+    }
+    extractDefaultValueReflection(program, node) {
+        if (!node)
+            return;
+        let defaultValue = extractJSDocAttribute(this.sourceFile, node, "defaultValue");
+        if (!defaultValue) {
+            defaultValue = extractJSDocAttribute(this.sourceFile, node, "default");
+        }
+        if (defaultValue) {
+            program.pushOp(ReflectionOp.defaultValue, program.findOrAddStackEntry(this.parseDefaultValue((node.kind === SyntaxKind.ClassDeclaration ||
+                node.kind === SyntaxKind.ClassExpression
+                ? node?.name?.parent?.kind
+                : node.kind === SyntaxKind.PropertySignature ||
+                    node.kind === SyntaxKind.PropertyDeclaration
+                    ? node.type?.kind
+                    : node.kind) || SyntaxKind.StringKeyword, defaultValue.trim().replace(/^"/gm, "").replace(/"$/gm, ""))));
+        }
+    }
+    extractDescriptionReflection(program, node) {
+        if (!node || this.getReflectionConfig(this.sourceFile).level !== "verbose")
+            return;
+        const description = extractJSDocAttribute(this.sourceFile, node, "description");
+        if (description) {
+            program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description.trim().replace(/^"/gm, "").replace(/"$/gm, "")));
+        }
+    }
     extractPackStructOfType(node, program) {
         if (isParenthesizedTypeNode(node))
             return this.extractPackStructOfType(node.type, program);
@@ -989,7 +1146,8 @@ export class ReflectionTransformer {
                             if (heritageClause.token === SyntaxKind.ExtendsKeyword) {
                                 //extends only supports extending one class
                                 const first = heritageClause.types[0];
-                                if (isExpressionWithTypeArguments(first) && first.typeArguments) {
+                                if (isExpressionWithTypeArguments(first) &&
+                                    first.typeArguments) {
                                     for (const typeArgument of first.typeArguments) {
                                         this.extractPackStructOfType(typeArgument, program);
                                     }
@@ -1007,9 +1165,9 @@ export class ReflectionTransformer {
                     if (narrowed.name)
                         this.resolveTypeName(getIdentifierName(narrowed.name), program);
                     // for whatever reason: narrowed.name.parent !== narrowed. narrowed.name.parent has jsDoc, narrowed.name not.
-                    const description = extractJSDocAttribute(this.sourceFile, narrowed.name?.parent, 'description');
-                    if (description)
-                        program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
+                    this.extractDefaultValueReflection(program, narrowed.name?.parent);
+                    this.extractDescriptionReflection(program, narrowed.name?.parent);
+                    this.extractTagReflections(program, narrowed.name?.parent);
                 }
                 break;
             }
@@ -1080,8 +1238,9 @@ export class ReflectionTransformer {
             }
             case SyntaxKind.TypeAliasDeclaration: {
                 let narrowed = node;
-                if (program.sourceFile && getNameAsString(narrowed.name) === 'TypeAnnotation') {
-                    const attribute = extractJSDocAttribute(program.sourceFile, narrowed, 'intrinsic');
+                if (program.sourceFile &&
+                    getNameAsString(narrowed.name) === "TypeAnnotation") {
+                    const attribute = extractJSDocAttribute(program.sourceFile, narrowed, "intrinsic");
                     if (attribute !== undefined) {
                         // TypeAnnotation<T> is like an intrinsic type, so we don't need to resolve it
                         narrowed = this.intrinsicMetaDeclaration;
@@ -1115,9 +1274,9 @@ export class ReflectionTransformer {
                 if (isTypeLiteralNode(narrowed)) {
                     descriptionNode = narrowed.parent;
                 }
-                const description = descriptionNode && extractJSDocAttribute(this.sourceFile, descriptionNode, 'description');
-                if (description)
-                    program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
+                this.extractDefaultValueReflection(program, descriptionNode);
+                this.extractDescriptionReflection(program, descriptionNode);
+                this.extractTagReflections(program, descriptionNode);
                 if (isInterfaceDeclaration(narrowed)) {
                     if (narrowed.name)
                         this.resolveTypeName(getIdentifierName(narrowed.name), program);
@@ -1184,13 +1343,20 @@ export class ReflectionTransformer {
                     this.extractPackStructOfType(narrowed.type, program);
                     const name = getPropertyName(this.f, narrowed.name);
                     program.pushOp(ReflectionOp.propertySignature, program.findOrAddStackEntry(name));
-                    if (narrowed.questionToken)
+                    if (narrowed.questionToken) {
                         program.pushOp(ReflectionOp.optional);
+                    }
                     if (hasModifier(narrowed, SyntaxKind.ReadonlyKeyword))
                         program.pushOp(ReflectionOp.readonly);
-                    const description = extractJSDocAttribute(this.sourceFile, narrowed, 'description');
-                    if (description)
-                        program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
+                    else {
+                        const readonly = extractJSDocBoolean(this.sourceFile, narrowed, "readonly");
+                        if (readonly) {
+                            program.pushOp(ReflectionOp.readonly);
+                        }
+                    }
+                    this.extractDefaultValueReflection(program, narrowed);
+                    this.extractDescriptionReflection(program, narrowed);
+                    this.extractTagReflections(program, narrowed);
                 }
                 else {
                     program.pushOp(ReflectionOp.unknown);
@@ -1212,12 +1378,18 @@ export class ReflectionTransformer {
                 else {
                     program.pushOp(ReflectionOp.unknown);
                 }
-                const name = getPropertyName(this.f, narrowed.name);
-                program.pushOp(ReflectionOp.property, program.findOrAddStackEntry(name));
+                program.pushOp(ReflectionOp.property, program.findOrAddStackEntry(getPropertyName(this.f, narrowed.name)));
                 if (narrowed.questionToken)
                     program.pushOp(ReflectionOp.optional);
-                if (hasModifier(narrowed, SyntaxKind.ReadonlyKeyword))
+                if (hasModifier(narrowed, SyntaxKind.ReadonlyKeyword)) {
                     program.pushOp(ReflectionOp.readonly);
+                }
+                else {
+                    const readonly = extractJSDocBoolean(this.sourceFile, narrowed, "readonly");
+                    if (readonly) {
+                        program.pushOp(ReflectionOp.readonly);
+                    }
+                }
                 if (hasModifier(narrowed, SyntaxKind.PrivateKeyword))
                     program.pushOp(ReflectionOp.private);
                 if (hasModifier(narrowed, SyntaxKind.ProtectedKeyword))
@@ -1228,11 +1400,15 @@ export class ReflectionTransformer {
                     program.pushOp(ReflectionOp.static);
                 if (narrowed.initializer) {
                     //important to use Function, since it will be called using a different `this`
-                    program.pushOp(ReflectionOp.defaultValue, program.findOrAddStackEntry(this.f.createFunctionExpression(undefined, undefined, undefined, undefined, undefined, undefined, this.f.createBlock([this.f.createReturnStatement(narrowed.initializer)]))));
+                    program.pushOp(ReflectionOp.defaultValue, program.findOrAddStackEntry(this.f.createFunctionExpression(undefined, undefined, undefined, undefined, undefined, undefined, this.f.createBlock([
+                        this.f.createReturnStatement(narrowed.initializer)
+                    ]))));
+                }
+                else {
+                    this.extractDefaultValueReflection(program, narrowed);
                 }
-                const description = extractJSDocAttribute(this.sourceFile, narrowed, 'description');
-                if (description)
-                    program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
+                this.extractDescriptionReflection(program, narrowed);
+                this.extractTagReflections(program, narrowed);
                 break;
             }
             case SyntaxKind.ConditionalType: {
@@ -1241,8 +1417,10 @@ export class ReflectionTransformer {
                 // Depending on whether this a distributive conditional type or not, it has to be moved to its own function
                 // my understanding of when a distributive conditional type is used is:
                 // 1. the `checkType` is a simple identifier (just `T`, no `[T]`, no `T | x`, no `{a: T}`, etc)
-                const distributiveOverIdentifier = isTypeReferenceNode(narrowed.checkType) && isIdentifier(narrowed.checkType.typeName)
-                    ? narrowed.checkType.typeName : undefined;
+                const distributiveOverIdentifier = isTypeReferenceNode(narrowed.checkType) &&
+                    isIdentifier(narrowed.checkType.typeName)
+                    ? narrowed.checkType.typeName
+                    : undefined;
                 if (distributiveOverIdentifier) {
                     program.pushFrame();
                     //first we add to the stack the origin type we distribute over.
@@ -1282,7 +1460,7 @@ export class ReflectionTransformer {
                         program.pushVariable(typeParameterName, frame);
                         variable = program.findVariable(typeParameterName);
                         if (!variable)
-                            throw new Error('Could not find inserted infer variable');
+                            throw new Error("Could not find inserted infer variable");
                     }
                     program.pushOp(ReflectionOp.infer, variable.frameOffset, variable.stackIndex);
                 }
@@ -1309,16 +1487,26 @@ export class ReflectionTransformer {
                     return;
                 }
                 const name = isCallSignatureDeclaration(node)
-                    ? '' : isConstructorTypeNode(narrowed) || isConstructSignatureDeclaration(node)
-                    ? 'new' : isConstructorDeclaration(narrowed) ? 'constructor' : getPropertyName(this.f, narrowed.name);
+                    ? ""
+                    : isConstructorTypeNode(narrowed) ||
+                        isConstructSignatureDeclaration(node)
+                        ? "new"
+                        : isConstructorDeclaration(narrowed)
+                            ? "constructor"
+                            : getPropertyName(this.f, narrowed.name);
                 if (!narrowed.type && narrowed.parameters.length === 0 && !name)
                     return;
                 program.pushFrame();
                 for (let i = 0; i < narrowed.parameters.length; i++) {
                     const parameter = narrowed.parameters[i];
-                    const parameterName = isIdentifier(parameter.name) ? getNameAsString(parameter.name) : 'param' + i;
+                    const parameterName = isIdentifier(parameter.name)
+                        ? getNameAsString(parameter.name)
+                        : "param" + i;
                     const type = parameter.type
-                        ? (parameter.dotDotDotToken && isArrayTypeNode(parameter.type) ? parameter.type.elementType : parameter.type) : undefined;
+                        ? parameter.dotDotDotToken && isArrayTypeNode(parameter.type)
+                            ? parameter.type.elementType
+                            : parameter.type
+                        : undefined;
                     if (type) {
                         this.extractPackStructOfType(type, program);
                     }
@@ -1339,12 +1527,27 @@ export class ReflectionTransformer {
                         program.pushOp(ReflectionOp.protected);
                     if (hasModifier(parameter, SyntaxKind.ReadonlyKeyword))
                         program.pushOp(ReflectionOp.readonly);
-                    const description = extractJSDocAttribute(this.sourceFile, parameter, 'description');
-                    if (description)
-                        program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
-                    if (parameter.initializer && parameter.type && !getReceiveTypeParameter(parameter.type)) {
+                    else {
+                        let readonly = extractJSDocBoolean(this.sourceFile, parameter, "readonly");
+                        if (readonly) {
+                            program.pushOp(ReflectionOp.readonly);
+                        }
+                        else {
+                            readonly = extractJSDocBoolean(this.sourceFile, narrowed, "readonly");
+                            if (readonly) {
+                                program.pushOp(ReflectionOp.readonly);
+                            }
+                        }
+                    }
+                    if (parameter.initializer &&
+                        parameter.type &&
+                        !getReceiveTypeParameter(parameter.type)) {
                         program.pushOp(ReflectionOp.defaultValue, program.findOrAddStackEntry(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, parameter.initializer)));
                     }
+                    else {
+                        this.extractDefaultValueReflection(program, parameter);
+                    }
+                    this.extractDescriptionReflection(program, parameter);
                 }
                 if (narrowed.type) {
                     this.extractPackStructOfType(narrowed.type, program);
@@ -1352,11 +1555,15 @@ export class ReflectionTransformer {
                 else {
                     program.pushOp(ReflectionOp.any);
                 }
-                program.pushOp(isCallSignatureDeclaration(node) ? ReflectionOp.callSignature :
-                    isMethodSignature(narrowed) || isConstructSignatureDeclaration(narrowed)
+                program.pushOp(isCallSignatureDeclaration(node)
+                    ? ReflectionOp.callSignature
+                    : isMethodSignature(narrowed) ||
+                        isConstructSignatureDeclaration(narrowed)
                         ? ReflectionOp.methodSignature
-                        : isMethodDeclaration(narrowed) || isConstructorDeclaration(narrowed)
-                            ? ReflectionOp.method : ReflectionOp.function, program.findOrAddStackEntry(name));
+                        : isMethodDeclaration(narrowed) ||
+                            isConstructorDeclaration(narrowed)
+                            ? ReflectionOp.method
+                            : ReflectionOp.function, program.findOrAddStackEntry(name));
                 if (isMethodDeclaration(narrowed)) {
                     if (hasModifier(narrowed, SyntaxKind.PrivateKeyword))
                         program.pushOp(ReflectionOp.private);
@@ -1367,9 +1574,9 @@ export class ReflectionTransformer {
                     if (hasModifier(narrowed, SyntaxKind.StaticKeyword))
                         program.pushOp(ReflectionOp.static);
                 }
-                const description = extractJSDocAttribute(this.sourceFile, narrowed, 'description');
-                if (description)
-                    program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
+                this.extractDefaultValueReflection(program, narrowed);
+                this.extractDescriptionReflection(program, narrowed);
+                this.extractTagReflections(program, narrowed);
                 program.popFrameImplicit();
                 break;
             }
@@ -1428,14 +1635,15 @@ export class ReflectionTransformer {
                 for (const type of narrowed.members) {
                     const name = getPropertyName(this.f, type.name);
                     program.pushOp(ReflectionOp.enumMember, program.findOrAddStackEntry(name));
+                    this.extractDescriptionReflection(program, type);
                     if (type.initializer) {
                         program.pushOp(ReflectionOp.defaultValue, program.findOrAddStackEntry(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, type.initializer)));
                     }
                 }
                 program.pushOp(ReflectionOp.enum);
-                const description = extractJSDocAttribute(this.sourceFile, narrowed, 'description');
-                if (description)
-                    program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
+                this.extractDefaultValueReflection(program, narrowed);
+                this.extractDescriptionReflection(program, narrowed);
+                this.extractTagReflections(program, narrowed);
                 if (narrowed.name)
                     this.resolveTypeName(getIdentifierName(narrowed.name), program);
                 program.popFrameImplicit();
@@ -1469,7 +1677,9 @@ export class ReflectionTransformer {
                 // }
                 if (isIdentifier(narrowed.exprName)) {
                     const resolved = this.resolveDeclaration(narrowed.exprName);
-                    if (resolved && findSourceFile(resolved.declaration) !== this.sourceFile && resolved.importDeclaration) {
+                    if (resolved &&
+                        findSourceFile(resolved.declaration) !== this.sourceFile &&
+                        resolved.importDeclaration) {
                         ensureImportIsEmitted(resolved.importDeclaration, narrowed.exprName);
                     }
                 }
@@ -1537,14 +1747,14 @@ export class ReflectionTransformer {
         //currently knownLibFilesForCompilerOptions from @typescript/vfs doesn't return correct lib files for esnext,
         //so we switch here to es2022 if bigger than es2022.
         const options = { ...this.compilerOptions };
-        if (options.target && (options.target === ScriptTarget.ESNext)) {
+        if (options.target && options.target === ScriptTarget.ESNext) {
             options.target = ScriptTarget.ES2022;
         }
         const libs = knownLibFilesForCompilerOptions(options, ts);
         for (const lib of libs) {
             if (this.isExcluded(lib))
                 continue;
-            const sourceFile = this.resolver.resolveSourceFile(this.sourceFile, this.f.createStringLiteral('typescript/lib/' + lib.replace('.d.ts', '')));
+            const sourceFile = this.resolver.resolveSourceFile(this.sourceFile, this.f.createStringLiteral("typescript/lib/" + lib.replace(".d.ts", "")));
             if (!sourceFile)
                 continue;
             this.cache.globalSourceFiles.push(sourceFile);
@@ -1558,7 +1768,7 @@ export class ReflectionTransformer {
     resolveDeclaration(typeName) {
         let current = typeName.parent;
         if (typeName.kind === SyntaxKind.QualifiedName)
-            return; //namespace access not supported yet, e.g. type a = Namespace.X;
+            return; // namespace access not supported yet, e.g. type a = Namespace.X;
         let declaration = undefined;
         while (current) {
             if (isNodeWithLocals(current) && current.locals) {
@@ -1616,11 +1826,14 @@ export class ReflectionTransformer {
             importDeclaration = declaration.parent;
         }
         if (importDeclaration) {
-            if (importDeclaration.importClause && importDeclaration.importClause.isTypeOnly)
+            if (importDeclaration.importClause &&
+                importDeclaration.importClause.isTypeOnly)
                 typeOnly = true;
             declaration = this.resolveImportSpecifier(getEscapedText(typeName), importDeclaration, this.sourceFile);
         }
-        if (declaration && declaration.kind === SyntaxKind.TypeParameter && declaration.parent.kind === SyntaxKind.TypeAliasDeclaration) {
+        if (declaration &&
+            declaration.kind === SyntaxKind.TypeParameter &&
+            declaration.parent.kind === SyntaxKind.TypeAliasDeclaration) {
             //for alias like `type MyAlias<T> = T`, `T` is returned from `typeChecker.getDeclaredTypeOfSymbol(symbol)`.
             declaration = declaration.parent;
         }
@@ -1630,14 +1843,14 @@ export class ReflectionTransformer {
     }
     getDeclarationVariableName(typeName) {
         if (isIdentifier(typeName)) {
-            return this.f.createIdentifier('__Ω' + getIdentifierName(typeName));
+            return this.f.createIdentifier("__Ω" + getIdentifierName(typeName));
         }
         function joinQualifiedName(name) {
             if (isIdentifier(name))
                 return getIdentifierName(name);
-            return joinQualifiedName(name.left) + '_' + getIdentifierName(name.right);
+            return joinQualifiedName(name.left) + "_" + getIdentifierName(name.right);
         }
-        return this.f.createIdentifier('__Ω' + joinQualifiedName(typeName));
+        return this.f.createIdentifier("__Ω" + joinQualifiedName(typeName));
     }
     /**
      * The semantic of isExcluded is different from checking if the fileName is part
@@ -1646,27 +1859,39 @@ export class ReflectionTransformer {
      */
     isExcluded(fileName) {
         // getConfigResolver depends on the current source file, so we know the "exclude" option from deepkit config
-        const resolver = this.overriddenConfigResolver || getConfigResolver(this.cache.resolver, this.parseConfigHost, this.compilerOptions, this.sourceFile);
-        const res = reflectionModeMatcher({ reflection: 'default', exclude: resolver.config.exclude }, fileName);
-        return res === 'never';
+        const resolver = this.overriddenConfigResolver ||
+            getConfigResolver(this.cache.resolver, this.parseConfigHost, this.compilerOptions, this.sourceFile);
+        const res = reflectionModeMatcher({ reflection: "default", exclude: resolver.config.exclude }, fileName);
+        return res === "never";
     }
     extractPackStructOfTypeReference(type, program) {
-        const typeName = isTypeReferenceNode(type) ? type.typeName : (isIdentifier(type.expression) ? type.expression : undefined);
+        const typeName = isTypeReferenceNode(type)
+            ? type.typeName
+            : isIdentifier(type.expression)
+                ? type.expression
+                : undefined;
         if (!typeName) {
             program.pushOp(ReflectionOp.any);
             return;
         }
-        if (isIdentifier(typeName) && getIdentifierName(typeName) === 'InlineRuntimeType' && type.typeArguments && type.typeArguments[0] && isTypeQueryNode(type.typeArguments[0])) {
+        if (isIdentifier(typeName) &&
+            getIdentifierName(typeName) === "InlineRuntimeType" &&
+            type.typeArguments &&
+            type.typeArguments[0] &&
+            isTypeQueryNode(type.typeArguments[0])) {
             const expression = serializeEntityNameAsExpression(this.f, type.typeArguments[0].exprName);
             program.pushOp(ReflectionOp.arg, program.pushStack(expression));
             return;
         }
-        if (isIdentifier(typeName) && getIdentifierName(typeName) !== 'constructor' && this.knownClasses[getIdentifierName(typeName)]) {
+        if (isIdentifier(typeName) &&
+            getIdentifierName(typeName) !== "constructor" &&
+            this.knownClasses[getIdentifierName(typeName)]) {
             const name = getIdentifierName(typeName);
             const op = this.knownClasses[name];
             program.pushOp(op);
         }
-        else if (isIdentifier(typeName) && getIdentifierName(typeName) === 'Promise') {
+        else if (isIdentifier(typeName) &&
+            getIdentifierName(typeName) === "Promise") {
             //promise has always one sub type
             if (type.typeArguments && type.typeArguments[0]) {
                 this.extractPackStructOfType(type.typeArguments[0], program);
@@ -1676,10 +1901,13 @@ export class ReflectionTransformer {
             }
             program.pushOp(ReflectionOp.promise);
         }
-        else if (isIdentifier(typeName) && getIdentifierName(typeName) === 'integer') {
+        else if (isIdentifier(typeName) &&
+            getIdentifierName(typeName) === "integer") {
             program.pushOp(ReflectionOp.numberBrand, TypeNumberBrand.integer);
         }
-        else if (isIdentifier(typeName) && getIdentifierName(typeName) !== 'constructor' && TypeNumberBrand[getIdentifierName(typeName)] !== undefined) {
+        else if (isIdentifier(typeName) &&
+            getIdentifierName(typeName) !== "constructor" &&
+            TypeNumberBrand[getIdentifierName(typeName)] !== undefined) {
             program.pushOp(ReflectionOp.numberBrand, TypeNumberBrand[getIdentifierName(typeName)]);
         }
         else {
@@ -1705,7 +1933,8 @@ export class ReflectionTransformer {
                             let lastExpression;
                             let indexValue = 0;
                             for (const member of resolved.declaration.members) {
-                                if (getNameAsString(member.name) === getNameAsString(typeName.right)) {
+                                if (getNameAsString(member.name) ===
+                                    getNameAsString(typeName.right)) {
                                     if (member.initializer) {
                                         program.pushOp(ReflectionOp.arg, program.pushStack(this.nodeConverter.toExpression(member.initializer)));
                                     }
@@ -1732,7 +1961,7 @@ export class ReflectionTransformer {
                 }
                 //non-existing references are ignored.
                 program.pushOp(ReflectionOp.never);
-                debug2(`Could not resolve ${getNameAsString(typeName)} in ${program.sourceFile?.fileName || 'intrinsic'}`);
+                debug2(`Could not resolve ${getNameAsString(typeName)} in ${program.sourceFile?.fileName || "intrinsic"}`);
                 return;
             }
             let declaration = resolved.declaration;
@@ -1742,7 +1971,9 @@ export class ReflectionTransformer {
             //     debug2(`Could not find source file for ${getNameAsString(typeName)} in ${program.sourceFile.fileName}`);
             //     return;
             // }
-            const isGlobal = !declarationSourceFile || (resolved.importDeclaration === undefined && declarationSourceFile.fileName !== this.sourceFile.fileName);
+            const isGlobal = !declarationSourceFile ||
+                (resolved.importDeclaration === undefined &&
+                    declarationSourceFile.fileName !== this.sourceFile.fileName);
             const isFromImport = resolved.importDeclaration !== undefined;
             if (isVariableDeclaration(declaration)) {
                 if (declaration.type) {
@@ -1758,10 +1989,12 @@ export class ReflectionTransformer {
                 //we can not infer from module declaration, so do `typeof T` in runtime
                 program.pushOp(ReflectionOp.typeof, program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, serializeEntityNameAsExpression(this.f, typeName))));
             }
-            else if (isTypeAliasDeclaration(declaration) || isInterfaceDeclaration(declaration) || isEnumDeclaration(declaration)) {
+            else if (isTypeAliasDeclaration(declaration) ||
+                isInterfaceDeclaration(declaration) ||
+                isEnumDeclaration(declaration)) {
                 //Set/Map are interface declarations
                 const name = getNameAsString(typeName);
-                if (name === 'Array') {
+                if (name === "Array") {
                     if (type.typeArguments && type.typeArguments[0]) {
                         this.extractPackStructOfType(type.typeArguments[0], program);
                     }
@@ -1771,14 +2004,14 @@ export class ReflectionTransformer {
                     program.pushOp(ReflectionOp.array);
                     return;
                 }
-                else if (name === 'Function') {
+                else if (name === "Function") {
                     program.pushFrame();
-                    const index = program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, this.f.createIdentifier('Function')));
+                    const index = program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, this.f.createIdentifier("Function")));
                     program.pushOp(ReflectionOp.functionReference, index);
                     program.popFrameImplicit();
                     return;
                 }
-                else if (name === 'Set') {
+                else if (name === "Set") {
                     if (type.typeArguments && type.typeArguments[0]) {
                         this.extractPackStructOfType(type.typeArguments[0], program);
                     }
@@ -1788,7 +2021,7 @@ export class ReflectionTransformer {
                     program.pushOp(ReflectionOp.set);
                     return;
                 }
-                else if (name === 'Map') {
+                else if (name === "Map") {
                     if (type.typeArguments && type.typeArguments[0]) {
                         this.extractPackStructOfType(type.typeArguments[0], program);
                     }
@@ -1806,8 +2039,10 @@ export class ReflectionTransformer {
                 }
                 const runtimeTypeName = this.getDeclarationVariableName(typeName);
                 //to break recursion, we track which declaration has already been compiled
-                if (!this.compiledDeclarations.has(declaration) && !this.compileDeclarations.has(declaration)) {
-                    if (declarationSourceFile && this.isExcluded(declarationSourceFile.fileName)) {
+                if (!this.compiledDeclarations.has(declaration) &&
+                    !this.compileDeclarations.has(declaration)) {
+                    if (declarationSourceFile &&
+                        this.isExcluded(declarationSourceFile.fileName)) {
                         program.pushOp(ReflectionOp.any);
                         return;
                     }
@@ -1815,7 +2050,7 @@ export class ReflectionTransformer {
                         //we don't embed non-global imported declarations anymore, only globals
                         this.embedDeclarations.set(declaration, {
                             name: typeName,
-                            sourceFile: declarationSourceFile,
+                            sourceFile: declarationSourceFile
                         });
                     }
                     else if (isFromImport) {
@@ -1833,7 +2068,7 @@ export class ReflectionTransformer {
                             // Note that if `found` is a TypeScript file (not d.ts), then we need to check using the fileName
                             // since it is part of the current transpilation phase. Thus, it depends on the
                             // current config + @reflection decorator instead.
-                            if (declarationSourceFile.fileName.endsWith('.d.ts')) {
+                            if (declarationSourceFile.fileName.endsWith(".d.ts")) {
                                 // Note that if import was something like `import { XY } from 'my-module'` then resolve()
                                 // returns the index.d.ts file of the module, not the actual file where XY is exported.
                                 // this is necessary since we emit an additional import `import { __ΩXY } from 'my-module'`,
@@ -1845,12 +2080,15 @@ export class ReflectionTransformer {
                                     this.resolveTypeOnlyImport(typeName, program);
                                     return;
                                 }
-                                this.addImports.push({ identifier: runtimeTypeName, from: resolved.importDeclaration.moduleSpecifier });
+                                this.addImports.push({
+                                    identifier: runtimeTypeName,
+                                    from: resolved.importDeclaration.moduleSpecifier
+                                });
                             }
                             else {
                                 const reflection = this.getReflectionConfig(declarationSourceFile);
                                 // if this is never, then its generally disabled for this file
-                                if (reflection.mode === 'never') {
+                                if (reflection.mode === "never") {
                                     this.resolveTypeOnlyImport(typeName, program);
                                     return;
                                 }
@@ -1859,7 +2097,10 @@ export class ReflectionTransformer {
                                     this.resolveTypeOnlyImport(typeName, program);
                                     return;
                                 }
-                                this.addImports.push({ identifier: runtimeTypeName, from: resolved.importDeclaration.moduleSpecifier });
+                                this.addImports.push({
+                                    identifier: runtimeTypeName,
+                                    from: resolved.importDeclaration.moduleSpecifier
+                                });
                             }
                         }
                     }
@@ -1872,11 +2113,13 @@ export class ReflectionTransformer {
                         }
                         this.compileDeclarations.set(declaration, {
                             name: typeName,
-                            sourceFile: declarationSourceFile,
+                            sourceFile: declarationSourceFile
                         });
                     }
                 }
-                const index = program.pushStack(program.forNode === declaration ? 0 : this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, runtimeTypeName));
+                const index = program.pushStack(program.forNode === declaration
+                    ? 0
+                    : this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, runtimeTypeName));
                 if (type.typeArguments) {
                     for (const argument of type.typeArguments) {
                         this.extractPackStructOfType(argument, program);
@@ -1902,7 +2145,10 @@ export class ReflectionTransformer {
                 //     this.extractPackStructOfType(declaration, program);
                 //     return;
             }
-            else if (isClassDeclaration(declaration) || isFunctionDeclaration(declaration) || isFunctionExpression(declaration) || isArrowFunction(declaration)) {
+            else if (isClassDeclaration(declaration) ||
+                isFunctionDeclaration(declaration) ||
+                isFunctionExpression(declaration) ||
+                isArrowFunction(declaration)) {
                 // classes, functions and arrow functions are handled differently, since they exist in runtime.
                 //if explicit `import {type T}`, we do not emit an import and instead push any
                 if (resolved.typeOnly) {
@@ -1912,7 +2158,8 @@ export class ReflectionTransformer {
                 // If a function/class declarations comes from a built library (e.g. node_modules), then we
                 // declarationSourceFile is a d.ts file. We do know if they are built in runtime by checking `xy.__type`.
                 // Otherwise, check if the file will be built with runtime types.
-                const reflection = declarationSourceFile?.fileName.endsWith('.d.ts') || this.isWithReflection(program.sourceFile, declaration);
+                const reflection = declarationSourceFile?.fileName.endsWith(".d.ts") ||
+                    this.isWithReflection(program.sourceFile, declaration);
                 if (!reflection) {
                     this.resolveTypeOnlyImport(typeName, program);
                     return;
@@ -1925,9 +2172,13 @@ export class ReflectionTransformer {
                         this.extractPackStructOfType(typeArgument, program);
                     }
                 }
-                const body = isIdentifier(typeName) ? typeName : this.createAccessorForEntityName(typeName);
+                const body = isIdentifier(typeName)
+                    ? typeName
+                    : this.createAccessorForEntityName(typeName);
                 const index = program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, body));
-                program.pushOp(isClassDeclaration(declaration) ? ReflectionOp.classReference : ReflectionOp.functionReference, index);
+                program.pushOp(isClassDeclaration(declaration)
+                    ? ReflectionOp.classReference
+                    : ReflectionOp.functionReference, index);
                 program.popFrameImplicit();
             }
             else if (isTypeParameterDeclaration(declaration)) {
@@ -1954,7 +2205,9 @@ export class ReflectionTransformer {
                 return current.parent; //return the class
             if (current.kind === SyntaxKind.MethodDeclaration)
                 return current.parent; //return the class
-            if (current.kind === SyntaxKind.ArrowFunction || current.kind === SyntaxKind.FunctionDeclaration || current.kind === SyntaxKind.FunctionExpression)
+            if (current.kind === SyntaxKind.ArrowFunction ||
+                current.kind === SyntaxKind.FunctionDeclaration ||
+                current.kind === SyntaxKind.FunctionExpression)
                 return current;
             current = current.parent;
         }
@@ -2034,21 +2287,26 @@ export class ReflectionTransformer {
     resolveTypeParameter(declaration, type, program) {
         //check if `type` was used in an expression. if so, we need to resolve it from runtime, otherwise we mark it as T
         const isUsedInFunction = isFunctionLike(declaration.parent);
-        const resolveRuntimeTypeParameter = (isUsedInFunction && program.isResolveFunctionParameters(declaration.parent)) || (this.needsToBeInferred(declaration, type));
+        const resolveRuntimeTypeParameter = (isUsedInFunction &&
+            program.isResolveFunctionParameters(declaration.parent)) ||
+            this.needsToBeInferred(declaration, type);
         if (resolveRuntimeTypeParameter) {
             //go through all parameters and look where `type.name.escapedText` is used (recursively).
             //go through all found parameters and replace `T` with `infer T` and embed its type in `typeof parameter extends Type<infer T> ? T : never`, if T is not directly used
             const argumentName = declaration.name.escapedText; //T
             const foundUsers = [];
             if (isUsedInFunction) {
-                for (const parameter of declaration.parent.parameters) {
+                for (const parameter of declaration.parent
+                    .parameters) {
                     if (!parameter.type)
                         continue;
                     //if deeply available?
                     let found = false;
                     const searchArgument = (node) => {
                         node = visitEachChild(node, searchArgument, this.context);
-                        if (isIdentifier(node) && node.escapedText === argumentName) {
+                        if (isTypeReferenceNode(node) &&
+                            isIdentifier(node.typeName) &&
+                            node.typeName.escapedText === argumentName) {
                             //transform to infer T
                             found = true;
                             node = this.f.createInferTypeNode(declaration);
@@ -2058,7 +2316,10 @@ export class ReflectionTransformer {
                     if (isIdentifier(parameter.name)) {
                         const updatedParameterType = visitEachChild(parameter.type, searchArgument, this.context);
                         if (found) {
-                            foundUsers.push({ type: updatedParameterType, parameterName: parameter.name });
+                            foundUsers.push({
+                                type: updatedParameterType,
+                                parameterName: parameter.name
+                            });
                         }
                     }
                 }
@@ -2068,7 +2329,9 @@ export class ReflectionTransformer {
                 if (foundUsers.length > 1) {
                     //todo: intersection start
                 }
-                const isReceiveType = foundUsers.find(v => isTypeReferenceNode(v.type) && isIdentifier(v.type.typeName) && getIdentifierName(v.type.typeName) === 'ReceiveType');
+                const isReceiveType = foundUsers.find(v => isTypeReferenceNode(v.type) &&
+                    isIdentifier(v.type.typeName) &&
+                    getIdentifierName(v.type.typeName) === "ReceiveType");
                 if (isReceiveType) {
                     // If it's used in ReceiveType<T>, then we can just use T directly without trying to infer it from ReceiveType<T> itself
                     program.pushOp(ReflectionOp.inline, program.pushStack(isReceiveType.parameterName));
@@ -2124,20 +2387,25 @@ export class ReflectionTransformer {
     findDeclarationInFile(sourceFile, declarationName) {
         if (isNodeWithLocals(sourceFile) && sourceFile.locals) {
             const declarationSymbol = sourceFile.locals.get(declarationName);
-            if (declarationSymbol && declarationSymbol.declarations && declarationSymbol.declarations[0]) {
+            if (declarationSymbol &&
+                declarationSymbol.declarations &&
+                declarationSymbol.declarations[0]) {
                 return declarationSymbol.declarations[0];
             }
         }
         return;
     }
     resolveImportSpecifier(_declarationName, importOrExport, sourceFile) {
-        const declarationName = 'string' === typeof _declarationName ? _declarationName : getIdentifierName(_declarationName);
-        if (!importOrExport.moduleSpecifier || !isStringLiteral(importOrExport.moduleSpecifier)) {
+        const declarationName = "string" === typeof _declarationName
+            ? _declarationName
+            : getIdentifierName(_declarationName);
+        if (!importOrExport.moduleSpecifier ||
+            !isStringLiteral(importOrExport.moduleSpecifier)) {
             return;
         }
         const source = this.resolver.resolve(sourceFile, importOrExport);
         if (!source) {
-            debug('module not found', importOrExport.moduleSpecifier.text, 'Is transpileOnly enabled? It needs to be disabled.');
+            debug("module not found", importOrExport.moduleSpecifier.text, "Is transpileOnly enabled? It needs to be disabled.");
             return;
         }
         const declaration = this.findDeclarationInFile(source, declarationName);
@@ -2171,9 +2439,11 @@ export class ReflectionTransformer {
                 for (const element of statement.exportClause.elements) {
                     //see if declarationName is exported
                     if (getEscapedText(element.name) === declarationName) {
-                        if (!statement.moduleSpecifier || !isStringLiteral(statement.moduleSpecifier)) {
+                        if (!statement.moduleSpecifier ||
+                            !isStringLiteral(statement.moduleSpecifier)) {
                             // it's `export {Class}` and Class is either a Declaration or ImportSpecifier
-                            if (!statement.moduleSpecifier || !isStringLiteral(statement.moduleSpecifier)) {
+                            if (!statement.moduleSpecifier ||
+                                !isStringLiteral(statement.moduleSpecifier)) {
                                 // it's `export {Class};` and Class is either a Declaration or ImportSpecifier
                                 if (isNodeWithLocals(sourceFile) && sourceFile.locals) {
                                     const found = sourceFile.locals.get(declarationName);
@@ -2181,7 +2451,9 @@ export class ReflectionTransformer {
                                         const declaration = found.declarations[0];
                                         if (declaration && isImportSpecifier(declaration)) {
                                             const importOrExport = declaration.parent.parent.parent;
-                                            const found = this.resolveImportSpecifier(element.propertyName ? getEscapedText(element.propertyName) : declarationName, importOrExport, sourceFile);
+                                            const found = this.resolveImportSpecifier(element.propertyName
+                                                ? getEscapedText(element.propertyName)
+                                                : declarationName, importOrExport, sourceFile);
                                             if (found)
                                                 return found;
                                         }
@@ -2194,7 +2466,9 @@ export class ReflectionTransformer {
                         }
                         else {
                             // it's `export {Class} from 'x'`
-                            const found = this.resolveImportSpecifier(element.propertyName ? getEscapedText(element.propertyName) : declarationName, statement, sourceFile);
+                            const found = this.resolveImportSpecifier(element.propertyName
+                                ? getEscapedText(element.propertyName)
+                                : declarationName, statement, sourceFile);
                             if (found)
                                 return found;
                         }
@@ -2250,7 +2524,7 @@ export class ReflectionTransformer {
             return node;
         }
         const type = this.getTypeOfType(node);
-        const __type = this.f.createPropertyDeclaration(this.f.createModifiersFromModifierFlags(ModifierFlags.Static), '__type', undefined, undefined, type);
+        const __type = this.f.createPropertyDeclaration(this.f.createModifiersFromModifierFlags(ModifierFlags.Static), "__type", undefined, undefined, type);
         if (isClassDeclaration(node)) {
             // return node;
             return this.f.updateClassDeclaration(node, node.modifiers, node.name, node.typeParameters, node.heritageClauses, this.f.createNodeArray([...node.members, __type]));
@@ -2284,12 +2558,14 @@ export class ReflectionTransformer {
             //since a new default export is created, we do not need ExportKey&DefaultKeyword on the function anymore,
             //but it should preserve all others like Async.
             const modifier = declaration.modifiers
-                ? declaration.modifiers.filter(v => v.kind !== SyntaxKind.ExportKeyword && v.kind !== SyntaxKind.DefaultKeyword && v.kind !== SyntaxKind.Decorator)
+                ? declaration.modifiers.filter(v => v.kind !== SyntaxKind.ExportKeyword &&
+                    v.kind !== SyntaxKind.DefaultKeyword &&
+                    v.kind !== SyntaxKind.Decorator)
                 : [];
             return this.f.createExportAssignment(undefined, undefined, this.wrapWithAssignType(this.f.createFunctionExpression(modifier, declaration.asteriskToken, declaration.name, declaration.typeParameters, declaration.parameters, declaration.type, declaration.body), encodedType));
         }
         const statements = [declaration];
-        statements.push(this.f.createExpressionStatement(this.f.createAssignment(this.f.createPropertyAccessExpression(serializeEntityNameAsExpression(this.f, declaration.name), '__type'), encodedType)));
+        statements.push(this.f.createExpressionStatement(this.f.createAssignment(this.f.createPropertyAccessExpression(serializeEntityNameAsExpression(this.f, declaration.name), "__type"), encodedType)));
         return statements;
     }
     /**
@@ -2311,10 +2587,7 @@ export class ReflectionTransformer {
      */
     wrapWithAssignType(fn, type) {
         this.embedAssignType = true;
-        return this.f.createCallExpression(this.f.createIdentifier('__assignType'), undefined, [
-            fn,
-            type,
-        ]);
+        return this.f.createCallExpression(this.f.createIdentifier("__assignType"), undefined, [fn, type]);
     }
     /**
      * Checks if reflection was disabled/enabled in file via JSDoc attribute for a particular
@@ -2323,18 +2596,24 @@ export class ReflectionTransformer {
     getExplicitReflectionMode(sourceFile, node) {
         let current = node;
         let reflectionComment = undefined;
-        while ('undefined' === typeof reflectionComment && current) {
-            const next = sourceFile && extractJSDocAttribute(sourceFile, current, 'reflection');
-            if ('undefined' !== typeof next)
+        while ("undefined" === typeof reflectionComment && current) {
+            const next = sourceFile && extractJSDocAttribute(sourceFile, current, "reflection");
+            if ("undefined" !== typeof next)
                 reflectionComment = next;
             current = current.parent;
         }
-        if (reflectionComment === '' || reflectionComment === 'true' || reflectionComment === 'default'
-            || reflectionComment === 'enabled' || reflectionComment === '1') {
+        if (reflectionComment === "" ||
+            reflectionComment === "true" ||
+            reflectionComment === "default" ||
+            reflectionComment === "enabled" ||
+            reflectionComment === "1") {
             return true;
         }
-        if (reflectionComment === 'false' || reflectionComment === 'disabled' || reflectionComment === 'never'
-            || reflectionComment === 'no' || reflectionComment === '0') {
+        if (reflectionComment === "false" ||
+            reflectionComment === "disabled" ||
+            reflectionComment === "never" ||
+            reflectionComment === "no" ||
+            reflectionComment === "0") {
             return false;
         }
         return;
@@ -2357,14 +2636,19 @@ export class DeclarationTransformer extends ReflectionTransformer {
         // ConfigResolver resolves the whole config.
         // Since this.compilerOptions was already passed to Resolver, we update its values by reference.
         Object.assign(this.compilerOptions, configResolver.config.compilerOptions);
-        if (reflection.mode === 'never')
+        if (reflection.mode === "never")
             return sourceFile;
         const visitor = (node) => {
             node = visitEachChild(node, visitor, this.context);
-            if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node) || isEnumDeclaration(node)) && hasModifier(node, SyntaxKind.ExportKeyword)) {
+            if ((isTypeAliasDeclaration(node) ||
+                isInterfaceDeclaration(node) ||
+                isEnumDeclaration(node)) &&
+                hasModifier(node, SyntaxKind.ExportKeyword)) {
                 const reflection = this.isWithReflection(sourceFile, node);
                 if (reflection) {
-                    this.addExports.push({ identifier: getIdentifierName(this.getDeclarationVariableName(node.name)) });
+                    this.addExports.push({
+                        identifier: getIdentifierName(this.getDeclarationVariableName(node.name))
+                    });
                 }
             }
             return node;
@@ -2380,20 +2664,23 @@ export class DeclarationTransformer extends ReflectionTransformer {
                 //export declare type __ΩXY = any[];
                 exports.push(this.f.createTypeAliasDeclaration([
                     this.f.createModifier(SyntaxKind.ExportKeyword),
-                    this.f.createModifier(SyntaxKind.DeclareKeyword),
+                    this.f.createModifier(SyntaxKind.DeclareKeyword)
                 ], this.f.createIdentifier(imp.identifier), undefined, this.f.createArrayTypeNode(this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword))));
             }
-            this.sourceFile = this.f.updateSourceFile(this.sourceFile, [...this.sourceFile.statements, ...exports]);
+            this.sourceFile = this.f.updateSourceFile(this.sourceFile, [
+                ...this.sourceFile.statements,
+                ...exports
+            ]);
         }
         this.sourceFile.deepkitDeclarationTransformed = true;
         return this.sourceFile;
     }
 }
 let loaded = false;
-const cache = new Cache;
+const cache = new Cache();
 export const transformer = function deepkitTransformer(context) {
     if (!loaded) {
-        debug('@deepkit/type transformer loaded\n');
+        debug("@deepkit/type transformer loaded\n");
         loaded = true;
     }
     cache.tick();
diff --git a/dist/esm/src/compiler.js.map b/dist/esm/src/compiler.js.map
index 67d4931257a76e4fb1c69c6a84329b9203fb6045..3ef2b4421635df7040b630881041a2d58eaa88a8 100644
--- a/dist/esm/src/compiler.js.map
+++ b/dist/esm/src/compiler.js.map
@@ -1 +1 @@
-{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../src/compiler.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../src/compiler.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/src/config.d.ts b/dist/esm/src/config.d.ts
index 5ecb084a52c3a741f271d3c5b53da772a7d33e3c..1d51361bf4f3747f4db2ad9345e09a6ac960fb89 100644
--- a/dist/esm/src/config.d.ts
+++ b/dist/esm/src/config.d.ts
@@ -1,5 +1,5 @@
-import type { CompilerOptions, ParseConfigHost } from 'typescript';
-import ts from 'typescript';
+import type { CompilerOptions, ParseConfigHost } from "typescript";
+import ts from "typescript";
 /**
  * Default means reflection is enabled for this file.
  * Never means the whole reflection is disabled for this file.
@@ -8,10 +8,12 @@ import ts from 'typescript';
  */
 export declare const reflectionModes: readonly ["default", "explicit", "never"];
 export type Mode = (typeof reflectionModes)[number];
-export type RawMode = Mode | '' | boolean | string | string[] | undefined;
+export type RawMode = Mode | "" | boolean | string | string[] | undefined;
 export declare function isObject(obj: any): obj is {
     [key: string]: any;
 };
+export declare const reflectionLevel: string[];
+export type Level = (typeof reflectionLevel)[number];
 /**
  * These are the values that can be in the tsconfig.json file.
  */
@@ -19,6 +21,16 @@ export interface TsConfigJson {
     extends?: string;
     compilerOptions?: any;
     reflection?: RawMode;
+    /**
+     * Defines the level of reflection to be used during the transpilation process.
+     *
+     * @remarks
+     * The level determines how much extra data is captured in the byte code for each type. This can be one of the following values:
+     * - `minimal` - Only the essential type information is captured.
+     * - `normal` - Additional type information is captured, including some contextual data.
+     * - `verbose` - All available type information is captured, including detailed contextual data.
+     */
+    reflectionLevel?: Level;
     deepkitCompilerOptions?: {
         /**
          * Either true to activate reflection for all files compiled using this tsconfig,
@@ -26,13 +38,23 @@ export interface TsConfigJson {
          * Globs/file paths can be prefixed with a ! to exclude them.
          */
         reflection?: RawMode;
+        /**
+         * Defines the level of reflection to be used during the transpilation process.
+         *
+         * @remarks
+         * The level determines how much extra data is captured in the byte code for each type. This can be one of the following values:
+         * - `minimal` - Only the essential type information is captured.
+         * - `normal` - Additional type information is captured, including some contextual data.
+         * - `verbose` - All available type information is captured, including detailed contextual data.
+         */
+        reflectionLevel?: Level;
         /**
          * If a tsconfig extends another tsconfig, this option defines how the reflection/exclude
          * options are merged. The default strategy is `merge`, which means that the reflection/exclude
          * options are merged with the parent tsconfig.json. If set to `replace`, the reflection/exclude
          * options are not merged, but the parent tsconfig.json is ignored.
          */
-        mergeStrategy?: 'merge' | 'replace';
+        mergeStrategy?: "merge" | "replace";
         /**
          * List of globs/file paths relative to this tsconfig.json
          * which are then excluded from the type compilation step.
@@ -52,22 +74,28 @@ export interface ReflectionConfig {
      * or a list of globs to match against.
      */
     reflection?: string[] | Mode;
+    /**
+     * Defines the level of reflection to be used during the transpilation process.
+     */
+    reflectionLevel?: Level;
 }
 export interface CurrentConfig extends ReflectionConfig {
     compilerOptions: ts.CompilerOptions;
-    mergeStrategy?: 'merge' | 'replace';
+    mergeStrategy?: "merge" | "replace";
     extends?: string;
 }
 export interface ResolvedConfig extends ReflectionConfig {
     path: string;
     compilerOptions: ts.CompilerOptions;
-    mergeStrategy: 'merge' | 'replace';
+    mergeStrategy: "merge" | "replace";
+    reflectionLevel: Level;
 }
 export declare function reflectionModeMatcher(config: ReflectionConfig, filePath: string): Mode;
 export declare function parseRawMode(mode: RawMode): string[] | Mode;
 export interface MatchResult {
     tsConfigPath: string;
     mode: (typeof reflectionModes)[number];
+    level: (typeof reflectionLevel)[number];
 }
 export declare const defaultExcluded: string[];
 export type Matcher = (path: string) => MatchResult;
diff --git a/dist/esm/src/config.js b/dist/esm/src/config.js
index 4ededb832d8b475b70f88bc3f8e88be4723524ea..dd5bd59bf4f97d97b03757475aa5f863911f5f8a 100644
--- a/dist/esm/src/config.js
+++ b/dist/esm/src/config.js
@@ -1,22 +1,24 @@
-import { dirname, isAbsolute, join } from 'path';
-import ts from 'typescript';
-import { debug, debug2, isDebug } from './debug.js';
-import { patternMatch } from './resolver.js';
+import { dirname, isAbsolute, join } from "path";
+import ts from "typescript";
+import { readFileSync } from "fs";
+import { debug, debug2, isDebug } from "./debug.js";
+import { patternMatch } from "./resolver.js";
 /**
  * Default means reflection is enabled for this file.
  * Never means the whole reflection is disabled for this file.
  * Explicit means that reflection is per default disabled for this file, but each symbol/type
  * in it is allowed to enable it using jsdoc `@reflection`.
  */
-export const reflectionModes = ['default', 'explicit', 'never'];
+export const reflectionModes = ["default", "explicit", "never"];
 // don't use from @deepkit/core since we don't want to have a dependency to @deepkit/core
 export function isObject(obj) {
     if (!obj) {
         return false;
     }
-    return typeof obj === 'object' && !Array.isArray(obj);
+    return typeof obj === "object" && !Array.isArray(obj);
 }
-const defaultMergeStrategy = 'merge';
+const defaultMergeStrategy = "merge";
+export const reflectionLevel = ["minimal", "normal", "verbose"];
 /**
  * Read config and parses under TypeScript specification.
  */
@@ -29,47 +31,52 @@ function readTsConfig(parseConfigHost, path) {
     const parsed = ts.parseJsonConfigFileContent(configFile.config, parseConfigHost, dirname(path));
     // errors we ignore entirely
     const ignoredErrors = [
-        18003, // No inputs were found in config file.
+        18003 // No inputs were found in config file.
     ];
     // errors we soft ignore but still log
     const softErrors = [
-        18000, // Circularity detected while resolving configuration
+        18000 // Circularity detected while resolving configuration
     ];
     const errors = parsed.errors.filter(v => !ignoredErrors.includes(v.code));
     if (errors.length) {
-        debug(`Failed to parse tsconfig ${path}: ${parsed.errors.map(v => v.messageText).join(', ')}`);
+        debug(`Failed to parse tsconfig ${path}: ${parsed.errors.map(v => v.messageText).join(", ")}`);
     }
     const hardErrors = errors.filter(v => !softErrors.includes(v.code));
     if (hardErrors.length) {
         return;
     }
+    const json = readFileSync(path, "utf8");
+    const tsconfig = JSON.parse(json);
     return Object.assign(configFile.config, {
         compilerOptions: parsed.options,
+        reflectionLevel: tsconfig.reflectionLevel
+            ? String(tsconfig.reflectionLevel)
+            : undefined
     });
 }
 export function reflectionModeMatcher(config, filePath) {
     if (Array.isArray(config.exclude)) {
         if (patternMatch(filePath, config.exclude))
-            return 'never';
+            return "never";
     }
     if (Array.isArray(config.reflection)) {
-        return patternMatch(filePath, config.reflection) ? 'default' : 'never';
+        return patternMatch(filePath, config.reflection) ? "default" : "never";
     }
-    if (config.reflection === 'default' || config.reflection === 'explicit')
+    if (config.reflection === "default" || config.reflection === "explicit")
         return config.reflection;
-    return 'never';
+    return "never";
 }
 function ensureStringArray(value) {
     if (Array.isArray(value))
-        return value.map(v => '' + v);
-    if ('string' === typeof value)
+        return value.map(v => "" + v);
+    if ("string" === typeof value)
         return [value];
     return [];
 }
 export function parseRawMode(mode) {
-    if ('boolean' === typeof mode)
-        return mode ? 'default' : 'never';
-    if (mode === 'default' || mode === 'explicit')
+    if ("boolean" === typeof mode)
+        return mode ? "default" : "never";
+    if (mode === "default" || mode === "explicit")
         return mode;
     return ensureStringArray(mode);
 }
@@ -77,30 +84,30 @@ function resolvePaths(baseDir, paths) {
     if (!paths || !Array.isArray(paths))
         return;
     for (let i = 0; i < paths.length; i++) {
-        if ('string' !== typeof paths[i])
+        if ("string" !== typeof paths[i])
             continue;
         if (isAbsolute(paths[i]))
             continue;
         let path = paths[i];
         let exclude = false;
-        if (path.startsWith('!')) {
+        if (path.startsWith("!")) {
             exclude = true;
             path = path.substring(1);
         }
         // we treat as relative if it starts with ./ or contains a /
-        if (path.startsWith('./') || path.includes('/')) {
+        if (path.startsWith("./") || path.includes("/")) {
             path = join(baseDir, path);
         }
         // ensure backslashes are forward slashes
-        path = path.replace(/\\/g, '/');
+        path = path.replace(/\\/g, "/");
         if (exclude)
-            path = '!' + path;
+            path = "!" + path;
         paths[i] = path;
     }
 }
 function appendPaths(strategy = defaultMergeStrategy, parent, existing) {
     // important to always return a new array, otherwise we would modify the parent array with subsequent calls
-    if (strategy === 'replace') {
+    if (strategy === "replace") {
         // replace means we stick with existing if it is defined, otherwise we use parent
         return [...(existing || parent)];
     }
@@ -112,24 +119,33 @@ function applyConfigValues(existing, parent, baseDir) {
     const parentReflection = isObject(parent.deepkitCompilerOptions)
         ? parent.deepkitCompilerOptions?.reflection
         : parent.reflection;
-    if (isObject(parent.deepkitCompilerOptions) && 'undefined' === typeof existing.mergeStrategy) {
+    const parentReflectionLevel = parent.deepkitCompilerOptions?.reflectionLevel ||
+        parent.reflectionLevel ||
+        parent.compilerOptions?.reflectionLevel;
+    if (isObject(parent.deepkitCompilerOptions) &&
+        "undefined" === typeof existing.mergeStrategy) {
         existing.mergeStrategy = parent.deepkitCompilerOptions.mergeStrategy;
     }
-    if ('undefined' !== typeof parentReflection) {
+    if ("undefined" !== typeof parentReflection) {
         const next = parseRawMode(parentReflection);
-        if ('undefined' === typeof existing.reflection) {
+        if ("undefined" === typeof existing.reflection) {
             existing.reflection = next;
         }
-        else if ('string' === typeof existing.reflection) {
+        else if ("string" === typeof existing.reflection) {
             // if existing is already a string, there is nothing to inherit from parent
         }
         else if (Array.isArray(next) && Array.isArray(existing.reflection)) {
             existing.reflection = appendPaths(existing.mergeStrategy, next, existing.reflection);
         }
-        else if ('string' === typeof next && Array.isArray(existing.reflection)) {
+        else if ("string" === typeof next && Array.isArray(existing.reflection)) {
             // debug(`Warning: config parent tsconfig has reflection=${next}, but child tsconfig has reflection=${JSON.stringify(existing.reflection)}. reflection stays as array.`);
         }
     }
+    if ("undefined" !== typeof parentReflectionLevel) {
+        if ("undefined" === typeof existing.reflectionLevel) {
+            existing.reflectionLevel = parentReflectionLevel;
+        }
+    }
     if (isObject(parent.deepkitCompilerOptions)) {
         if (`undefined` !== typeof parent.deepkitCompilerOptions.exclude) {
             const next = ensureStringArray(parent.deepkitCompilerOptions.exclude);
@@ -147,27 +163,32 @@ function applyConfigValues(existing, parent, baseDir) {
     existing.extends = parent.extends;
 }
 export const defaultExcluded = [
-    'lib.dom*.d.ts',
-    '*typedarrays.d.ts',
-    'lib.webworker*.d.ts',
-    'lib.decorator*.d.ts',
-    'lib.es2015.proxy.d.ts',
-    'lib.es2020.sharedmemory.d.ts',
-    'lib.es2015.core.d.ts',
+    "lib.dom*.d.ts",
+    "*typedarrays.d.ts",
+    "lib.webworker*.d.ts",
+    "lib.decorator*.d.ts",
+    "lib.es2015.proxy.d.ts",
+    "lib.es2020.sharedmemory.d.ts",
+    "lib.es2015.core.d.ts"
 ];
-export function getConfigResolver(cache, host, compilerOptions, sourceFile, tsConfigPath = '') {
+export function getConfigResolver(cache, host, compilerOptions, sourceFile, tsConfigPath = "") {
     let config = {
         // We use the parameter `compilerOptions` only for compilerOptions.configFilePath.
         // We load the compilerOptions manually since transformers don't get the full picture
         // (path aliases are missing for example).
         // It's important to load compilerOptions manually if there is compilerOptions.configFilePath
         // since not all build tools provide the full compilerOptions.
-        compilerOptions: {},
+        compilerOptions: {}
     };
-    tsConfigPath = tsConfigPath || ('string' === typeof compilerOptions.configFilePath ? compilerOptions.configFilePath : '');
+    tsConfigPath =
+        tsConfigPath ||
+            ("string" === typeof compilerOptions.configFilePath
+                ? compilerOptions.configFilePath
+                : "");
     if (tsConfigPath) {
-        if (cache[tsConfigPath])
+        if (cache[tsConfigPath]) {
             return cache[tsConfigPath];
+        }
         const configFile = readTsConfig(host, tsConfigPath);
         if (configFile)
             applyConfigValues(config, configFile, dirname(tsConfigPath));
@@ -183,7 +204,9 @@ export function getConfigResolver(cache, host, compilerOptions, sourceFile, tsCo
             debug2(`No tsConfigPath|compilerOptions.configFilePath provided. Manually searching for tsconfig.json in ${baseDir} returned ${configPath}`);
             if (configPath) {
                 //configPath might be relative to passed basedir
-                tsConfigPath = isAbsolute(configPath) ? configPath : join(baseDir, configPath);
+                tsConfigPath = isAbsolute(configPath)
+                    ? configPath
+                    : join(baseDir, configPath);
             }
         }
         if (tsConfigPath) {
@@ -216,7 +239,9 @@ export function getConfigResolver(cache, host, compilerOptions, sourceFile, tsCo
     else {
         throw new Error(`No tsconfig found for ${sourceFile?.fileName}, that is weird. Either provide a tsconfig or compilerOptions.configFilePath`);
     }
-    config.exclude = config.exclude ? [...defaultExcluded, ...config.exclude] : [...defaultExcluded];
+    config.exclude = config.exclude
+        ? [...defaultExcluded, ...config.exclude]
+        : [...defaultExcluded];
     config.compilerOptions.configFilePath = tsConfigPath;
     const resolvedConfig = {
         path: tsConfigPath,
@@ -224,14 +249,19 @@ export function getConfigResolver(cache, host, compilerOptions, sourceFile, tsCo
         compilerOptions: Object.assign(config.compilerOptions, compilerOptions),
         exclude: config.exclude,
         reflection: config.reflection,
-        mergeStrategy: config.mergeStrategy || defaultMergeStrategy,
+        reflectionLevel: config.reflectionLevel ||
+            (config.compilerOptions?.reflectionLevel
+                ? String(config.compilerOptions?.reflectionLevel)
+                : undefined) ||
+            "normal",
+        mergeStrategy: config.mergeStrategy || defaultMergeStrategy
     };
     if (isDebug()) {
         debug(`Found config ${resolvedConfig.path}:\nreflection:`, resolvedConfig.reflection, `\nexclude:`, resolvedConfig.exclude, `\npaths:`, resolvedConfig.compilerOptions.paths);
     }
     const match = (path) => {
         const mode = reflectionModeMatcher(config, path);
-        return { mode, tsConfigPath };
+        return { mode, tsConfigPath, level: resolvedConfig.reflectionLevel };
     };
     return (cache[tsConfigPath] = { config: resolvedConfig, match });
 }
diff --git a/dist/esm/src/config.js.map b/dist/esm/src/config.js.map
index 22f6c0c9cc45669313c82d4211fbe7dfe126e95c..ba9e8b4c7509d74bb88105578791d74988c7d0dc 100644
--- a/dist/esm/src/config.js.map
+++ b/dist/esm/src/config.js.map
@@ -1 +1 @@
-{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../src/config.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../src/config.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/src/loader.d.ts b/dist/esm/src/loader.d.ts
index 3c17744c605f664b3ab42a2e3c92cd4b160e7e4e..4b6bba7807d3a10823d188ec9bd15b4a9735ae99 100644
--- a/dist/esm/src/loader.d.ts
+++ b/dist/esm/src/loader.d.ts
@@ -1,6 +1,6 @@
-import type { CompilerOptions, SourceFile } from 'typescript';
-import ts from 'typescript';
-import { Cache } from './compiler.js';
+import type { CompilerOptions, SourceFile } from "typescript";
+import ts from "typescript";
+import { Cache } from "./compiler.js";
 export declare class DeepkitLoader {
     protected options: CompilerOptions;
     protected host: ts.CompilerHost;
diff --git a/dist/esm/src/loader.js b/dist/esm/src/loader.js
index 85e8fbae575ba0eb5d824ab077ff86d0a3a9303d..62ca81e670544f462be0c21c754686eb36db368f 100644
--- a/dist/esm/src/loader.js
+++ b/dist/esm/src/loader.js
@@ -1,15 +1,15 @@
-import ts from 'typescript';
-import { Cache, ReflectionTransformer } from './compiler.js';
+import ts from "typescript";
+import { Cache, ReflectionTransformer } from "./compiler.js";
 export class DeepkitLoader {
     constructor() {
         this.options = {
             allowJs: true,
-            declaration: false,
+            declaration: false
         };
         this.host = ts.createCompilerHost(this.options);
         this.program = ts.createProgram([], this.options, this.host);
         this.printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed });
-        this.cache = new Cache;
+        this.cache = new Cache();
         this.knownFiles = {};
         this.sourceFiles = {};
         const originReadFile = this.host.readFile;
@@ -19,8 +19,7 @@ export class DeepkitLoader {
             return originReadFile.call(this.host, fileName);
         };
         //the program should not write any files
-        this.host.writeFile = () => {
-        };
+        this.host.writeFile = () => { };
         const originalGetSourceFile = this.host.getSourceFile;
         this.host.getSourceFile = (fileName, languageVersion, onError, shouldCreateNewSourceFile) => {
             if (this.sourceFiles[fileName])
@@ -30,11 +29,16 @@ export class DeepkitLoader {
     }
     transform(source, path) {
         this.knownFiles[path] = source;
-        const sourceFile = ts.createSourceFile(path, source, ts.ScriptTarget.ESNext, true, path.endsWith('.tsx') ? ts.ScriptKind.TSX : ts.ScriptKind.TS);
+        const sourceFile = ts.createSourceFile(path, source, ts.ScriptTarget.ESNext, true, path.endsWith(".tsx") ? ts.ScriptKind.TSX : ts.ScriptKind.TS);
         let newSource = source;
         ts.transform(sourceFile, [
             (context) => {
-                const transformer = new ReflectionTransformer(context, this.cache).forHost(this.host).withReflection({ reflection: 'default' });
+                const transformer = new ReflectionTransformer(context, this.cache)
+                    .forHost(this.host)
+                    .withReflection({
+                    reflection: "default",
+                    reflectionLevel: "normal"
+                });
                 return (node) => {
                     const sourceFile = transformer.transformSourceFile(node);
                     newSource = this.printer.printNode(ts.EmitHint.SourceFile, sourceFile, sourceFile);
diff --git a/dist/esm/src/loader.js.map b/dist/esm/src/loader.js.map
index b3d010fc1e15a10a0811f0ec52c77e4a2441468b..8ca5bbbc03a572da7a620b4ce8822993d036a7c9 100644
--- a/dist/esm/src/loader.js.map
+++ b/dist/esm/src/loader.js.map
@@ -1 +1 @@
-{"version":3,"file":"loader.js","sourceRoot":"","sources":["../../../src/loader.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,YAAY,CAAC;AAC5B,OAAO,EAAE,KAAK,EAAE,qBAAqB,EAAE,MAAM,eAAe,CAAC;AAE7D,MAAM,OAAO,aAAa;IAgBtB;QAfU,YAAO,GAAoB;YACjC,OAAO,EAAE,IAAI;YACb,WAAW,EAAE,KAAK;SACrB,CAAC;QAEQ,SAAI,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE3C,YAAO,GAAG,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAExD,YAAO,GAAG,EAAE,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjE,UAAK,GAAG,IAAI,KAAK,CAAC;QAElB,eAAU,GAA+B,EAAE,CAAC;QAC5C,gBAAW,GAAmC,EAAE,CAAC;QAGvD,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,QAAgB,EAAE,EAAE;YACtC,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBAAE,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACpD,CAAC,CAAC;QAEF,wCAAwC;QACxC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE;QAC3B,CAAC,CAAC;QAEF,MAAM,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,QAAgB,EAAE,eAAgC,EAAE,OAAmC,EAAE,yBAAmC,EAA0B,EAAE;YAC/K,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;gBAAE,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClE,OAAO,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,yBAAyB,CAAC,CAAC;QAChH,CAAC,CAAC;IACN,CAAC;IAED,SAAS,CAAC,MAAc,EAAE,IAAY;QAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;QAC/B,MAAM,UAAU,GAAG,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACjJ,IAAI,SAAS,GAAG,MAAM,CAAC;QAEvB,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE;YACrB,CAAC,OAA8B,EAAE,EAAE;gBAC/B,MAAM,WAAW,GAAG,IAAI,qBAAqB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC;gBAChI,OAAO,CAAC,IAAgB,EAAc,EAAE;oBACpC,MAAM,UAAU,GAAG,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;oBAEzD,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;oBACnF,OAAO,UAAU,CAAC;gBACtB,CAAC,CAAC;YACN,CAAC;SACJ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAEjB,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ"}
\ No newline at end of file
+{"version":3,"file":"loader.js","sourceRoot":"","sources":["../../../src/loader.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/src/reflection-ast.d.ts b/dist/esm/src/reflection-ast.d.ts
index fb953d5353e83e179a07ab010d7ccda21bb76111..9b6a84cce9cb6c9b51a45c5575d37a9157e6827d 100644
--- a/dist/esm/src/reflection-ast.d.ts
+++ b/dist/esm/src/reflection-ast.d.ts
@@ -1,13 +1,17 @@
-import ts, { __String, ArrowFunction, BinaryExpression, EntityName, Expression, Identifier, ImportDeclaration, JSDoc, JSDocImportTag, ModifierLike, Node, NodeArray, NodeFactory, PrivateIdentifier, PropertyAccessExpression, PropertyName, QualifiedName, StringLiteral, SymbolTable } from 'typescript';
-import { SourceFile } from './ts-types.js';
+import ts, { __String, ArrowFunction, BinaryExpression, EntityName, Expression, Identifier, ImportDeclaration, JSDoc, JSDocImportTag, ModifierLike, Node, NodeArray, NodeFactory, PrivateIdentifier, PropertyAccessExpression, PropertyName, QualifiedName, StringLiteral, SymbolTable } from "typescript";
+import { SourceFile } from "./ts-types.js";
 export type PackExpression = Expression | string | number | boolean | bigint;
 export declare function getIdentifierName(node: Identifier | PrivateIdentifier | StringLiteral | __String): string;
 export declare function getEscapedText(node: Identifier | PrivateIdentifier | StringLiteral | __String): string;
 export declare function findSourceFile(node: Node): SourceFile | undefined;
 export declare function joinQualifiedName(name: EntityName): string;
 export declare function getCommentOfNode(sourceFile: SourceFile, node: Node): string | undefined;
-export declare function parseJSDocAttributeFromText(comment: string, attribute: string): string | undefined;
+export declare function parseJSDocAttributeFromText(comment: string, attribute: string): [string | undefined, number];
+export declare function parseJSDocBooleanFromText(comment: string, attribute: string): boolean | undefined;
+export declare function parseJSDocDescription(comment: string): string | undefined;
 export declare function extractJSDocAttribute(sourceFile: SourceFile, node: Node | undefined, attribute: string): string | undefined;
+export declare function extractJSDocArray(sourceFile: SourceFile, node: Node | undefined, attribute: string): string[] | undefined;
+export declare function extractJSDocBoolean(sourceFile: SourceFile, node: Node | undefined, attribute: string): boolean | undefined;
 export declare function getPropertyName(f: NodeFactory, node?: PropertyName): string | symbol | number | ArrowFunction;
 export declare function getNameAsString(node?: PropertyName | QualifiedName): string;
 export declare function hasModifier(node: Node & {
@@ -18,9 +22,9 @@ export declare class NodeConverter {
     constructor(f: NodeFactory);
     toExpression<T extends PackExpression | PackExpression[]>(node?: T): Expression;
 }
-export declare function isNodeWithLocals(node: Node): node is (Node & {
+export declare function isNodeWithLocals(node: Node): node is Node & {
     locals: SymbolTable | undefined;
-});
+};
 export declare function getGlobalsOfSourceFile(file: SourceFile): SymbolTable | void;
 /**
  * For imports that can removed (like a class import only used as type only, like `p: Model[]`) we have
diff --git a/dist/esm/src/reflection-ast.js b/dist/esm/src/reflection-ast.js
index c38eba99cd06c1ed35e851150c93642d39fc68e4..94d031561c08d6fec53e2470c2a403493f9e5c30 100644
--- a/dist/esm/src/reflection-ast.js
+++ b/dist/esm/src/reflection-ast.js
@@ -7,11 +7,11 @@
  *
  * You should have received a copy of the MIT License along with this program.
  */
-import ts, { isBigIntLiteral, } from 'typescript';
-import { cloneNode as tsNodeClone } from '@marcj/ts-clone-node';
-const { isArrowFunction, isComputedPropertyName, isIdentifier, isNamedImports, isNumericLiteral, isPrivateIdentifier, isStringLiteral, isStringLiteralLike, setOriginalNode, getLeadingCommentRanges, isNoSubstitutionTemplateLiteral, NodeFlags, SyntaxKind, } = ts;
+import { cloneNode as tsNodeClone } from "@marcj/ts-clone-node";
+import ts, { isBigIntLiteral } from "typescript";
+const { isArrowFunction, isComputedPropertyName, isIdentifier, isNamedImports, isNumericLiteral, isPrivateIdentifier, isStringLiteral, isStringLiteralLike, setOriginalNode, getLeadingCommentRanges, isNoSubstitutionTemplateLiteral, NodeFlags, SyntaxKind } = ts;
 function is__String(value) {
-    return typeof value === 'string';
+    return typeof value === "string";
 }
 export function getIdentifierName(node) {
     if (is__String(node))
@@ -21,7 +21,7 @@ export function getIdentifierName(node) {
     }
     if (isStringLiteral(node))
         return node.text;
-    return '';
+    return "";
 }
 export function getEscapedText(node) {
     if (is__String(node))
@@ -42,45 +42,88 @@ export function findSourceFile(node) {
 export function joinQualifiedName(name) {
     if (isIdentifier(name))
         return getIdentifierName(name);
-    return joinQualifiedName(name.left) + '_' + getIdentifierName(name.right);
+    return joinQualifiedName(name.left) + "_" + getIdentifierName(name.right);
 }
+const BANNER_REGEX = /^\/\*\s---.*\n[\s\S]*\s*---\s*\*\//;
 export function getCommentOfNode(sourceFile, node) {
-    const comment = getLeadingCommentRanges(sourceFile.text, node.pos);
-    if (!comment)
+    const commentLines = getLeadingCommentRanges(sourceFile.text, node.pos);
+    if (!commentLines || commentLines.length === 0)
+        return;
+    const commentLine = commentLines.slice(-1)[0];
+    if (!commentLine)
         return;
-    return comment.map(v => sourceFile.text.substring(v.pos, v.end)).join('\n');
+    const comment = sourceFile.text.slice(commentLine.pos, commentLine.end);
+    if (comment.match(BANNER_REGEX)) {
+        return undefined;
+    }
+    return comment;
 }
 export function parseJSDocAttributeFromText(comment, attribute) {
     // no regex
-    const index = comment.indexOf('@' + attribute + ' ');
+    const attributeStr = `@${attribute} `;
+    const index = comment.indexOf(attributeStr);
     if (index === -1) {
         let start = 0;
         while (true) {
-            const withoutContent = comment.indexOf('@' + attribute, start);
-            if (withoutContent === -1)
-                return undefined;
-            //make sure next character is space or end of comment
+            const withoutContent = comment.indexOf(`@${attribute}`, start);
+            if (withoutContent === -1) {
+                return [undefined, -1];
+            }
+            // make sure next character is space or end of comment
             const nextCharacter = comment[withoutContent + attribute.length + 1];
-            if (!nextCharacter || nextCharacter === ' ' || nextCharacter === '\n' || nextCharacter === '\r' || nextCharacter === '\t') {
-                return '';
+            if (!nextCharacter ||
+                nextCharacter === " " ||
+                nextCharacter === "\n" ||
+                nextCharacter === "\r" ||
+                nextCharacter === "\t") {
+                return [undefined, withoutContent + attribute.length + 1];
             }
             start = withoutContent + attribute.length + 1;
         }
-        return undefined;
     }
-    const start = index + attribute.length + 2;
+    const start = index + attributeStr.length;
     // end is either next attribute @ or end of comment.
-    const nextAttribute = comment.indexOf('@', start);
-    const endOfComment = comment.indexOf('*/', start);
+    const nextAttribute = comment.indexOf("@", start);
+    const endOfComment = comment.indexOf("*/", start);
     const end = nextAttribute === -1 ? endOfComment : Math.min(nextAttribute, endOfComment);
     const content = comment.substring(start, end).trim();
     // make sure multiline comments are supported, and each line is trimmed and `\s\s\s\*` removed
-    return content.split('\n').map(v => {
-        const indexOfStar = v.indexOf('*');
-        if (indexOfStar === -1)
-            return v.trim();
-        return v.substring(indexOfStar + 1).trim();
-    }).join('\n');
+    return [
+        content
+            .split("\n")
+            .map(v => {
+            const indexOfStar = v.indexOf("*");
+            if (indexOfStar === -1) {
+                return v.trim();
+            }
+            return v.substring(indexOfStar + 1).trim();
+        })
+            .join("\n")
+            .replace(/\n*$/g, ""),
+        end + 1
+    ];
+}
+export function parseJSDocBooleanFromText(comment, attribute) {
+    return new RegExp(`^\s*@(${attribute?.trim()})\s*(false|False|FALSE|0|n|N|no|No|NO)\s*$`, "gm").test(comment?.trim())
+        ? false
+        : new RegExp(`^\s*@(${attribute?.trim()})\s*(true|True|TRUE|1|y|Y|yes|Yes|YES)?\s*$`, "gm").test(comment?.trim())
+            ? true
+            : undefined;
+}
+const JS_DOC_REGEX = /^\s*\*\s\@[a-z]+\:?(.*)\s[a-zA-Z0-9_]+$/gim;
+export function parseJSDocDescription(comment) {
+    let lines = comment
+        .split("\n")
+        .filter(line => line && !line.includes("/**") && !line.includes("*/"))
+        .map(line => line
+        .replace(/^\s*\*\s*/g, "")
+        .replace(/^\*\s*/g, "")
+        .trim());
+    const attribute = lines.findIndex(line => line.startsWith("@"));
+    if (attribute !== -1) {
+        lines = lines.slice(0, attribute);
+    }
+    return lines.join("\n").trim() || undefined;
 }
 export function extractJSDocAttribute(sourceFile, node, attribute) {
     // in TypeScript 5.3 they made JSDoc parsing optional and disabled by default.
@@ -92,11 +135,64 @@ export function extractJSDocAttribute(sourceFile, node, attribute) {
     const comment = getCommentOfNode(sourceFile, node);
     if (!comment)
         return undefined;
-    return parseJSDocAttributeFromText(comment, attribute);
+    let result = parseJSDocAttributeFromText(comment, attribute);
+    if (!result[0] && attribute === "description") {
+        result[0] = parseJSDocDescription(comment);
+    }
+    return result[0];
+}
+export function extractJSDocArray(sourceFile, node, attribute) {
+    // in TypeScript 5.3 they made JSDoc parsing optional and disabled by default.
+    // we need to read the comments manually and then parse @{attribute} {value} manually.
+    // we need reference to SourceFile, since Node.getSourceFile() although available in types,
+    // is not available at runtime sometimes (works in tests, but fails with tsc).
+    if (!node)
+        return undefined;
+    const comment = getCommentOfNode(sourceFile, node);
+    if (!comment)
+        return undefined;
+    const results = [];
+    try {
+        let result = parseJSDocAttributeFromText(comment, attribute);
+        if (result.length < 2) {
+            return undefined;
+        }
+        if (result[0] && result[1] > -1) {
+            results.push(result[0]);
+        }
+        let currentComment = comment;
+        while (result[1] > -1 && currentComment.length > result[1]) {
+            currentComment = currentComment.substring(result[1]);
+            // search for next attribute
+            result = parseJSDocAttributeFromText(currentComment, attribute);
+            if (result[0]) {
+                results.push(result[0]);
+            }
+        }
+    }
+    catch (error) {
+        console.error("Error parsing JSDoc attribute:", attribute, "in comment:", comment);
+        console.error(error);
+    }
+    return results;
+}
+export function extractJSDocBoolean(sourceFile, node, attribute) {
+    // in TypeScript 5.3 they made JSDoc parsing optional and disabled by default.
+    // we need to read the comments manually and then parse @{attribute} {value} manually.
+    // we need reference to SourceFile, since Node.getSourceFile() although available in types,
+    // is not available at runtime sometimes (works in tests, but fails with tsc).
+    if (!node) {
+        return undefined;
+    }
+    const comment = getCommentOfNode(sourceFile, node);
+    if (!comment) {
+        return undefined;
+    }
+    return parseJSDocBooleanFromText(comment, attribute);
 }
 export function getPropertyName(f, node) {
     if (!node)
-        return '';
+        return "";
     if (isIdentifier(node))
         return getIdentifierName(node);
     if (isStringLiteral(node))
@@ -110,11 +206,11 @@ export function getPropertyName(f, node) {
     }
     if (isPrivateIdentifier(node))
         return getIdentifierName(node);
-    return '';
+    return "";
 }
 export function getNameAsString(node) {
     if (!node)
-        return '';
+        return "";
     if (isIdentifier(node))
         return getIdentifierName(node);
     if (isStringLiteral(node))
@@ -128,7 +224,7 @@ export function getNameAsString(node) {
     if (isComputedPropertyName(node)) {
         if (isStringLiteralLike(node) || isNumericLiteral(node))
             return node.text;
-        return '';
+        return "";
     }
     if (isPrivateIdentifier(node))
         return getIdentifierName(node);
@@ -145,7 +241,7 @@ const cloneHook = (node, payload) => {
         return {
             text: () => {
                 return getIdentifierName(node);
-            },
+            }
         };
     }
     return;
@@ -156,21 +252,23 @@ export class NodeConverter {
     }
     toExpression(node) {
         if (node === undefined)
-            return this.f.createIdentifier('undefined');
+            return this.f.createIdentifier("undefined");
         if (Array.isArray(node)) {
             return this.f.createArrayLiteralExpression(this.f.createNodeArray(node.map(v => this.toExpression(v))));
         }
-        if ('string' === typeof node)
+        if ("string" === typeof node)
             return this.f.createStringLiteral(node, true);
-        if ('number' === typeof node)
+        if ("number" === typeof node)
             return this.f.createNumericLiteral(node);
-        if ('bigint' === typeof node)
+        if ("bigint" === typeof node)
             return this.f.createBigIntLiteral(String(node));
-        if ('boolean' === typeof node)
+        if ("boolean" === typeof node)
             return node ? this.f.createTrue() : this.f.createFalse();
         if (node.pos === -1 && node.end === -1 && node.parent === undefined) {
             if (isArrowFunction(node)) {
-                if (node.body.pos === -1 && node.body.end === -1 && node.body.parent === undefined)
+                if (node.body.pos === -1 &&
+                    node.body.end === -1 &&
+                    node.body.parent === undefined)
                     return node;
                 return this.f.createArrowFunction(node.modifiers, node.typeParameters, node.parameters, node.type, node.equalsGreaterThanToken, this.toExpression(node.body));
             }
@@ -202,21 +300,21 @@ export class NodeConverter {
                 setOriginalNodes: true,
                 preserveSymbols: true,
                 setParents: true,
-                hook: cloneHook,
+                hook: cloneHook
             });
         }
         catch (error) {
-            console.error('could not clone node', node);
+            console.error("could not clone node", node);
             throw error;
         }
     }
 }
 function isExternalOrCommonJsModule(file) {
     //both attributes are internal and not yet public
-    return (file.externalModuleIndicator || file.commonJsModuleIndicator) !== undefined;
+    return ((file.externalModuleIndicator || file.commonJsModuleIndicator) !== undefined);
 }
 export function isNodeWithLocals(node) {
-    return 'locals' in node;
+    return "locals" in node;
 }
 //logic copied from typescript
 export function getGlobalsOfSourceFile(file) {
@@ -236,10 +334,13 @@ export function getGlobalsOfSourceFile(file) {
  * to modify the import so TS does not remove it.
  */
 export function ensureImportIsEmitted(importDeclaration, specifierName) {
-    if (specifierName && importDeclaration.importClause && importDeclaration.importClause.namedBindings) {
+    if (specifierName &&
+        importDeclaration.importClause &&
+        importDeclaration.importClause.namedBindings) {
         // const binding = importDeclaration.importClause.namedBindings;
         if (isNamedImports(importDeclaration.importClause.namedBindings)) {
-            for (const element of importDeclaration.importClause.namedBindings.elements) {
+            for (const element of importDeclaration.importClause.namedBindings
+                .elements) {
                 if (element.name.escapedText === specifierName.escapedText) {
                     element.flags |= NodeFlags.Synthesized;
                     return;
diff --git a/dist/esm/src/reflection-ast.js.map b/dist/esm/src/reflection-ast.js.map
index 5dc3de61925f15524f974ac133dd389de1fd63f8..ad811ea79379af54ef94987bea6810e023c067bf 100644
--- a/dist/esm/src/reflection-ast.js.map
+++ b/dist/esm/src/reflection-ast.js.map
@@ -1 +1 @@
-{"version":3,"file":"reflection-ast.js","sourceRoot":"","sources":["../../../src/reflection-ast.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"reflection-ast.js","sourceRoot":"","sources":["../../../src/reflection-ast.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/tsconfig.esm.tsbuildinfo b/dist/esm/tsconfig.esm.tsbuildinfo
index c061e18bf2e37aa5855c35592c924e0fa3c0c57d..067ee7d1b217c7865be6255e50585ae18423546c 100644
--- a/dist/esm/tsconfig.esm.tsbuildinfo
+++ b/dist/esm/tsconfig.esm.tsbuildinfo
@@ -1 +1 @@
-{"fileNames":["../../../../node_modules/typescript/lib/lib.es5.d.ts","../../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../../node_modules/typescript/lib/lib.dom.d.ts","../../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../../node_modules/typescript/lib/lib.dom.asynciterable.d.ts","../../../../node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../../../node_modules/typescript/lib/lib.scripthost.d.ts","../../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../../node_modules/typescript/lib/lib.es2020.full.d.ts","../../../../node_modules/typescript/lib/typescript.d.ts","../../../../node_modules/@marcj/ts-clone-node/dist/esm/index.d.ts","../../src/ts-types.ts","../../src/reflection-ast.ts","../../../type-spec/dist/cjs/src/type.d.ts","../../../type-spec/dist/cjs/index.d.ts","../../../../node_modules/@types/braces/index.d.ts","../../../../node_modules/@types/micromatch/index.d.ts","../../src/resolver.ts","../../../../node_modules/lz-string/typings/lz-string.d.ts","../../node_modules/@typescript/vfs/dist/index.d.ts","../../src/debug.ts","../../src/config.ts","../../src/compiler.ts","../../src/loader.ts","../../../../node_modules/@rollup/pluginutils/node_modules/@types/estree/index.d.ts","../../../../node_modules/@rollup/pluginutils/types/index.d.ts","../../src/plugin.ts","../../install-transformer.ts","../../compiler-debug.ts","../../index.ts","../../../../node_modules/@types/lz-string/index.d.ts","../../../../node_modules/@types/node/compatibility/disposable.d.ts","../../../../node_modules/@types/node/compatibility/indexable.d.ts","../../../../node_modules/@types/node/compatibility/iterators.d.ts","../../../../node_modules/@types/node/compatibility/index.d.ts","../../../../node_modules/@types/node/globals.typedarray.d.ts","../../../../node_modules/@types/node/buffer.buffer.d.ts","../../../../node_modules/buffer/index.d.ts","../../../../node_modules/undici-types/header.d.ts","../../../../node_modules/undici-types/readable.d.ts","../../../../node_modules/undici-types/file.d.ts","../../../../node_modules/undici-types/fetch.d.ts","../../../../node_modules/undici-types/formdata.d.ts","../../../../node_modules/undici-types/connector.d.ts","../../../../node_modules/undici-types/client.d.ts","../../../../node_modules/undici-types/errors.d.ts","../../../../node_modules/undici-types/dispatcher.d.ts","../../../../node_modules/undici-types/global-dispatcher.d.ts","../../../../node_modules/undici-types/global-origin.d.ts","../../../../node_modules/undici-types/pool-stats.d.ts","../../../../node_modules/undici-types/pool.d.ts","../../../../node_modules/undici-types/handlers.d.ts","../../../../node_modules/undici-types/balanced-pool.d.ts","../../../../node_modules/undici-types/agent.d.ts","../../../../node_modules/undici-types/mock-interceptor.d.ts","../../../../node_modules/undici-types/mock-agent.d.ts","../../../../node_modules/undici-types/mock-client.d.ts","../../../../node_modules/undici-types/mock-pool.d.ts","../../../../node_modules/undici-types/mock-errors.d.ts","../../../../node_modules/undici-types/proxy-agent.d.ts","../../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../../node_modules/undici-types/retry-handler.d.ts","../../../../node_modules/undici-types/retry-agent.d.ts","../../../../node_modules/undici-types/api.d.ts","../../../../node_modules/undici-types/interceptors.d.ts","../../../../node_modules/undici-types/util.d.ts","../../../../node_modules/undici-types/cookies.d.ts","../../../../node_modules/undici-types/patch.d.ts","../../../../node_modules/undici-types/websocket.d.ts","../../../../node_modules/undici-types/eventsource.d.ts","../../../../node_modules/undici-types/filereader.d.ts","../../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../../node_modules/undici-types/content-type.d.ts","../../../../node_modules/undici-types/cache.d.ts","../../../../node_modules/undici-types/index.d.ts","../../../../node_modules/@types/node/globals.d.ts","../../../../node_modules/@types/node/assert.d.ts","../../../../node_modules/@types/node/assert/strict.d.ts","../../../../node_modules/@types/node/async_hooks.d.ts","../../../../node_modules/@types/node/buffer.d.ts","../../../../node_modules/@types/node/child_process.d.ts","../../../../node_modules/@types/node/cluster.d.ts","../../../../node_modules/@types/node/console.d.ts","../../../../node_modules/@types/node/constants.d.ts","../../../../node_modules/@types/node/crypto.d.ts","../../../../node_modules/@types/node/dgram.d.ts","../../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../../node_modules/@types/node/dns.d.ts","../../../../node_modules/@types/node/dns/promises.d.ts","../../../../node_modules/@types/node/domain.d.ts","../../../../node_modules/@types/node/dom-events.d.ts","../../../../node_modules/@types/node/events.d.ts","../../../../node_modules/@types/node/fs.d.ts","../../../../node_modules/@types/node/fs/promises.d.ts","../../../../node_modules/@types/node/http.d.ts","../../../../node_modules/@types/node/http2.d.ts","../../../../node_modules/@types/node/https.d.ts","../../../../node_modules/@types/node/inspector.d.ts","../../../../node_modules/@types/node/module.d.ts","../../../../node_modules/@types/node/net.d.ts","../../../../node_modules/@types/node/os.d.ts","../../../../node_modules/@types/node/path.d.ts","../../../../node_modules/@types/node/perf_hooks.d.ts","../../../../node_modules/@types/node/process.d.ts","../../../../node_modules/@types/node/punycode.d.ts","../../../../node_modules/@types/node/querystring.d.ts","../../../../node_modules/@types/node/readline.d.ts","../../../../node_modules/@types/node/readline/promises.d.ts","../../../../node_modules/@types/node/repl.d.ts","../../../../node_modules/@types/node/sea.d.ts","../../../../node_modules/@types/node/sqlite.d.ts","../../../../node_modules/@types/node/stream.d.ts","../../../../node_modules/@types/node/stream/promises.d.ts","../../../../node_modules/@types/node/stream/consumers.d.ts","../../../../node_modules/@types/node/stream/web.d.ts","../../../../node_modules/@types/node/string_decoder.d.ts","../../../../node_modules/@types/node/test.d.ts","../../../../node_modules/@types/node/timers.d.ts","../../../../node_modules/@types/node/timers/promises.d.ts","../../../../node_modules/@types/node/tls.d.ts","../../../../node_modules/@types/node/trace_events.d.ts","../../../../node_modules/@types/node/tty.d.ts","../../../../node_modules/@types/node/url.d.ts","../../../../node_modules/@types/node/util.d.ts","../../../../node_modules/@types/node/v8.d.ts","../../../../node_modules/@types/node/vm.d.ts","../../../../node_modules/@types/node/wasi.d.ts","../../../../node_modules/@types/node/worker_threads.d.ts","../../../../node_modules/@types/node/zlib.d.ts","../../../../node_modules/@types/node/index.d.ts"],"fileIdsList":[[52,79,122],[79,122],[67,79,122],[58,79,122],[79,119,122],[79,121,122],[122],[79,122,127,157],[79,122,123,128,134,135,142,154,165],[79,122,123,124,134,142],[74,75,76,79,122],[79,122,125,166],[79,122,126,127,135,143],[79,122,127,154,162],[79,122,128,130,134,142],[79,121,122,129],[79,122,130,131],[79,122,134],[79,122,132,134],[79,121,122,134],[79,122,134,135,136,154,165],[79,122,134,135,136,149,154,157],[79,117,122,170],[79,117,122,130,134,137,142,154,165],[79,122,134,135,137,138,142,154,162,165],[79,122,137,139,154,162,165],[77,78,79,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],[79,122,134,140],[79,122,141,165],[79,122,130,134,142,154],[79,122,143],[79,122,144],[79,121,122,145],[79,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],[79,122,147],[79,122,148],[79,122,134,149,150],[79,122,149,151,166,168],[79,122,134,154,155,156,157],[79,122,154,156],[79,122,154,155],[79,122,157],[79,122,158],[79,119,122,154],[79,122,134,160,161],[79,122,160,161],[79,122,127,142,154,162],[79,122,163],[79,122,142,164],[79,122,137,148,165],[79,122,127,166],[79,122,154,167],[79,122,141,168],[79,122,169],[79,122,127,134,136,145,154,165,168,170],[79,122,154,171],[79,89,93,122,165],[79,89,122,154,165],[79,84,122],[79,86,89,122,162,165],[79,122,142,162],[79,122,172],[79,84,122,172],[79,86,89,122,142,165],[79,81,82,85,88,122,134,154,165],[79,89,96,122],[79,81,87,122],[79,89,110,111,122],[79,85,89,122,157,165,172],[79,110,122,172],[79,83,84,122,172],[79,89,122],[79,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,122],[79,89,104,122],[79,89,96,97,122],[79,87,89,97,98,122],[79,88,122],[79,81,84,89,122],[79,89,93,97,98,122],[79,93,122],[79,87,89,92,122,165],[79,81,86,89,96,122],[79,122,154],[79,84,89,110,122,170,172],[69,79,122,135],[52,65,66,79,122],[79,122,135,144],[52,61,79,122],[52,54,55,57,60,62,63,64,79,122],[52,60,63,79,122,144],[52,65,79,122],[52,65,68,79,122,146],[52,53,54,79,122],[52,59,79,122],[56,79,122]],"fileInfos":[{"version":"e41c290ef7dd7dab3493e6cbe5909e0148edf4a8dad0271be08edec368a0f7b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"4fd3f3422b2d2a3dfd5cdd0f387b3a8ec45f006c6ea896a4cb41264c2100bb2c","affectsGlobalScope":true,"impliedFormat":1},{"version":"69e65d976bf166ce4a9e6f6c18f94d2424bf116e90837ace179610dbccad9b42","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7a3c8b952931daebdfc7a2897c53c0a1c73624593fa070e46bd537e64dcd20a","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"62bb211266ee48b2d0edf0d8d1b191f0c24fc379a82bd4c1692a082c540bc6b1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"f1e2a172204962276504466a6393426d2ca9c54894b1ad0a6c9dad867a65f876","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1305d1e76ca44e30fb8b2b8075fa522b83f60c0bcf5d4326a9d2cf79b53724f8","impliedFormat":1},{"version":"7f9c8c4fd31e6e0f137ded52f026f97934abcc4624db1c9c8120b91a170798e0","impliedFormat":1},{"version":"2b85fbb08890bf05fa33eb7a62f83514d152b42ff7179e74c502a4df641c6513","impliedFormat":99},{"version":"43082f9859a895f743078697409561db22bdd3b46211a7f31fab739eaf57aab6","signature":"e7b004cfd30d9c1cfd9e555305957bf0c5f9e893847e695e819b13d33d8e88cd"},{"version":"76cbc143ff74f24eec41b685cef5e8037c7d02c4fa03b3b05c9d1de8ca1e7094","signature":"0a4df072fb60fd800b27d7b785fa292fcd5ab930c65c9aafa16b6a98735f8a1e"},"04ad7f4a76339aff3e37651d3777b1b065b19c3f5d368e44633da92b3b72ade3","bd8305ea3955dad684e52167c0c6f0bf7970cb8a9a3c9e73fc4d597120d5ec27",{"version":"2b91a6a00be41e4dea6d25220ef9d4d1c843872d1ad6b9f0597c720d2d45c256","impliedFormat":1},{"version":"33a0782502805f6dac67362b4290250e29755139a9c0d93a42e9da3a6e282e85","impliedFormat":1},{"version":"d07a5ee0f3be094334f483e984c7d878b3d2198cbb4124ea99c077fb3b90dd8a","signature":"b0893808ca5afabfd8e13988f0d127fefa8e244552451685d8376d9018f92ea0"},{"version":"5a9ffc0682aeb335925a4a676d0a15130ae678f198aac62d8436bdfd9c266bf8","impliedFormat":1},{"version":"b65501b7e485545b47d370bf0018fdb4bea02fd5ae94ea4d88132f091d963aec","impliedFormat":1},{"version":"d1b511ca204df4b2d8c8a9631237575b2e389e23c3533cec038da2876d53b253","signature":"6c0d5fb372ac7ba32e66304b31d3536f0bbe2a9599e67d4ecfbee7be59d6fa2d"},{"version":"b57569f0cb0aae2a661e4a2bd4d6aadd74cd469b0056346e9a4703a219e6980b","signature":"9969cc3e6fceb0f8b6fd16fc2810e214ff1816d3fa4854d695d9f8abf4c3c0e4"},{"version":"6cafd74baeb1e7329df7750a505e9892d2d91d938563bbc1c7d06cbaffd58f73","signature":"1a6a6b76f767b30b42d2ce2e89ac1c6e112ceadce16619904dc660968532e4ee"},{"version":"6b804ad6fe19ba150f8de1a387c7970586e73f2f3e6b186c5aca76e4bffbdc12","signature":"a656b9869571419766be41dbe7f1c47dc8b40cbe358205697f03a64fbb802ccf"},{"version":"785b9d575b49124ce01b46f5b9402157c7611e6532effa562ac6aebec0074dfc","impliedFormat":1},{"version":"77b55f8bfab90aa408704132d98b72f8762e2fe955eeda093ace44120d6adc1a","impliedFormat":1},{"version":"9a8c6c97f82470a4ac37faa7457e3b74a07a5d3d7b39e6a1458b8709c9d1fd0d","signature":"7d74ab36a2869f3c9526c77220dd2d826281a177a4211eb67ba93561d4328278"},{"version":"8425dbb0fc36ec610321023f7d40c4798d0ede2ac15ec095cb3a904df02e6aed","signature":"2f0f05724895d8f23262cd92001776976beae85303eada0d8bd157d7bd60be28"},{"version":"e349130fd1e7c71af70ec371086281c6e7133db3b4b677b02187188c209034be","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"cb6d7c0ef7222cc1511eaaa4eafc17bc82bc7fdf29cb51e37a9dcd4102a7b3cf","signature":"ff60f75a2d3863e8ebcb36f8dfa67effadbb0a872fc10eb8ce58631d00280ffb"},{"version":"a72d313bb91d97bca7fba7da3681cb8ee00cd2bf98d9a545727f91f0345330c9","impliedFormat":1},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"13af9e8fb6757946c48117315866177b95e554d1e773577bb6ca6e40083b6d73","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"d2bc987ae352271d0d615a420dcf98cc886aa16b87fb2b569358c1fe0ca0773d","affectsGlobalScope":true,"impliedFormat":1},{"version":"f550093acc8ad4f64ad1c7e96153615f3351b81919dae5473375b81e1e8f272c","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"76103716ba397bbb61f9fa9c9090dca59f39f9047cb1352b2179c5d8e7f4e8d0","impliedFormat":1},{"version":"53eac70430b30089a3a1959d8306b0f9cfaf0de75224b68ef25243e0b5ad1ca3","affectsGlobalScope":true,"impliedFormat":1},{"version":"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","impliedFormat":1},{"version":"115971d64632ea4742b5b115fb64ed04bcaae2c3c342f13d9ba7e3f9ee39c4e7","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb","impliedFormat":1},{"version":"86956cc2eb9dd371d6fab493d326a574afedebf76eef3fa7833b8e0d9b52d6f1","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"e6f5a38687bebe43a4cef426b69d34373ef68be9a6b1538ec0a371e69f309354","impliedFormat":1},{"version":"a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","impliedFormat":1},{"version":"e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1ff5a53a58e756d2661b73ba60ffe274231a4432d21f7a2d0d9e4f6aa99f4283","impliedFormat":1},{"version":"1e289f30a48126935a5d408a91129a13a59c9b0f8c007a816f9f16ef821e144e","impliedFormat":1},{"version":"2ea254f944dfe131df1264d1fb96e4b1f7d110195b21f1f5dbb68fdd394e5518","impliedFormat":1},{"version":"5135bdd72cc05a8192bd2e92f0914d7fc43ee077d1293dc622a049b7035a0afb","impliedFormat":1},{"version":"4f80de3a11c0d2f1329a72e92c7416b2f7eab14f67e92cac63bb4e8d01c6edc8","impliedFormat":1},{"version":"6d386bc0d7f3afa1d401afc3e00ed6b09205a354a9795196caed937494a713e6","impliedFormat":1},{"version":"fcc4b974b1cf7eca347490f11143ab2f5bc3c449b2073eb4d9494f6a16651e75","affectsGlobalScope":true,"impliedFormat":1},{"version":"23459c1915878a7c1e86e8bdb9c187cddd3aea105b8b1dfce512f093c969bc7e","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true,"impliedFormat":1},{"version":"5f6f1d54779d0b9ed152b0516b0958cd34889764c1190434bbf18e7a8bb884cd","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"c6b4e0a02545304935ecbf7de7a8e056a31bb50939b5b321c9d50a405b5a0bba","impliedFormat":1},{"version":"fab29e6d649aa074a6b91e3bdf2bff484934a46067f6ee97a30fcd9762ae2213","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"1cbae62b67f180291d211f0e1045fb923a8ec800cfbf9caa13223d769013dae2","impliedFormat":1},{"version":"553870e516f8c772b89f3820576152ebc70181d7994d96917bb943e37da7f8a7","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633","impliedFormat":1},{"version":"745c4240220559bd340c8aeb6e3c5270a709d3565e934dc22a69c304703956bc","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"92949391eab12082218333a61b9070996f404ad662ff488d48ebb09564963d2b","affectsGlobalScope":true,"impliedFormat":1},{"version":"bef91efa0baea5d0e0f0f27b574a8bc100ce62a6d7e70220a0d58af6acab5e89","affectsGlobalScope":true,"impliedFormat":1},{"version":"282fd2a1268a25345b830497b4b7bf5037a5e04f6a9c44c840cb605e19fea841","impliedFormat":1},{"version":"5360a27d3ebca11b224d7d3e38e3e2c63f8290cb1fcf6c3610401898f8e68bc3","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true,"impliedFormat":1},{"version":"cb094bb347d7df3380299eb69836c2c8758626ecf45917577707c03cf816b6f4","affectsGlobalScope":true,"impliedFormat":1},{"version":"f689c4237b70ae6be5f0e4180e8833f34ace40529d1acc0676ab8fb8f70457d7","impliedFormat":1},{"version":"ae25afbbf1ed5df63a177d67b9048bf7481067f1b8dc9c39212e59db94fc9fc6","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"52a8e7e8a1454b6d1b5ad428efae3870ffc56f2c02d923467f2940c454aa9aec","affectsGlobalScope":true,"impliedFormat":1},{"version":"78dc0513cc4f1642906b74dda42146bcbd9df7401717d6e89ea6d72d12ecb539","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1}],"root":[54,55,60,[63,66],[69,72]],"options":{"composite":true,"declaration":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"module":6,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"outDir":"./","sourceMap":true,"strict":true,"target":7},"referencedMap":[[53,1],[67,2],[68,3],[58,2],[73,2],[59,4],[119,5],[120,5],[121,6],[79,7],[122,8],[123,9],[124,10],[74,2],[77,11],[75,2],[76,2],[125,12],[126,13],[127,14],[128,15],[129,16],[130,17],[131,17],[133,18],[132,19],[134,20],[135,21],[136,22],[118,23],[78,2],[137,24],[138,25],[139,26],[172,27],[140,28],[141,29],[142,30],[143,31],[144,32],[145,33],[146,34],[147,35],[148,36],[149,37],[150,37],[151,38],[152,2],[153,2],[154,39],[156,40],[155,41],[157,42],[158,43],[159,44],[160,45],[161,46],[162,47],[163,48],[164,49],[165,50],[166,51],[167,52],[168,53],[169,54],[170,55],[171,56],[80,2],[61,2],[49,2],[50,2],[10,2],[8,2],[9,2],[14,2],[13,2],[2,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[3,2],[23,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[51,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[1,2],[12,2],[11,2],[52,2],[96,57],[106,58],[95,57],[116,59],[87,60],[86,61],[115,62],[109,63],[114,64],[89,65],[103,66],[88,67],[112,68],[84,69],[83,62],[113,70],[85,71],[90,72],[91,2],[94,72],[81,2],[117,73],[107,74],[98,75],[99,76],[101,77],[97,78],[100,79],[110,62],[92,80],[93,81],[102,82],[82,83],[105,74],[104,72],[108,2],[111,84],[71,85],[72,86],[70,87],[62,88],[65,89],[64,90],[63,2],[66,91],[69,92],[55,93],[60,94],[54,1],[57,95],[56,2]],"latestChangedDtsFile":"./src/compiler.d.ts","version":"5.7.3"}
\ No newline at end of file
+{"fileNames":["../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es5.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.dom.asynciterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.scripthost.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.core.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.date.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.object.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.array.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.object.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.date.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.string.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.number.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.decorators.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/lib.es2020.full.d.ts","../../../../../.pnpm/typescript@5.9.2/node_modules/typescript/lib/typescript.d.ts","../../../../../.pnpm/@deepkit+type-spec@1.0.1_patch_hash=f3c3a4fd486751022d78f17d39a5a79f493bca20b185964ca1aba41fbfc93244/node_modules/@deepkit/type-spec/dist/cjs/src/type.d.ts","../../../../../.pnpm/@deepkit+type-spec@1.0.1_patch_hash=f3c3a4fd486751022d78f17d39a5a79f493bca20b185964ca1aba41fbfc93244/node_modules/@deepkit/type-spec/dist/cjs/index.d.ts","../../../../../.pnpm/lz-string@1.5.0/node_modules/lz-string/typings/lz-string.d.ts","../../../../../.pnpm/@typescript+vfs@1.5.0/node_modules/@typescript/vfs/dist/index.d.ts","../../src/debug.ts","../../src/resolver.ts","../../src/config.ts","../../../../../.pnpm/@marcj+ts-clone-node@2.2.0_typescript@5.9.2/node_modules/@marcj/ts-clone-node/dist/esm/index.d.ts","../../src/ts-types.ts","../../src/reflection-ast.ts","../../src/compiler.ts","../../src/loader.ts","../../../../../.pnpm/@types+estree@1.0.8/node_modules/@types/estree/index.d.ts","../../../../../.pnpm/@rollup+pluginutils@5.2.0_rollup@4.49.0/node_modules/@rollup/pluginutils/types/index.d.ts","../../src/plugin.ts","../../install-transformer.ts","../../compiler-debug.ts","../../index.ts","../../dependencies.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/compatibility/disposable.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/compatibility/indexable.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/compatibility/iterators.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/compatibility/index.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/globals.typedarray.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/buffer.buffer.d.ts","../../../../../.pnpm/buffer@5.7.1/node_modules/buffer/index.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/header.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/readable.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/file.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/fetch.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/formdata.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/connector.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/client.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/errors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/dispatcher.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/global-dispatcher.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/global-origin.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/pool-stats.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/handlers.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/balanced-pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-interceptor.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-client.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-pool.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/mock-errors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/proxy-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/env-http-proxy-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/retry-handler.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/retry-agent.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/api.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/interceptors.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/util.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/cookies.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/patch.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/websocket.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/eventsource.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/filereader.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/diagnostics-channel.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/content-type.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/cache.d.ts","../../../../../.pnpm/undici-types@6.21.0/node_modules/undici-types/index.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/globals.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/assert.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/assert/strict.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/async_hooks.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/buffer.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/child_process.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/cluster.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/console.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/constants.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/crypto.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/dgram.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/diagnostics_channel.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/dns.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/dns/promises.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/domain.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/dom-events.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/events.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/fs.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/fs/promises.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/http.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/http2.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/https.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/inspector.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/module.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/net.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/os.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/path.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/perf_hooks.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/decode.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/encode.d.ts","../../../../../.pnpm/querystring@0.2.1/node_modules/querystring/index.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/process.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/punycode.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/querystring.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/readline.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/readline/promises.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/repl.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/sea.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/sqlite.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/stream.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/stream/promises.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/stream/consumers.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/stream/web.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/string_decoder.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/test.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/timers.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/timers/promises.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/tls.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/trace_events.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/tty.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/url.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/util.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/v8.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/vm.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/wasi.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/worker_threads.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/zlib.d.ts","../../../../../.pnpm/@types+node@22.18.0/node_modules/@types/node/index.d.ts"],"fileIdsList":[[53,77,120],[77,120],[52,77,120],[65,77,120],[77,117,120],[77,119,120],[120],[77,120,125,158],[77,120,121,126,132,140,155,166],[77,120,121,122,132,140],[72,73,74,77,120],[77,120,123,167],[77,120,124,125,133,141],[77,120,125,155,163],[77,120,126,128,132,140],[77,119,120,127],[77,120,128,129],[77,120,130,132],[77,119,120,132],[77,120,132,133,134,155,166],[77,120,132,133,134,150,155,158],[77,115,120],[77,115,120,128,132,135,140,155,166],[77,120,132,133,135,136,140,155,163,166],[77,120,135,137,155,163,166],[75,76,77,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],[77,120,132,138],[77,120,139,166],[77,120,128,132,140,155],[77,120,141],[77,120,142],[77,119,120,143],[77,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],[77,120,148],[77,120,149],[77,120,132,150,151],[77,120,150,152,167,169],[77,120,132,155,156,158],[77,120,157,158],[77,120,155,156],[77,120,158],[77,120,159],[77,117,120,155,160],[77,120,132,161,162],[77,120,161,162],[77,120,125,140,155,163],[77,120,164],[77,120,140,165],[77,120,135,149,166],[77,120,125,167],[77,120,155,168],[77,120,139,169],[77,120,170],[77,120,132,134,143,155,158,166,168,169,171],[77,120,155,172],[52,55,77,120],[77,120,144,145],[77,87,91,120,166],[77,87,120,155,166],[77,82,120],[77,84,87,120,163,166],[77,120,140,163],[77,120,173],[77,82,120,173],[77,84,87,120,140,166],[77,79,80,83,86,120,132,155,166],[77,87,94,120],[77,79,85,120],[77,87,108,109,120],[77,83,87,120,158,166,173],[77,108,120,173],[77,81,82,120,173],[77,87,120],[77,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,120],[77,87,102,120],[77,87,94,95,120],[77,85,87,95,96,120],[77,86,120],[77,79,82,87,120],[77,87,91,95,96,120],[77,91,120],[77,85,87,90,120,166],[77,79,84,87,94,120],[77,120,155],[77,82,87,108,120,171,173],[67,77,120,133],[52,63,64,77,120],[77,120,133,142],[52,54,56,57,58,59,61,62,77,120],[52,57,58,77,120,133,142],[52,63,77,120],[52,63,66,77,120,147],[52,60,61,77,120],[52,71,77,120]],"fileInfos":[{"version":"c430d44666289dae81f30fa7b2edebf186ecc91a2d4c71266ea6ae76388792e1","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"080941d9f9ff9307f7e27a83bcd888b7c8270716c39af943532438932ec1d0b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2e80ee7a49e8ac312cc11b77f1475804bee36b3b2bc896bead8b6e1266befb43","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7a3c8b952931daebdfc7a2897c53c0a1c73624593fa070e46bd537e64dcd20a","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"fb0f136d372979348d59b3f5020b4cdb81b5504192b1cacff5d1fbba29378aa1","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"a680117f487a4d2f30ea46f1b4b7f58bef1480456e18ba53ee85c2746eeca012","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1305d1e76ca44e30fb8b2b8075fa522b83f60c0bcf5d4326a9d2cf79b53724f8","impliedFormat":1},{"version":"bddc8143c3b0fe2a6462f9811d3b28ea422ffee80d75d3d97d65d6b69f583fad","impliedFormat":1},{"version":"320217defa5f5efc928f9dd07135cc90086a76f56305174a4748ac24a42fa033","impliedFormat":1},{"version":"bd8305ea3955dad684e52167c0c6f0bf7970cb8a9a3c9e73fc4d597120d5ec27","impliedFormat":1},{"version":"5a9ffc0682aeb335925a4a676d0a15130ae678f198aac62d8436bdfd9c266bf8","impliedFormat":1},{"version":"b65501b7e485545b47d370bf0018fdb4bea02fd5ae94ea4d88132f091d963aec","impliedFormat":1},{"version":"d1b511ca204df4b2d8c8a9631237575b2e389e23c3533cec038da2876d53b253","signature":"6c0d5fb372ac7ba32e66304b31d3536f0bbe2a9599e67d4ecfbee7be59d6fa2d","impliedFormat":1},{"version":"d07a5ee0f3be094334f483e984c7d878b3d2198cbb4124ea99c077fb3b90dd8a","signature":"b0893808ca5afabfd8e13988f0d127fefa8e244552451685d8376d9018f92ea0","impliedFormat":1},{"version":"b79e2fb48b200d568262914530b6b12d4e8826acc0b8fe604ed530e361c21d63","signature":"f9677c253f314736073ea944aa85c2fcb878639968c6c63d091301d5d0477a87","impliedFormat":1},{"version":"2b85fbb08890bf05fa33eb7a62f83514d152b42ff7179e74c502a4df641c6513","impliedFormat":99},{"version":"43082f9859a895f743078697409561db22bdd3b46211a7f31fab739eaf57aab6","signature":"e7b004cfd30d9c1cfd9e555305957bf0c5f9e893847e695e819b13d33d8e88cd","impliedFormat":1},{"version":"08970e5d7d4f1954f546bb7b467ec959f86220de076dc4b8867e32bb4fac09bc","signature":"3d532e8433a30d050ce47501e754710003094740e17c003482f438947973494d","impliedFormat":1},{"version":"0a11d7e1a3872287ea8b541f1f325c38b35423785a39b9c0c0633651254a06ac","signature":"4f54a3d9d47e0a2d0b1b2bb17b5626121cd84f1b5e3360a4f28d6accdc7c9242","impliedFormat":1},{"version":"5dd8e3ae3aac3669f0a72db2644b2147b535776db6ed284d71f982a93b690e6b","signature":"89646f6fc8dea939cf0feaf379c6e8e1f0fc79fe9ac995f8098732561f307c4c","impliedFormat":1},{"version":"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","impliedFormat":1},{"version":"abc2a3d5e2d3dd761edf42f6b701d37ae9df764862acbee50a10871c5a4b7260","impliedFormat":1},{"version":"9a8c6c97f82470a4ac37faa7457e3b74a07a5d3d7b39e6a1458b8709c9d1fd0d","signature":"7d74ab36a2869f3c9526c77220dd2d826281a177a4211eb67ba93561d4328278","impliedFormat":1},{"version":"588b9dc856f37398b059082879be4013f9dd4ea35901cf4a61b9b2dad5e0734f","signature":"2f0f05724895d8f23262cd92001776976beae85303eada0d8bd157d7bd60be28","impliedFormat":1},{"version":"dad1ec856ea71b6dd047e21774c22c8d5c8cbb209b9ec2549e1d16e968aa7327","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881","impliedFormat":1},{"version":"ffc2a76bfac5bc8fd821b15473659dd72ad88bc73a66ecbbf091ed2c086f603d","signature":"32454060459b4687aa184960d706abbb0fc7945f3a06753158f87b71446a19af","impliedFormat":1},{"version":"dbcbd5e2492927ba3d982ee53b93f2ded8b504b6460f16be46105a4519852638","impliedFormat":1},{"version":"6c7176368037af28cb72f2392010fa1cef295d6d6744bca8cfb54985f3a18c3e","affectsGlobalScope":true,"impliedFormat":1},{"version":"ab41ef1f2cdafb8df48be20cd969d875602483859dc194e9c97c8a576892c052","affectsGlobalScope":true,"impliedFormat":1},{"version":"437e20f2ba32abaeb7985e0afe0002de1917bc74e949ba585e49feba65da6ca1","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"d802f0e6b5188646d307f070d83512e8eb94651858de8a82d1e47f60fb6da4e2","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"763fe0f42b3d79b440a9b6e51e9ba3f3f91352469c1e4b3b67bfa4ff6352f3f4","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"7f182617db458e98fc18dfb272d40aa2fff3a353c44a89b2c0ccb3937709bfb5","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"a12d953aa755b14ac1d28ecdc1e184f3285b01d6d1e58abc11bf1826bc9d80e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"a38efe83ff77c34e0f418a806a01ca3910c02ee7d64212a59d59bca6c2c38fa1","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"2b06b93fd01bcd49d1a6bd1f9b65ddcae6480b9a86e9061634d6f8e354c1468f","impliedFormat":1},{"version":"7b988bc259155186e6b09dd8b32856d9e45c8d261e63c19abaf590bb6550f922","affectsGlobalScope":true,"impliedFormat":1},{"version":"fe7b52f993f9336b595190f3c1fcc259bb2cf6dcb4ac8fdb1e0454cc5df7301e","impliedFormat":1},{"version":"e9b97d69510658d2f4199b7d384326b7c4053b9e6645f5c19e1c2a54ede427fc","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"81711af669f63d43ccb4c08e15beda796656dd46673d0def001c7055db53852d","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"9855e02d837744303391e5623a531734443a5f8e6e8755e018c41d63ad797db2","impliedFormat":1},{"version":"bdba81959361810be44bcfdd283f4d601e406ab5ad1d2bdff0ed480cf983c9d7","impliedFormat":1},{"version":"836a356aae992ff3c28a0212e3eabcb76dd4b0cc06bcb9607aeef560661b860d","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true,"impliedFormat":1},{"version":"b326f4813b90d230ec3950f66bd5b5ce3971aac5fac67cfafc54aa07b39fd07f","affectsGlobalScope":true,"impliedFormat":1},{"version":"c8420c7c2b778b334587a4c0311833b5212ff2f684ea37b2f0e2b117f1d7210d","impliedFormat":1},{"version":"b6b08215821c9833b0e8e30ea1ed178009f2f3ff5d7fae3865ee42f97cc87784","impliedFormat":1},{"version":"b795c3e47a26be91ac33d8115acdc37bfa41ecc701fb237c64a23da4d2b7e1d8","impliedFormat":1},{"version":"73cf6cc19f16c0191e4e9d497ab0c11c7b38f1ca3f01ad0f09a3a5a971aac4b8","impliedFormat":1},{"version":"528b62e4272e3ddfb50e8eed9e359dedea0a4d171c3eb8f337f4892aac37b24b","impliedFormat":1},{"version":"ed58b9974bb3114f39806c9c2c6258c4ffa6a255921976a7c53dfa94bf178f42","impliedFormat":1},{"version":"e6fa9ad47c5f71ff733744a029d1dc472c618de53804eae08ffc243b936f87ff","affectsGlobalScope":true,"impliedFormat":1},{"version":"f72bc8fe16da67e4e3268599295797b202b95e54bd215a03f97e925dd1502a36","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"915e18c559321c0afaa8d34674d3eb77e1ded12c3e85bf2a9891ec48b07a1ca5","affectsGlobalScope":true,"impliedFormat":1},{"version":"ad7e61eca7f2f8bf47e72695f9f6663b75e41d87ef49abdb17c0cb843862f8aa","impliedFormat":1},{"version":"ecba2e44af95b0599c269a92628cec22e752868bce37396740deb51a5c547a26","impliedFormat":1},{"version":"46a9fb41a8f3bc7539eeebc15a6e04b9e55d7537a081615ad3614220d34c3e0f","impliedFormat":1},{"version":"e9727a118ce60808e62457c89762fe5a4e2be8e9fd0112d12432d1bafdba942f","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"933921f0bb0ec12ef45d1062a1fc0f27635318f4d294e4d99de9a5493e618ca2","impliedFormat":1},{"version":"71a0f3ad612c123b57239a7749770017ecfe6b66411488000aba83e4546fde25","impliedFormat":1},{"version":"70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","impliedFormat":1},{"version":"4f9d8ca0c417b67b69eeb54c7ca1bedd7b56034bb9bfd27c5d4f3bc4692daca7","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"3a90b9beac4c2bfdf6517faae0940a042b81652badf747df0a7c7593456f6ebe","impliedFormat":1},{"version":"8302157cd431b3943eed09ad439b4441826c673d9f870dcb0e1f48e891a4211e","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"dba28a419aec76ed864ef43e5f577a5c99a010c32e5949fe4e17a4d57c58dd11","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"a5890565ed564c7b29eb1b1038d4e10c03a3f5231b0a8d48fea4b41ab19f4f46","impliedFormat":1},{"version":"f0be1b8078cd549d91f37c30c222c2a187ac1cf981d994fb476a1adc61387b14","affectsGlobalScope":true,"impliedFormat":1},{"version":"0aaed1d72199b01234152f7a60046bc947f1f37d78d182e9ae09c4289e06a592","impliedFormat":1},{"version":"98ffdf93dfdd206516971d28e3e473f417a5cfd41172e46b4ce45008f640588e","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"cee74f5970ffc01041e5bffc3f324c20450534af4054d2c043cb49dbbd4ec8f7","affectsGlobalScope":true,"impliedFormat":1},{"version":"1a654e0d950353614ba4637a8de4f9d367903a0692b748e11fccf8c880c99735","affectsGlobalScope":true,"impliedFormat":1},{"version":"42da246c46ca3fd421b6fd88bb4466cda7137cf33e87ba5ceeded30219c428bd","impliedFormat":1},{"version":"3a051941721a7f905544732b0eb819c8d88333a96576b13af08b82c4f17581e4","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"f2feb9696208311cdcf1936df2b7cbec96a3f0ab9d403952bf170546d4253a90","affectsGlobalScope":true,"impliedFormat":1},{"version":"db3d77167a7da6c5ba0c51c5b654820e3464093f21724ccd774c0b9bc3f81bc0","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1}],"root":[[57,59],[61,64],[67,71]],"options":{"composite":true,"declaration":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"module":6,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"outDir":"./","sourceMap":true,"strict":true,"target":7},"referencedMap":[[54,1],[53,2],[60,3],[66,4],[65,2],[117,5],[118,5],[119,6],[77,7],[120,8],[121,9],[122,10],[72,2],[75,11],[73,2],[74,2],[123,12],[124,13],[125,14],[126,15],[127,16],[128,17],[129,17],[131,2],[130,18],[132,19],[133,20],[134,21],[116,22],[76,2],[135,23],[136,24],[137,25],[173,26],[138,27],[139,28],[140,29],[141,30],[142,31],[143,32],[147,33],[148,34],[149,35],[150,36],[151,36],[152,37],[153,2],[154,2],[155,38],[157,39],[156,40],[158,41],[159,42],[160,43],[161,44],[162,45],[163,46],[164,47],[165,48],[166,49],[167,50],[168,51],[169,52],[170,53],[171,54],[172,55],[56,56],[78,2],[55,2],[144,2],[145,2],[146,57],[49,2],[50,2],[10,2],[8,2],[9,2],[14,2],[13,2],[2,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[3,2],[23,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[51,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[1,2],[12,2],[11,2],[52,2],[94,58],[104,59],[93,58],[114,60],[85,61],[84,62],[113,63],[107,64],[112,65],[87,66],[101,67],[86,68],[110,69],[82,70],[81,63],[111,71],[83,72],[88,73],[89,2],[92,73],[79,2],[115,74],[105,75],[96,76],[97,77],[99,78],[95,79],[98,80],[108,63],[90,81],[91,82],[100,83],[80,84],[103,75],[102,73],[106,2],[109,85],[69,86],[71,2],[70,87],[68,88],[63,89],[59,90],[57,2],[64,91],[67,92],[62,93],[58,94],[61,3]],"latestChangedDtsFile":"./index.d.ts","version":"5.9.2"}
\ No newline at end of file
diff --git a/index.ts b/index.ts
index 1c9851e5fd83ccbfcefec91c2d6b00708001c6d8..5254ce7dfb639a652961c4be7f65d4960fb79017 100644
--- a/index.ts
+++ b/index.ts
@@ -8,15 +8,15 @@
  * You should have received a copy of the MIT License along with this program.
  */
 
-import { declarationTransformer, transformer } from './src/compiler.js';
-import type { Program } from 'typescript';
+import type { Program } from "typescript";
+import { declarationTransformer, transformer } from "./src/compiler.js";
 
-export * from './src/compiler.js';
-export * from './src/loader.js';
+export * from "./src/compiler.js";
+export * from "./src/loader.js";
 
-export default function myTransformerPlugin(program: Program, opts: {}) {
-    return {
-        before: transformer,
-        afterDeclarations: declarationTransformer,
-    };
+export default function transformerPlugin(program: Program, opts: {}) {
+  return {
+    before: transformer,
+    afterDeclarations: declarationTransformer
+  };
 }
diff --git a/install-transformer.ts b/install-transformer.ts
index 4bdf427c767f2b89fc30bfea8a1ebb97ea9d2fc7..4c993d6cf7db1b6d4633028a8a5560d07ea5d90b 100644
--- a/install-transformer.ts
+++ b/install-transformer.ts
@@ -6,17 +6,17 @@
  * The critical section that needs adjustment is in the `function getScriptTransformers` in `node_modules/typescript/lib/tsc.js`.
  */
 
-import { dirname, join, relative } from 'path';
-import { existsSync, readFileSync, writeFileSync } from 'fs';
+import { existsSync, readFileSync, writeFileSync } from "fs";
+import { dirname, join, relative } from "path";
 
 let to = process.argv[2] || process.cwd();
 
 function getPatchId(id: string): string {
-    return 'deepkit_type_patch_' + id;
+  return "deepkit_type_patch_" + id;
 }
 
 function getCode(deepkitDistPath: string, varName: string, id: string): string {
-    return `
+  return `
         //${getPatchId(id)}
         try {
             var typeTransformer;
@@ -48,37 +48,40 @@ function getCode(deepkitDistPath: string, varName: string, id: string): string {
 }
 
 function isPatched(code: string, id: string) {
-    return code.includes(getPatchId(id));
+  return code.includes(getPatchId(id));
 }
 
 function patchGetTransformers(deepkitDistPath: string, code: string): string {
-    const id = 'patchGetTransformers';
-    if (isPatched(code, id)) return '';
+  const id = "patchGetTransformers";
+  if (isPatched(code, id)) return "";
 
-    const find = /function getTransformers\([^)]+\)\s*{/;
-    if (!code.match(find)) return '';
+  const find = /function getTransformers\([^)]+\)\s*{/;
+  if (!code.match(find)) return "";
 
-    code = code.replace(find, function (a) {
-        return a + '\n    ' + getCode(deepkitDistPath, 'customTransformers', id);
-    });
+  code = code.replace(find, function (a) {
+    return a + "\n    " + getCode(deepkitDistPath, "customTransformers", id);
+  });
 
-    return code;
+  return code;
 }
 
-if (to + '/dist/cjs' === __dirname) {
-    to = join(to, '..'); //we exclude type-compiler/node_modules
+if (to + "/dist/cjs" === __dirname) {
+  to = join(to, ".."); //we exclude type-compiler/node_modules
 }
 
-const typeScriptPath = dirname(require.resolve('typescript', { paths: [to] }));
+const typeScriptPath = dirname(require.resolve("typescript", { paths: [to] }));
 const deepkitDistPath = relative(typeScriptPath, __dirname);
 
-const paths = ['tsc.js', '_tsc.js', 'typescript.js'];
+const paths = ["tsc.js", "_tsc.js", "typescript.js"];
 
 for (const fileName of paths) {
-    const file = join(typeScriptPath, fileName);
-    if (!existsSync(file)) continue;
-    const content = patchGetTransformers(deepkitDistPath, readFileSync(file, 'utf8'));
-    if (!content) continue;
-    writeFileSync(file, content);
-    console.log('Deepkit Type: Injected TypeScript transformer at', file);
+  const file = join(typeScriptPath, fileName);
+  if (!existsSync(file)) continue;
+  const content = patchGetTransformers(
+    deepkitDistPath,
+    readFileSync(file, "utf8")
+  );
+  if (!content) continue;
+  writeFileSync(file, content);
+  console.log("Deepkit Type: Injected TypeScript transformer at", file);
 }
diff --git a/package.json b/package.json
index ada14263460c814d2ee7a056d5b6974607aec13a..8302ce976f8d7d3e01e766c2a43dc462c237ca4d 100644
--- a/package.json
+++ b/package.json
@@ -2,7 +2,6 @@
   "name": "@deepkit/type-compiler",
   "version": "1.0.5",
   "description": "Deepkit/type compiler/Typescript transformer",
-  "type": "commonjs",
   "main": "./dist/cjs/index.js",
   "module": "./dist/esm/index.js",
   "types": "./dist/cjs/index.d.ts",
@@ -16,6 +15,11 @@
       "types": "./dist/cjs/plugin.d.ts",
       "require": "./dist/cjs/plugin.js",
       "default": "./dist/esm/plugin.js"
+    },
+    "./compiler": {
+      "types": "./dist/cjs/src/compiler.d.ts",
+      "require": "./dist/cjs/src/compiler.js",
+      "default": "./dist/esm/src/compiler.js"
     }
   },
   "bin": {
@@ -27,7 +31,7 @@
     "access": "public"
   },
   "scripts": {
-    "build": "echo '{\"type\": \"module\"}' > ./dist/esm/package.json",
+    "build": "echo '{\"type\": \"module\"}' > ./dist/esm/package.json && echo '{\"type\": \"commonjs\"}' > ./dist/cjs/package.json",
     "install": "rm -rf node_modules/typescript && node ./deepkit-type-install.js || exit 0"
   },
   "repository": "https://github.com/deepkit/deepkit-framework",
@@ -41,7 +45,7 @@
     "@types/micromatch": "^4.0.2"
   },
   "dependencies": {
-    "@deepkit/type-spec": "^1.0.1",
+    "@deepkit/type-spec": "1.0.1",
     "@marcj/ts-clone-node": "^2.0.0",
     "@rollup/pluginutils": "^5.1.0",
     "@typescript/vfs": "1.5.0",
diff --git a/src/compiler.ts b/src/compiler.ts
index 3b6d5a984e15c739a6e2477e4baa29767e3776d6..4cc0246201ddf22bef146f4122625ff1eae6c40d 100644
--- a/src/compiler.ts
+++ b/src/compiler.ts
@@ -9,2922 +9,4031 @@
  */
 
 import ts, {
-    __String,
-    ArrayTypeNode,
-    ArrowFunction,
-    Block,
-    Bundle,
-    CallExpression,
-    CallSignatureDeclaration,
-    ClassDeclaration,
-    ClassElement,
-    ClassExpression,
-    CompilerHost,
-    CompilerOptions,
-    ConciseBody,
-    ConditionalTypeNode,
-    ConstructorDeclaration,
-    ConstructorTypeNode,
-    ConstructSignatureDeclaration,
-    CustomTransformer,
-    CustomTransformerFactory,
-    Declaration,
-    EntityName,
-    EnumDeclaration,
-    ExportDeclaration,
-    Expression,
-    ExpressionWithTypeArguments,
-    FunctionDeclaration,
-    FunctionExpression,
-    FunctionTypeNode,
-    Identifier,
-    ImportDeclaration,
-    IndexedAccessTypeNode,
-    IndexSignatureDeclaration,
-    InferTypeNode,
-    InterfaceDeclaration,
-    IntersectionTypeNode,
-    JSDocImportTag,
-    LiteralTypeNode,
-    MappedTypeNode,
-    MethodDeclaration,
-    MethodSignature,
-    Modifier,
-    ModuleDeclaration,
-    ModuleExportName,
-    NewExpression,
-    Node,
-    NodeFactory,
-    ParseConfigHost,
-    PropertyAccessExpression,
-    PropertyDeclaration,
-    PropertySignature,
-    QualifiedName,
-    RestTypeNode,
-    SignatureDeclaration,
-    Statement,
-    TemplateLiteralTypeNode,
-    TransformationContext,
-    TupleTypeNode,
-    TypeAliasDeclaration,
-    TypeChecker,
-    TypeLiteralNode,
-    TypeNode,
-    TypeOperatorNode,
-    TypeParameterDeclaration,
-    TypeQueryNode,
-    TypeReferenceNode,
-    UnionTypeNode,
-} from 'typescript';
+  __String,
+  ArrayTypeNode,
+  ArrowFunction,
+  Block,
+  Bundle,
+  CallExpression,
+  CallSignatureDeclaration,
+  ClassDeclaration,
+  ClassElement,
+  ClassExpression,
+  CompilerHost,
+  CompilerOptions,
+  ConciseBody,
+  ConditionalTypeNode,
+  ConstructorDeclaration,
+  ConstructorTypeNode,
+  ConstructSignatureDeclaration,
+  CustomTransformer,
+  CustomTransformerFactory,
+  Declaration,
+  EntityName,
+  EnumDeclaration,
+  ExportDeclaration,
+  Expression,
+  ExpressionWithTypeArguments,
+  FunctionDeclaration,
+  FunctionExpression,
+  FunctionTypeNode,
+  Identifier,
+  ImportDeclaration,
+  IndexedAccessTypeNode,
+  IndexSignatureDeclaration,
+  InferTypeNode,
+  InterfaceDeclaration,
+  IntersectionTypeNode,
+  JSDocImportTag,
+  LiteralTypeNode,
+  MappedTypeNode,
+  MethodDeclaration,
+  MethodSignature,
+  Modifier,
+  ModuleDeclaration,
+  ModuleExportName,
+  NewExpression,
+  Node,
+  NodeFactory,
+  ParseConfigHost,
+  PropertyAccessExpression,
+  PropertyDeclaration,
+  PropertySignature,
+  QualifiedName,
+  RestTypeNode,
+  SignatureDeclaration,
+  Statement,
+  TemplateLiteralTypeNode,
+  TransformationContext,
+  TupleTypeNode,
+  TypeAliasDeclaration,
+  TypeChecker,
+  TypeLiteralNode,
+  TypeNode,
+  TypeOperatorNode,
+  TypeParameterDeclaration,
+  TypeQueryNode,
+  TypeReferenceNode,
+  UnionTypeNode
+} from "typescript";
 
 import {
-    ensureImportIsEmitted,
-    extractJSDocAttribute,
-    findSourceFile,
-    getEscapedText,
-    getGlobalsOfSourceFile,
-    getIdentifierName,
-    getNameAsString,
-    getPropertyName,
-    hasModifier,
-    isNodeWithLocals,
-    NodeConverter,
-    PackExpression,
-    serializeEntityNameAsExpression,
-} from './reflection-ast.js';
-import { SourceFile } from './ts-types.js';
-import { MappedModifier, ReflectionOp, TypeNumberBrand } from '@deepkit/type-spec';
-import { Resolver } from './resolver.js';
-import { knownLibFilesForCompilerOptions } from '@typescript/vfs';
-import { debug, debug2 } from './debug.js';
-import { ConfigResolver, getConfigResolver, MatchResult, ReflectionConfig, ReflectionConfigCache, reflectionModeMatcher, ResolvedConfig } from './config.js';
+  MappedModifier,
+  ReflectionOp,
+  TypeNumberBrand
+} from "@deepkit/type-spec";
+import { knownLibFilesForCompilerOptions } from "@typescript/vfs";
+import {
+  ConfigResolver,
+  getConfigResolver,
+  MatchResult,
+  ReflectionConfig,
+  ReflectionConfigCache,
+  reflectionModeMatcher,
+  ResolvedConfig
+} from "./config.js";
+import { debug, debug2 } from "./debug.js";
+import {
+  ensureImportIsEmitted,
+  extractJSDocArray,
+  extractJSDocAttribute,
+  extractJSDocBoolean,
+  findSourceFile,
+  getEscapedText,
+  getGlobalsOfSourceFile,
+  getIdentifierName,
+  getNameAsString,
+  getPropertyName,
+  hasModifier,
+  isNodeWithLocals,
+  NodeConverter,
+  PackExpression,
+  serializeEntityNameAsExpression
+} from "./reflection-ast.js";
+import { Resolver } from "./resolver.js";
+import { SourceFile } from "./ts-types.js";
 
 const {
-    visitEachChild,
-    visitNode,
-    isPropertyAssignment,
-    isArrayTypeNode,
-    isArrowFunction,
-    isBlock,
-    isCallExpression,
-    isCallSignatureDeclaration,
-    isClassDeclaration,
-    isClassExpression,
-    isConstructorDeclaration,
-    isConstructorTypeNode,
-    isConstructSignatureDeclaration,
-    isEnumDeclaration,
-    isExportDeclaration,
-    isExpression,
-    isExpressionWithTypeArguments,
-    isFunctionDeclaration,
-    isFunctionExpression,
-    isFunctionLike,
-    isIdentifier,
-    isImportClause,
-    isImportDeclaration,
-    isImportSpecifier,
-    isInferTypeNode,
-    isInterfaceDeclaration,
-    isMethodDeclaration,
-    isMethodSignature,
-    isModuleDeclaration,
-    isNamedExports,
-    isNamedTupleMember,
-    isNewExpression,
-    isObjectLiteralExpression,
-    isOptionalTypeNode,
-    isParameter,
-    isParenthesizedExpression,
-    isParenthesizedTypeNode,
-    isPropertyAccessExpression,
-    isQualifiedName,
-    isSourceFile,
-    isStringLiteral,
-    isTypeAliasDeclaration,
-    isTypeLiteralNode,
-    isTypeParameterDeclaration,
-    isTypeQueryNode,
-    isTypeReferenceNode,
-    isUnionTypeNode,
-    isExpressionStatement,
-    isVariableDeclaration,
-    getEffectiveConstraintOfTypeParameter,
-    addSyntheticLeadingComment,
-    createCompilerHost,
-    createPrinter,
-    escapeLeadingUnderscores,
-    EmitHint,
-    NodeFlags,
-    SyntaxKind,
-    ScriptTarget,
-    ModifierFlags,
-    ScriptKind,
+  visitEachChild,
+  visitNode,
+  isPropertyAssignment,
+  isArrayTypeNode,
+  isArrowFunction,
+  isBlock,
+  isCallExpression,
+  isCallSignatureDeclaration,
+  isClassDeclaration,
+  isClassExpression,
+  isConstructorDeclaration,
+  isConstructorTypeNode,
+  isConstructSignatureDeclaration,
+  isEnumDeclaration,
+  isExportDeclaration,
+  isExpression,
+  isExpressionWithTypeArguments,
+  isFunctionDeclaration,
+  isFunctionExpression,
+  isFunctionLike,
+  isIdentifier,
+  isImportClause,
+  isImportDeclaration,
+  isImportSpecifier,
+  isInferTypeNode,
+  isInterfaceDeclaration,
+  isMethodDeclaration,
+  isMethodSignature,
+  isModuleDeclaration,
+  isNamedExports,
+  isNamedTupleMember,
+  isNewExpression,
+  isObjectLiteralExpression,
+  isOptionalTypeNode,
+  isParameter,
+  isParenthesizedExpression,
+  isParenthesizedTypeNode,
+  isPropertyAccessExpression,
+  isQualifiedName,
+  isSourceFile,
+  isStringLiteral,
+  isTypeAliasDeclaration,
+  isTypeLiteralNode,
+  isTypeParameterDeclaration,
+  isTypeQueryNode,
+  isTypeReferenceNode,
+  isUnionTypeNode,
+  isExpressionStatement,
+  isVariableDeclaration,
+  getEffectiveConstraintOfTypeParameter,
+  addSyntheticLeadingComment,
+  createCompilerHost,
+  createPrinter,
+  escapeLeadingUnderscores,
+  EmitHint,
+  NodeFlags,
+  SyntaxKind,
+  ScriptTarget,
+  ModifierFlags,
+  ScriptKind
 } = ts;
 
 export function encodeOps(ops: ReflectionOp[]): string {
-    return ops.map(v => String.fromCharCode(v + 33)).join('');
+  return ops.map(v => String.fromCharCode(v + 33)).join("");
 }
 
-function filterUndefined(object: { [name: string]: any }): { [name: string]: any } {
-    return Object.fromEntries(Object.entries(object).filter(([, v]) => v !== undefined));
+function filterUndefined(object: { [name: string]: any }): {
+  [name: string]: any;
+} {
+  return Object.fromEntries(
+    Object.entries(object).filter(([, v]) => v !== undefined)
+  );
 }
 
 export const packSizeByte: number = 6;
 
-const serverEnv = 'undefined' !== typeof process;
-
 /**
  * It can't be more ops than this given number
  */
 export const packSize: number = 2 ** packSizeByte; //64
 
+export interface TagsReflectionStruct {
+  hidden?: boolean;
+  ignore?: boolean;
+  internal?: boolean;
+  alias?: string[];
+  title?: string;
+  permission?: string[];
+  domain?: string;
+}
+
 const OPs: { [op in ReflectionOp]?: { params: number } } = {
-    [ReflectionOp.literal]: { params: 1 },
-    // [ReflectionOp.pointer]: { params: 1 },
-    // [ReflectionOp.arg]: { params: 1 },
-    [ReflectionOp.classReference]: { params: 1 },
-    [ReflectionOp.propertySignature]: { params: 1 },
-    [ReflectionOp.property]: { params: 1 },
-    [ReflectionOp.jump]: { params: 1 },
-    [ReflectionOp.enum]: { params: 0 },
-    [ReflectionOp.enumMember]: { params: 1 },
-    [ReflectionOp.typeParameter]: { params: 1 },
-    [ReflectionOp.typeParameterDefault]: { params: 1 },
-    [ReflectionOp.mappedType]: { params: 2 },
-    [ReflectionOp.call]: { params: 1 },
-    [ReflectionOp.inline]: { params: 1 },
-    [ReflectionOp.inlineCall]: { params: 2 },
-    [ReflectionOp.loads]: { params: 2 },
-    [ReflectionOp.extends]: { params: 0 },
-    [ReflectionOp.infer]: { params: 2 },
-    [ReflectionOp.defaultValue]: { params: 1 },
-    [ReflectionOp.parameter]: { params: 1 },
-    [ReflectionOp.method]: { params: 1 },
-    [ReflectionOp.function]: { params: 1 },
-    [ReflectionOp.description]: { params: 1 },
-    [ReflectionOp.numberBrand]: { params: 1 },
-    [ReflectionOp.typeof]: { params: 1 },
-    [ReflectionOp.classExtends]: { params: 1 },
-    [ReflectionOp.distribute]: { params: 1 },
-    [ReflectionOp.jumpCondition]: { params: 2 },
-    [ReflectionOp.typeName]: { params: 1 },
-    [ReflectionOp.implements]: { params: 1 },
+  [ReflectionOp.literal]: { params: 1 },
+  // [ReflectionOp.pointer]: { params: 1 },
+  // [ReflectionOp.arg]: { params: 1 },
+  [ReflectionOp.classReference]: { params: 1 },
+  [ReflectionOp.propertySignature]: { params: 1 },
+  [ReflectionOp.property]: { params: 1 },
+  [ReflectionOp.jump]: { params: 1 },
+  [ReflectionOp.enum]: { params: 0 },
+  [ReflectionOp.enumMember]: { params: 1 },
+  [ReflectionOp.typeParameter]: { params: 1 },
+  [ReflectionOp.typeParameterDefault]: { params: 1 },
+  [ReflectionOp.mappedType]: { params: 2 },
+  [ReflectionOp.call]: { params: 1 },
+  [ReflectionOp.inline]: { params: 1 },
+  [ReflectionOp.inlineCall]: { params: 2 },
+  [ReflectionOp.loads]: { params: 2 },
+  [ReflectionOp.extends]: { params: 0 },
+  [ReflectionOp.infer]: { params: 2 },
+  [ReflectionOp.defaultValue]: { params: 1 },
+  [ReflectionOp.parameter]: { params: 1 },
+  [ReflectionOp.method]: { params: 1 },
+  [ReflectionOp.function]: { params: 1 },
+  [ReflectionOp.description]: { params: 1 },
+  [ReflectionOp.numberBrand]: { params: 1 },
+  [ReflectionOp.typeof]: { params: 1 },
+  [ReflectionOp.classExtends]: { params: 1 },
+  [ReflectionOp.distribute]: { params: 1 },
+  [ReflectionOp.jumpCondition]: { params: 2 },
+  [ReflectionOp.typeName]: { params: 1 },
+  [ReflectionOp.implements]: { params: 1 },
+  [ReflectionOp.tags]: { params: 1 }
 };
 
-export function debugPackStruct(sourceFile: SourceFile, forType: Node, pack: { ops: ReflectionOp[], stack: PackExpression[] }): void {
-    const items: any[] = [];
-
-    for (let i = 0; i < pack.ops.length; i++) {
-        const op = pack.ops[i];
-        const opInfo = OPs[op];
-        items.push(ReflectionOp[op]);
-        if (opInfo && opInfo.params > 0) {
-            for (let j = 0; j < opInfo.params; j++) {
-                const address = pack.ops[++i];
-                items.push(address);
-            }
-        }
-    }
-
-    const printer = createPrinter();
-    const stack: any[] = [];
-    for (const s of pack.stack) {
-        if ('object' === typeof s && 'getText' in s) {
-            stack.push(printer.printNode(EmitHint.Unspecified, s, sourceFile));
-        } else {
-            stack.push(JSON.stringify(s));
-        }
-    }
-    console.log(stack.join(','), '|', ...items);
+export function debugPackStruct(
+  sourceFile: SourceFile,
+  forType: Node,
+  pack: { ops: ReflectionOp[]; stack: PackExpression[] }
+): void {
+  const items: any[] = [];
+
+  for (let i = 0; i < pack.ops.length; i++) {
+    const op = pack.ops[i];
+    const opInfo = OPs[op];
+    items.push(ReflectionOp[op]);
+    if (opInfo && opInfo.params > 0) {
+      for (let j = 0; j < opInfo.params; j++) {
+        const address = pack.ops[++i];
+        items.push(address);
+      }
+    }
+  }
+
+  const printer = createPrinter();
+  const stack: any[] = [];
+  for (const s of pack.stack) {
+    if ("object" === typeof s && "getText" in s) {
+      stack.push(printer.printNode(EmitHint.Unspecified, s, sourceFile));
+    } else {
+      stack.push(JSON.stringify(s));
+    }
+  }
+  console.log(stack.join(","), "|", ...items);
 }
 
 interface Frame {
-    variables: { name: string, index: number }[],
-    opIndex: number;
-    conditional?: true;
-    previous?: Frame;
+  variables: { name: string; index: number }[];
+  opIndex: number;
+  conditional?: true;
+  previous?: Frame;
 }
 
-function findVariable(frame: Frame, name: string, frameOffset: number = 0): { frameOffset: number, stackIndex: number } | undefined {
-    const variable = frame.variables.find(v => v.name === name);
-    if (variable) {
-        return { frameOffset, stackIndex: variable.index };
-    }
+function findVariable(
+  frame: Frame,
+  name: string,
+  frameOffset: number = 0
+): { frameOffset: number; stackIndex: number } | undefined {
+  const variable = frame.variables.find(v => v.name === name);
+  if (variable) {
+    return { frameOffset, stackIndex: variable.index };
+  }
 
-    if (frame.previous) return findVariable(frame.previous, name, frameOffset + 1);
+  if (frame.previous)
+    return findVariable(frame.previous, name, frameOffset + 1);
 
-    return;
+  return;
 }
 
 function findConditionalFrame(frame: Frame): Frame | undefined {
-    if (frame.conditional) return frame;
-    if (frame.previous) return findConditionalFrame(frame.previous);
+  if (frame.conditional) return frame;
+  if (frame.previous) return findConditionalFrame(frame.previous);
 
-    return;
+  return;
 }
 
 type StackEntry = Expression | string | number | boolean;
 
 class CompilerProgram {
-    protected ops: ReflectionOp[] = [];
-    protected stack: StackEntry[] = [];
-    protected mainOffset: number = 0;
+  protected ops: ReflectionOp[] = [];
+  protected stack: StackEntry[] = [];
+  protected mainOffset: number = 0;
+
+  protected stackPosition: number = 0;
+
+  protected frame: Frame = { variables: [], opIndex: 0 };
+
+  protected activeCoRoutines: { ops: ReflectionOp[] }[] = [];
+  protected coRoutines: { ops: ReflectionOp[] }[] = [];
+
+  constructor(
+    public forNode: Node,
+    public sourceFile?: SourceFile
+  ) {}
+
+  buildPackStruct() {
+    const ops: ReflectionOp[] = [...this.ops];
+
+    if (this.coRoutines.length) {
+      for (let i = this.coRoutines.length - 1; i >= 0; i--) {
+        ops.unshift(...this.coRoutines[i].ops);
+      }
+    }
+
+    if (this.mainOffset) {
+      ops.unshift(ReflectionOp.jump, this.mainOffset);
+    }
+
+    return { ops, stack: this.stack };
+  }
+
+  isEmpty(): boolean {
+    return this.ops.length === 0;
+  }
+
+  pushConditionalFrame(): void {
+    const frame = this.pushFrame();
+    frame.conditional = true;
+  }
+
+  pushStack(item: StackEntry): number {
+    this.stack.push(item);
+    return this.stackPosition++;
+  }
+
+  pushCoRoutine(): void {
+    this.pushFrame(true); //co-routines have implicit stack frames due to call convention
+    this.activeCoRoutines.push({ ops: [] });
+  }
+
+  popCoRoutine(): number {
+    const coRoutine = this.activeCoRoutines.pop();
+    if (!coRoutine) throw new Error("No active co routine found");
+    this.popFrameImplicit();
+    if (this.mainOffset === 0) {
+      this.mainOffset = 2; //we add JUMP + index when building the program
+    }
+    const startIndex = this.mainOffset;
+    coRoutine.ops.push(ReflectionOp.return);
+    this.coRoutines.push(coRoutine);
+    this.mainOffset += coRoutine.ops.length;
+    return startIndex;
+  }
+
+  pushOp(...ops: ReflectionOp[]): void {
+    for (const op of ops) {
+      if ("number" !== typeof op) {
+        throw new Error("No valid OP added");
+      }
+      // if (op + 33 > 126) {
+      //todo: encode as var int
+      // throw new Error('stack pointer too big ' + op);
+      // }
+    }
+    if (this.activeCoRoutines.length) {
+      this.activeCoRoutines[this.activeCoRoutines.length - 1].ops.push(...ops);
+      return;
+    }
+
+    this.ops.push(...ops);
+  }
+
+  pushOpAtFrame(frame: Frame, ...ops: ReflectionOp[]): void {
+    if (this.activeCoRoutines.length) {
+      this.activeCoRoutines[this.activeCoRoutines.length - 1].ops.splice(
+        frame.opIndex,
+        0,
+        ...ops
+      );
+      return;
+    }
+
+    this.ops.splice(frame.opIndex, 0, ...ops);
+  }
+
+  /**
+   * Returns the index of the `entry` in the stack, if already exists. If not, add it, and return that new index.
+   */
+  findOrAddStackEntry(entry: any): number {
+    const index = this.stack.indexOf(entry);
+    if (index !== -1) return index;
+    return this.pushStack(entry);
+  }
+
+  /**
+   * To make room for a stack entry expected on the stack as input for example.
+   */
+  increaseStackPosition(): number {
+    return this.stackPosition++;
+  }
+
+  protected resolveFunctionParameters = new Map<Node, number>();
+
+  resolveFunctionParametersIncrease(fn: Node) {
+    this.resolveFunctionParameters.set(
+      fn,
+      (this.resolveFunctionParameters.get(fn) || 0) + 1
+    );
+  }
+
+  resolveFunctionParametersDecrease(fn: Node) {
+    this.resolveFunctionParameters.set(
+      fn,
+      (this.resolveFunctionParameters.get(fn) || 1) - 1
+    );
+  }
+
+  isResolveFunctionParameters(fn: Node) {
+    return (this.resolveFunctionParameters.get(fn) || 0) > 0;
+  }
+
+  /**
+   *
+   * Each pushFrame() call needs a popFrame() call.
+   */
+  pushFrame(implicit: boolean = false) {
+    if (!implicit) this.pushOp(ReflectionOp.frame);
+    const opIndex = this.activeCoRoutines.length
+      ? this.activeCoRoutines[this.activeCoRoutines.length - 1].ops.length
+      : this.ops.length;
+    this.frame = { previous: this.frame, variables: [], opIndex };
+    return this.frame;
+  }
+
+  findConditionalFrame() {
+    return findConditionalFrame(this.frame);
+  }
+
+  /**
+   * Remove stack without doing it as OP in the processor. Some other command calls popFrame() already, which makes popFrameImplicit() an implicit popFrame.
+   * e.g. union, class, etc. all call popFrame(). the current CompilerProgram needs to be aware of that, which this function is for.
+   */
+  popFrameImplicit() {
+    if (this.frame.previous) this.frame = this.frame.previous;
+  }
+
+  moveFrame() {
+    this.pushOp(ReflectionOp.moveFrame);
+    if (this.frame.previous) this.frame = this.frame.previous;
+  }
+
+  pushVariable(name: string, frame: Frame = this.frame): number {
+    this.pushOpAtFrame(frame, ReflectionOp.var);
+    frame.variables.push({
+      index: frame.variables.length,
+      name
+    });
+    return frame.variables.length - 1;
+  }
+
+  pushTemplateParameter(name: string, withDefault: boolean = false): number {
+    this.pushOp(
+      withDefault
+        ? ReflectionOp.typeParameterDefault
+        : ReflectionOp.typeParameter,
+      this.findOrAddStackEntry(name)
+    );
+    this.frame.variables.push({
+      index: this.frame.variables.length,
+      name
+    });
+    return this.frame.variables.length - 1;
+  }
+
+  findVariable(name: string, frame = this.frame) {
+    return findVariable(frame, name);
+  }
+}
+
+function getAssignTypeExpression(call: Expression): Expression | undefined {
+  if (isParenthesizedExpression(call) && isCallExpression(call.expression)) {
+    call = call.expression;
+  }
+
+  if (
+    isCallExpression(call) &&
+    isIdentifier(call.expression) &&
+    getIdentifierName(call.expression) === "__assignType" &&
+    call.arguments.length > 0
+  ) {
+    return call.arguments[0];
+  }
+
+  return;
+}
 
-    protected stackPosition: number = 0;
+function getReceiveTypeParameter(
+  type: TypeNode
+): TypeReferenceNode | undefined {
+  if (isUnionTypeNode(type)) {
+    for (const t of type.types) {
+      const rfn = getReceiveTypeParameter(t);
+      if (rfn) return rfn;
+    }
+  } else if (
+    isTypeReferenceNode(type) &&
+    isIdentifier(type.typeName) &&
+    getIdentifierName(type.typeName) === "ReceiveType" &&
+    !!type.typeArguments &&
+    type.typeArguments.length === 1
+  )
+    return type;
+
+  return;
+}
 
-    protected frame: Frame = { variables: [], opIndex: 0 };
+export class Cache {
+  resolver: ReflectionConfigCache = {};
+  sourceFiles: { [fileName: string]: SourceFile } = {};
 
-    protected activeCoRoutines: { ops: ReflectionOp[] }[] = [];
-    protected coRoutines: { ops: ReflectionOp[] }[] = [];
+  globalSourceFiles?: SourceFile[];
 
-    constructor(public forNode: Node, public sourceFile?: SourceFile) {
+  /**
+   * Signals the cache to check if it needs to be cleared.
+   */
+  tick() {
+    if (Object.keys(this.sourceFiles).length > 300) {
+      this.sourceFiles = {};
     }
+  }
+}
+
+/**
+ * Read the TypeScript AST and generate pack struct (instructions + pre-defined stack).
+ *
+ * This transformer extracts type and add the encoded (so its small and low overhead) at classes and functions as property.
+ *
+ * Deepkit/type can then extract and decode them on-demand.
+ */
+export class ReflectionTransformer implements CustomTransformer {
+  sourceFile!: SourceFile;
+  protected f: NodeFactory;
+
+  protected embedAssignType: boolean = false;
+
+  /**
+   * Types added to this map will get a type program directly under it.
+   * This is for types used in the very same file.
+   */
+  protected compileDeclarations = new Map<
+    TypeAliasDeclaration | InterfaceDeclaration | EnumDeclaration,
+    { name: EntityName; sourceFile: SourceFile; compiled?: Statement[] }
+  >();
+
+  /**
+   * Types added to this map will get a type program at the top root level of the program.
+   * This is for imported types, which need to be inlined into the current file, as we do not emit type imports (TS will omit them).
+   */
+  protected embedDeclarations = new Map<
+    Node,
+    { name: EntityName; sourceFile?: SourceFile }
+  >();
+
+  /**
+   * When a node was embedded or compiled (from the maps above), we store it here to know to not add it again.
+   */
+  protected compiledDeclarations = new Set<Node>();
+
+  protected addImports: { from: Expression; identifier: Identifier }[] = [];
+
+  protected nodeConverter: NodeConverter;
+  protected typeChecker?: TypeChecker;
+  protected resolver: Resolver;
+  protected host: CompilerHost;
+  protected overriddenHost = false;
+  protected overriddenConfigResolver?: ConfigResolver;
+
+  protected compilerOptions: CompilerOptions;
+
+  /**
+   * When a deep call expression was found a script-wide variable is necessary
+   * as temporary storage.
+   */
+  protected tempResultIdentifier?: Identifier;
+  protected parseConfigHost: ParseConfigHost;
+  protected intrinsicMetaDeclaration: TypeAliasDeclaration;
+
+  constructor(
+    protected context: TransformationContext,
+    protected cache: Cache = new Cache()
+  ) {
+    this.f = context.factory;
+    this.nodeConverter = new NodeConverter(this.f);
+    // It is important to not have undefined values like {paths: undefined} because it would override the read tsconfig.json.
+    // Important to create a copy since we will modify it.
+    this.compilerOptions = { ...filterUndefined(context.getCompilerOptions()) };
+    // compilerHost has no internal cache and is cheap to build, so no cache needed.
+    // Resolver loads SourceFile which has cache implemented.
+    this.host = createCompilerHost(this.compilerOptions);
+    this.resolver = new Resolver(
+      this.compilerOptions,
+      this.host,
+      this.cache.sourceFiles
+    );
+    this.parseConfigHost = {
+      useCaseSensitiveFileNames: true,
+      fileExists: (path: string) => this.host.fileExists(path),
+      readFile: (path: string) => this.host.readFile(path),
+      readDirectory: (
+        path: string,
+        extensions?: readonly string[],
+        exclude?: readonly string[],
+        include?: readonly string[],
+        depth?: number
+      ) => {
+        if (!this.host.readDirectory) return [];
+        return this.host.readDirectory(
+          path,
+          extensions || [],
+          exclude,
+          include || [],
+          depth
+        );
+      }
+    };
 
-    buildPackStruct() {
-        const ops: ReflectionOp[] = [...this.ops];
+    {
+      // TypeAnnotation<T, Options> = { __meta?: never & [T, Options] }
+      const T = this.f.createIdentifier("T");
+      const Options = this.f.createIdentifier("Options");
+      this.intrinsicMetaDeclaration = this.f.createTypeAliasDeclaration(
+        [],
+        "TypeAnnotation",
+        [
+          this.f.createTypeParameterDeclaration([], T),
+          this.f.createTypeParameterDeclaration(
+            [],
+            Options,
+            undefined,
+            this.f.createTypeReferenceNode("never")
+          )
+        ],
+        this.f.createTypeLiteralNode([
+          this.f.createPropertySignature(
+            undefined,
+            "__meta",
+            this.f.createToken(SyntaxKind.QuestionToken),
+            this.f.createIntersectionTypeNode([
+              this.f.createTypeReferenceNode("never"),
+              this.f.createTupleTypeNode([
+                this.f.createTypeReferenceNode(T),
+                this.f.createTypeReferenceNode(Options)
+              ])
+            ])
+          )
+        ])
+      );
+    }
+  }
+
+  forHost(host: CompilerHost): this {
+    this.host = host;
+    this.resolver.host = host;
+    this.overriddenHost = true;
+    return this;
+  }
+
+  withReflection(config: ReflectionConfig): this {
+    const configResolver: ResolvedConfig = {
+      reflectionLevel: "normal",
+      ...config,
+      path: "",
+      mergeStrategy: "replace",
+      compilerOptions: this.compilerOptions
+    };
 
-        if (this.coRoutines.length) {
-            for (let i = this.coRoutines.length - 1; i >= 0; i--) {
-                ops.unshift(...this.coRoutines[i].ops);
-            }
+    const match = (path: string) => {
+      const mode = reflectionModeMatcher(config, path);
+      return { mode, tsConfigPath: "", level: configResolver.reflectionLevel };
+    };
+
+    this.overriddenConfigResolver = { config: configResolver, match };
+    return this;
+  }
+
+  transformBundle(node: Bundle): Bundle {
+    return node;
+  }
+
+  getTempResultIdentifier(): Identifier {
+    if (this.tempResultIdentifier) return this.tempResultIdentifier;
+
+    const locals = isNodeWithLocals(this.sourceFile)
+      ? this.sourceFile.locals
+      : undefined;
+
+    if (locals) {
+      let found = "Ωr";
+      for (let i = 0; ; i++) {
+        found = "Ωr" + (i ? i : "");
+        if (!locals.has(escapeLeadingUnderscores(found))) break;
+      }
+      this.tempResultIdentifier = this.f.createIdentifier(found);
+    } else {
+      this.tempResultIdentifier = this.f.createIdentifier("Ωr");
+    }
+    return this.tempResultIdentifier;
+  }
+
+  protected getConfigResolver(sourceFile: {
+    fileName: string;
+  }): ConfigResolver {
+    if (this.overriddenConfigResolver) {
+      return this.overriddenConfigResolver;
+    }
+
+    return getConfigResolver(
+      this.cache.resolver,
+      this.parseConfigHost,
+      this.compilerOptions,
+      sourceFile
+    );
+  }
+
+  protected getReflectionConfig(sourceFile: { fileName: string }): MatchResult {
+    const configResolver = this.getConfigResolver(sourceFile);
+    return configResolver.match(sourceFile.fileName);
+  }
+
+  protected isWithReflection(
+    sourceFile: SourceFile | undefined,
+    node: Node & { __deepkitConfig?: ReflectionConfig }
+  ): boolean {
+    const mode = this.getExplicitReflectionMode(sourceFile, node);
+    if (mode === false) return false;
+    if (!sourceFile) return true; // intrinsic types are always with reflection
+    const reflection = this.getReflectionConfig(sourceFile);
+    // explicit means reflection needs to be enabled per Node/File via @reflection
+    if (reflection.mode === "explicit") return mode === true;
+    return reflection.mode === "default";
+  }
+
+  transformSourceFile(sourceFile: SourceFile): SourceFile {
+    this.sourceFile = sourceFile;
+
+    //if it's not a TS/TSX file, we do not transform it
+    if (
+      sourceFile.scriptKind !== ScriptKind.TS &&
+      sourceFile.scriptKind !== ScriptKind.TSX
+    )
+      return sourceFile;
+
+    if ((sourceFile as any).deepkitTransformed) return sourceFile;
+    this.embedAssignType = false;
+    this.addImports = [];
+
+    const start = Date.now();
+    const configResolver = this.getConfigResolver(sourceFile);
+    const reflection = configResolver.match(sourceFile.fileName);
+
+    // important to override the compilerOptions with the one from the configResolver
+    // since the one provided by TSC/plugins are not necessarily the full picture.
+    // ConfigResolver resolves the whole config.
+    // Since this.compilerOptions was already passed to Resolver, we update its values by reference.
+    Object.assign(this.compilerOptions, configResolver.config.compilerOptions);
+
+    if (reflection.mode === "never") {
+      debug(
+        `Transform file with reflection=${reflection.mode} took ${Date.now() - start}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || "none"}.`
+      );
+      return sourceFile;
+    }
+
+    if (!(sourceFile as any).locals) {
+      //@ts-ignore
+      ts.bindSourceFile(sourceFile, this.compilerOptions);
+    }
+
+    if (sourceFile.kind !== SyntaxKind.SourceFile) {
+      if ("undefined" === typeof require) {
+        throw new Error(
+          `Invalid TypeScript library imported. SyntaxKind different ${sourceFile.kind} !== ${SyntaxKind.SourceFile}.`
+        );
+      }
+      const path = require.resolve("typescript");
+      throw new Error(
+        `Invalid TypeScript library imported. SyntaxKind different ${sourceFile.kind} !== ${SyntaxKind.SourceFile}. typescript package path: ${path}`
+      );
+    }
+
+    const visitor = (node: Node): any => {
+      node = visitEachChild(node, visitor, this.context);
+
+      if (
+        isInterfaceDeclaration(node) ||
+        isTypeAliasDeclaration(node) ||
+        isEnumDeclaration(node)
+      ) {
+        if (this.isWithReflection(sourceFile, node)) {
+          this.compileDeclarations.set(node, {
+            name: node.name,
+            sourceFile: this.sourceFile
+          });
+        }
+      }
+
+      if (
+        isMethodDeclaration(node) &&
+        node.parent &&
+        node.body &&
+        isObjectLiteralExpression(node.parent)
+      ) {
+        //replace MethodDeclaration with MethodExpression
+        // {add(v: number) {}} => {add: function (v: number) {}}
+        //so that __type can be added.
+        //{default(){}} can not be converted without losing the function name, so we skip that for the moment.
+        let valid = true;
+        if (
+          node.name.kind === SyntaxKind.Identifier &&
+          getIdentifierName(node.name) === "default"
+        )
+          valid = false;
+        if (valid) {
+          const method = this.decorateFunctionExpression(
+            this.f.createFunctionExpression(
+              node.modifiers as ReadonlyArray<Modifier>,
+              node.asteriskToken,
+              isIdentifier(node.name) ? node.name : undefined,
+              node.typeParameters,
+              node.parameters,
+              node.type,
+              node.body
+            )
+          );
+          node = this.f.createPropertyAssignment(node.name, method);
+        }
+      }
+
+      if (isClassDeclaration(node)) {
+        return this.decorateClass(sourceFile, node);
+      } else if (isParameter(node) && node.parent && node.type) {
+        // ReceiveType
+        const typeParameters = isConstructorDeclaration(node.parent)
+          ? node.parent.parent.typeParameters
+          : node.parent.typeParameters;
+        if (!typeParameters) return node;
+
+        const receiveType = getReceiveTypeParameter(node.type);
+        if (receiveType && receiveType.typeArguments) {
+          const first = receiveType.typeArguments[0];
+          if (
+            first &&
+            isTypeReferenceNode(first) &&
+            isIdentifier(first.typeName)
+          ) {
+            const name = getIdentifierName(first.typeName);
+            //find type parameter position
+            const index = typeParameters.findIndex(
+              v => getIdentifierName(v.name) === name
+            );
+
+            let container: Expression = this.f.createIdentifier("globalThis");
+            if (isArrowFunction(node.parent)) {
+              const next = this.getArrowFunctionΩPropertyAccessIdentifier(
+                node.parent
+              );
+              if (!next) return node;
+              container = next;
+            } else if (
+              (isFunctionDeclaration(node.parent) ||
+                isFunctionExpression(node.parent)) &&
+              node.parent.name
+            ) {
+              container = node.parent.name;
+            } else if (
+              isMethodDeclaration(node.parent) &&
+              isIdentifier(node.parent.name)
+            ) {
+              container = this.f.createPropertyAccessExpression(
+                this.f.createIdentifier("this"),
+                node.parent.name
+              );
+            } else if (isConstructorDeclaration(node.parent)) {
+              container = this.f.createPropertyAccessExpression(
+                this.f.createIdentifier("this"),
+                "constructor"
+              );
+            }
+
+            return this.f.updateParameterDeclaration(
+              node,
+              node.modifiers as ReadonlyArray<Modifier>,
+              node.dotDotDotToken,
+              node.name,
+              node.questionToken,
+              receiveType,
+              this.f.createElementAccessChain(
+                this.f.createPropertyAccessExpression(
+                  container,
+                  this.f.createIdentifier("Ω")
+                ),
+                this.f.createToken(SyntaxKind.QuestionDotToken),
+                this.f.createNumericLiteral(index)
+              )
+            );
+          }
+        }
+      } else if (isClassExpression(node)) {
+        return this.decorateClass(sourceFile, node);
+      } else if (isFunctionExpression(node)) {
+        return this.decorateFunctionExpression(this.injectResetΩ(node));
+      } else if (isFunctionDeclaration(node)) {
+        return this.decorateFunctionDeclaration(this.injectResetΩ(node));
+      } else if (isMethodDeclaration(node) || isConstructorDeclaration(node)) {
+        return this.injectResetΩ(node);
+      } else if (isArrowFunction(node)) {
+        return this.decorateArrowFunction(this.injectResetΩ(node));
+      } else if (
+        (isNewExpression(node) || isCallExpression(node)) &&
+        node.typeArguments &&
+        node.typeArguments.length > 0
+      ) {
+        if (isCallExpression(node)) {
+          const autoTypeFunctions = ["valuesOf", "propertiesOf", "typeOf"];
+          if (
+            isIdentifier(node.expression) &&
+            autoTypeFunctions.includes(getIdentifierName(node.expression))
+          ) {
+            const args: Expression[] = [...node.arguments];
+
+            if (!args.length) {
+              args.push(this.f.createArrayLiteralExpression());
+            }
+
+            // const resolvedType = this.resolveType(node.typeArguments[0]);
+            const type = this.getTypeOfType(node.typeArguments[0]);
+            if (!type) return node;
+            args.push(type);
+
+            return this.f.updateCallExpression(
+              node,
+              node.expression,
+              node.typeArguments,
+              this.f.createNodeArray(args)
+            );
+          }
         }
 
-        if (this.mainOffset) {
-            ops.unshift(ReflectionOp.jump, this.mainOffset);
+        //put the type argument in FN.Ω
+        const expressionToCheck =
+          getAssignTypeExpression(node.expression) || node.expression;
+        if (isArrowFunction(expressionToCheck)) {
+          //inline arrow functions are excluded from type passing
+          return node;
         }
 
-        return { ops, stack: this.stack };
-    }
+        const typeExpressions: Expression[] = [];
+        for (const a of node.typeArguments) {
+          const type = this.getTypeOfType(a);
+          typeExpressions.push(type || this.f.createIdentifier("undefined"));
+        }
 
-    isEmpty(): boolean {
-        return this.ops.length === 0;
-    }
+        let container: Expression = this.f.createIdentifier("globalThis");
+        if (isIdentifier(node.expression)) {
+          container = node.expression;
+        } else if (isPropertyAccessExpression(node.expression)) {
+          container = node.expression;
+        }
 
-    pushConditionalFrame(): void {
-        const frame = this.pushFrame();
-        frame.conditional = true;
-    }
+        const assignQ = this.f.createBinaryExpression(
+          this.f.createPropertyAccessExpression(container, "Ω"),
+          this.f.createToken(SyntaxKind.EqualsToken),
+          this.f.createArrayLiteralExpression(typeExpressions)
+        );
 
-    pushStack(item: StackEntry): number {
-        this.stack.push(item);
-        return this.stackPosition++;
-    }
+        const update: any = isNewExpression(node)
+          ? this.f.updateNewExpression
+          : this.f.updateCallExpression;
+
+        if (isPropertyAccessExpression(node.expression)) {
+          //e.g. http.deep.response();
+          if (isCallExpression(node.expression.expression)) {
+            //e.g. http.deep().response();
+            //change to (Ωr = http.deep(), Ωr.response.Ω = [], Ωr).response()
+            const r = this.getTempResultIdentifier();
+            const assignQ = this.f.createBinaryExpression(
+              this.f.createPropertyAccessExpression(
+                this.f.createPropertyAccessExpression(r, node.expression.name),
+                "Ω"
+              ),
+              this.f.createToken(SyntaxKind.EqualsToken),
+              this.f.createArrayLiteralExpression(typeExpressions)
+            );
 
-    pushCoRoutine(): void {
-        this.pushFrame(true); //co-routines have implicit stack frames due to call convention
-        this.activeCoRoutines.push({ ops: [] });
-    }
+            return update(
+              node,
+              this.f.createPropertyAccessExpression(
+                this.f.createParenthesizedExpression(
+                  this.f.createBinaryExpression(
+                    this.f.createBinaryExpression(
+                      this.f.createBinaryExpression(
+                        r,
+                        this.f.createToken(ts.SyntaxKind.EqualsToken),
+                        node.expression.expression
+                      ),
+                      this.f.createToken(ts.SyntaxKind.CommaToken),
+                      assignQ
+                    ),
+                    this.f.createToken(ts.SyntaxKind.CommaToken),
+                    r
+                  )
+                ),
+                node.expression.name
+              ),
+              node.typeArguments,
+              node.arguments
+            );
+          } else if (isParenthesizedExpression(node.expression.expression)) {
+            //e.g. (http.deep()).response();
+            //only work necessary when `http.deep()` is using type args and was converted to:
+            //  (Ω = [], http.deep()).response()
+
+            //it's a call like (obj.method.Ω = ['a'], obj.method()).method()
+            //which needs to be converted so that Ω is correctly read by the last call
+            //(r = (obj.method.Ω = [['a']], obj.method()), obj.method.Ω = [['b']], r).method());
+
+            const r = this.getTempResultIdentifier();
+            const assignQ = this.f.createBinaryExpression(
+              this.f.createPropertyAccessExpression(
+                this.f.createPropertyAccessExpression(r, node.expression.name),
+                "Ω"
+              ),
+              this.f.createToken(SyntaxKind.EqualsToken),
+              this.f.createArrayLiteralExpression(typeExpressions)
+            );
 
-    popCoRoutine(): number {
-        const coRoutine = this.activeCoRoutines.pop();
-        if (!coRoutine) throw new Error('No active co routine found');
-        this.popFrameImplicit();
-        if (this.mainOffset === 0) {
-            this.mainOffset = 2; //we add JUMP + index when building the program
+            const updatedNode = update(
+              node,
+              this.f.updatePropertyAccessExpression(
+                node.expression,
+                this.f.updateParenthesizedExpression(
+                  node.expression.expression,
+                  this.f.createBinaryExpression(
+                    this.f.createBinaryExpression(
+                      this.f.createBinaryExpression(
+                        r,
+                        this.f.createToken(SyntaxKind.EqualsToken),
+                        node.expression.expression.expression
+                      ),
+                      this.f.createToken(SyntaxKind.CommaToken),
+                      assignQ
+                    ),
+                    this.f.createToken(SyntaxKind.CommaToken),
+                    r
+                  )
+                ),
+                node.expression.name
+              ),
+              node.typeArguments,
+              node.arguments
+            );
+
+            return this.f.createParenthesizedExpression(updatedNode);
+          } else {
+            //e.g. http.deep.response();
+            //nothing to do
+          }
         }
-        const startIndex = this.mainOffset;
-        coRoutine.ops.push(ReflectionOp.return);
-        this.coRoutines.push(coRoutine);
-        this.mainOffset += coRoutine.ops.length;
-        return startIndex;
-    }
 
-    pushOp(...ops: ReflectionOp[]): void {
-        for (const op of ops) {
-            if ('number' !== typeof op) {
-                throw new Error('No valid OP added');
-            }
-            // if (op + 33 > 126) {
-            //todo: encode as var int
-            // throw new Error('stack pointer too big ' + op);
-            // }
+        //(fn.Ω = [], call())
+        return this.f.createParenthesizedExpression(
+          this.f.createBinaryExpression(
+            assignQ,
+            this.f.createToken(SyntaxKind.CommaToken),
+            node
+          )
+        );
+      }
+
+      return node;
+    };
+    this.sourceFile = visitNode(this.sourceFile, visitor);
+
+    const newTopStatements: Statement[] = [];
+
+    while (true) {
+      let allCompiled = true;
+      for (const d of this.compileDeclarations.values()) {
+        if (d.compiled) continue;
+        allCompiled = false;
+        break;
+      }
+
+      if (this.embedDeclarations.size === 0 && allCompiled) break;
+
+      for (const [node, d] of [...this.compileDeclarations.entries()]) {
+        if (d.compiled) continue;
+        d.compiled = this.createProgramVarFromNode(
+          node,
+          d.name,
+          this.sourceFile
+        );
+      }
+
+      if (this.embedDeclarations.size) {
+        for (const node of this.embedDeclarations.keys()) {
+          this.compiledDeclarations.add(node);
         }
-        if (this.activeCoRoutines.length) {
-            this.activeCoRoutines[this.activeCoRoutines.length - 1].ops.push(...ops);
-            return;
+        const entries = Array.from(this.embedDeclarations.entries());
+        this.embedDeclarations.clear();
+        for (const [node, d] of entries) {
+          newTopStatements.push(
+            ...this.createProgramVarFromNode(node, d.name, d.sourceFile)
+          );
         }
-
-        this.ops.push(...ops);
+      }
     }
 
-    pushOpAtFrame(frame: Frame, ...ops: ReflectionOp[]): void {
-        if (this.activeCoRoutines.length) {
-            this.activeCoRoutines[this.activeCoRoutines.length - 1].ops.splice(frame.opIndex, 0, ...ops);
-            return;
+    //externalize type aliases
+    const compileDeclarations = (node: Node): any => {
+      node = visitEachChild(node, compileDeclarations, this.context);
+
+      if (
+        isTypeAliasDeclaration(node) ||
+        isInterfaceDeclaration(node) ||
+        isEnumDeclaration(node)
+      ) {
+        const d = this.compileDeclarations.get(node);
+        if (!d) {
+          return node;
         }
+        this.compileDeclarations.delete(node);
+        this.compiledDeclarations.add(node);
+        if (d.compiled) {
+          return [...d.compiled, node];
+        }
+      }
 
-        this.ops.splice(frame.opIndex, 0, ...ops);
+      return node;
+    };
+    this.sourceFile = visitNode(this.sourceFile, compileDeclarations);
+
+    if (this.addImports.length) {
+      const handledIdentifier: string[] = [];
+      for (const imp of this.addImports) {
+        if (handledIdentifier.includes(getIdentifierName(imp.identifier)))
+          continue;
+        handledIdentifier.push(getIdentifierName(imp.identifier));
+        if (this.getModuleType() === "cjs") {
+          //var {identifier} = require('./bar')
+          const test = this.f.createIdentifier(
+            getIdentifierName(imp.identifier)
+          );
+          const variable = this.f.createVariableStatement(
+            undefined,
+            this.f.createVariableDeclarationList(
+              [
+                this.f.createVariableDeclaration(
+                  this.f.createObjectBindingPattern([
+                    this.f.createBindingElement(undefined, undefined, test)
+                  ]),
+                  undefined,
+                  undefined,
+                  this.f.createCallExpression(
+                    this.f.createIdentifier("require"),
+                    undefined,
+                    [imp.from]
+                  )
+                )
+              ],
+              NodeFlags.Const
+            )
+          );
+          const typeDeclWithComment = addSyntheticLeadingComment(
+            variable,
+            SyntaxKind.MultiLineCommentTrivia,
+            "@ts-ignore",
+            true
+          );
+          newTopStatements.push(typeDeclWithComment);
+        } else {
+          //import {identifier} from './bar.js'
+          // import { identifier as identifier } is used to avoid automatic elision of imports (in angular builds for example)
+          // that's probably a bit unstable.
+          const specifier = this.f.createImportSpecifier(
+            false,
+            undefined,
+            imp.identifier
+          );
+          const namedImports = this.f.createNamedImports([specifier]);
+          const importStatement = this.f.createImportDeclaration(
+            undefined,
+            this.f.createImportClause(false, undefined, namedImports),
+            imp.from
+          );
+          const typeDeclWithComment = addSyntheticLeadingComment(
+            importStatement,
+            SyntaxKind.MultiLineCommentTrivia,
+            "@ts-ignore",
+            true
+          );
+          newTopStatements.push(typeDeclWithComment);
+        }
+      }
     }
 
-    /**
-     * Returns the index of the `entry` in the stack, if already exists. If not, add it, and return that new index.
-     */
-    findOrAddStackEntry(entry: any): number {
-        const index = this.stack.indexOf(entry);
-        if (index !== -1) return index;
-        return this.pushStack(entry);
+    if (this.embedAssignType) {
+      const assignType = this.f.createFunctionDeclaration(
+        undefined,
+        undefined,
+        this.f.createIdentifier("__assignType"),
+        undefined,
+        [
+          this.f.createParameterDeclaration(
+            undefined,
+            undefined,
+            this.f.createIdentifier("fn"),
+            undefined,
+            undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
+            undefined
+          ),
+          this.f.createParameterDeclaration(
+            undefined,
+            undefined,
+            this.f.createIdentifier("args"),
+            undefined,
+            undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
+            undefined
+          )
+        ],
+        undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
+        this.f.createBlock(
+          [
+            this.f.createExpressionStatement(
+              this.f.createBinaryExpression(
+                this.f.createPropertyAccessExpression(
+                  this.f.createIdentifier("fn"),
+                  this.f.createIdentifier("__type")
+                ),
+                this.f.createToken(SyntaxKind.EqualsToken),
+                this.f.createIdentifier("args")
+              )
+            ),
+            this.f.createReturnStatement(this.f.createIdentifier("fn"))
+          ],
+          true
+        )
+      );
+      newTopStatements.push(assignType);
+    }
+
+    if (this.tempResultIdentifier) {
+      newTopStatements.push(
+        this.f.createVariableStatement(
+          undefined,
+          this.f.createVariableDeclarationList(
+            [
+              this.f.createVariableDeclaration(
+                this.tempResultIdentifier,
+                undefined,
+                undefined,
+                undefined
+              )
+            ],
+            ts.NodeFlags.None
+          )
+        )
+      );
     }
 
-    /**
-     * To make room for a stack entry expected on the stack as input for example.
-     */
-    increaseStackPosition(): number {
-        return this.stackPosition++;
+    if (newTopStatements.length) {
+      // we want to keep "use strict", or "use client", etc at the very top
+      const indexOfFirstLiteralExpression =
+        this.sourceFile.statements.findIndex(
+          (v: any) => isExpressionStatement(v) && isStringLiteral(v.expression)
+        );
+
+      const newStatements =
+        indexOfFirstLiteralExpression === -1
+          ? [...newTopStatements, ...this.sourceFile.statements]
+          : [
+              ...this.sourceFile.statements.slice(
+                0,
+                indexOfFirstLiteralExpression + 1
+              ),
+              ...newTopStatements,
+              ...this.sourceFile.statements.slice(
+                indexOfFirstLiteralExpression + 1
+              )
+            ];
+      this.sourceFile = this.f.updateSourceFile(this.sourceFile, newStatements);
+      // this.sourceFile = this.f.updateSourceFile(this.sourceFile, [...newTopStatements, ...this.sourceFile.statements]);
+    }
+
+    // console.log(createPrinter().printNode(EmitHint.SourceFile, this.sourceFile, this.sourceFile));
+    const took = Date.now() - start;
+    debug(
+      `Transform file with reflection=${reflection.mode} took ${took}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || "none"}.`
+    );
+    (this.sourceFile as any).deepkitTransformed = true;
+    return this.sourceFile;
+  }
+
+  protected getModuleType(): "cjs" | "esm" {
+    if (
+      this.compilerOptions.module === ts.ModuleKind.Node16 ||
+      this.compilerOptions.module === ts.ModuleKind.NodeNext
+    ) {
+      if (this.sourceFile.impliedNodeFormat === ts.ModuleKind.ESNext) {
+        return "esm";
+      }
+      return "cjs";
+    }
+    return this.compilerOptions.module === ts.ModuleKind.CommonJS
+      ? "cjs"
+      : "esm";
+  }
+
+  protected getArrowFunctionΩPropertyAccessIdentifier(
+    node: ArrowFunction
+  ): Identifier | undefined {
+    let { parent } = (node as any).original || node;
+    if (isVariableDeclaration(parent) && isIdentifier(parent.name)) {
+      return parent.name;
+    } else if (isPropertyAssignment(parent) && isIdentifier(parent.name)) {
+      const names: string[] = [];
+      while (parent) {
+        if (isObjectLiteralExpression(parent)) {
+          parent = parent.parent;
+        } else if (isVariableDeclaration(parent)) {
+          names.unshift(getIdentifierName(parent.name as Identifier));
+          break;
+        } else if (isIdentifier(parent.name)) {
+          names.unshift(getIdentifierName(parent.name));
+          parent = parent.parent;
+        } else {
+          return;
+        }
+      }
+      return this.f.createIdentifier(names.join("."));
+    }
+    return;
+  }
+
+  protected injectResetΩ<
+    T extends
+      | FunctionDeclaration
+      | FunctionExpression
+      | MethodDeclaration
+      | ConstructorDeclaration
+      | ArrowFunction
+  >(node: T): T {
+    let hasReceiveType = false;
+    for (const param of node.parameters) {
+      if (param.type && getReceiveTypeParameter(param.type))
+        hasReceiveType = true;
+    }
+    if (!hasReceiveType) return node;
+
+    let container: Expression = this.f.createIdentifier("globalThis");
+    if (isArrowFunction(node)) {
+      const next = this.getArrowFunctionΩPropertyAccessIdentifier(node);
+      if (!next) return node;
+      container = next;
+    } else if (
+      (isFunctionDeclaration(node) || isFunctionExpression(node)) &&
+      node.name
+    ) {
+      container = node.name;
+    } else if (isMethodDeclaration(node) && isIdentifier(node.name)) {
+      container = this.f.createPropertyAccessExpression(
+        this.f.createIdentifier("this"),
+        node.name
+      );
+    } else if (isConstructorDeclaration(node)) {
+      container = this.f.createPropertyAccessExpression(
+        this.f.createIdentifier("this"),
+        "constructor"
+      );
+    }
+
+    const reset: Statement = this.f.createExpressionStatement(
+      this.f.createBinaryExpression(
+        this.f.createPropertyAccessExpression(
+          container,
+          this.f.createIdentifier("Ω")
+        ),
+        this.f.createToken(ts.SyntaxKind.EqualsToken),
+        this.f.createIdentifier("undefined")
+      )
+    );
+
+    // convert expression into statements array
+    let body = node.body && isBlock(node.body) ? node.body : undefined;
+    let bodyStatements: Statement[] =
+      node.body && isBlock(node.body) ? [...node.body.statements] : [];
+    if (node.body) {
+      if (isExpression(node.body)) {
+        bodyStatements = [this.f.createReturnStatement(node.body)];
+      }
+      body = this.f.updateBlock(node.body as Block, [reset, ...bodyStatements]);
+    }
+
+    if (isArrowFunction(node)) {
+      return this.f.updateArrowFunction(
+        node,
+        node.modifiers,
+        node.typeParameters,
+        node.parameters,
+        node.type,
+        node.equalsGreaterThanToken,
+        body as ConciseBody
+      ) as T;
+    } else if (isFunctionDeclaration(node)) {
+      return this.f.updateFunctionDeclaration(
+        node,
+        node.modifiers,
+        node.asteriskToken,
+        node.name,
+        node.typeParameters,
+        node.parameters,
+        node.type,
+        body
+      ) as T;
+    } else if (isFunctionExpression(node)) {
+      return this.f.updateFunctionExpression(
+        node,
+        node.modifiers,
+        node.asteriskToken,
+        node.name,
+        node.typeParameters,
+        node.parameters,
+        node.type,
+        body || node.body
+      ) as T;
+    } else if (isMethodDeclaration(node)) {
+      return this.f.updateMethodDeclaration(
+        node,
+        node.modifiers as ReadonlyArray<Modifier>,
+        node.asteriskToken,
+        node.name,
+        node.questionToken,
+        node.typeParameters,
+        node.parameters,
+        node.type,
+        body
+      ) as T;
+    } else if (isConstructorDeclaration(node)) {
+      return this.f.updateConstructorDeclaration(
+        node,
+        node.modifiers,
+        node.parameters,
+        body
+      ) as T;
+    }
+    return node;
+  }
+
+  protected createProgramVarFromNode(
+    node: Node,
+    name: EntityName,
+    sourceFile?: SourceFile
+  ): Statement[] {
+    const typeProgram = new CompilerProgram(node, sourceFile);
+
+    if (
+      (isTypeAliasDeclaration(node) || isInterfaceDeclaration(node)) &&
+      node.typeParameters
+    ) {
+      for (const param of node.typeParameters) {
+        if (param.default) {
+          //push default on the stack
+          this.extractPackStructOfType(param.default, typeProgram);
+        }
+        typeProgram.pushTemplateParameter(
+          getIdentifierName(param.name),
+          !!param.default
+        );
+      }
     }
 
-    protected resolveFunctionParameters = new Map<Node, number>();
+    this.extractPackStructOfType(node, typeProgram);
 
-    resolveFunctionParametersIncrease(fn: Node) {
-        this.resolveFunctionParameters.set(fn, (this.resolveFunctionParameters.get(fn) || 0) + 1);
+    if (
+      isTypeAliasDeclaration(node) ||
+      isInterfaceDeclaration(node) ||
+      isClassDeclaration(node) ||
+      isClassExpression(node)
+    ) {
+      typeProgram.pushOp(ReflectionOp.nominal);
     }
 
-    resolveFunctionParametersDecrease(fn: Node) {
-        this.resolveFunctionParameters.set(fn, (this.resolveFunctionParameters.get(fn) || 1) - 1);
-    }
+    const typeProgramExpression = this.packOpsAndStack(typeProgram);
 
-    isResolveFunctionParameters(fn: Node) {
-        return (this.resolveFunctionParameters.get(fn) || 0) > 0;
-    }
+    const variable = this.f.createVariableStatement(
+      [],
+      this.f.createVariableDeclarationList(
+        [
+          this.f.createVariableDeclaration(
+            this.getDeclarationVariableName(name),
+            undefined,
+            undefined,
+            typeProgramExpression
+          )
+        ],
+        NodeFlags.Const
+      )
+    );
+
+    //when its commonJS, the `variable` would be exported as `exports.$name = $value`, but all references point just to $name.
+    //so the idea is, that we create a normal variable and export it via `export {$name}`.
+    if (hasModifier(node, SyntaxKind.ExportKeyword)) {
+      //propertyName in ExportSpecifier is set to avoid a TS compile error:
+      // TypeError: Cannot read properties of undefined (reading 'escapedText')
+      //   at Object.idText (/Users/marc/bude/deepkit-framework/packages/benchmark/node_modules/typescript/lib/typescript.js:11875:67)
+      const exportNode = this.f.createExportDeclaration(
+        undefined,
+        false,
+        this.f.createNamedExports([
+          this.f.createExportSpecifier(
+            false,
+            this.getDeclarationVariableName(name),
+            this.getDeclarationVariableName(name)
+          )
+        ])
+      );
+      return [variable, exportNode];
+    }
+
+    return [variable];
+  }
+
+  protected extractPackStructOfExpression(
+    node: Expression,
+    program: CompilerProgram
+  ): void {
+    switch (node.kind) {
+      case SyntaxKind.StringLiteral: {
+        program.pushOp(ReflectionOp.string);
+        return;
+      }
+      case SyntaxKind.NumericLiteral: {
+        program.pushOp(ReflectionOp.number);
+        return;
+      }
+      case SyntaxKind.FalseKeyword:
+      case SyntaxKind.TrueKeyword: {
+        program.pushOp(ReflectionOp.boolean);
+        return;
+      }
+      case SyntaxKind.BigIntLiteral: {
+        program.pushOp(ReflectionOp.bigint);
+        return;
+      }
+      //Symbol() is a function call, so we need to check for that
+      case SyntaxKind.CallExpression: {
+        const call = node as CallExpression;
+        if (
+          isIdentifier(call.expression) &&
+          getIdentifierName(call.expression) === "Symbol"
+        ) {
+          program.pushOp(ReflectionOp.symbol);
+          return;
+        }
+        break;
+      }
+      //new Date()
+      case SyntaxKind.NewExpression: {
+        const call = node as NewExpression;
+        if (isIdentifier(call.expression)) {
+          const map: { [name: string]: ReflectionOp } = {
+            "Date": ReflectionOp.date,
+            "RegExp": ReflectionOp.regexp,
+            "Uint8Array": ReflectionOp.uint8Array,
+            "Uint8ClampedArray": ReflectionOp.uint8ClampedArray,
+            "Uint16Array": ReflectionOp.uint16Array,
+            "Uint32Array": ReflectionOp.uint32Array,
+            "Int8Array": ReflectionOp.int8Array,
+            "Int16Array": ReflectionOp.int16Array,
+            "Int32Array": ReflectionOp.int32Array,
+            "Float32Array": ReflectionOp.float32Array,
+            "Float64Array": ReflectionOp.float64Array,
+            "ArrayBuffer": ReflectionOp.arrayBuffer
+          };
+          const op = map[getIdentifierName(call.expression)];
+          if (op) {
+            program.pushOp(op);
+            return;
+          }
+        }
+        break;
+      }
+    }
+
+    program.pushOp(ReflectionOp.never);
+  }
+
+  protected parseDefaultValue(kind: ts.SyntaxKind, defaultValue: string): any {
+    switch (kind) {
+      case SyntaxKind.NumberKeyword: {
+        return Number.isInteger(Number.parseFloat(defaultValue))
+          ? Number.parseInt(defaultValue)
+          : Number.parseFloat(defaultValue);
+      }
+      case SyntaxKind.BooleanKeyword: {
+        return Boolean(defaultValue?.trim());
+      }
+      case SyntaxKind.BigIntKeyword: {
+        return Number.parseInt(defaultValue);
+      }
+      case SyntaxKind.ObjectKeyword: {
+        return JSON.parse(defaultValue);
+      }
+      case SyntaxKind.NullKeyword: {
+        return null;
+      }
+      case SyntaxKind.TrueKeyword: {
+        return true;
+      }
+      case SyntaxKind.FalseKeyword: {
+        return false;
+      }
+      case SyntaxKind.UndefinedKeyword: {
+        return undefined;
+      }
+      case SyntaxKind.StringLiteral:
+      case SyntaxKind.StringKeyword:
+      default: {
+        if (defaultValue?.trim().toLowerCase() === "false") {
+          return false;
+        } else if (defaultValue?.trim().toLowerCase() === "true") {
+          return true;
+        }
 
-    /**
-     *
-     * Each pushFrame() call needs a popFrame() call.
-     */
-    pushFrame(implicit: boolean = false) {
-        if (!implicit) this.pushOp(ReflectionOp.frame);
-        const opIndex = this.activeCoRoutines.length ? this.activeCoRoutines[this.activeCoRoutines.length - 1].ops.length : this.ops.length;
-        this.frame = { previous: this.frame, variables: [], opIndex };
-        return this.frame;
+        return defaultValue;
+      }
     }
+  }
 
-    findConditionalFrame() {
-        return findConditionalFrame(this.frame);
-    }
+  protected parseTagReflection(
+    node: Node | Declaration | ClassDeclaration | ClassExpression
+  ): TagsReflectionStruct {
+    const tags = {} as TagsReflectionStruct;
 
-    /**
-     * Remove stack without doing it as OP in the processor. Some other command calls popFrame() already, which makes popFrameImplicit() an implicit popFrame.
-     * e.g. union, class, etc. all call popFrame(). the current CompilerProgram needs to be aware of that, which this function is for.
-     */
-    popFrameImplicit() {
-        if (this.frame.previous) this.frame = this.frame.previous;
-    }
+    tags.hidden = extractJSDocBoolean(this.sourceFile, node, "hidden");
+    tags.ignore = extractJSDocBoolean(this.sourceFile, node, "ignore");
+    tags.internal = extractJSDocBoolean(this.sourceFile, node, "internal");
+    tags.alias = extractJSDocArray(this.sourceFile, node, "alias");
+    tags.permission = extractJSDocArray(this.sourceFile, node, "permission");
+    tags.domain = extractJSDocAttribute(this.sourceFile, node, "domain");
 
-    moveFrame() {
-        this.pushOp(ReflectionOp.moveFrame);
-        if (this.frame.previous) this.frame = this.frame.previous;
+    if (this.getReflectionConfig(this.sourceFile).level === "verbose") {
+      tags.title = extractJSDocAttribute(this.sourceFile, node, "title");
     }
 
-    pushVariable(name: string, frame: Frame = this.frame): number {
-        this.pushOpAtFrame(frame, ReflectionOp.var);
-        frame.variables.push({
-            index: frame.variables.length,
-            name,
-        });
-        return frame.variables.length - 1;
-    }
+    return tags;
+  }
 
-    pushTemplateParameter(name: string, withDefault: boolean = false): number {
-        this.pushOp(withDefault ? ReflectionOp.typeParameterDefault : ReflectionOp.typeParameter, this.findOrAddStackEntry(name));
-        this.frame.variables.push({
-            index: this.frame.variables.length,
-            name,
-        });
-        return this.frame.variables.length - 1;
-    }
+  protected extractTagReflections(program: CompilerProgram, node?: Node): void {
+    if (!node) return;
 
-    findVariable(name: string, frame = this.frame) {
-        return findVariable(frame, name);
-    }
-}
+    const tags = this.parseTagReflection(node);
+    if (
+      Object.entries(tags).filter(
+        ([, value]) =>
+          value !== undefined &&
+          (!Array.isArray(value) || value.length > 0) &&
+          (typeof value !== "string" ||
+            value?.trim().replace(/^"/gm, "").replace(/"$/gm, ""))
+      ).length > 0
+    ) {
+      program.pushOp(
+        ReflectionOp.tags,
+        program.findOrAddStackEntry(
+          this.f.createObjectLiteralExpression(
+            this.f.createNodeArray(
+              Object.entries(tags)
+                .filter(
+                  ([, value]) =>
+                    value !== undefined &&
+                    (!Array.isArray(value) || value.length > 0) &&
+                    (typeof value !== "string" ||
+                      value.trim().replace(/^"/gm, "").replace(/"$/gm, ""))
+                )
+                .map(([key, value]) => {
+                  return this.f.createPropertyAssignment(
+                    key,
+                    Array.isArray(value)
+                      ? this.f.createArrayLiteralExpression(
+                          value.map(item => this.valueToExpression(item))
+                        )
+                      : typeof value === "boolean"
+                        ? value
+                          ? this.f.createTrue()
+                          : this.f.createFalse()
+                        : this.valueToExpression(value)
+                  );
+                })
+            )
+          )
+        )
+      );
+    }
+  }
+
+  protected extractDefaultValueReflection(
+    program: CompilerProgram,
+    node?: Node
+  ): void {
+    if (!node) return;
+
+    let defaultValue = extractJSDocAttribute(
+      this.sourceFile,
+      node,
+      "defaultValue"
+    );
+    if (!defaultValue) {
+      defaultValue = extractJSDocAttribute(this.sourceFile, node, "default");
+    }
+    if (defaultValue) {
+      program.pushOp(
+        ReflectionOp.defaultValue,
+        program.findOrAddStackEntry(
+          this.parseDefaultValue(
+            (node.kind === SyntaxKind.ClassDeclaration ||
+            node.kind === SyntaxKind.ClassExpression
+              ? (node as ClassDeclaration | ClassExpression)?.name?.parent?.kind
+              : node.kind === SyntaxKind.PropertySignature ||
+                  node.kind === SyntaxKind.PropertyDeclaration
+                ? (node as PropertySignature | PropertyDeclaration).type?.kind
+                : node.kind) || SyntaxKind.StringKeyword,
+            defaultValue.trim().replace(/^"/gm, "").replace(/"$/gm, "")
+          )
+        )
+      );
+    }
+  }
+
+  protected extractDescriptionReflection(
+    program: CompilerProgram,
+    node?: Node
+  ): void {
+    if (!node || this.getReflectionConfig(this.sourceFile).level !== "verbose")
+      return;
+
+    const description = extractJSDocAttribute(
+      this.sourceFile,
+      node,
+      "description"
+    );
+    if (description) {
+      program.pushOp(
+        ReflectionOp.description,
+        program.findOrAddStackEntry(
+          description.trim().replace(/^"/gm, "").replace(/"$/gm, "")
+        )
+      );
+    }
+  }
+
+  protected extractPackStructOfType(
+    node: Node | Declaration | ClassDeclaration | ClassExpression,
+    program: CompilerProgram
+  ): void {
+    if (isParenthesizedTypeNode(node))
+      return this.extractPackStructOfType(node.type, program);
+
+    switch (node.kind) {
+      case SyntaxKind.StringKeyword: {
+        program.pushOp(ReflectionOp.string);
+        break;
+      }
+      case SyntaxKind.NumberKeyword: {
+        program.pushOp(ReflectionOp.number);
+        break;
+      }
+      case SyntaxKind.BooleanKeyword: {
+        program.pushOp(ReflectionOp.boolean);
+        break;
+      }
+      case SyntaxKind.BigIntKeyword: {
+        program.pushOp(ReflectionOp.bigint);
+        break;
+      }
+      case SyntaxKind.VoidKeyword: {
+        program.pushOp(ReflectionOp.void);
+        break;
+      }
+      case SyntaxKind.UnknownKeyword: {
+        program.pushOp(ReflectionOp.unknown);
+        break;
+      }
+      case SyntaxKind.ObjectKeyword: {
+        program.pushOp(ReflectionOp.object);
+        break;
+      }
+      case SyntaxKind.SymbolKeyword: {
+        program.pushOp(ReflectionOp.symbol);
+        break;
+      }
+      case SyntaxKind.NullKeyword: {
+        program.pushOp(ReflectionOp.null);
+        break;
+      }
+      case SyntaxKind.NeverKeyword: {
+        program.pushOp(ReflectionOp.never);
+        break;
+      }
+      case SyntaxKind.AnyKeyword: {
+        program.pushOp(ReflectionOp.any);
+        break;
+      }
+      case SyntaxKind.UndefinedKeyword: {
+        program.pushOp(ReflectionOp.undefined);
+        break;
+      }
+      case SyntaxKind.TrueKeyword: {
+        program.pushOp(
+          ReflectionOp.literal,
+          program.pushStack(this.f.createTrue())
+        );
+        break;
+      }
+      case SyntaxKind.FalseKeyword: {
+        program.pushOp(
+          ReflectionOp.literal,
+          program.pushStack(this.f.createFalse())
+        );
+        break;
+      }
+      case SyntaxKind.ClassDeclaration:
+      case SyntaxKind.ClassExpression: {
+        //TypeScript does not narrow types down
+        const narrowed = node as ClassDeclaration | ClassExpression;
+        //class nodes have always their own program, so the start is always fresh, means we don't need a frame
+
+        if (node) {
+          const members: ClassElement[] = [];
+
+          if (narrowed.typeParameters) {
+            for (const typeParameter of narrowed.typeParameters) {
+              const name = getNameAsString(typeParameter.name);
+              if (typeParameter.default) {
+                //push default on the stack
+                this.extractPackStructOfType(typeParameter.default, program);
+              }
+              program.pushTemplateParameter(name, !!typeParameter.default);
+            }
+          }
+
+          if (narrowed.heritageClauses) {
+            for (const heritage of narrowed.heritageClauses) {
+              if (heritage.token === SyntaxKind.ExtendsKeyword) {
+                for (const extendType of heritage.types) {
+                  program.pushFrame();
+                  if (extendType.typeArguments) {
+                    for (const typeArgument of extendType.typeArguments) {
+                      this.extractPackStructOfType(typeArgument, program);
+                    }
+                  }
+                  const index = program.pushStack(
+                    this.f.createArrowFunction(
+                      undefined,
+                      undefined,
+                      [],
+                      undefined,
+                      undefined,
+                      this.nodeConverter.toExpression(extendType.expression)
+                    )
+                  );
+                  program.pushOp(ReflectionOp.classReference, index);
+                  program.popFrameImplicit();
+                }
+              }
+            }
+          }
+
+          for (const member of narrowed.members) {
+            const name = getNameAsString(member.name);
+            if (name) {
+              const has = members.some(v => getNameAsString(v.name) === name);
+              if (has) continue;
+            }
+            members.push(member);
+
+            this.extractPackStructOfType(member, program);
+          }
+
+          program.pushOp(ReflectionOp.class);
+
+          if (narrowed.heritageClauses) {
+            for (const heritageClause of narrowed.heritageClauses) {
+              if (heritageClause.token === SyntaxKind.ExtendsKeyword) {
+                //extends only supports extending one class
+                const first = heritageClause.types[0];
+                if (
+                  isExpressionWithTypeArguments(first) &&
+                  first.typeArguments
+                ) {
+                  for (const typeArgument of first.typeArguments) {
+                    this.extractPackStructOfType(typeArgument, program);
+                  }
+                  program.pushOp(
+                    ReflectionOp.classExtends,
+                    first.typeArguments.length
+                  );
+                }
+              } else if (
+                heritageClause.token === SyntaxKind.ImplementsKeyword
+              ) {
+                for (const type of heritageClause.types) {
+                  this.extractPackStructOfTypeReference(type, program);
+                }
+                program.pushOp(
+                  ReflectionOp.implements,
+                  heritageClause.types.length
+                );
+              }
+            }
+          }
 
-function getAssignTypeExpression(call: Expression): Expression | undefined {
-    if (isParenthesizedExpression(call) && isCallExpression(call.expression)) {
-        call = call.expression;
-    }
+          if (narrowed.name)
+            this.resolveTypeName(getIdentifierName(narrowed.name), program);
 
-    if (isCallExpression(call) && isIdentifier(call.expression) && getIdentifierName(call.expression) === '__assignType' && call.arguments.length > 0) {
-        return call.arguments[0];
-    }
+          // for whatever reason: narrowed.name.parent !== narrowed. narrowed.name.parent has jsDoc, narrowed.name not.
+          this.extractDefaultValueReflection(program, narrowed.name?.parent);
+          this.extractDescriptionReflection(program, narrowed.name?.parent);
+          this.extractTagReflections(program, narrowed.name?.parent);
+        }
 
-    return;
-}
+        break;
+      }
+      case SyntaxKind.IntersectionType: {
+        //TypeScript does not narrow types down
+        const narrowed = node as IntersectionTypeNode;
+        program.pushFrame();
 
-function getReceiveTypeParameter(type: TypeNode): TypeReferenceNode | undefined {
-    if (isUnionTypeNode(type)) {
-        for (const t of type.types) {
-            const rfn = getReceiveTypeParameter(t);
-            if (rfn) return rfn;
+        for (const type of narrowed.types) {
+          this.extractPackStructOfType(type, program);
         }
-    } else if (isTypeReferenceNode(type) && isIdentifier(type.typeName)
-        && getIdentifierName(type.typeName) === 'ReceiveType' && !!type.typeArguments
-        && type.typeArguments.length === 1) return type;
 
-    return;
-}
+        program.pushOp(ReflectionOp.intersection);
+        program.popFrameImplicit();
+        break;
+      }
+      case SyntaxKind.MappedType: {
+        //TypeScript does not narrow types down
+        const narrowed = node as MappedTypeNode;
 
-export class Cache {
-    resolver: ReflectionConfigCache = {};
-    sourceFiles: { [fileName: string]: SourceFile } = {};
+        //<Type>{[Property in keyof Type]: boolean;};
+        program.pushFrame();
+        program.pushVariable(getIdentifierName(narrowed.typeParameter.name));
+
+        const constraint = getEffectiveConstraintOfTypeParameter(
+          narrowed.typeParameter
+        );
+        if (constraint) {
+          this.extractPackStructOfType(constraint, program);
+        } else {
+          program.pushOp(ReflectionOp.never);
+        }
 
-    globalSourceFiles?: SourceFile[];
+        let modifier = 0;
+        if (narrowed.questionToken) {
+          if (narrowed.questionToken.kind === SyntaxKind.QuestionToken) {
+            modifier |= MappedModifier.optional;
+          }
+          if (narrowed.questionToken.kind === SyntaxKind.MinusToken) {
+            modifier |= MappedModifier.removeOptional;
+          }
+        }
+        if (narrowed.readonlyToken) {
+          if (narrowed.readonlyToken.kind === SyntaxKind.ReadonlyKeyword) {
+            modifier |= MappedModifier.readonly;
+          }
+          if (narrowed.readonlyToken.kind === SyntaxKind.MinusToken) {
+            modifier |= MappedModifier.removeReadonly;
+          }
+        }
+        program.pushCoRoutine();
+        if (narrowed.nameType) program.pushFrame();
+        if (narrowed.type) {
+          this.extractPackStructOfType(narrowed.type, program);
+        } else {
+          program.pushOp(ReflectionOp.never);
+        }
+        if (narrowed.nameType) {
+          this.extractPackStructOfType(narrowed.nameType, program);
+          program.pushOp(ReflectionOp.tuple);
+          program.popFrameImplicit();
+        }
+        const coRoutineIndex = program.popCoRoutine();
 
-    /**
-     * Signals the cache to check if it needs to be cleared.
-     */
-    tick() {
-        if (Object.keys(this.sourceFiles).length > 300) {
-            this.sourceFiles = {};
+        if (narrowed.nameType) {
+          program.pushOp(ReflectionOp.mappedType2, coRoutineIndex, modifier);
+        } else {
+          program.pushOp(ReflectionOp.mappedType, coRoutineIndex, modifier);
         }
-    }
-}
 
-/**
- * Read the TypeScript AST and generate pack struct (instructions + pre-defined stack).
- *
- * This transformer extracts type and add the encoded (so its small and low overhead) at classes and functions as property.
- *
- * Deepkit/type can then extract and decode them on-demand.
- */
-export class ReflectionTransformer implements CustomTransformer {
-    sourceFile!: SourceFile;
-    protected f: NodeFactory;
+        program.popFrameImplicit();
+
+        break;
+      }
+      case SyntaxKind.TypeAliasDeclaration: {
+        let narrowed = node as TypeAliasDeclaration;
+
+        if (
+          program.sourceFile &&
+          getNameAsString(narrowed.name) === "TypeAnnotation"
+        ) {
+          const attribute = extractJSDocAttribute(
+            program.sourceFile,
+            narrowed,
+            "intrinsic"
+          );
+          if (attribute !== undefined) {
+            // TypeAnnotation<T> is like an intrinsic type, so we don't need to resolve it
+            narrowed = this.intrinsicMetaDeclaration;
+          }
+        }
 
-    protected embedAssignType: boolean = false;
+        this.extractPackStructOfType(narrowed.type, program);
+        if (narrowed.name)
+          this.resolveTypeName(getIdentifierName(narrowed.name), program);
+        break;
+      }
+      case SyntaxKind.TypeLiteral:
+      case SyntaxKind.InterfaceDeclaration: {
+        //TypeScript does not narrow types down
+        const narrowed = node as TypeLiteralNode | InterfaceDeclaration;
+        let descriptionNode: Node = narrowed;
+        program.pushFrame();
+
+        //first all extend expressions
+        if (isInterfaceDeclaration(narrowed) && narrowed.heritageClauses) {
+          for (const heritage of narrowed.heritageClauses) {
+            if (heritage.token === SyntaxKind.ExtendsKeyword) {
+              for (const extendType of heritage.types) {
+                this.extractPackStructOfTypeReference(extendType, program);
+              }
+            }
+          }
+        }
 
-    /**
-     * Types added to this map will get a type program directly under it.
-     * This is for types used in the very same file.
-     */
-    protected compileDeclarations = new Map<
-        TypeAliasDeclaration | InterfaceDeclaration | EnumDeclaration,
-        { name: EntityName, sourceFile: SourceFile, compiled?: Statement[] }
-    >();
+        for (const member of narrowed.members) {
+          this.extractPackStructOfType(member, program);
+        }
 
-    /**
-     * Types added to this map will get a type program at the top root level of the program.
-     * This is for imported types, which need to be inlined into the current file, as we do not emit type imports (TS will omit them).
-     */
-    protected embedDeclarations = new Map<Node, { name: EntityName, sourceFile?: SourceFile }>();
+        program.pushOp(ReflectionOp.objectLiteral);
+        if (isTypeLiteralNode(narrowed)) {
+          descriptionNode = narrowed.parent;
+        }
 
-    /**
-     * When a node was embedded or compiled (from the maps above), we store it here to know to not add it again.
-     */
-    protected compiledDeclarations = new Set<Node>();
+        this.extractDefaultValueReflection(program, descriptionNode);
+        this.extractDescriptionReflection(program, descriptionNode);
+        this.extractTagReflections(program, descriptionNode);
+
+        if (isInterfaceDeclaration(narrowed)) {
+          if (narrowed.name)
+            this.resolveTypeName(getIdentifierName(narrowed.name), program);
+        }
+        program.popFrameImplicit();
+
+        break;
+      }
+      case SyntaxKind.TypeReference: {
+        this.extractPackStructOfTypeReference(
+          node as TypeReferenceNode,
+          program
+        );
+        break;
+      }
+      case SyntaxKind.ArrayType: {
+        this.extractPackStructOfType(
+          (node as ArrayTypeNode).elementType,
+          program
+        );
+        program.pushOp(ReflectionOp.array);
+        break;
+      }
+      case SyntaxKind.RestType: {
+        let type = (node as RestTypeNode).type;
+        if (isArrayTypeNode(type)) {
+          type = type.elementType;
+        }
+        this.extractPackStructOfType(type, program);
+        program.pushOp(ReflectionOp.rest);
+        break;
+      }
+      case SyntaxKind.TupleType: {
+        program.pushFrame();
+        for (const element of (node as TupleTypeNode).elements) {
+          if (isOptionalTypeNode(element)) {
+            this.extractPackStructOfType(element.type, program);
+            program.pushOp(ReflectionOp.tupleMember);
+            program.pushOp(ReflectionOp.optional);
+          } else if (isNamedTupleMember(element)) {
+            if (element.dotDotDotToken) {
+              let type = element.type;
+              if (isArrayTypeNode(type)) {
+                type = type.elementType;
+              }
+              this.extractPackStructOfType(type, program);
+              program.pushOp(ReflectionOp.rest);
+            } else {
+              this.extractPackStructOfType(element.type, program);
+            }
+            const index = program.findOrAddStackEntry(
+              getIdentifierName(element.name)
+            );
+            program.pushOp(ReflectionOp.namedTupleMember, index);
+            if (element.questionToken) {
+              program.pushOp(ReflectionOp.optional);
+            }
+          } else {
+            this.extractPackStructOfType(element, program);
+          }
+        }
+        program.pushOp(ReflectionOp.tuple);
+        program.popFrameImplicit();
+        break;
+      }
+      case SyntaxKind.PropertySignature: {
+        //TypeScript does not narrow types down
+        const narrowed = node as PropertySignature;
+        if (narrowed.type) {
+          this.extractPackStructOfType(narrowed.type, program);
+          const name = getPropertyName(this.f, narrowed.name);
+          program.pushOp(
+            ReflectionOp.propertySignature,
+            program.findOrAddStackEntry(name)
+          );
+          if (narrowed.questionToken) {
+            program.pushOp(ReflectionOp.optional);
+          }
+
+          if (hasModifier(narrowed, SyntaxKind.ReadonlyKeyword))
+            program.pushOp(ReflectionOp.readonly);
+          else {
+            const readonly = extractJSDocBoolean(
+              this.sourceFile,
+              narrowed,
+              "readonly"
+            );
+            if (readonly) {
+              program.pushOp(ReflectionOp.readonly);
+            }
+          }
 
-    protected addImports: { from: Expression, identifier: Identifier }[] = [];
+          this.extractDefaultValueReflection(program, narrowed);
+          this.extractDescriptionReflection(program, narrowed);
+          this.extractTagReflections(program, narrowed);
+        } else {
+          program.pushOp(ReflectionOp.unknown);
+        }
+        break;
+      }
+      case SyntaxKind.PropertyDeclaration: {
+        //TypeScript does not narrow types down
+        const narrowed = node as PropertyDeclaration;
+
+        // if the property was explicitly marked as `@reflection no`, we ignore it
+        if (
+          false === this.getExplicitReflectionMode(program.sourceFile, narrowed)
+        )
+          return;
+
+        if (narrowed.type) {
+          this.extractPackStructOfType(narrowed.type, program);
+        } else if (narrowed.initializer) {
+          this.extractPackStructOfExpression(narrowed.initializer, program);
+        } else {
+          program.pushOp(ReflectionOp.unknown);
+        }
 
-    protected nodeConverter: NodeConverter;
-    protected typeChecker?: TypeChecker;
-    protected resolver: Resolver;
-    protected host: CompilerHost;
-    protected overriddenHost = false;
-    protected overriddenConfigResolver?: ConfigResolver;
+        program.pushOp(
+          ReflectionOp.property,
+          program.findOrAddStackEntry(getPropertyName(this.f, narrowed.name))
+        );
 
-    protected compilerOptions: CompilerOptions;
+        if (narrowed.questionToken) program.pushOp(ReflectionOp.optional);
 
-    /**
-     * When a deep call expression was found a script-wide variable is necessary
-     * as temporary storage.
-     */
-    protected tempResultIdentifier?: Identifier;
-    protected parseConfigHost: ParseConfigHost;
-    protected intrinsicMetaDeclaration: TypeAliasDeclaration;
+        if (hasModifier(narrowed, SyntaxKind.ReadonlyKeyword)) {
+          program.pushOp(ReflectionOp.readonly);
+        } else {
+          const readonly = extractJSDocBoolean(
+            this.sourceFile,
+            narrowed,
+            "readonly"
+          );
+          if (readonly) {
+            program.pushOp(ReflectionOp.readonly);
+          }
+        }
 
-    constructor(
-        protected context: TransformationContext,
-        protected cache: Cache = new Cache,
-    ) {
-        this.f = context.factory;
-        this.nodeConverter = new NodeConverter(this.f);
-        // It is important to not have undefined values like {paths: undefined} because it would override the read tsconfig.json.
-        // Important to create a copy since we will modify it.
-        this.compilerOptions = { ...filterUndefined(context.getCompilerOptions()) };
-        // compilerHost has no internal cache and is cheap to build, so no cache needed.
-        // Resolver loads SourceFile which has cache implemented.
-        this.host = createCompilerHost(this.compilerOptions);
-        this.resolver = new Resolver(this.compilerOptions, this.host, this.cache.sourceFiles);
-        this.parseConfigHost = {
-            useCaseSensitiveFileNames: true,
-            fileExists: (path: string) => this.host.fileExists(path),
-            readFile: (path: string) => this.host.readFile(path),
-            readDirectory: (path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number) => {
-                if (!this.host.readDirectory) return [];
-                return this.host.readDirectory(path, extensions || [], exclude, include || [], depth);
-            },
-        };
-
-        {
-            // TypeAnnotation<T, Options> = { __meta?: never & [T, Options] }
-            const T = this.f.createIdentifier('T');
-            const Options = this.f.createIdentifier('Options');
-            this.intrinsicMetaDeclaration = this.f.createTypeAliasDeclaration(
-                [],
-                'TypeAnnotation',
-                [
-                    this.f.createTypeParameterDeclaration([], T),
-                    this.f.createTypeParameterDeclaration([], Options, undefined, this.f.createTypeReferenceNode('never')),
-                ],
-                this.f.createTypeLiteralNode([
-                    this.f.createPropertySignature(
-                        undefined,
-                        '__meta',
-                        this.f.createToken(SyntaxKind.QuestionToken),
-                        this.f.createIntersectionTypeNode(
-                            [
-                                this.f.createTypeReferenceNode('never'),
-                                this.f.createTupleTypeNode([
-                                    this.f.createTypeReferenceNode(T),
-                                    this.f.createTypeReferenceNode(Options),
-                                ]),
-                            ],
-                        ),
-                    ),
-                ]),
-            );
+        if (hasModifier(narrowed, SyntaxKind.PrivateKeyword))
+          program.pushOp(ReflectionOp.private);
+        if (hasModifier(narrowed, SyntaxKind.ProtectedKeyword))
+          program.pushOp(ReflectionOp.protected);
+        if (hasModifier(narrowed, SyntaxKind.AbstractKeyword))
+          program.pushOp(ReflectionOp.abstract);
+        if (hasModifier(narrowed, SyntaxKind.StaticKeyword))
+          program.pushOp(ReflectionOp.static);
+
+        if (narrowed.initializer) {
+          //important to use Function, since it will be called using a different `this`
+          program.pushOp(
+            ReflectionOp.defaultValue,
+            program.findOrAddStackEntry(
+              this.f.createFunctionExpression(
+                undefined,
+                undefined,
+                undefined,
+                undefined,
+                undefined,
+                undefined,
+                this.f.createBlock([
+                  this.f.createReturnStatement(narrowed.initializer)
+                ])
+              )
+            )
+          );
+        } else {
+          this.extractDefaultValueReflection(program, narrowed);
         }
-    }
 
-    forHost(host: CompilerHost): this {
-        this.host = host;
-        this.resolver.host = host;
-        this.overriddenHost = true;
-        return this;
-    }
+        this.extractDescriptionReflection(program, narrowed);
+        this.extractTagReflections(program, narrowed);
+
+        break;
+      }
+      case SyntaxKind.ConditionalType: {
+        //TypeScript does not narrow types down
+        const narrowed = node as ConditionalTypeNode;
+
+        // Depending on whether this a distributive conditional type or not, it has to be moved to its own function
+        // my understanding of when a distributive conditional type is used is:
+        // 1. the `checkType` is a simple identifier (just `T`, no `[T]`, no `T | x`, no `{a: T}`, etc)
+        const distributiveOverIdentifier: Identifier | undefined =
+          isTypeReferenceNode(narrowed.checkType) &&
+          isIdentifier(narrowed.checkType.typeName)
+            ? narrowed.checkType.typeName
+            : undefined;
+
+        if (distributiveOverIdentifier) {
+          program.pushFrame();
+          //first we add to the stack the origin type we distribute over.
+          this.extractPackStructOfType(narrowed.checkType, program);
+
+          //since the distributive conditional type is a loop that changes only the found `T`, it is necessary to add that as variable,
+          //so call convention can take over.
+          program.pushVariable(getIdentifierName(distributiveOverIdentifier));
+          program.pushCoRoutine();
+        }
 
-    withReflection(config: ReflectionConfig): this {
-        const match = (path: string) => {
-            const mode = reflectionModeMatcher(config, path);
-            return { mode, tsConfigPath: '' };
-        };
-        const configResolver: ResolvedConfig = { ...config, path: '', mergeStrategy: 'replace', compilerOptions: this.compilerOptions };
-        this.overriddenConfigResolver = { config: configResolver, match };
-        return this;
-    }
+        program.pushConditionalFrame(); //gets its own frame for `infer T` ops. all infer variables will be registered in this frame
+        this.extractPackStructOfType(narrowed.checkType, program);
+        this.extractPackStructOfType(narrowed.extendsType, program);
 
-    transformBundle(node: Bundle): Bundle {
-        return node;
-    }
+        program.pushOp(ReflectionOp.extends);
 
-    getTempResultIdentifier(): Identifier {
-        if (this.tempResultIdentifier) return this.tempResultIdentifier;
+        program.pushCoRoutine();
+        this.extractPackStructOfType(narrowed.trueType, program);
+        const trueProgram = program.popCoRoutine();
 
-        const locals = isNodeWithLocals(this.sourceFile) ? this.sourceFile.locals : undefined;
+        program.pushCoRoutine();
+        this.extractPackStructOfType(narrowed.falseType, program);
+        const falseProgram = program.popCoRoutine();
 
-        if (locals) {
-            let found = 'Ωr';
-            for (let i = 0; ; i++) {
-                found = 'Ωr' + (i ? i : '');
-                if (!locals.has(escapeLeadingUnderscores(found))) break;
-            }
-            this.tempResultIdentifier = this.f.createIdentifier(found);
+        program.pushOp(ReflectionOp.jumpCondition, trueProgram, falseProgram);
+        program.moveFrame(); //pops frame
+
+        if (distributiveOverIdentifier) {
+          const coRoutineIndex = program.popCoRoutine();
+          program.pushOp(ReflectionOp.distribute, coRoutineIndex);
+          program.popFrameImplicit();
+        }
+        break;
+      }
+      case SyntaxKind.InferType: {
+        //TypeScript does not narrow types down
+        const narrowed = node as InferTypeNode;
+
+        const frame = program.findConditionalFrame();
+        if (frame) {
+          const typeParameterName = getIdentifierName(
+            narrowed.typeParameter.name
+          );
+          let variable = program.findVariable(typeParameterName);
+          if (!variable) {
+            program.pushVariable(typeParameterName, frame);
+            variable = program.findVariable(typeParameterName);
+            if (!variable)
+              throw new Error("Could not find inserted infer variable");
+          }
+          program.pushOp(
+            ReflectionOp.infer,
+            variable.frameOffset,
+            variable.stackIndex
+          );
         } else {
-            this.tempResultIdentifier = this.f.createIdentifier('Ωr');
+          program.pushOp(ReflectionOp.never);
+        }
+        break;
+      }
+      case SyntaxKind.MethodSignature:
+      case SyntaxKind.MethodDeclaration:
+      case SyntaxKind.Constructor:
+      case SyntaxKind.ArrowFunction:
+      case SyntaxKind.FunctionExpression:
+      case SyntaxKind.ConstructSignature:
+      case SyntaxKind.ConstructorType:
+      case SyntaxKind.FunctionType:
+      case SyntaxKind.CallSignature:
+      case SyntaxKind.FunctionDeclaration: {
+        //TypeScript does not narrow types down
+        const narrowed = node as
+          | MethodSignature
+          | MethodDeclaration
+          | CallSignatureDeclaration
+          | ConstructorTypeNode
+          | ConstructSignatureDeclaration
+          | ConstructorDeclaration
+          | ArrowFunction
+          | FunctionExpression
+          | FunctionTypeNode
+          | FunctionDeclaration;
+
+        // if the function was explicitly marked as `@reflection no`, we ignore it
+        if (
+          false === this.getExplicitReflectionMode(program.sourceFile, narrowed)
+        ) {
+          program.pushOp(ReflectionOp.any);
+          return;
         }
-        return this.tempResultIdentifier;
-    }
 
-    protected getConfigResolver(sourceFile: { fileName: string }): ConfigResolver {
-        if (this.overriddenConfigResolver) return this.overriddenConfigResolver;
-        return getConfigResolver(this.cache.resolver, this.parseConfigHost, this.compilerOptions, sourceFile);
-    }
+        const name = isCallSignatureDeclaration(node)
+          ? ""
+          : isConstructorTypeNode(narrowed) ||
+              isConstructSignatureDeclaration(node)
+            ? "new"
+            : isConstructorDeclaration(narrowed)
+              ? "constructor"
+              : getPropertyName(this.f, narrowed.name);
+        if (!narrowed.type && narrowed.parameters.length === 0 && !name) return;
+
+        program.pushFrame();
+        for (let i = 0; i < narrowed.parameters.length; i++) {
+          const parameter = narrowed.parameters[i];
+          const parameterName = isIdentifier(parameter.name)
+            ? getNameAsString(parameter.name)
+            : "param" + i;
+
+          const type = parameter.type
+            ? parameter.dotDotDotToken && isArrayTypeNode(parameter.type)
+              ? parameter.type.elementType
+              : parameter.type
+            : undefined;
+
+          if (type) {
+            this.extractPackStructOfType(type, program);
+          } else {
+            program.pushOp(ReflectionOp.any);
+          }
+
+          if (parameter.dotDotDotToken) {
+            program.pushOp(ReflectionOp.rest);
+          }
+
+          program.pushOp(
+            ReflectionOp.parameter,
+            program.findOrAddStackEntry(parameterName)
+          );
+
+          if (parameter.questionToken) program.pushOp(ReflectionOp.optional);
+          if (hasModifier(parameter, SyntaxKind.PublicKeyword))
+            program.pushOp(ReflectionOp.public);
+          if (hasModifier(parameter, SyntaxKind.PrivateKeyword))
+            program.pushOp(ReflectionOp.private);
+          if (hasModifier(parameter, SyntaxKind.ProtectedKeyword))
+            program.pushOp(ReflectionOp.protected);
+
+          if (hasModifier(parameter, SyntaxKind.ReadonlyKeyword))
+            program.pushOp(ReflectionOp.readonly);
+          else {
+            let readonly = extractJSDocBoolean(
+              this.sourceFile,
+              parameter,
+              "readonly"
+            );
+            if (readonly) {
+              program.pushOp(ReflectionOp.readonly);
+            } else {
+              readonly = extractJSDocBoolean(
+                this.sourceFile,
+                narrowed,
+                "readonly"
+              );
+              if (readonly) {
+                program.pushOp(ReflectionOp.readonly);
+              }
+            }
+          }
+
+          if (
+            parameter.initializer &&
+            parameter.type &&
+            !getReceiveTypeParameter(parameter.type)
+          ) {
+            program.pushOp(
+              ReflectionOp.defaultValue,
+              program.findOrAddStackEntry(
+                this.f.createArrowFunction(
+                  undefined,
+                  undefined,
+                  [],
+                  undefined,
+                  undefined,
+                  parameter.initializer
+                )
+              )
+            );
+          } else {
+            this.extractDefaultValueReflection(program, parameter);
+          }
 
-    protected getReflectionConfig(sourceFile: { fileName: string }): MatchResult {
-        const configResolver = this.getConfigResolver(sourceFile);
-        return configResolver.match(sourceFile.fileName);
-    }
+          this.extractDescriptionReflection(program, parameter);
+        }
 
-    protected isWithReflection(sourceFile: SourceFile | undefined, node: Node & { __deepkitConfig?: ReflectionConfig }): boolean {
-        const mode = this.getExplicitReflectionMode(sourceFile, node);
-        if (mode === false) return false;
-        if (!sourceFile) return true; // intrinsic types are always with reflection
-        const reflection = this.getReflectionConfig(sourceFile);
-        // explicit means reflection needs to be enabled per Node/File via @reflection
-        if (reflection.mode === 'explicit') return mode === true;
-        return reflection.mode === 'default';
-    }
+        if (narrowed.type) {
+          this.extractPackStructOfType(narrowed.type, program);
+        } else {
+          program.pushOp(ReflectionOp.any);
+        }
 
-    transformSourceFile(sourceFile: SourceFile): SourceFile {
-        this.sourceFile = sourceFile;
+        program.pushOp(
+          isCallSignatureDeclaration(node)
+            ? ReflectionOp.callSignature
+            : isMethodSignature(narrowed) ||
+                isConstructSignatureDeclaration(narrowed)
+              ? ReflectionOp.methodSignature
+              : isMethodDeclaration(narrowed) ||
+                  isConstructorDeclaration(narrowed)
+                ? ReflectionOp.method
+                : ReflectionOp.function,
+          program.findOrAddStackEntry(name)
+        );
 
-        //if it's not a TS/TSX file, we do not transform it
-        if (sourceFile.scriptKind !== ScriptKind.TS && sourceFile.scriptKind !== ScriptKind.TSX) return sourceFile;
+        if (isMethodDeclaration(narrowed)) {
+          if (hasModifier(narrowed, SyntaxKind.PrivateKeyword))
+            program.pushOp(ReflectionOp.private);
+          if (hasModifier(narrowed, SyntaxKind.ProtectedKeyword))
+            program.pushOp(ReflectionOp.protected);
+          if (hasModifier(narrowed, SyntaxKind.AbstractKeyword))
+            program.pushOp(ReflectionOp.abstract);
+          if (hasModifier(narrowed, SyntaxKind.StaticKeyword))
+            program.pushOp(ReflectionOp.static);
+        }
 
-        if ((sourceFile as any).deepkitTransformed) return sourceFile;
-        this.embedAssignType = false;
-        this.addImports = [];
+        this.extractDefaultValueReflection(program, narrowed);
+        this.extractDescriptionReflection(program, narrowed);
+        this.extractTagReflections(program, narrowed);
 
-        const start = Date.now();
-        const configResolver = this.getConfigResolver(sourceFile);
-        const reflection = configResolver.match(sourceFile.fileName);
+        program.popFrameImplicit();
 
-        // important to override the compilerOptions with the one from the configResolver
-        // since the one provided by TSC/plugins are not necessarily the full picture.
-        // ConfigResolver resolves the whole config.
-        // Since this.compilerOptions was already passed to Resolver, we update its values by reference.
-        Object.assign(this.compilerOptions, configResolver.config.compilerOptions);
+        break;
+      }
+      case SyntaxKind.LiteralType: {
+        //TypeScript does not narrow types down
+        const narrowed = node as LiteralTypeNode;
 
-        if (reflection.mode === 'never') {
-            debug(`Transform file with reflection=${reflection.mode} took ${Date.now() - start}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || 'none'}.`);
-            return sourceFile;
+        if (narrowed.literal.kind === SyntaxKind.NullKeyword) {
+          program.pushOp(ReflectionOp.null);
+        } else {
+          program.pushOp(
+            ReflectionOp.literal,
+            program.findOrAddStackEntry(narrowed.literal)
+          );
         }
-
-        if (!(sourceFile as any).locals) {
-            //@ts-ignore
-            ts.bindSourceFile(sourceFile, this.compilerOptions);
+        break;
+      }
+      case SyntaxKind.TemplateLiteralType: {
+        //TypeScript does not narrow types down
+        const narrowed = node as TemplateLiteralTypeNode;
+
+        program.pushFrame();
+        if (narrowed.head.rawText) {
+          program.pushOp(
+            ReflectionOp.literal,
+            program.findOrAddStackEntry(narrowed.head.rawText)
+          );
         }
 
-        if (sourceFile.kind !== SyntaxKind.SourceFile) {
-            if ('undefined' === typeof require) {
-                throw new Error(`Invalid TypeScript library imported. SyntaxKind different ${sourceFile.kind} !== ${SyntaxKind.SourceFile}.`);
-            }
-            const path = require.resolve('typescript');
-            throw new Error(`Invalid TypeScript library imported. SyntaxKind different ${sourceFile.kind} !== ${SyntaxKind.SourceFile}. typescript package path: ${path}`);
+        for (const span of narrowed.templateSpans) {
+          this.extractPackStructOfType(span.type, program);
+          if (span.literal.rawText) {
+            program.pushOp(
+              ReflectionOp.literal,
+              program.findOrAddStackEntry(span.literal.rawText)
+            );
+          }
         }
 
-        const visitor = (node: Node): any => {
-            node = visitEachChild(node, visitor, this.context);
+        program.pushOp(ReflectionOp.templateLiteral);
+        program.popFrameImplicit();
 
-            if ((isInterfaceDeclaration(node) || isTypeAliasDeclaration(node) || isEnumDeclaration(node))) {
-                if (this.isWithReflection(sourceFile, node)) {
-                    this.compileDeclarations.set(node, {
-                        name: node.name,
-                        sourceFile: this.sourceFile,
-                    });
-                }
-            }
+        break;
+      }
+      case SyntaxKind.UnionType: {
+        //TypeScript does not narrow types down
+        const narrowed = node as UnionTypeNode;
 
-            if (isMethodDeclaration(node) && node.parent && node.body && isObjectLiteralExpression(node.parent)) {
-                //replace MethodDeclaration with MethodExpression
-                // {add(v: number) {}} => {add: function (v: number) {}}
-                //so that __type can be added.
-                //{default(){}} can not be converted without losing the function name, so we skip that for the moment.
-                let valid = true;
-                if (node.name.kind === SyntaxKind.Identifier && getIdentifierName(node.name) === 'default') valid = false;
-                if (valid) {
-                    const method = this.decorateFunctionExpression(
-                        this.f.createFunctionExpression(
-                            node.modifiers as ReadonlyArray<Modifier>, node.asteriskToken, isIdentifier(node.name) ? node.name : undefined,
-                            node.typeParameters, node.parameters, node.type, node.body,
-                        ),
-                    );
-                    node = this.f.createPropertyAssignment(node.name, method);
-                }
-            }
+        if (narrowed.types.length === 0) {
+          //nothing to emit
+        } else if (narrowed.types.length === 1) {
+          //only emit the type
+          this.extractPackStructOfType(narrowed.types[0], program);
+        } else {
+          program.pushFrame();
 
-            if (isClassDeclaration(node)) {
-                return this.decorateClass(sourceFile, node);
-            } else if (isParameter(node) && node.parent && node.type) {
-                // ReceiveType
-                const typeParameters = isConstructorDeclaration(node.parent) ? node.parent.parent.typeParameters : node.parent.typeParameters;
-                if (!typeParameters) return node;
-
-                const receiveType = getReceiveTypeParameter(node.type);
-                if (receiveType && receiveType.typeArguments) {
-                    const first = receiveType.typeArguments[0];
-                    if (first && isTypeReferenceNode(first) && isIdentifier(first.typeName)) {
-                        const name = getIdentifierName(first.typeName);
-                        //find type parameter position
-                        const index = typeParameters.findIndex(v => getIdentifierName(v.name) === name);
-
-                        let container: Expression = this.f.createIdentifier('globalThis');
-                        if (isArrowFunction(node.parent)) {
-                            const next = this.getArrowFunctionΩPropertyAccessIdentifier(node.parent);
-                            if (!next) return node;
-                            container = next;
-                        } else if ((isFunctionDeclaration(node.parent) || isFunctionExpression(node.parent)) && node.parent.name) {
-                            container = node.parent.name;
-                        } else if (isMethodDeclaration(node.parent) && isIdentifier(node.parent.name)) {
-                            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), node.parent.name);
-                        } else if (isConstructorDeclaration(node.parent)) {
-                            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), 'constructor');
-                        }
-
-                        return this.f.updateParameterDeclaration(node, node.modifiers as ReadonlyArray<Modifier>, node.dotDotDotToken, node.name,
-                            node.questionToken, receiveType, this.f.createElementAccessChain(
-                                this.f.createPropertyAccessExpression(
-                                    container,
-                                    this.f.createIdentifier('Ω'),
-                                ),
-                                this.f.createToken(SyntaxKind.QuestionDotToken),
-                                this.f.createNumericLiteral(index),
-                            ),
-                        );
-                    }
-                }
-            } else if (isClassExpression(node)) {
-                return this.decorateClass(sourceFile, node);
-            } else if (isFunctionExpression(node)) {
-                return this.decorateFunctionExpression(this.injectResetΩ(node));
-            } else if (isFunctionDeclaration(node)) {
-                return this.decorateFunctionDeclaration(this.injectResetΩ(node));
-            } else if (isMethodDeclaration(node) || isConstructorDeclaration(node)) {
-                return this.injectResetΩ(node);
-            } else if (isArrowFunction(node)) {
-                return this.decorateArrowFunction(this.injectResetΩ(node));
-            } else if ((isNewExpression(node) || isCallExpression(node)) && node.typeArguments && node.typeArguments.length > 0) {
-
-                if (isCallExpression(node)) {
-                    const autoTypeFunctions = ['valuesOf', 'propertiesOf', 'typeOf'];
-                    if (isIdentifier(node.expression) && autoTypeFunctions.includes(getIdentifierName(node.expression))) {
-                        const args: Expression[] = [...node.arguments];
-
-                        if (!args.length) {
-                            args.push(this.f.createArrayLiteralExpression());
-                        }
-
-                        // const resolvedType = this.resolveType(node.typeArguments[0]);
-                        const type = this.getTypeOfType(node.typeArguments[0]);
-                        if (!type) return node;
-                        args.push(type);
-
-                        return this.f.updateCallExpression(node, node.expression, node.typeArguments, this.f.createNodeArray(args));
-                    }
-                }
-
-                //put the type argument in FN.Ω
-                const expressionToCheck = getAssignTypeExpression(node.expression) || node.expression;
-                if (isArrowFunction(expressionToCheck)) {
-                    //inline arrow functions are excluded from type passing
-                    return node;
-                }
-
-                const typeExpressions: Expression[] = [];
-                for (const a of node.typeArguments) {
-                    const type = this.getTypeOfType(a);
-                    typeExpressions.push(type || this.f.createIdentifier('undefined'));
-                }
-
-                let container: Expression = this.f.createIdentifier('globalThis');
-                if (isIdentifier(node.expression)) {
-                    container = node.expression;
-                } else if (isPropertyAccessExpression(node.expression)) {
-                    container = node.expression;
-                }
-
-                const assignQ = this.f.createBinaryExpression(
-                    this.f.createPropertyAccessExpression(container, 'Ω'),
-                    this.f.createToken(SyntaxKind.EqualsToken),
-                    this.f.createArrayLiteralExpression(typeExpressions),
-                );
-
-                const update: any = isNewExpression(node) ? this.f.updateNewExpression : this.f.updateCallExpression;
-
-                if (isPropertyAccessExpression(node.expression)) {
-                    //e.g. http.deep.response();
-                    if (isCallExpression(node.expression.expression)) {
-                        //e.g. http.deep().response();
-                        //change to (Ωr = http.deep(), Ωr.response.Ω = [], Ωr).response()
-                        const r = this.getTempResultIdentifier();
-                        const assignQ = this.f.createBinaryExpression(
-                            this.f.createPropertyAccessExpression(
-                                this.f.createPropertyAccessExpression(r, node.expression.name),
-                                'Ω',
-                            ),
-                            this.f.createToken(SyntaxKind.EqualsToken),
-                            this.f.createArrayLiteralExpression(typeExpressions),
-                        );
-
-                        return update(node,
-                            this.f.createPropertyAccessExpression(
-                                this.f.createParenthesizedExpression(this.f.createBinaryExpression(
-                                    this.f.createBinaryExpression(
-                                        this.f.createBinaryExpression(
-                                            r,
-                                            this.f.createToken(ts.SyntaxKind.EqualsToken),
-                                            node.expression.expression,
-                                        ),
-                                        this.f.createToken(ts.SyntaxKind.CommaToken),
-                                        assignQ,
-                                    ),
-                                    this.f.createToken(ts.SyntaxKind.CommaToken),
-                                    r,
-                                )),
-                                node.expression.name,
-                            ),
-                            node.typeArguments,
-                            node.arguments,
-                        );
-
-                    } else if (isParenthesizedExpression(node.expression.expression)) {
-                        //e.g. (http.deep()).response();
-                        //only work necessary when `http.deep()` is using type args and was converted to:
-                        //  (Ω = [], http.deep()).response()
-
-                        //it's a call like (obj.method.Ω = ['a'], obj.method()).method()
-                        //which needs to be converted so that Ω is correctly read by the last call
-                        //(r = (obj.method.Ω = [['a']], obj.method()), obj.method.Ω = [['b']], r).method());
-
-                        const r = this.getTempResultIdentifier();
-                        const assignQ = this.f.createBinaryExpression(
-                            this.f.createPropertyAccessExpression(
-                                this.f.createPropertyAccessExpression(r, node.expression.name),
-                                'Ω',
-                            ),
-                            this.f.createToken(SyntaxKind.EqualsToken),
-                            this.f.createArrayLiteralExpression(typeExpressions),
-                        );
-
-                        const updatedNode = update(
-                            node,
-                            this.f.updatePropertyAccessExpression(
-                                node.expression,
-                                this.f.updateParenthesizedExpression(
-                                    node.expression.expression,
-                                    this.f.createBinaryExpression(
-                                        this.f.createBinaryExpression(
-                                            this.f.createBinaryExpression(
-                                                r,
-                                                this.f.createToken(SyntaxKind.EqualsToken),
-                                                node.expression.expression.expression,
-                                            ),
-                                            this.f.createToken(SyntaxKind.CommaToken),
-                                            assignQ,
-                                        ),
-                                        this.f.createToken(SyntaxKind.CommaToken),
-                                        r,
-                                    ),
-                                ),
-                                node.expression.name,
-                            ),
-                            node.typeArguments,
-                            node.arguments,
-                        );
-
-                        return this.f.createParenthesizedExpression(updatedNode);
-                    } else {
-                        //e.g. http.deep.response();
-                        //nothing to do
-                    }
-                }
-
-                //(fn.Ω = [], call())
-                return this.f.createParenthesizedExpression(this.f.createBinaryExpression(
-                    assignQ,
-                    this.f.createToken(SyntaxKind.CommaToken),
-                    node,
-                ));
-            }
-
-            return node;
-        };
-        this.sourceFile = visitNode(this.sourceFile, visitor);
-
-        const newTopStatements: Statement[] = [];
-
-        while (true) {
-            let allCompiled = true;
-            for (const d of this.compileDeclarations.values()) {
-                if (d.compiled) continue;
-                allCompiled = false;
-                break;
-            }
-
-            if (this.embedDeclarations.size === 0 && allCompiled) break;
-
-            for (const [node, d] of [...this.compileDeclarations.entries()]) {
-                if (d.compiled) continue;
-                d.compiled = this.createProgramVarFromNode(node, d.name, this.sourceFile);
-            }
-
-            if (this.embedDeclarations.size) {
-                for (const node of this.embedDeclarations.keys()) {
-                    this.compiledDeclarations.add(node);
-                }
-                const entries = Array.from(this.embedDeclarations.entries());
-                this.embedDeclarations.clear();
-                for (const [node, d] of entries) {
-                    newTopStatements.push(...this.createProgramVarFromNode(node, d.name, d.sourceFile));
-                }
-            }
-        }
-
-        //externalize type aliases
-        const compileDeclarations = (node: Node): any => {
-            node = visitEachChild(node, compileDeclarations, this.context);
-
-            if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node) || isEnumDeclaration(node))) {
-                const d = this.compileDeclarations.get(node);
-                if (!d) {
-                    return node;
-                }
-                this.compileDeclarations.delete(node);
-                this.compiledDeclarations.add(node);
-                if (d.compiled) {
-                    return [...d.compiled, node];
-                }
-            }
-
-            return node;
-        };
-        this.sourceFile = visitNode(this.sourceFile, compileDeclarations);
-
-        if (this.addImports.length) {
-            const handledIdentifier: string[] = [];
-            for (const imp of this.addImports) {
-                if (handledIdentifier.includes(getIdentifierName(imp.identifier))) continue;
-                handledIdentifier.push(getIdentifierName(imp.identifier));
-                if (this.getModuleType() === 'cjs') {
-                    //var {identifier} = require('./bar')
-                    const test = this.f.createIdentifier(getIdentifierName(imp.identifier));
-                    const variable = this.f.createVariableStatement(undefined, this.f.createVariableDeclarationList([this.f.createVariableDeclaration(
-                        this.f.createObjectBindingPattern([this.f.createBindingElement(undefined, undefined, test)]),
-                        undefined, undefined,
-                        this.f.createCallExpression(this.f.createIdentifier('require'), undefined, [imp.from]),
-                    )], NodeFlags.Const));
-                    const typeDeclWithComment = addSyntheticLeadingComment(
-                        variable,
-                        SyntaxKind.MultiLineCommentTrivia,
-                        '@ts-ignore',
-                        true,
-                    );
-                    newTopStatements.push(typeDeclWithComment);
-                } else {
-                    //import {identifier} from './bar.js'
-                    // import { identifier as identifier } is used to avoid automatic elision of imports (in angular builds for example)
-                    // that's probably a bit unstable.
-                    const specifier = this.f.createImportSpecifier(false, undefined, imp.identifier);
-                    const namedImports = this.f.createNamedImports([specifier]);
-                    const importStatement = this.f.createImportDeclaration(undefined,
-                        this.f.createImportClause(false, undefined, namedImports), imp.from,
-                    );
-                    const typeDeclWithComment = addSyntheticLeadingComment(
-                        importStatement,
-                        SyntaxKind.MultiLineCommentTrivia,
-                        '@ts-ignore',
-                        true,
-                    );
-                    newTopStatements.push(typeDeclWithComment);
-                }
-            }
-        }
-
-        if (this.embedAssignType) {
-            const assignType = this.f.createFunctionDeclaration(
-                undefined,
-                undefined,
-                this.f.createIdentifier('__assignType'),
-                undefined,
-                [
-                    this.f.createParameterDeclaration(
-                        undefined,
-                        undefined,
-                        this.f.createIdentifier('fn'),
-                        undefined,
-                        undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
-                        undefined,
-                    ),
-                    this.f.createParameterDeclaration(
-                        undefined,
-                        undefined,
-                        this.f.createIdentifier('args'),
-                        undefined,
-                        undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
-                        undefined,
-                    ),
-                ],
-                undefined, //this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword),
-                this.f.createBlock(
-                    [
-                        this.f.createExpressionStatement(this.f.createBinaryExpression(
-                            this.f.createPropertyAccessExpression(
-                                this.f.createIdentifier('fn'),
-                                this.f.createIdentifier('__type'),
-                            ),
-                            this.f.createToken(SyntaxKind.EqualsToken),
-                            this.f.createIdentifier('args'),
-                        )),
-                        this.f.createReturnStatement(this.f.createIdentifier('fn')),
-                    ],
-                    true,
-                ),
-            );
-            newTopStatements.push(assignType);
-        }
-
-        if (this.tempResultIdentifier) {
-            newTopStatements.push(
-                this.f.createVariableStatement(
-                    undefined,
-                    this.f.createVariableDeclarationList(
-                        [this.f.createVariableDeclaration(
-                            this.tempResultIdentifier,
-                            undefined,
-                            undefined,
-                            undefined,
-                        )],
-                        ts.NodeFlags.None,
-                    ),
-                ),
-            );
-        }
-
-        if (newTopStatements.length) {
-            // we want to keep "use strict", or "use client", etc at the very top
-            const indexOfFirstLiteralExpression = this.sourceFile.statements.findIndex(v => isExpressionStatement(v) && isStringLiteral(v.expression));
-
-            const newStatements = indexOfFirstLiteralExpression === -1
-                ? [...newTopStatements, ...this.sourceFile.statements]
-                : [
-                    ...this.sourceFile.statements.slice(0, indexOfFirstLiteralExpression + 1),
-                    ...newTopStatements,
-                    ...this.sourceFile.statements.slice(indexOfFirstLiteralExpression + 1),
-                ];
-            this.sourceFile = this.f.updateSourceFile(this.sourceFile, newStatements);
-            // this.sourceFile = this.f.updateSourceFile(this.sourceFile, [...newTopStatements, ...this.sourceFile.statements]);
-        }
-
-        // console.log(createPrinter().printNode(EmitHint.SourceFile, this.sourceFile, this.sourceFile));
-        const took = Date.now() - start;
-        debug(`Transform file with reflection=${reflection.mode} took ${took}ms (${this.getModuleType()}) ${sourceFile.fileName} via config ${reflection.tsConfigPath || 'none'}.`);
-        (this.sourceFile as any).deepkitTransformed = true;
-        return this.sourceFile;
-    }
-
-    protected getModuleType(): 'cjs' | 'esm' {
-        if (this.compilerOptions.module === ts.ModuleKind.Node16 || this.compilerOptions.module === ts.ModuleKind.NodeNext) {
-            if (this.sourceFile.impliedNodeFormat === ts.ModuleKind.ESNext) {
-                return 'esm';
-            }
-            return 'cjs';
-        }
-        return this.compilerOptions.module === ts.ModuleKind.CommonJS ? 'cjs' : 'esm';
-    }
-
-    protected getArrowFunctionΩPropertyAccessIdentifier(node: ArrowFunction): Identifier | undefined {
-        let { parent } = (node as any).original || node;
-        if (isVariableDeclaration(parent) && isIdentifier(parent.name)) {
-            return parent.name;
-        } else if (isPropertyAssignment(parent) && isIdentifier(parent.name)) {
-            const names: string[] = [];
-            while (parent) {
-                if (isObjectLiteralExpression(parent)) {
-                    parent = parent.parent;
-                } else if (isVariableDeclaration(parent)) {
-                    names.unshift(getIdentifierName(parent.name as Identifier));
-                    break;
-                } else if (isIdentifier(parent.name)) {
-                    names.unshift(getIdentifierName(parent.name));
-                    parent = parent.parent;
-                } else {
-                    return;
-                }
-            }
-            return this.f.createIdentifier(names.join('.'));
-        }
-        return;
-    }
-
-    protected injectResetΩ<T extends FunctionDeclaration | FunctionExpression | MethodDeclaration | ConstructorDeclaration | ArrowFunction>(node: T): T {
-        let hasReceiveType = false;
-        for (const param of node.parameters) {
-            if (param.type && getReceiveTypeParameter(param.type)) hasReceiveType = true;
-        }
-        if (!hasReceiveType) return node;
-
-        let container: Expression = this.f.createIdentifier('globalThis');
-        if (isArrowFunction(node)) {
-            const next = this.getArrowFunctionΩPropertyAccessIdentifier(node);
-            if (!next) return node;
-            container = next;
-        } else if ((isFunctionDeclaration(node) || isFunctionExpression(node)) && node.name) {
-            container = node.name;
-        } else if (isMethodDeclaration(node) && isIdentifier(node.name)) {
-            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), node.name);
-        } else if (isConstructorDeclaration(node)) {
-            container = this.f.createPropertyAccessExpression(this.f.createIdentifier('this'), 'constructor');
-        }
-
-        const reset: Statement = this.f.createExpressionStatement(this.f.createBinaryExpression(
-            this.f.createPropertyAccessExpression(
-                container,
-                this.f.createIdentifier('Ω'),
-            ),
-            this.f.createToken(ts.SyntaxKind.EqualsToken),
-            this.f.createIdentifier('undefined'),
-        ));
-
-        // convert expression into statements array
-        let body = node.body && isBlock(node.body) ? node.body : undefined;
-        let bodyStatements: Statement[] = node.body && isBlock(node.body) ? [...node.body.statements] : [];
-        if (node.body) {
-            if (isExpression(node.body)) {
-                bodyStatements = [this.f.createReturnStatement(node.body)];
-            }
-            body = this.f.updateBlock(node.body as Block, [reset, ...bodyStatements]);
-        }
-
-        if (isArrowFunction(node)) {
-            return this.f.updateArrowFunction(node, node.modifiers, node.typeParameters, node.parameters, node.type, node.equalsGreaterThanToken, body as ConciseBody) as T;
-        } else if (isFunctionDeclaration(node)) {
-            return this.f.updateFunctionDeclaration(node, node.modifiers, node.asteriskToken, node.name,
-                node.typeParameters, node.parameters, node.type, body) as T;
-        } else if (isFunctionExpression(node)) {
-            return this.f.updateFunctionExpression(node, node.modifiers, node.asteriskToken, node.name,
-                node.typeParameters, node.parameters, node.type, body || node.body) as T;
-        } else if (isMethodDeclaration(node)) {
-            return this.f.updateMethodDeclaration(node, node.modifiers as ReadonlyArray<Modifier>, node.asteriskToken, node.name,
-                node.questionToken, node.typeParameters, node.parameters, node.type, body) as T;
-        } else if (isConstructorDeclaration(node)) {
-            return this.f.updateConstructorDeclaration(node, node.modifiers, node.parameters, body) as T;
-        }
-        return node;
-    }
-
-    protected createProgramVarFromNode(node: Node, name: EntityName, sourceFile?: SourceFile): Statement[] {
-        const typeProgram = new CompilerProgram(node, sourceFile);
-
-        if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node)) && node.typeParameters) {
-            for (const param of node.typeParameters) {
-                if (param.default) {
-                    //push default on the stack
-                    this.extractPackStructOfType(param.default, typeProgram);
-                }
-                typeProgram.pushTemplateParameter(getIdentifierName(param.name), !!param.default);
-            }
-        }
-
-        this.extractPackStructOfType(node, typeProgram);
-
-        if (isTypeAliasDeclaration(node) || isInterfaceDeclaration(node) || isClassDeclaration(node) || isClassExpression(node)) {
-            typeProgram.pushOp(ReflectionOp.nominal);
-        }
-
-        const typeProgramExpression = this.packOpsAndStack(typeProgram);
-
-        const variable = this.f.createVariableStatement(
-            [],
-            this.f.createVariableDeclarationList([
-                this.f.createVariableDeclaration(
-                    this.getDeclarationVariableName(name),
-                    undefined,
-                    undefined,
-                    typeProgramExpression,
-                ),
-            ], NodeFlags.Const),
-        );
-
-        //when its commonJS, the `variable` would be exported as `exports.$name = $value`, but all references point just to $name.
-        //so the idea is, that we create a normal variable and export it via `export {$name}`.
-        if (hasModifier(node, SyntaxKind.ExportKeyword)) {
-            //propertyName in ExportSpecifier is set to avoid a TS compile error:
-            // TypeError: Cannot read properties of undefined (reading 'escapedText')
-            //   at Object.idText (/Users/marc/bude/deepkit-framework/packages/benchmark/node_modules/typescript/lib/typescript.js:11875:67)
-            const exportNode = this.f.createExportDeclaration(undefined, false, this.f.createNamedExports([
-                this.f.createExportSpecifier(false, this.getDeclarationVariableName(name), this.getDeclarationVariableName(name)),
-            ]));
-            return [variable, exportNode];
-        }
-
-        return [variable];
-    }
-
-    protected extractPackStructOfExpression(node: Expression, program: CompilerProgram): void {
-        switch (node.kind) {
-            case SyntaxKind.StringLiteral: {
-                program.pushOp(ReflectionOp.string);
-                return;
-            }
-            case SyntaxKind.NumericLiteral: {
-                program.pushOp(ReflectionOp.number);
-                return;
-            }
-            case SyntaxKind.FalseKeyword:
-            case SyntaxKind.TrueKeyword: {
-                program.pushOp(ReflectionOp.boolean);
-                return;
-            }
-            case SyntaxKind.BigIntLiteral: {
-                program.pushOp(ReflectionOp.bigint);
-                return;
-            }
-            //Symbol() is a function call, so we need to check for that
-            case SyntaxKind.CallExpression: {
-                const call = node as CallExpression;
-                if (isIdentifier(call.expression) && getIdentifierName(call.expression) === 'Symbol') {
-                    program.pushOp(ReflectionOp.symbol);
-                    return;
-                }
-                break;
-            }
-            //new Date()
-            case SyntaxKind.NewExpression: {
-                const call = node as NewExpression;
-                if (isIdentifier(call.expression)) {
-                    const map: { [name: string]: ReflectionOp } = {
-                        'Date': ReflectionOp.date,
-                        'RegExp': ReflectionOp.regexp,
-                        'Uint8Array': ReflectionOp.uint8Array,
-                        'Uint8ClampedArray': ReflectionOp.uint8ClampedArray,
-                        'Uint16Array': ReflectionOp.uint16Array,
-                        'Uint32Array': ReflectionOp.uint32Array,
-                        'Int8Array': ReflectionOp.int8Array,
-                        'Int16Array': ReflectionOp.int16Array,
-                        'Int32Array': ReflectionOp.int32Array,
-                        'Float32Array': ReflectionOp.float32Array,
-                        'Float64Array': ReflectionOp.float64Array,
-                        'ArrayBuffer': ReflectionOp.arrayBuffer,
-                    };
-                    const op = map[getIdentifierName(call.expression)];
-                    if (op) {
-                        program.pushOp(op);
-                        return;
-                    }
-                }
-                break;
-            }
-        }
-
-        program.pushOp(ReflectionOp.never);
-    }
-
-    protected extractPackStructOfType(node: Node | Declaration | ClassDeclaration | ClassExpression, program: CompilerProgram): void {
-        if (isParenthesizedTypeNode(node)) return this.extractPackStructOfType(node.type, program);
-
-        switch (node.kind) {
-            case SyntaxKind.StringKeyword: {
-                program.pushOp(ReflectionOp.string);
-                break;
-            }
-            case SyntaxKind.NumberKeyword: {
-                program.pushOp(ReflectionOp.number);
-                break;
-            }
-            case SyntaxKind.BooleanKeyword: {
-                program.pushOp(ReflectionOp.boolean);
-                break;
-            }
-            case SyntaxKind.BigIntKeyword: {
-                program.pushOp(ReflectionOp.bigint);
-                break;
-            }
-            case SyntaxKind.VoidKeyword: {
-                program.pushOp(ReflectionOp.void);
-                break;
-            }
-            case SyntaxKind.UnknownKeyword: {
-                program.pushOp(ReflectionOp.unknown);
-                break;
-            }
-            case SyntaxKind.ObjectKeyword: {
-                program.pushOp(ReflectionOp.object);
-                break;
-            }
-            case SyntaxKind.SymbolKeyword: {
-                program.pushOp(ReflectionOp.symbol);
-                break;
-            }
-            case SyntaxKind.NullKeyword: {
-                program.pushOp(ReflectionOp.null);
-                break;
-            }
-            case SyntaxKind.NeverKeyword: {
-                program.pushOp(ReflectionOp.never);
-                break;
-            }
-            case SyntaxKind.AnyKeyword: {
-                program.pushOp(ReflectionOp.any);
-                break;
-            }
-            case SyntaxKind.UndefinedKeyword: {
-                program.pushOp(ReflectionOp.undefined);
-                break;
-            }
-            case SyntaxKind.TrueKeyword: {
-                program.pushOp(ReflectionOp.literal, program.pushStack(this.f.createTrue()));
-                break;
-            }
-            case SyntaxKind.FalseKeyword: {
-                program.pushOp(ReflectionOp.literal, program.pushStack(this.f.createFalse()));
-                break;
-            }
-            case SyntaxKind.ClassDeclaration:
-            case SyntaxKind.ClassExpression: {
-                //TypeScript does not narrow types down
-                const narrowed = node as ClassDeclaration | ClassExpression;
-                //class nodes have always their own program, so the start is always fresh, means we don't need a frame
-
-                if (node) {
-                    const members: ClassElement[] = [];
-
-                    if (narrowed.typeParameters) {
-                        for (const typeParameter of narrowed.typeParameters) {
-                            const name = getNameAsString(typeParameter.name);
-                            if (typeParameter.default) {
-                                //push default on the stack
-                                this.extractPackStructOfType(typeParameter.default, program);
-                            }
-                            program.pushTemplateParameter(name, !!typeParameter.default);
-                        }
-                    }
-
-                    if (narrowed.heritageClauses) {
-                        for (const heritage of narrowed.heritageClauses) {
-                            if (heritage.token === SyntaxKind.ExtendsKeyword) {
-                                for (const extendType of heritage.types) {
-                                    program.pushFrame();
-                                    if (extendType.typeArguments) {
-                                        for (const typeArgument of extendType.typeArguments) {
-                                            this.extractPackStructOfType(typeArgument, program);
-                                        }
-                                    }
-                                    const index = program.pushStack(
-                                        this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, this.nodeConverter.toExpression(extendType.expression)),
-                                    );
-                                    program.pushOp(ReflectionOp.classReference, index);
-                                    program.popFrameImplicit();
-                                }
-                            }
-                        }
-                    }
-
-                    for (const member of narrowed.members) {
-                        const name = getNameAsString(member.name);
-                        if (name) {
-                            const has = members.some(v => getNameAsString(v.name) === name);
-                            if (has) continue;
-                        }
-                        members.push(member);
-
-                        this.extractPackStructOfType(member, program);
-                    }
-
-                    program.pushOp(ReflectionOp.class);
-
-                    if (narrowed.heritageClauses) {
-                        for (const heritageClause of narrowed.heritageClauses) {
-                            if (heritageClause.token === SyntaxKind.ExtendsKeyword) {
-                                //extends only supports extending one class
-                                const first = heritageClause.types[0];
-                                if (isExpressionWithTypeArguments(first) && first.typeArguments) {
-                                    for (const typeArgument of first.typeArguments) {
-                                        this.extractPackStructOfType(typeArgument, program);
-                                    }
-                                    program.pushOp(ReflectionOp.classExtends, first.typeArguments.length);
-                                }
-                            } else if (heritageClause.token === SyntaxKind.ImplementsKeyword) {
-                                for (const type of heritageClause.types) {
-                                    this.extractPackStructOfTypeReference(type, program);
-                                }
-                                program.pushOp(ReflectionOp.implements, heritageClause.types.length);
-                            }
-                        }
-                    }
-
-                    if (narrowed.name) this.resolveTypeName(getIdentifierName(narrowed.name), program);
-
-                    // for whatever reason: narrowed.name.parent !== narrowed. narrowed.name.parent has jsDoc, narrowed.name not.
-                    const description = extractJSDocAttribute(this.sourceFile, narrowed.name?.parent, 'description');
-                    if (description) program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
-                }
-                break;
-            }
-            case SyntaxKind.IntersectionType: {
-                //TypeScript does not narrow types down
-                const narrowed = node as IntersectionTypeNode;
-                program.pushFrame();
-
-                for (const type of narrowed.types) {
-                    this.extractPackStructOfType(type, program);
-                }
-
-                program.pushOp(ReflectionOp.intersection);
-                program.popFrameImplicit();
-                break;
-            }
-            case SyntaxKind.MappedType: {
-                //TypeScript does not narrow types down
-                const narrowed = node as MappedTypeNode;
-
-                //<Type>{[Property in keyof Type]: boolean;};
-                program.pushFrame();
-                program.pushVariable(getIdentifierName(narrowed.typeParameter.name));
-
-                const constraint = getEffectiveConstraintOfTypeParameter(narrowed.typeParameter);
-                if (constraint) {
-                    this.extractPackStructOfType(constraint, program);
-                } else {
-                    program.pushOp(ReflectionOp.never);
-                }
-
-                let modifier = 0;
-                if (narrowed.questionToken) {
-                    if (narrowed.questionToken.kind === SyntaxKind.QuestionToken) {
-                        modifier |= MappedModifier.optional;
-                    }
-                    if (narrowed.questionToken.kind === SyntaxKind.MinusToken) {
-                        modifier |= MappedModifier.removeOptional;
-                    }
-                }
-                if (narrowed.readonlyToken) {
-                    if (narrowed.readonlyToken.kind === SyntaxKind.ReadonlyKeyword) {
-                        modifier |= MappedModifier.readonly;
-                    }
-                    if (narrowed.readonlyToken.kind === SyntaxKind.MinusToken) {
-                        modifier |= MappedModifier.removeReadonly;
-                    }
-                }
-                program.pushCoRoutine();
-                if (narrowed.nameType) program.pushFrame();
-                if (narrowed.type) {
-                    this.extractPackStructOfType(narrowed.type, program);
-                } else {
-                    program.pushOp(ReflectionOp.never);
-                }
-                if (narrowed.nameType) {
-                    this.extractPackStructOfType(narrowed.nameType, program);
-                    program.pushOp(ReflectionOp.tuple);
-                    program.popFrameImplicit();
-                }
-                const coRoutineIndex = program.popCoRoutine();
-
-                if (narrowed.nameType) {
-                    program.pushOp(ReflectionOp.mappedType2, coRoutineIndex, modifier);
-                } else {
-                    program.pushOp(ReflectionOp.mappedType, coRoutineIndex, modifier);
-                }
-
-                program.popFrameImplicit();
-                break;
-            }
-            case SyntaxKind.TypeAliasDeclaration: {
-                let narrowed = node as TypeAliasDeclaration;
-
-                if (program.sourceFile && getNameAsString(narrowed.name) === 'TypeAnnotation') {
-                    const attribute = extractJSDocAttribute(program.sourceFile, narrowed, 'intrinsic');
-                    if (attribute !== undefined) {
-                        // TypeAnnotation<T> is like an intrinsic type, so we don't need to resolve it
-                        narrowed = this.intrinsicMetaDeclaration;
-                    }
-                }
-
-                this.extractPackStructOfType(narrowed.type, program);
-                if (narrowed.name) this.resolveTypeName(getIdentifierName(narrowed.name), program);
-                break;
-            }
-            case SyntaxKind.TypeLiteral:
-            case SyntaxKind.InterfaceDeclaration: {
-                //TypeScript does not narrow types down
-                const narrowed = node as TypeLiteralNode | InterfaceDeclaration;
-                let descriptionNode: Node = narrowed;
-                program.pushFrame();
-
-                //first all extend expressions
-                if (isInterfaceDeclaration(narrowed) && narrowed.heritageClauses) {
-                    for (const heritage of narrowed.heritageClauses) {
-                        if (heritage.token === SyntaxKind.ExtendsKeyword) {
-                            for (const extendType of heritage.types) {
-                                this.extractPackStructOfTypeReference(extendType, program);
-                            }
-                        }
-                    }
-                }
-
-                for (const member of narrowed.members) {
-                    this.extractPackStructOfType(member, program);
-                }
-                program.pushOp(ReflectionOp.objectLiteral);
-                if (isTypeLiteralNode(narrowed)) {
-                    descriptionNode = narrowed.parent;
-                }
-                const description = descriptionNode && extractJSDocAttribute(this.sourceFile, descriptionNode, 'description');
-                if (description) program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
-
-                if (isInterfaceDeclaration(narrowed)) {
-                    if (narrowed.name) this.resolveTypeName(getIdentifierName(narrowed.name), program);
-                }
-                program.popFrameImplicit();
-                break;
-            }
-            case SyntaxKind.TypeReference: {
-                this.extractPackStructOfTypeReference(node as TypeReferenceNode, program);
-                break;
-            }
-            case SyntaxKind.ArrayType: {
-                this.extractPackStructOfType((node as ArrayTypeNode).elementType, program);
-                program.pushOp(ReflectionOp.array);
-                break;
-            }
-            case SyntaxKind.RestType: {
-                let type = (node as RestTypeNode).type;
-                if (isArrayTypeNode(type)) {
-                    type = type.elementType;
-                }
-                this.extractPackStructOfType(type, program);
-                program.pushOp(ReflectionOp.rest);
-                break;
-            }
-            case SyntaxKind.TupleType: {
-                program.pushFrame();
-                for (const element of (node as TupleTypeNode).elements) {
-                    if (isOptionalTypeNode(element)) {
-                        this.extractPackStructOfType(element.type, program);
-                        program.pushOp(ReflectionOp.tupleMember);
-                        program.pushOp(ReflectionOp.optional);
-                    } else if (isNamedTupleMember(element)) {
-                        if (element.dotDotDotToken) {
-                            let type = element.type;
-                            if (isArrayTypeNode(type)) {
-                                type = type.elementType;
-                            }
-                            this.extractPackStructOfType(type, program);
-                            program.pushOp(ReflectionOp.rest);
-                        } else {
-                            this.extractPackStructOfType(element.type, program);
-                        }
-                        const index = program.findOrAddStackEntry(getIdentifierName(element.name));
-                        program.pushOp(ReflectionOp.namedTupleMember, index);
-                        if (element.questionToken) {
-                            program.pushOp(ReflectionOp.optional);
-                        }
-                    } else {
-                        this.extractPackStructOfType(element, program);
-                    }
-                }
-                program.pushOp(ReflectionOp.tuple);
-                program.popFrameImplicit();
-                break;
-            }
-            case SyntaxKind.PropertySignature: {
-                //TypeScript does not narrow types down
-                const narrowed = node as PropertySignature;
-                if (narrowed.type) {
-                    this.extractPackStructOfType(narrowed.type, program);
-                    const name = getPropertyName(this.f, narrowed.name);
-                    program.pushOp(ReflectionOp.propertySignature, program.findOrAddStackEntry(name));
-                    if (narrowed.questionToken) program.pushOp(ReflectionOp.optional);
-                    if (hasModifier(narrowed, SyntaxKind.ReadonlyKeyword)) program.pushOp(ReflectionOp.readonly);
-
-                    const description = extractJSDocAttribute(this.sourceFile, narrowed, 'description');
-                    if (description) program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
-                } else {
-                    program.pushOp(ReflectionOp.unknown);
-                }
-                break;
-            }
-            case SyntaxKind.PropertyDeclaration: {
-                //TypeScript does not narrow types down
-                const narrowed = node as PropertyDeclaration;
-
-                // if the property was explicitly marked as `@reflection no`, we ignore it
-                if (false === this.getExplicitReflectionMode(program.sourceFile, narrowed)) return;
-
-                if (narrowed.type) {
-                    this.extractPackStructOfType(narrowed.type, program);
-                } else if (narrowed.initializer) {
-                    this.extractPackStructOfExpression(narrowed.initializer, program);
-                } else {
-                    program.pushOp(ReflectionOp.unknown);
-                }
-
-                const name = getPropertyName(this.f, narrowed.name);
-                program.pushOp(ReflectionOp.property, program.findOrAddStackEntry(name));
-
-                if (narrowed.questionToken) program.pushOp(ReflectionOp.optional);
-                if (hasModifier(narrowed, SyntaxKind.ReadonlyKeyword)) program.pushOp(ReflectionOp.readonly);
-                if (hasModifier(narrowed, SyntaxKind.PrivateKeyword)) program.pushOp(ReflectionOp.private);
-                if (hasModifier(narrowed, SyntaxKind.ProtectedKeyword)) program.pushOp(ReflectionOp.protected);
-                if (hasModifier(narrowed, SyntaxKind.AbstractKeyword)) program.pushOp(ReflectionOp.abstract);
-                if (hasModifier(narrowed, SyntaxKind.StaticKeyword)) program.pushOp(ReflectionOp.static);
-
-                if (narrowed.initializer) {
-                    //important to use Function, since it will be called using a different `this`
-                    program.pushOp(ReflectionOp.defaultValue, program.findOrAddStackEntry(
-                        this.f.createFunctionExpression(undefined, undefined, undefined, undefined, undefined, undefined,
-                            this.f.createBlock([this.f.createReturnStatement(narrowed.initializer)])),
-                    ));
-                }
-
-                const description = extractJSDocAttribute(this.sourceFile, narrowed, 'description');
-                if (description) program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
-
-                break;
-            }
-            case SyntaxKind.ConditionalType: {
-                //TypeScript does not narrow types down
-                const narrowed = node as ConditionalTypeNode;
-
-                // Depending on whether this a distributive conditional type or not, it has to be moved to its own function
-                // my understanding of when a distributive conditional type is used is:
-                // 1. the `checkType` is a simple identifier (just `T`, no `[T]`, no `T | x`, no `{a: T}`, etc)
-                const distributiveOverIdentifier: Identifier | undefined = isTypeReferenceNode(narrowed.checkType) && isIdentifier(narrowed.checkType.typeName)
-                    ? narrowed.checkType.typeName : undefined;
-
-                if (distributiveOverIdentifier) {
-                    program.pushFrame();
-                    //first we add to the stack the origin type we distribute over.
-                    this.extractPackStructOfType(narrowed.checkType, program);
-
-                    //since the distributive conditional type is a loop that changes only the found `T`, it is necessary to add that as variable,
-                    //so call convention can take over.
-                    program.pushVariable(getIdentifierName(distributiveOverIdentifier));
-                    program.pushCoRoutine();
-                }
-
-                program.pushConditionalFrame(); //gets its own frame for `infer T` ops. all infer variables will be registered in this frame
-                this.extractPackStructOfType(narrowed.checkType, program);
-                this.extractPackStructOfType(narrowed.extendsType, program);
-
-                program.pushOp(ReflectionOp.extends);
-
-                program.pushCoRoutine();
-                this.extractPackStructOfType(narrowed.trueType, program);
-                const trueProgram = program.popCoRoutine();
-
-                program.pushCoRoutine();
-                this.extractPackStructOfType(narrowed.falseType, program);
-                const falseProgram = program.popCoRoutine();
-
-                program.pushOp(ReflectionOp.jumpCondition, trueProgram, falseProgram);
-                program.moveFrame(); //pops frame
-
-                if (distributiveOverIdentifier) {
-                    const coRoutineIndex = program.popCoRoutine();
-                    program.pushOp(ReflectionOp.distribute, coRoutineIndex);
-                    program.popFrameImplicit();
-                }
-                break;
-            }
-            case SyntaxKind.InferType: {
-                //TypeScript does not narrow types down
-                const narrowed = node as InferTypeNode;
-
-                const frame = program.findConditionalFrame();
-                if (frame) {
-                    const typeParameterName = getIdentifierName(narrowed.typeParameter.name);
-                    let variable = program.findVariable(typeParameterName);
-                    if (!variable) {
-                        program.pushVariable(typeParameterName, frame);
-                        variable = program.findVariable(typeParameterName);
-                        if (!variable) throw new Error('Could not find inserted infer variable');
-                    }
-                    program.pushOp(ReflectionOp.infer, variable.frameOffset, variable.stackIndex);
-                } else {
-                    program.pushOp(ReflectionOp.never);
-                }
-                break;
-            }
-            case SyntaxKind.MethodSignature:
-            case SyntaxKind.MethodDeclaration:
-            case SyntaxKind.Constructor:
-            case SyntaxKind.ArrowFunction:
-            case SyntaxKind.FunctionExpression:
-            case SyntaxKind.ConstructSignature:
-            case SyntaxKind.ConstructorType:
-            case SyntaxKind.FunctionType:
-            case SyntaxKind.CallSignature:
-            case SyntaxKind.FunctionDeclaration: {
-                //TypeScript does not narrow types down
-                const narrowed = node as MethodSignature | MethodDeclaration | CallSignatureDeclaration | ConstructorTypeNode
-                    | ConstructSignatureDeclaration | ConstructorDeclaration | ArrowFunction | FunctionExpression | FunctionTypeNode | FunctionDeclaration;
-
-                // if the function was explicitly marked as `@reflection no`, we ignore it
-                if (false === this.getExplicitReflectionMode(program.sourceFile, narrowed)) {
-                    program.pushOp(ReflectionOp.any);
-                    return;
-                }
-
-                const name = isCallSignatureDeclaration(node)
-                    ? '' : isConstructorTypeNode(narrowed) || isConstructSignatureDeclaration(node)
-                        ? 'new' : isConstructorDeclaration(narrowed) ? 'constructor' : getPropertyName(this.f, narrowed.name);
-                if (!narrowed.type && narrowed.parameters.length === 0 && !name) return;
-
-                program.pushFrame();
-                for (let i = 0; i < narrowed.parameters.length; i++) {
-                    const parameter = narrowed.parameters[i];
-                    const parameterName = isIdentifier(parameter.name) ? getNameAsString(parameter.name) : 'param' + i;
-
-                    const type = parameter.type
-                        ? (parameter.dotDotDotToken && isArrayTypeNode(parameter.type) ? parameter.type.elementType : parameter.type) : undefined;
-
-                    if (type) {
-                        this.extractPackStructOfType(type, program);
-                    } else {
-                        program.pushOp(ReflectionOp.any);
-                    }
-
-                    if (parameter.dotDotDotToken) {
-                        program.pushOp(ReflectionOp.rest);
-                    }
-
-                    program.pushOp(ReflectionOp.parameter, program.findOrAddStackEntry(parameterName));
-
-                    if (parameter.questionToken) program.pushOp(ReflectionOp.optional);
-                    if (hasModifier(parameter, SyntaxKind.PublicKeyword)) program.pushOp(ReflectionOp.public);
-                    if (hasModifier(parameter, SyntaxKind.PrivateKeyword)) program.pushOp(ReflectionOp.private);
-                    if (hasModifier(parameter, SyntaxKind.ProtectedKeyword)) program.pushOp(ReflectionOp.protected);
-                    if (hasModifier(parameter, SyntaxKind.ReadonlyKeyword)) program.pushOp(ReflectionOp.readonly);
-                    const description = extractJSDocAttribute(this.sourceFile, parameter, 'description');
-                    if (description) program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
-                    if (parameter.initializer && parameter.type && !getReceiveTypeParameter(parameter.type)) {
-                        program.pushOp(
-                            ReflectionOp.defaultValue,
-                            program.findOrAddStackEntry(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, parameter.initializer)),
-                        );
-                    }
-                }
-
-                if (narrowed.type) {
-                    this.extractPackStructOfType(narrowed.type, program);
-                } else {
-                    program.pushOp(ReflectionOp.any);
-                }
-
-                program.pushOp(
-                    isCallSignatureDeclaration(node) ? ReflectionOp.callSignature :
-                        isMethodSignature(narrowed) || isConstructSignatureDeclaration(narrowed)
-                            ? ReflectionOp.methodSignature
-                            : isMethodDeclaration(narrowed) || isConstructorDeclaration(narrowed)
-                                ? ReflectionOp.method : ReflectionOp.function, program.findOrAddStackEntry(name),
-                );
-
-                if (isMethodDeclaration(narrowed)) {
-                    if (hasModifier(narrowed, SyntaxKind.PrivateKeyword)) program.pushOp(ReflectionOp.private);
-                    if (hasModifier(narrowed, SyntaxKind.ProtectedKeyword)) program.pushOp(ReflectionOp.protected);
-                    if (hasModifier(narrowed, SyntaxKind.AbstractKeyword)) program.pushOp(ReflectionOp.abstract);
-                    if (hasModifier(narrowed, SyntaxKind.StaticKeyword)) program.pushOp(ReflectionOp.static);
-                }
-                const description = extractJSDocAttribute(this.sourceFile, narrowed, 'description');
-                if (description) program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
-                program.popFrameImplicit();
-                break;
-            }
-            case SyntaxKind.LiteralType: {
-                //TypeScript does not narrow types down
-                const narrowed = node as LiteralTypeNode;
-
-                if (narrowed.literal.kind === SyntaxKind.NullKeyword) {
-                    program.pushOp(ReflectionOp.null);
-                } else {
-                    program.pushOp(ReflectionOp.literal, program.findOrAddStackEntry(narrowed.literal));
-                }
-                break;
-            }
-            case SyntaxKind.TemplateLiteralType: {
-                //TypeScript does not narrow types down
-                const narrowed = node as TemplateLiteralTypeNode;
-
-                program.pushFrame();
-                if (narrowed.head.rawText) {
-                    program.pushOp(ReflectionOp.literal, program.findOrAddStackEntry(narrowed.head.rawText));
-                }
-
-                for (const span of narrowed.templateSpans) {
-                    this.extractPackStructOfType(span.type, program);
-                    if (span.literal.rawText) {
-                        program.pushOp(ReflectionOp.literal, program.findOrAddStackEntry(span.literal.rawText));
-                    }
-                }
-
-                program.pushOp(ReflectionOp.templateLiteral);
-                program.popFrameImplicit();
-
-                break;
-            }
-            case SyntaxKind.UnionType: {
-                //TypeScript does not narrow types down
-                const narrowed = node as UnionTypeNode;
-
-                if (narrowed.types.length === 0) {
-                    //nothing to emit
-                } else if (narrowed.types.length === 1) {
-                    //only emit the type
-                    this.extractPackStructOfType(narrowed.types[0], program);
-                } else {
-                    program.pushFrame();
-
-                    for (const subType of narrowed.types) {
-                        this.extractPackStructOfType(subType, program);
-                    }
-
-                    program.pushOp(ReflectionOp.union);
-                    program.popFrameImplicit();
-                }
-                break;
-            }
-            case SyntaxKind.EnumDeclaration: {
-                //TypeScript does not narrow types down
-                const narrowed = node as EnumDeclaration;
-                program.pushFrame();
-
-                for (const type of narrowed.members) {
-                    const name = getPropertyName(this.f, type.name);
-                    program.pushOp(ReflectionOp.enumMember, program.findOrAddStackEntry(name));
-                    if (type.initializer) {
-                        program.pushOp(
-                            ReflectionOp.defaultValue,
-                            program.findOrAddStackEntry(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, type.initializer)),
-                        );
-                    }
-                }
-                program.pushOp(ReflectionOp.enum);
-                const description = extractJSDocAttribute(this.sourceFile, narrowed, 'description');
-                if (description) program.pushOp(ReflectionOp.description, program.findOrAddStackEntry(description));
-                if (narrowed.name) this.resolveTypeName(getIdentifierName(narrowed.name), program);
-                program.popFrameImplicit();
-                break;
-            }
-            case SyntaxKind.IndexSignature: {
-                //TypeScript does not narrow types down
-                const narrowed = node as IndexSignatureDeclaration;
-
-                //node.parameters = first item is {[name: string]: number} => 'name: string'
-                if (narrowed.parameters.length && narrowed.parameters[0].type) {
-                    this.extractPackStructOfType(narrowed.parameters[0].type, program);
-                } else {
-                    program.pushOp(ReflectionOp.any);
-                }
-
-                //node.type = first item is {[name: string]: number} => 'number'
-                this.extractPackStructOfType(narrowed.type, program);
-                program.pushOp(ReflectionOp.indexSignature);
-                break;
-            }
-            case SyntaxKind.TypeQuery: {
-                //TypeScript does not narrow types down
-                const narrowed = node as TypeQueryNode;
-
-                // if (program.importSpecifier) {
-                //     //if this is set, the current program is embedded into another file. All locally used symbols like a variable in `typeof` need to be imported
-                //     //in the other file as well.
-                //     if (isIdentifier(narrowed.exprName)) {
-                //         const originImportStatement = program.importSpecifier.parent.parent.parent;
-                //         this.addImports.push({ identifier: narrowed.exprName, from: originImportStatement.moduleSpecifier });
-                //     }
-                // }
-                if (isIdentifier(narrowed.exprName)) {
-                    const resolved = this.resolveDeclaration(narrowed.exprName);
-                    if (resolved && findSourceFile(resolved.declaration) !== this.sourceFile && resolved.importDeclaration) {
-                        ensureImportIsEmitted(resolved.importDeclaration, narrowed.exprName);
-                    }
-                }
-
-                const expression = serializeEntityNameAsExpression(this.f, narrowed.exprName);
-                program.pushOp(ReflectionOp.typeof, program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, expression)));
-                break;
-            }
-            case SyntaxKind.TypeOperator: {
-                //TypeScript does not narrow types down
-                const narrowed = node as TypeOperatorNode;
-
-                if (narrowed.type.kind === SyntaxKind.ThisType) {
-                    //for the moment we treat `keyof this` as any, since `this` is not implemented at all.
-                    //this makes it possible that the code above works at least.
-                    program.pushOp(ReflectionOp.any);
-                    break;
-                }
-
-                switch (narrowed.operator) {
-                    case SyntaxKind.KeyOfKeyword: {
-                        this.extractPackStructOfType(narrowed.type, program);
-                        program.pushOp(ReflectionOp.keyof);
-                        break;
-                    }
-                    case SyntaxKind.ReadonlyKeyword: {
-                        this.extractPackStructOfType(narrowed.type, program);
-                        program.pushOp(ReflectionOp.readonly);
-                        break;
-                    }
-                    default: {
-                        program.pushOp(ReflectionOp.never);
-                    }
-                }
-                break;
-            }
-            case SyntaxKind.IndexedAccessType: {
-                //TypeScript does not narrow types down
-                const narrowed = node as IndexedAccessTypeNode;
-
-                this.extractPackStructOfType(narrowed.objectType, program);
-                this.extractPackStructOfType(narrowed.indexType, program);
-                program.pushOp(ReflectionOp.indexAccess);
-                break;
-            }
-            case SyntaxKind.Identifier: {
-                //TypeScript does not narrow types down
-                const narrowed = node as Identifier;
-
-                //check if it references a variable
-                const variable = program.findVariable(getIdentifierName(narrowed));
-                if (variable) {
-                    program.pushOp(ReflectionOp.loads, variable.frameOffset, variable.stackIndex);
-                } else {
-                    program.pushOp(ReflectionOp.never);
-                }
-                break;
-            }
-            default: {
-                program.pushOp(ReflectionOp.never);
-            }
+          for (const subType of narrowed.types) {
+            this.extractPackStructOfType(subType, program);
+          }
+
+          program.pushOp(ReflectionOp.union);
+          program.popFrameImplicit();
         }
-    }
+        break;
+      }
+      case SyntaxKind.EnumDeclaration: {
+        //TypeScript does not narrow types down
+        const narrowed = node as EnumDeclaration;
+        program.pushFrame();
+
+        for (const type of narrowed.members) {
+          const name = getPropertyName(this.f, type.name);
+          program.pushOp(
+            ReflectionOp.enumMember,
+            program.findOrAddStackEntry(name)
+          );
+
+          this.extractDescriptionReflection(program, type);
+
+          if (type.initializer) {
+            program.pushOp(
+              ReflectionOp.defaultValue,
+              program.findOrAddStackEntry(
+                this.f.createArrowFunction(
+                  undefined,
+                  undefined,
+                  [],
+                  undefined,
+                  undefined,
+                  type.initializer
+                )
+              )
+            );
+          }
+        }
+        program.pushOp(ReflectionOp.enum);
 
-    protected knownClasses: { [name: string]: ReflectionOp } = {
-        'Int8Array': ReflectionOp.int8Array,
-        'Uint8Array': ReflectionOp.uint8Array,
-        'Uint8ClampedArray': ReflectionOp.uint8ClampedArray,
-        'Int16Array': ReflectionOp.int16Array,
-        'Uint16Array': ReflectionOp.uint16Array,
-        'Int32Array': ReflectionOp.int32Array,
-        'Uint32Array': ReflectionOp.uint32Array,
-        'Float32Array': ReflectionOp.float32Array,
-        'Float64Array': ReflectionOp.float64Array,
-        'ArrayBuffer': ReflectionOp.arrayBuffer,
-        'BigInt64Array': ReflectionOp.bigInt64Array,
-        'Date': ReflectionOp.date,
-        'RegExp': ReflectionOp.regexp,
-        'String': ReflectionOp.string,
-        'Number': ReflectionOp.number,
-        'BigInt': ReflectionOp.bigint,
-        'Boolean': ReflectionOp.boolean,
-    };
+        this.extractDefaultValueReflection(program, narrowed);
+        this.extractDescriptionReflection(program, narrowed);
+        this.extractTagReflections(program, narrowed);
 
-    protected getGlobalLibs(): SourceFile[] {
-        if (this.cache.globalSourceFiles) return this.cache.globalSourceFiles;
+        if (narrowed.name)
+          this.resolveTypeName(getIdentifierName(narrowed.name), program);
 
-        this.cache.globalSourceFiles = [];
+        program.popFrameImplicit();
 
-        //todo also read compiler options "types" + typeRoot
+        break;
+      }
+      case SyntaxKind.IndexSignature: {
+        //TypeScript does not narrow types down
+        const narrowed = node as IndexSignatureDeclaration;
 
-        //currently knownLibFilesForCompilerOptions from @typescript/vfs doesn't return correct lib files for esnext,
-        //so we switch here to es2022 if bigger than es2022.
-        const options = { ...this.compilerOptions };
-        if (options.target && (options.target === ScriptTarget.ESNext)) {
-            options.target = ScriptTarget.ES2022;
+        //node.parameters = first item is {[name: string]: number} => 'name: string'
+        if (narrowed.parameters.length && narrowed.parameters[0].type) {
+          this.extractPackStructOfType(narrowed.parameters[0].type, program);
+        } else {
+          program.pushOp(ReflectionOp.any);
         }
-        const libs = knownLibFilesForCompilerOptions(options, ts);
 
-        for (const lib of libs) {
-            if (this.isExcluded(lib)) continue;
-            const sourceFile = this.resolver.resolveSourceFile(this.sourceFile, this.f.createStringLiteral('typescript/lib/' + lib.replace('.d.ts', '')));
-            if (!sourceFile) continue;
-            this.cache.globalSourceFiles.push(sourceFile);
+        //node.type = first item is {[name: string]: number} => 'number'
+        this.extractPackStructOfType(narrowed.type, program);
+        program.pushOp(ReflectionOp.indexSignature);
+        break;
+      }
+      case SyntaxKind.TypeQuery: {
+        //TypeScript does not narrow types down
+        const narrowed = node as TypeQueryNode;
+
+        // if (program.importSpecifier) {
+        //     //if this is set, the current program is embedded into another file. All locally used symbols like a variable in `typeof` need to be imported
+        //     //in the other file as well.
+        //     if (isIdentifier(narrowed.exprName)) {
+        //         const originImportStatement = program.importSpecifier.parent.parent.parent;
+        //         this.addImports.push({ identifier: narrowed.exprName, from: originImportStatement.moduleSpecifier });
+        //     }
+        // }
+        if (isIdentifier(narrowed.exprName)) {
+          const resolved = this.resolveDeclaration(narrowed.exprName);
+          if (
+            resolved &&
+            findSourceFile(resolved.declaration) !== this.sourceFile &&
+            resolved.importDeclaration
+          ) {
+            ensureImportIsEmitted(
+              resolved.importDeclaration,
+              narrowed.exprName
+            );
+          }
         }
-        return this.cache.globalSourceFiles;
-    }
 
-    /**
-     * This is a custom resolver based on populated `locals` from the binder. It uses a custom resolution algorithm since
-     * we have no access to the binder/TypeChecker directly and instantiating a TypeChecker per file/transformer is incredible slow.
-     */
-    protected resolveDeclaration(typeName: EntityName): { declaration: Node, importDeclaration?: ImportDeclaration | JSDocImportTag, typeOnly?: boolean } | void {
-        let current: Node = typeName.parent;
-        if (typeName.kind === SyntaxKind.QualifiedName) return; //namespace access not supported yet, e.g. type a = Namespace.X;
-
-        let declaration: Node | undefined = undefined;
-
-        while (current) {
-            if (isNodeWithLocals(current) && current.locals) {
-                const found = current.locals.get(typeName.escapedText);
-                if (found && found.declarations && found.declarations[0]) {
-                    /**
-                     * Discard parameters, since they can not be referenced from inside
-                     *
-                     * ```typescript
-                     * type B = string;
-                     * function a(B: B) {}
-                     *
-                     * class A {
-                     *    constructor(B: B) {}
-                     * }
-                     * ```
-                     *
-                     */
-                    if (!isParameter(found.declarations[0])) {
-                        declaration = found.declarations[0];
-                        break;
-                    }
-                }
-            }
-
-            if (current.kind === SyntaxKind.SourceFile) break;
-            current = current.parent;
+        const expression = serializeEntityNameAsExpression(
+          this.f,
+          narrowed.exprName
+        );
+        program.pushOp(
+          ReflectionOp.typeof,
+          program.pushStack(
+            this.f.createArrowFunction(
+              undefined,
+              undefined,
+              [],
+              undefined,
+              undefined,
+              expression
+            )
+          )
+        );
+        break;
+      }
+      case SyntaxKind.TypeOperator: {
+        //TypeScript does not narrow types down
+        const narrowed = node as TypeOperatorNode;
+
+        if (narrowed.type.kind === SyntaxKind.ThisType) {
+          //for the moment we treat `keyof this` as any, since `this` is not implemented at all.
+          //this makes it possible that the code above works at least.
+          program.pushOp(ReflectionOp.any);
+          break;
         }
 
-        if (!declaration) {
-            // look in globals, read through all files, see checker.ts initializeTypeChecker
-            for (const file of this.getGlobalLibs()) {
-                const globals = getGlobalsOfSourceFile(file);
-                if (!globals) continue;
-                const symbol = globals.get(typeName.escapedText);
-                if (symbol && symbol.declarations && symbol.declarations[0]) {
-                    declaration = symbol.declarations[0];
-                    // console.log('found global', typeName.escapedText, 'in', file.fileName);
-                    break;
-                }
-            }
+        switch (narrowed.operator) {
+          case SyntaxKind.KeyOfKeyword: {
+            this.extractPackStructOfType(narrowed.type, program);
+            program.pushOp(ReflectionOp.keyof);
+            break;
+          }
+          case SyntaxKind.ReadonlyKeyword: {
+            this.extractPackStructOfType(narrowed.type, program);
+            program.pushOp(ReflectionOp.readonly);
+            break;
+          }
+          default: {
+            program.pushOp(ReflectionOp.never);
+          }
         }
-
-        let importDeclaration: ImportDeclaration | JSDocImportTag | undefined = undefined;
-        let typeOnly = false;
-
-        if (declaration && isImportSpecifier(declaration)) {
-            if (declaration.isTypeOnly) typeOnly = true;
-            importDeclaration = declaration.parent.parent.parent;
-        } else if (declaration && isImportDeclaration(declaration)) {
-            // declaration = this.resolveImportSpecifier(typeName.escapedText, declaration);
-            importDeclaration = declaration;
-        } else if (declaration && isImportClause(declaration)) {
-            importDeclaration = declaration.parent;
+        break;
+      }
+      case SyntaxKind.IndexedAccessType: {
+        //TypeScript does not narrow types down
+        const narrowed = node as IndexedAccessTypeNode;
+
+        this.extractPackStructOfType(narrowed.objectType, program);
+        this.extractPackStructOfType(narrowed.indexType, program);
+        program.pushOp(ReflectionOp.indexAccess);
+        break;
+      }
+      case SyntaxKind.Identifier: {
+        //TypeScript does not narrow types down
+        const narrowed = node as Identifier;
+
+        //check if it references a variable
+        const variable = program.findVariable(getIdentifierName(narrowed));
+        if (variable) {
+          program.pushOp(
+            ReflectionOp.loads,
+            variable.frameOffset,
+            variable.stackIndex
+          );
+        } else {
+          program.pushOp(ReflectionOp.never);
         }
-
-        if (importDeclaration) {
-            if (importDeclaration.importClause && importDeclaration.importClause.isTypeOnly) typeOnly = true;
-            declaration = this.resolveImportSpecifier(getEscapedText(typeName), importDeclaration, this.sourceFile);
+        break;
+      }
+      default: {
+        program.pushOp(ReflectionOp.never);
+      }
+    }
+  }
+
+  protected knownClasses: { [name: string]: ReflectionOp } = {
+    "Int8Array": ReflectionOp.int8Array,
+    "Uint8Array": ReflectionOp.uint8Array,
+    "Uint8ClampedArray": ReflectionOp.uint8ClampedArray,
+    "Int16Array": ReflectionOp.int16Array,
+    "Uint16Array": ReflectionOp.uint16Array,
+    "Int32Array": ReflectionOp.int32Array,
+    "Uint32Array": ReflectionOp.uint32Array,
+    "Float32Array": ReflectionOp.float32Array,
+    "Float64Array": ReflectionOp.float64Array,
+    "ArrayBuffer": ReflectionOp.arrayBuffer,
+    "BigInt64Array": ReflectionOp.bigInt64Array,
+    "Date": ReflectionOp.date,
+    "RegExp": ReflectionOp.regexp,
+    "String": ReflectionOp.string,
+    "Number": ReflectionOp.number,
+    "BigInt": ReflectionOp.bigint,
+    "Boolean": ReflectionOp.boolean
+  };
+
+  protected getGlobalLibs(): SourceFile[] {
+    if (this.cache.globalSourceFiles) return this.cache.globalSourceFiles;
+
+    this.cache.globalSourceFiles = [];
+
+    //todo also read compiler options "types" + typeRoot
+
+    //currently knownLibFilesForCompilerOptions from @typescript/vfs doesn't return correct lib files for esnext,
+    //so we switch here to es2022 if bigger than es2022.
+    const options = { ...this.compilerOptions };
+    if (options.target && options.target === ScriptTarget.ESNext) {
+      options.target = ScriptTarget.ES2022;
+    }
+    const libs = knownLibFilesForCompilerOptions(options, ts);
+
+    for (const lib of libs) {
+      if (this.isExcluded(lib)) continue;
+      const sourceFile = this.resolver.resolveSourceFile(
+        this.sourceFile,
+        this.f.createStringLiteral("typescript/lib/" + lib.replace(".d.ts", ""))
+      );
+      if (!sourceFile) continue;
+      this.cache.globalSourceFiles.push(sourceFile);
+    }
+    return this.cache.globalSourceFiles;
+  }
+
+  /**
+   * This is a custom resolver based on populated `locals` from the binder. It uses a custom resolution algorithm since
+   * we have no access to the binder/TypeChecker directly and instantiating a TypeChecker per file/transformer is incredible slow.
+   */
+  protected resolveDeclaration(typeName: EntityName): {
+    declaration: Node;
+    importDeclaration?: ImportDeclaration | JSDocImportTag;
+    typeOnly?: boolean;
+  } | void {
+    let current: Node = typeName.parent;
+    if (typeName.kind === SyntaxKind.QualifiedName) return; // namespace access not supported yet, e.g. type a = Namespace.X;
+
+    let declaration: Node | undefined = undefined;
+
+    while (current) {
+      if (isNodeWithLocals(current) && current.locals) {
+        const found = current.locals.get(typeName.escapedText);
+        if (found && found.declarations && found.declarations[0]) {
+          /**
+           * Discard parameters, since they can not be referenced from inside
+           *
+           * ```typescript
+           * type B = string;
+           * function a(B: B) {}
+           *
+           * class A {
+           *    constructor(B: B) {}
+           * }
+           * ```
+           *
+           */
+          if (!isParameter(found.declarations[0])) {
+            declaration = found.declarations[0];
+            break;
+          }
         }
-
-        if (declaration && declaration.kind === SyntaxKind.TypeParameter && declaration.parent.kind === SyntaxKind.TypeAliasDeclaration) {
-            //for alias like `type MyAlias<T> = T`, `T` is returned from `typeChecker.getDeclaredTypeOfSymbol(symbol)`.
-            declaration = declaration.parent as TypeAliasDeclaration;
+      }
+
+      if (current.kind === SyntaxKind.SourceFile) break;
+      current = current.parent;
+    }
+
+    if (!declaration) {
+      // look in globals, read through all files, see checker.ts initializeTypeChecker
+      for (const file of this.getGlobalLibs()) {
+        const globals = getGlobalsOfSourceFile(file);
+        if (!globals) continue;
+        const symbol = globals.get(typeName.escapedText);
+        if (symbol && symbol.declarations && symbol.declarations[0]) {
+          declaration = symbol.declarations[0];
+          // console.log('found global', typeName.escapedText, 'in', file.fileName);
+          break;
         }
-
-        if (!declaration) return;
-
-        return { declaration, importDeclaration, typeOnly };
-    }
-
-    protected getDeclarationVariableName(typeName: EntityName): Identifier {
-        if (isIdentifier(typeName)) {
-            return this.f.createIdentifier('__Ω' + getIdentifierName(typeName));
+      }
+    }
+
+    let importDeclaration: ImportDeclaration | JSDocImportTag | undefined =
+      undefined;
+    let typeOnly = false;
+
+    if (declaration && isImportSpecifier(declaration)) {
+      if (declaration.isTypeOnly) typeOnly = true;
+      importDeclaration = declaration.parent.parent.parent;
+    } else if (declaration && isImportDeclaration(declaration)) {
+      // declaration = this.resolveImportSpecifier(typeName.escapedText, declaration);
+      importDeclaration = declaration;
+    } else if (declaration && isImportClause(declaration)) {
+      importDeclaration = declaration.parent;
+    }
+
+    if (importDeclaration) {
+      if (
+        importDeclaration.importClause &&
+        importDeclaration.importClause.isTypeOnly
+      )
+        typeOnly = true;
+      declaration = this.resolveImportSpecifier(
+        getEscapedText(typeName),
+        importDeclaration,
+        this.sourceFile
+      );
+    }
+
+    if (
+      declaration &&
+      declaration.kind === SyntaxKind.TypeParameter &&
+      declaration.parent.kind === SyntaxKind.TypeAliasDeclaration
+    ) {
+      //for alias like `type MyAlias<T> = T`, `T` is returned from `typeChecker.getDeclaredTypeOfSymbol(symbol)`.
+      declaration = declaration.parent as TypeAliasDeclaration;
+    }
+
+    if (!declaration) return;
+
+    return { declaration, importDeclaration, typeOnly };
+  }
+
+  protected getDeclarationVariableName(typeName: EntityName): Identifier {
+    if (isIdentifier(typeName)) {
+      return this.f.createIdentifier("__Ω" + getIdentifierName(typeName));
+    }
+
+    function joinQualifiedName(name: EntityName): string {
+      if (isIdentifier(name)) return getIdentifierName(name);
+      return joinQualifiedName(name.left) + "_" + getIdentifierName(name.right);
+    }
+
+    return this.f.createIdentifier("__Ω" + joinQualifiedName(typeName));
+  }
+
+  /**
+   * The semantic of isExcluded is different from checking if the fileName is part
+   * of reflection config option. isExcluded checks if the file should be excluded
+   * via the exclude option. mainly used to exclude globals and external libraries.
+   */
+  protected isExcluded(fileName: string): boolean {
+    // getConfigResolver depends on the current source file, so we know the "exclude" option from deepkit config
+    const resolver =
+      this.overriddenConfigResolver ||
+      getConfigResolver(
+        this.cache.resolver,
+        this.parseConfigHost,
+        this.compilerOptions,
+        this.sourceFile
+      );
+    const res = reflectionModeMatcher(
+      { reflection: "default", exclude: resolver.config.exclude },
+      fileName
+    );
+    return res === "never";
+  }
+
+  protected extractPackStructOfTypeReference(
+    type: TypeReferenceNode | ExpressionWithTypeArguments,
+    program: CompilerProgram
+  ): void {
+    const typeName: EntityName | undefined = isTypeReferenceNode(type)
+      ? type.typeName
+      : isIdentifier(type.expression)
+        ? type.expression
+        : undefined;
+    if (!typeName) {
+      program.pushOp(ReflectionOp.any);
+      return;
+    }
+
+    if (
+      isIdentifier(typeName) &&
+      getIdentifierName(typeName) === "InlineRuntimeType" &&
+      type.typeArguments &&
+      type.typeArguments[0] &&
+      isTypeQueryNode(type.typeArguments[0])
+    ) {
+      const expression = serializeEntityNameAsExpression(
+        this.f,
+        type.typeArguments[0].exprName
+      );
+      program.pushOp(ReflectionOp.arg, program.pushStack(expression));
+      return;
+    }
+
+    if (
+      isIdentifier(typeName) &&
+      getIdentifierName(typeName) !== "constructor" &&
+      this.knownClasses[getIdentifierName(typeName)]
+    ) {
+      const name = getIdentifierName(typeName);
+      const op = this.knownClasses[name];
+      program.pushOp(op);
+    } else if (
+      isIdentifier(typeName) &&
+      getIdentifierName(typeName) === "Promise"
+    ) {
+      //promise has always one sub type
+      if (type.typeArguments && type.typeArguments[0]) {
+        this.extractPackStructOfType(type.typeArguments[0], program);
+      } else {
+        program.pushOp(ReflectionOp.any);
+      }
+      program.pushOp(ReflectionOp.promise);
+    } else if (
+      isIdentifier(typeName) &&
+      getIdentifierName(typeName) === "integer"
+    ) {
+      program.pushOp(
+        ReflectionOp.numberBrand,
+        TypeNumberBrand.integer as number
+      );
+    } else if (
+      isIdentifier(typeName) &&
+      getIdentifierName(typeName) !== "constructor" &&
+      TypeNumberBrand[getIdentifierName(typeName) as any] !== undefined
+    ) {
+      program.pushOp(
+        ReflectionOp.numberBrand,
+        TypeNumberBrand[getIdentifierName(typeName) as any] as any
+      );
+    } else {
+      //check if it references a variable
+      if (isIdentifier(typeName)) {
+        const variable = program.findVariable(getIdentifierName(typeName));
+        if (variable) {
+          program.pushOp(
+            ReflectionOp.loads,
+            variable.frameOffset,
+            variable.stackIndex
+          );
+          return;
         }
-
-        function joinQualifiedName(name: EntityName): string {
-            if (isIdentifier(name)) return getIdentifierName(name);
-            return joinQualifiedName(name.left) + '_' + getIdentifierName(name.right);
+      } else if (isInferTypeNode(typeName)) {
+        this.extractPackStructOfType(typeName, program);
+        return;
+      }
+
+      const resolved = this.resolveDeclaration(typeName);
+
+      if (!resolved) {
+        //maybe reference to enum
+        if (isQualifiedName(typeName)) {
+          if (isIdentifier(typeName.left)) {
+            const resolved = this.resolveDeclaration(typeName.left);
+            if (resolved && isEnumDeclaration(resolved.declaration)) {
+              let lastExpression: Expression | undefined;
+              let indexValue: number = 0;
+              for (const member of resolved.declaration.members) {
+                if (
+                  getNameAsString(member.name) ===
+                  getNameAsString(typeName.right)
+                ) {
+                  if (member.initializer) {
+                    program.pushOp(
+                      ReflectionOp.arg,
+                      program.pushStack(
+                        this.nodeConverter.toExpression(member.initializer)
+                      )
+                    );
+                  } else if (lastExpression) {
+                    const exp = this.nodeConverter.toExpression(lastExpression);
+                    program.pushOp(
+                      ReflectionOp.arg,
+                      program.pushStack(
+                        this.f.createBinaryExpression(
+                          exp,
+                          SyntaxKind.PlusToken,
+                          this.nodeConverter.toExpression(indexValue)
+                        )
+                      )
+                    );
+                  } else {
+                    program.pushOp(
+                      ReflectionOp.arg,
+                      program.pushStack(
+                        this.nodeConverter.toExpression(indexValue)
+                      )
+                    );
+                  }
+                  return;
+                } else {
+                  indexValue++;
+                  if (member.initializer) {
+                    lastExpression = member.initializer;
+                    //restart index
+                    indexValue = 0;
+                  }
+                }
+              }
+            }
+          }
         }
 
-        return this.f.createIdentifier('__Ω' + joinQualifiedName(typeName));
-    }
-
-    /**
-     * The semantic of isExcluded is different from checking if the fileName is part
-     * of reflection config option. isExcluded checks if the file should be excluded
-     * via the exclude option. mainly used to exclude globals and external libraries.
-     */
-    protected isExcluded(fileName: string): boolean {
-        // getConfigResolver depends on the current source file, so we know the "exclude" option from deepkit config
-        const resolver = this.overriddenConfigResolver || getConfigResolver(this.cache.resolver, this.parseConfigHost, this.compilerOptions, this.sourceFile);
-        const res = reflectionModeMatcher({ reflection: 'default', exclude: resolver.config.exclude }, fileName);
-        return res === 'never';
-    }
-
-    protected extractPackStructOfTypeReference(type: TypeReferenceNode | ExpressionWithTypeArguments, program: CompilerProgram): void {
-        const typeName: EntityName | undefined = isTypeReferenceNode(type) ? type.typeName : (isIdentifier(type.expression) ? type.expression : undefined);
-        if (!typeName) {
+        //non-existing references are ignored.
+        program.pushOp(ReflectionOp.never);
+        debug2(
+          `Could not resolve ${getNameAsString(typeName)} in ${program.sourceFile?.fileName || "intrinsic"}`
+        );
+        return;
+      }
+
+      let declaration: Node = resolved.declaration;
+      const declarationSourceFile = findSourceFile(declaration);
+
+      // if (!declarationSourceFile) {
+      //     program.pushOp(ReflectionOp.never);
+      //     debug2(`Could not find source file for ${getNameAsString(typeName)} in ${program.sourceFile.fileName}`);
+      //     return;
+      // }
+
+      const isGlobal =
+        !declarationSourceFile ||
+        (resolved.importDeclaration === undefined &&
+          declarationSourceFile.fileName !== this.sourceFile.fileName);
+      const isFromImport = resolved.importDeclaration !== undefined;
+
+      if (isVariableDeclaration(declaration)) {
+        if (declaration.type) {
+          declaration = declaration.type;
+        } else if (declaration.initializer) {
+          declaration = declaration.initializer;
+        }
+      }
+
+      if (isModuleDeclaration(declaration) && resolved.importDeclaration) {
+        if (isIdentifier(typeName))
+          ensureImportIsEmitted(resolved.importDeclaration, typeName);
+
+        //we can not infer from module declaration, so do `typeof T` in runtime
+        program.pushOp(
+          ReflectionOp.typeof,
+          program.pushStack(
+            this.f.createArrowFunction(
+              undefined,
+              undefined,
+              [],
+              undefined,
+              undefined,
+              serializeEntityNameAsExpression(this.f, typeName)
+            )
+          )
+        );
+      } else if (
+        isTypeAliasDeclaration(declaration) ||
+        isInterfaceDeclaration(declaration) ||
+        isEnumDeclaration(declaration)
+      ) {
+        //Set/Map are interface declarations
+        const name = getNameAsString(typeName);
+        if (name === "Array") {
+          if (type.typeArguments && type.typeArguments[0]) {
+            this.extractPackStructOfType(type.typeArguments[0], program);
+          } else {
             program.pushOp(ReflectionOp.any);
-            return;
+          }
+
+          program.pushOp(ReflectionOp.array);
+          return;
+        } else if (name === "Function") {
+          program.pushFrame();
+          const index = program.pushStack(
+            this.f.createArrowFunction(
+              undefined,
+              undefined,
+              [],
+              undefined,
+              undefined,
+              this.f.createIdentifier("Function")
+            )
+          );
+          program.pushOp(ReflectionOp.functionReference, index);
+          program.popFrameImplicit();
+          return;
+        } else if (name === "Set") {
+          if (type.typeArguments && type.typeArguments[0]) {
+            this.extractPackStructOfType(type.typeArguments[0], program);
+          } else {
+            program.pushOp(ReflectionOp.any);
+          }
+          program.pushOp(ReflectionOp.set);
+          return;
+        } else if (name === "Map") {
+          if (type.typeArguments && type.typeArguments[0]) {
+            this.extractPackStructOfType(type.typeArguments[0], program);
+          } else {
+            program.pushOp(ReflectionOp.any);
+          }
+          if (type.typeArguments && type.typeArguments[1]) {
+            this.extractPackStructOfType(type.typeArguments[1], program);
+          } else {
+            program.pushOp(ReflectionOp.any);
+          }
+          program.pushOp(ReflectionOp.map);
+          return;
         }
 
-        if (isIdentifier(typeName) && getIdentifierName(typeName) === 'InlineRuntimeType' && type.typeArguments && type.typeArguments[0] && isTypeQueryNode(type.typeArguments[0])) {
-            const expression = serializeEntityNameAsExpression(this.f, type.typeArguments[0].exprName);
-            program.pushOp(ReflectionOp.arg, program.pushStack(expression));
+        const runtimeTypeName = this.getDeclarationVariableName(typeName);
+
+        //to break recursion, we track which declaration has already been compiled
+        if (
+          !this.compiledDeclarations.has(declaration) &&
+          !this.compileDeclarations.has(declaration)
+        ) {
+          if (
+            declarationSourceFile &&
+            this.isExcluded(declarationSourceFile.fileName)
+          ) {
+            program.pushOp(ReflectionOp.any);
             return;
-        }
-
-        if (isIdentifier(typeName) && getIdentifierName(typeName) !== 'constructor' && this.knownClasses[getIdentifierName(typeName)]) {
-            const name = getIdentifierName(typeName);
-            const op = this.knownClasses[name];
-            program.pushOp(op);
-        } else if (isIdentifier(typeName) && getIdentifierName(typeName) === 'Promise') {
-            //promise has always one sub type
-            if (type.typeArguments && type.typeArguments[0]) {
-                this.extractPackStructOfType(type.typeArguments[0], program);
-            } else {
-                program.pushOp(ReflectionOp.any);
-            }
-            program.pushOp(ReflectionOp.promise);
-        } else if (isIdentifier(typeName) && getIdentifierName(typeName) === 'integer') {
-            program.pushOp(ReflectionOp.numberBrand, TypeNumberBrand.integer as number);
-        } else if (isIdentifier(typeName) && getIdentifierName(typeName) !== 'constructor' && TypeNumberBrand[getIdentifierName(typeName) as any] !== undefined) {
-            program.pushOp(ReflectionOp.numberBrand, TypeNumberBrand[getIdentifierName(typeName) as any] as any);
-        } else {
-            //check if it references a variable
-            if (isIdentifier(typeName)) {
-                const variable = program.findVariable(getIdentifierName(typeName));
-                if (variable) {
-                    program.pushOp(ReflectionOp.loads, variable.frameOffset, variable.stackIndex);
-                    return;
-                }
-            } else if (isInferTypeNode(typeName)) {
-                this.extractPackStructOfType(typeName, program);
-                return;
-            }
-
-            const resolved = this.resolveDeclaration(typeName);
-
-            if (!resolved) {
-                //maybe reference to enum
-                if (isQualifiedName(typeName)) {
-                    if (isIdentifier(typeName.left)) {
-                        const resolved = this.resolveDeclaration(typeName.left);
-                        if (resolved && isEnumDeclaration(resolved.declaration)) {
-                            let lastExpression: Expression | undefined;
-                            let indexValue: number = 0;
-                            for (const member of resolved.declaration.members) {
-                                if (getNameAsString(member.name) === getNameAsString(typeName.right)) {
-                                    if (member.initializer) {
-                                        program.pushOp(ReflectionOp.arg, program.pushStack(this.nodeConverter.toExpression(member.initializer)));
-                                    } else if (lastExpression) {
-                                        const exp = this.nodeConverter.toExpression(lastExpression);
-                                        program.pushOp(ReflectionOp.arg, program.pushStack(
-                                            this.f.createBinaryExpression(exp, SyntaxKind.PlusToken, this.nodeConverter.toExpression(indexValue)),
-                                        ));
-                                    } else {
-                                        program.pushOp(ReflectionOp.arg, program.pushStack(this.nodeConverter.toExpression(indexValue)));
-                                    }
-                                    return;
-                                } else {
-                                    indexValue++;
-                                    if (member.initializer) {
-                                        lastExpression = member.initializer;
-                                        //restart index
-                                        indexValue = 0;
-                                    }
-                                }
-                            }
-                        }
-                    }
-                }
-
-                //non-existing references are ignored.
-                program.pushOp(ReflectionOp.never);
-                debug2(`Could not resolve ${getNameAsString(typeName)} in ${program.sourceFile?.fileName || 'intrinsic'}`);
+          }
+
+          if (isGlobal) {
+            //we don't embed non-global imported declarations anymore, only globals
+            this.embedDeclarations.set(declaration, {
+              name: typeName,
+              sourceFile: declarationSourceFile
+            });
+          } else if (isFromImport) {
+            if (resolved.importDeclaration) {
+              //if explicit `import {type T}`, we do not emit an import and instead push any
+              if (resolved.typeOnly) {
+                this.resolveTypeOnlyImport(typeName, program);
                 return;
-            }
-
-            let declaration: Node = resolved.declaration;
-            const declarationSourceFile = findSourceFile(declaration);
-
-            // if (!declarationSourceFile) {
-            //     program.pushOp(ReflectionOp.never);
-            //     debug2(`Could not find source file for ${getNameAsString(typeName)} in ${program.sourceFile.fileName}`);
-            //     return;
-            // }
-
-            const isGlobal = !declarationSourceFile || (resolved.importDeclaration === undefined && declarationSourceFile.fileName !== this.sourceFile.fileName);
-            const isFromImport = resolved.importDeclaration !== undefined;
-
-            if (isVariableDeclaration(declaration)) {
-                if (declaration.type) {
-                    declaration = declaration.type;
-                } else if (declaration.initializer) {
-                    declaration = declaration.initializer;
-                }
-            }
-
-            if (isModuleDeclaration(declaration) && resolved.importDeclaration) {
-                if (isIdentifier(typeName)) ensureImportIsEmitted(resolved.importDeclaration, typeName);
-
-                //we can not infer from module declaration, so do `typeof T` in runtime
-                program.pushOp(
-                    ReflectionOp.typeof,
-                    program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, serializeEntityNameAsExpression(this.f, typeName))),
+              }
+
+              // debug('import', getNameAsString(typeName), 'from',
+              //     (resolved.importDeclaration.moduleSpecifier as StringLiteral).text, ' in', program.sourceFile.fileName);
+
+              // Previously we checked for tsconfig.json/package.json with a "reflection" option.
+              // This is now changed, and we look directly if there is a __Ω{name} exported.
+              // If so, then we can be 100% sure that the referenced module is built with runtime types.
+              // Note that if `found` is a TypeScript file (not d.ts), then we need to check using the fileName
+              // since it is part of the current transpilation phase. Thus, it depends on the
+              // current config + @reflection decorator instead.
+              if (declarationSourceFile.fileName.endsWith(".d.ts")) {
+                // Note that if import was something like `import { XY } from 'my-module'` then resolve()
+                // returns the index.d.ts file of the module, not the actual file where XY is exported.
+                // this is necessary since we emit an additional import `import { __ΩXY } from 'my-module'`,
+                // so we check if whatever file we get from resolve() actually exports __ΩXY.
+                const resolverDecVariable = this.resolveImportSpecifier(
+                  getEscapedText(runtimeTypeName),
+                  resolved.importDeclaration,
+                  this.sourceFile
                 );
-            } else if (isTypeAliasDeclaration(declaration) || isInterfaceDeclaration(declaration) || isEnumDeclaration(declaration)) {
-                //Set/Map are interface declarations
-                const name = getNameAsString(typeName);
-                if (name === 'Array') {
-                    if (type.typeArguments && type.typeArguments[0]) {
-                        this.extractPackStructOfType(type.typeArguments[0], program);
-                    } else {
-                        program.pushOp(ReflectionOp.any);
-                    }
-
-                    program.pushOp(ReflectionOp.array);
-                    return;
-                } else if (name === 'Function') {
-                    program.pushFrame();
-                    const index = program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, this.f.createIdentifier('Function')));
-                    program.pushOp(ReflectionOp.functionReference, index);
-                    program.popFrameImplicit();
-                    return;
-                } else if (name === 'Set') {
-                    if (type.typeArguments && type.typeArguments[0]) {
-                        this.extractPackStructOfType(type.typeArguments[0], program);
-                    } else {
-                        program.pushOp(ReflectionOp.any);
-                    }
-                    program.pushOp(ReflectionOp.set);
-                    return;
-                } else if (name === 'Map') {
-                    if (type.typeArguments && type.typeArguments[0]) {
-                        this.extractPackStructOfType(type.typeArguments[0], program);
-                    } else {
-                        program.pushOp(ReflectionOp.any);
-                    }
-                    if (type.typeArguments && type.typeArguments[1]) {
-                        this.extractPackStructOfType(type.typeArguments[1], program);
-                    } else {
-                        program.pushOp(ReflectionOp.any);
-                    }
-                    program.pushOp(ReflectionOp.map);
-                    return;
-                }
 
-                const runtimeTypeName = this.getDeclarationVariableName(typeName);
-
-                //to break recursion, we track which declaration has already been compiled
-                if (!this.compiledDeclarations.has(declaration) && !this.compileDeclarations.has(declaration)) {
-                    if (declarationSourceFile && this.isExcluded(declarationSourceFile.fileName)) {
-                        program.pushOp(ReflectionOp.any);
-                        return;
-                    }
-
-                    if (isGlobal) {
-                        //we don't embed non-global imported declarations anymore, only globals
-                        this.embedDeclarations.set(declaration, {
-                            name: typeName,
-                            sourceFile: declarationSourceFile,
-                        });
-                    } else if (isFromImport) {
-                        if (resolved.importDeclaration) {
-                            //if explicit `import {type T}`, we do not emit an import and instead push any
-                            if (resolved.typeOnly) {
-                                this.resolveTypeOnlyImport(typeName, program);
-                                return;
-                            }
-
-                            // debug('import', getNameAsString(typeName), 'from',
-                            //     (resolved.importDeclaration.moduleSpecifier as StringLiteral).text, ' in', program.sourceFile.fileName);
-
-                            // Previously we checked for tsconfig.json/package.json with a "reflection" option.
-                            // This is now changed, and we look directly if there is a __Ω{name} exported.
-                            // If so, then we can be 100% sure that the referenced module is built with runtime types.
-                            // Note that if `found` is a TypeScript file (not d.ts), then we need to check using the fileName
-                            // since it is part of the current transpilation phase. Thus, it depends on the
-                            // current config + @reflection decorator instead.
-                            if (declarationSourceFile.fileName.endsWith('.d.ts')) {
-                                // Note that if import was something like `import { XY } from 'my-module'` then resolve()
-                                // returns the index.d.ts file of the module, not the actual file where XY is exported.
-                                // this is necessary since we emit an additional import `import { __ΩXY } from 'my-module'`,
-                                // so we check if whatever file we get from resolve() actually exports __ΩXY.
-                                const resolverDecVariable = this.resolveImportSpecifier(
-                                    getEscapedText(runtimeTypeName),
-                                    resolved.importDeclaration,
-                                    this.sourceFile,
-                                );
-
-                                if (!resolverDecVariable) {
-                                    debug2(`Symbol ${runtimeTypeName.escapedText} not found in ${declarationSourceFile.fileName}`);
-                                    //no __Ω{name} exported, so we can not be sure if the module is built with runtime types
-                                    this.resolveTypeOnlyImport(typeName, program);
-                                    return;
-                                }
-
-                                this.addImports.push({ identifier: runtimeTypeName, from: resolved.importDeclaration.moduleSpecifier });
-                            } else {
-                                const reflection = this.getReflectionConfig(declarationSourceFile);
-                                // if this is never, then its generally disabled for this file
-                                if (reflection.mode === 'never') {
-                                    this.resolveTypeOnlyImport(typeName, program);
-                                    return;
-                                }
-
-                                const declarationReflection = this.isWithReflection(declarationSourceFile, declaration);
-                                if (!declarationReflection) {
-                                    this.resolveTypeOnlyImport(typeName, program);
-                                    return;
-                                }
-
-                                this.addImports.push({ identifier: runtimeTypeName, from: resolved.importDeclaration.moduleSpecifier });
-                            }
-                        }
-                    } else {
-                        //it's a reference type inside the same file. Make sure its type is reflected
-                        const reflection = this.isWithReflection(program.sourceFile, declaration);
-                        if (!reflection) {
-                            this.resolveTypeOnlyImport(typeName, program);
-                            return;
-                        }
-
-                        this.compileDeclarations.set(declaration, {
-                            name: typeName,
-                            sourceFile: declarationSourceFile,
-                        });
-                    }
-                }
-
-                const index = program.pushStack(
-                    program.forNode === declaration ? 0 : this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, runtimeTypeName),
+                if (!resolverDecVariable) {
+                  debug2(
+                    `Symbol ${runtimeTypeName.escapedText} not found in ${declarationSourceFile.fileName}`
+                  );
+                  //no __Ω{name} exported, so we can not be sure if the module is built with runtime types
+                  this.resolveTypeOnlyImport(typeName, program);
+                  return;
+                }
+
+                this.addImports.push({
+                  identifier: runtimeTypeName,
+                  from: resolved.importDeclaration.moduleSpecifier
+                });
+              } else {
+                const reflection = this.getReflectionConfig(
+                  declarationSourceFile
                 );
-                if (type.typeArguments) {
-                    for (const argument of type.typeArguments) {
-                        this.extractPackStructOfType(argument, program);
-                    }
-                    program.pushOp(ReflectionOp.inlineCall, index, type.typeArguments.length);
-                } else {
-                    program.pushOp(ReflectionOp.inline, index);
+                // if this is never, then its generally disabled for this file
+                if (reflection.mode === "never") {
+                  this.resolveTypeOnlyImport(typeName, program);
+                  return;
                 }
 
-                // if (type.typeArguments) {
-                //     for (const argument of type.typeArguments) {
-                //         this.extractPackStructOfType(argument, program);
-                //     }
-                //     program.pushOp(ReflectionOp.inlineCall, index, type.typeArguments.length);
-                // } else {
-                //     program.pushOp(ReflectionOp.inline, index);
-                // }
-                // } else if (isTypeLiteralNode(declaration)) {
-                //     this.extractPackStructOfType(declaration, program);
-                //     return;
-                // } else if (isMappedTypeNode(declaration)) {
-                //     //<Type>{[Property in keyof Type]: boolean;};
-                //     this.extractPackStructOfType(declaration, program);
-                //     return;
-            } else if (isClassDeclaration(declaration) || isFunctionDeclaration(declaration) || isFunctionExpression(declaration) || isArrowFunction(declaration)) {
-                // classes, functions and arrow functions are handled differently, since they exist in runtime.
-
-                //if explicit `import {type T}`, we do not emit an import and instead push any
-                if (resolved.typeOnly) {
-                    this.resolveTypeOnlyImport(typeName, program);
-                    return;
-                }
-
-                // If a function/class declarations comes from a built library (e.g. node_modules), then we
-                // declarationSourceFile is a d.ts file. We do know if they are built in runtime by checking `xy.__type`.
-                // Otherwise, check if the file will be built with runtime types.
-                const reflection = declarationSourceFile?.fileName.endsWith('.d.ts') || this.isWithReflection(program.sourceFile, declaration);
-                if (!reflection) {
-                    this.resolveTypeOnlyImport(typeName, program);
-                    return;
-                }
-
-                if (resolved.importDeclaration && isIdentifier(typeName)) ensureImportIsEmitted(resolved.importDeclaration, typeName);
-                program.pushFrame();
-                if (type.typeArguments) {
-                    for (const typeArgument of type.typeArguments) {
-                        this.extractPackStructOfType(typeArgument, program);
-                    }
-                }
-                const body = isIdentifier(typeName) ? typeName : this.createAccessorForEntityName(typeName);
-                const index = program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, body));
-                program.pushOp(isClassDeclaration(declaration) ? ReflectionOp.classReference : ReflectionOp.functionReference, index);
-                program.popFrameImplicit();
-            } else if (isTypeParameterDeclaration(declaration)) {
-                this.resolveTypeParameter(declaration, type, program);
-            } else {
-                this.extractPackStructOfType(declaration, program);
+                const declarationReflection = this.isWithReflection(
+                  declarationSourceFile,
+                  declaration
+                );
+                if (!declarationReflection) {
+                  this.resolveTypeOnlyImport(typeName, program);
+                  return;
+                }
+
+                this.addImports.push({
+                  identifier: runtimeTypeName,
+                  from: resolved.importDeclaration.moduleSpecifier
+                });
+              }
+            }
+          } else {
+            //it's a reference type inside the same file. Make sure its type is reflected
+            const reflection = this.isWithReflection(
+              program.sourceFile,
+              declaration
+            );
+            if (!reflection) {
+              this.resolveTypeOnlyImport(typeName, program);
+              return;
             }
-        }
-    }
 
-    /**
-     * Returns the class declaration, function/arrow declaration, or block where type was used.
-     */
-    protected getTypeUser(type: Node): Node {
-        let current: Node = type;
-        while (current) {
-            if (current.kind === SyntaxKind.Block) return current; //return the block
-            if (current.kind === SyntaxKind.ClassDeclaration) return current; //return the class
-            if (current.kind === SyntaxKind.ClassExpression) return current; //return the class
-            if (current.kind === SyntaxKind.Constructor) return current.parent; //return the class
-            if (current.kind === SyntaxKind.MethodDeclaration) return current.parent; //return the class
-            if (current.kind === SyntaxKind.ArrowFunction || current.kind === SyntaxKind.FunctionDeclaration || current.kind === SyntaxKind.FunctionExpression) return current;
-
-            current = current.parent;
+            this.compileDeclarations.set(declaration, {
+              name: typeName,
+              sourceFile: declarationSourceFile
+            });
+          }
         }
-        return current;
-    }
-
-    /**
-     * With this function we want to check if `type` is used in the signature itself from the parent of `declaration`.
-     * If so, we do not try to infer the type from runtime values.
-     *
-     * Examples where we do not infer from runtime, `type` being `T` and `declaration` being `<T>` (return false):
-     *
-     * ```typescript
-     * class User<T> {
-     *     config: T;
-     * }
-     *
-     * class User<T> {
-     *    constructor(public config: T) {}
-     * }
-     *
-     * function do<T>(item: T): void {}
-     * function do<T>(item: T): T {}
-     * ```
-     *
-     * Examples where we infer from runtime (return true):
-     *
-     * ```typescript
-     * function do<T>(item: T) {
-     *     return typeOf<T>; //<-- because of that
-     * }
-     *
-     * function do<T>(item: T) {
-     *     class A {
-     *         config: T; //<-- because of that
-     *     }
-     *     return A;
-     * }
-     *
-     * function do<T>(item: T) {
-     *     class A {
-     *         doIt() {
-     *             class B {
-     *                 config: T; //<-- because of that
-     *             }
-     *             return B;
-     *         }
-     *     }
-     *     return A;
-     * }
-     *
-     * function do<T>(item: T) {
-     *     class A {
-     *         doIt(): T { //<-- because of that
-     *         }
-     *     }
-     *     return A;
-     * }
-     * ```
-     */
-    protected needsToBeInferred(declaration: TypeParameterDeclaration, type: TypeReferenceNode | ExpressionWithTypeArguments): boolean {
-        const declarationUser = this.getTypeUser(declaration);
-        const typeUser = this.getTypeUser(type);
-
-        return declarationUser !== typeUser;
-    }
-
-    protected resolveTypeOnlyImport(entityName: EntityName, program: CompilerProgram) {
-        program.pushOp(ReflectionOp.any);
-        const typeName = ts.isIdentifier(entityName)
-            ? getIdentifierName(entityName)
-            : getIdentifierName(entityName.right);
-        this.resolveTypeName(typeName, program);
-    }
-
-    protected resolveTypeName(typeName: string, program: CompilerProgram) {
-        if (!typeName) return;
-        program.pushOp(ReflectionOp.typeName, program.findOrAddStackEntry(typeName));
-    }
-
-    protected resolveTypeParameter(declaration: TypeParameterDeclaration, type: TypeReferenceNode | ExpressionWithTypeArguments, program: CompilerProgram) {
-        //check if `type` was used in an expression. if so, we need to resolve it from runtime, otherwise we mark it as T
-        const isUsedInFunction = isFunctionLike(declaration.parent);
-        const resolveRuntimeTypeParameter = (isUsedInFunction && program.isResolveFunctionParameters(declaration.parent)) || (this.needsToBeInferred(declaration, type));
-
-        if (resolveRuntimeTypeParameter) {
-            //go through all parameters and look where `type.name.escapedText` is used (recursively).
-            //go through all found parameters and replace `T` with `infer T` and embed its type in `typeof parameter extends Type<infer T> ? T : never`, if T is not directly used
-            const argumentName = declaration.name.escapedText as string; //T
-            const foundUsers: { type: Node, parameterName: Identifier }[] = [];
-
-            if (isUsedInFunction) {
-                for (const parameter of (declaration.parent as SignatureDeclaration).parameters) {
-                    if (!parameter.type) continue;
-                    //if deeply available?
-                    let found = false;
-                    const searchArgument = (node: Node): Node => {
-                        node = visitEachChild(node, searchArgument, this.context);
-
-                        if (isIdentifier(node) && node.escapedText === argumentName) {
-                            //transform to infer T
-                            found = true;
-                            node = this.f.createInferTypeNode(declaration);
-                        }
-
-                        return node;
-                    };
-
-                    if (isIdentifier(parameter.name)) {
-                        const updatedParameterType = visitEachChild(parameter.type, searchArgument, this.context);
-                        if (found) {
-                            foundUsers.push({ type: updatedParameterType, parameterName: parameter.name });
-                        }
-                    }
-                }
-            }
-
-            if (foundUsers.length) {
-                //todo: if there are multiple infers, we need to create an intersection
-                if (foundUsers.length > 1) {
-                    //todo: intersection start
-                }
-
-                const isReceiveType = foundUsers.find(v => isTypeReferenceNode(v.type) && isIdentifier(v.type.typeName) && getIdentifierName(v.type.typeName) === 'ReceiveType');
-                if (isReceiveType) {
-                    // If it's used in ReceiveType<T>, then we can just use T directly without trying to infer it from ReceiveType<T> itself
-                    program.pushOp(ReflectionOp.inline, program.pushStack(isReceiveType.parameterName));
-                } else {
-                    for (const foundUser of foundUsers) {
-                        program.pushConditionalFrame();
-
-                        program.pushOp(ReflectionOp.typeof, program.pushStack(this.f.createArrowFunction(undefined, undefined, [], undefined, undefined, foundUser.parameterName)));
-                        this.extractPackStructOfType(foundUser.type, program);
-                        program.pushOp(ReflectionOp.extends);
-
-                        const found = program.findVariable(getIdentifierName(declaration.name));
-                        if (found) {
-                            this.extractPackStructOfType(declaration.name, program);
-                        } else {
-                            //type parameter was never found in X of `Y extends X` (no `infer X` was created), probably due to a not supported parameter type expression.
-                            program.pushOp(ReflectionOp.any);
-                        }
-                        this.extractPackStructOfType({ kind: SyntaxKind.NeverKeyword } as TypeNode, program);
-                        program.pushOp(ReflectionOp.condition);
-                        program.popFrameImplicit();
-                    }
-                }
-
-                if (foundUsers.length > 1) {
-                    //todo: intersection end
-                }
 
-            } else if (declaration.constraint) {
-                if (isUsedInFunction) program.resolveFunctionParametersIncrease(declaration.parent);
-                const constraint = getEffectiveConstraintOfTypeParameter(declaration);
-                if (constraint) {
-                    this.extractPackStructOfType(constraint, program);
-                } else {
-                    program.pushOp(ReflectionOp.never);
-                }
-                if (isUsedInFunction) program.resolveFunctionParametersDecrease(declaration.parent);
-            } else {
-                program.pushOp(ReflectionOp.never);
-            }
+        const index = program.pushStack(
+          program.forNode === declaration
+            ? 0
+            : this.f.createArrowFunction(
+                undefined,
+                undefined,
+                [],
+                undefined,
+                undefined,
+                runtimeTypeName
+              )
+        );
+        if (type.typeArguments) {
+          for (const argument of type.typeArguments) {
+            this.extractPackStructOfType(argument, program);
+          }
+          program.pushOp(
+            ReflectionOp.inlineCall,
+            index,
+            type.typeArguments.length
+          );
         } else {
-            program.pushOp(ReflectionOp.any);
-            // program.pushOp(ReflectionOp.typeParameter, program.findOrAddStackEntry(getNameAsString(typeName)));
+          program.pushOp(ReflectionOp.inline, index);
         }
-    }
-
-    protected createAccessorForEntityName(e: QualifiedName): PropertyAccessExpression {
-        return this.f.createPropertyAccessExpression(isIdentifier(e.left) ? e.left : this.createAccessorForEntityName(e.left), e.right);
-    }
 
-    protected findDeclarationInFile(sourceFile: SourceFile | ModuleDeclaration, declarationName: string): Declaration | undefined {
-        if (isNodeWithLocals(sourceFile) && sourceFile.locals) {
-            const declarationSymbol = sourceFile.locals.get(declarationName as __String);
-            if (declarationSymbol && declarationSymbol.declarations && declarationSymbol.declarations[0]) {
-                return declarationSymbol.declarations[0];
-            }
+        // if (type.typeArguments) {
+        //     for (const argument of type.typeArguments) {
+        //         this.extractPackStructOfType(argument, program);
+        //     }
+        //     program.pushOp(ReflectionOp.inlineCall, index, type.typeArguments.length);
+        // } else {
+        //     program.pushOp(ReflectionOp.inline, index);
+        // }
+        // } else if (isTypeLiteralNode(declaration)) {
+        //     this.extractPackStructOfType(declaration, program);
+        //     return;
+        // } else if (isMappedTypeNode(declaration)) {
+        //     //<Type>{[Property in keyof Type]: boolean;};
+        //     this.extractPackStructOfType(declaration, program);
+        //     return;
+      } else if (
+        isClassDeclaration(declaration) ||
+        isFunctionDeclaration(declaration) ||
+        isFunctionExpression(declaration) ||
+        isArrowFunction(declaration)
+      ) {
+        // classes, functions and arrow functions are handled differently, since they exist in runtime.
+
+        //if explicit `import {type T}`, we do not emit an import and instead push any
+        if (resolved.typeOnly) {
+          this.resolveTypeOnlyImport(typeName, program);
+          return;
         }
-        return;
-    }
 
-    protected resolveImportSpecifier(_declarationName: string | ModuleExportName, importOrExport: ExportDeclaration | ImportDeclaration | JSDocImportTag, sourceFile: SourceFile): Declaration | undefined {
-        const declarationName = 'string' === typeof _declarationName ? _declarationName : getIdentifierName(_declarationName);
-        if (!importOrExport.moduleSpecifier || !isStringLiteral(importOrExport.moduleSpecifier)) {
-            return;
+        // If a function/class declarations comes from a built library (e.g. node_modules), then we
+        // declarationSourceFile is a d.ts file. We do know if they are built in runtime by checking `xy.__type`.
+        // Otherwise, check if the file will be built with runtime types.
+        const reflection =
+          declarationSourceFile?.fileName.endsWith(".d.ts") ||
+          this.isWithReflection(program.sourceFile, declaration);
+        if (!reflection) {
+          this.resolveTypeOnlyImport(typeName, program);
+          return;
         }
 
-        const source: SourceFile | ModuleDeclaration | undefined = this.resolver.resolve(sourceFile, importOrExport);
-
-        if (!source) {
-            debug('module not found', (importOrExport.moduleSpecifier as any).text, 'Is transpileOnly enabled? It needs to be disabled.');
-            return;
+        if (resolved.importDeclaration && isIdentifier(typeName))
+          ensureImportIsEmitted(resolved.importDeclaration, typeName);
+        program.pushFrame();
+        if (type.typeArguments) {
+          for (const typeArgument of type.typeArguments) {
+            this.extractPackStructOfType(typeArgument, program);
+          }
         }
+        const body = isIdentifier(typeName)
+          ? typeName
+          : this.createAccessorForEntityName(typeName);
+        const index = program.pushStack(
+          this.f.createArrowFunction(
+            undefined,
+            undefined,
+            [],
+            undefined,
+            undefined,
+            body
+          )
+        );
+        program.pushOp(
+          isClassDeclaration(declaration)
+            ? ReflectionOp.classReference
+            : ReflectionOp.functionReference,
+          index
+        );
+        program.popFrameImplicit();
+      } else if (isTypeParameterDeclaration(declaration)) {
+        this.resolveTypeParameter(declaration, type, program);
+      } else {
+        this.extractPackStructOfType(declaration, program);
+      }
+    }
+  }
+
+  /**
+   * Returns the class declaration, function/arrow declaration, or block where type was used.
+   */
+  protected getTypeUser(type: Node): Node {
+    let current: Node = type;
+    while (current) {
+      if (current.kind === SyntaxKind.Block) return current; //return the block
+      if (current.kind === SyntaxKind.ClassDeclaration) return current; //return the class
+      if (current.kind === SyntaxKind.ClassExpression) return current; //return the class
+      if (current.kind === SyntaxKind.Constructor) return current.parent; //return the class
+      if (current.kind === SyntaxKind.MethodDeclaration) return current.parent; //return the class
+      if (
+        current.kind === SyntaxKind.ArrowFunction ||
+        current.kind === SyntaxKind.FunctionDeclaration ||
+        current.kind === SyntaxKind.FunctionExpression
+      )
+        return current;
 
-        const declaration = this.findDeclarationInFile(source, declarationName);
-        sourceFile = source;
-
-        /**
-         * declaration could also be `import {PrimaryKey} from 'xy'`, which we want to skip
-         */
-        if (declaration && !isImportSpecifier(declaration)) {
-            //if `export {PrimaryKey} from 'xy'`, then follow xy
-            if (isExportDeclaration(declaration)) {
-                return this.followExport(declarationName, declaration, sourceFile);
+      current = current.parent;
+    }
+    return current;
+  }
+
+  /**
+   * With this function we want to check if `type` is used in the signature itself from the parent of `declaration`.
+   * If so, we do not try to infer the type from runtime values.
+   *
+   * Examples where we do not infer from runtime, `type` being `T` and `declaration` being `<T>` (return false):
+   *
+   * ```typescript
+   * class User<T> {
+   *     config: T;
+   * }
+   *
+   * class User<T> {
+   *    constructor(public config: T) {}
+   * }
+   *
+   * function do<T>(item: T): void {}
+   * function do<T>(item: T): T {}
+   * ```
+   *
+   * Examples where we infer from runtime (return true):
+   *
+   * ```typescript
+   * function do<T>(item: T) {
+   *     return typeOf<T>; //<-- because of that
+   * }
+   *
+   * function do<T>(item: T) {
+   *     class A {
+   *         config: T; //<-- because of that
+   *     }
+   *     return A;
+   * }
+   *
+   * function do<T>(item: T) {
+   *     class A {
+   *         doIt() {
+   *             class B {
+   *                 config: T; //<-- because of that
+   *             }
+   *             return B;
+   *         }
+   *     }
+   *     return A;
+   * }
+   *
+   * function do<T>(item: T) {
+   *     class A {
+   *         doIt(): T { //<-- because of that
+   *         }
+   *     }
+   *     return A;
+   * }
+   * ```
+   */
+  protected needsToBeInferred(
+    declaration: TypeParameterDeclaration,
+    type: TypeReferenceNode | ExpressionWithTypeArguments
+  ): boolean {
+    const declarationUser = this.getTypeUser(declaration);
+    const typeUser = this.getTypeUser(type);
+
+    return declarationUser !== typeUser;
+  }
+
+  protected resolveTypeOnlyImport(
+    entityName: EntityName,
+    program: CompilerProgram
+  ) {
+    program.pushOp(ReflectionOp.any);
+    const typeName = ts.isIdentifier(entityName)
+      ? getIdentifierName(entityName)
+      : getIdentifierName(entityName.right);
+    this.resolveTypeName(typeName, program);
+  }
+
+  protected resolveTypeName(typeName: string, program: CompilerProgram) {
+    if (!typeName) return;
+    program.pushOp(
+      ReflectionOp.typeName,
+      program.findOrAddStackEntry(typeName)
+    );
+  }
+
+  protected resolveTypeParameter(
+    declaration: TypeParameterDeclaration,
+    type: TypeReferenceNode | ExpressionWithTypeArguments,
+    program: CompilerProgram
+  ) {
+    //check if `type` was used in an expression. if so, we need to resolve it from runtime, otherwise we mark it as T
+    const isUsedInFunction = isFunctionLike(declaration.parent);
+    const resolveRuntimeTypeParameter =
+      (isUsedInFunction &&
+        program.isResolveFunctionParameters(declaration.parent)) ||
+      this.needsToBeInferred(declaration, type);
+
+    if (resolveRuntimeTypeParameter) {
+      //go through all parameters and look where `type.name.escapedText` is used (recursively).
+      //go through all found parameters and replace `T` with `infer T` and embed its type in `typeof parameter extends Type<infer T> ? T : never`, if T is not directly used
+      const argumentName = declaration.name.escapedText as string; //T
+      const foundUsers: { type: Node; parameterName: Identifier }[] = [];
+
+      if (isUsedInFunction) {
+        for (const parameter of (declaration.parent as SignatureDeclaration)
+          .parameters) {
+          if (!parameter.type) continue;
+          //if deeply available?
+          let found = false;
+          const searchArgument = (node: Node): Node => {
+            node = visitEachChild(node, searchArgument, this.context);
+
+            if (
+              isTypeReferenceNode(node) &&
+              isIdentifier(node.typeName) &&
+              node.typeName.escapedText === argumentName
+            ) {
+              //transform to infer T
+              found = true;
+              node = this.f.createInferTypeNode(declaration);
             }
-            return declaration;
-        }
 
-        //not found, look in exports
-        if (isSourceFile(sourceFile)) {
-            for (const statement of sourceFile.statements) {
-                if (!isExportDeclaration(statement)) continue;
-                const found = this.followExport(declarationName, statement, sourceFile);
-                if (found) return found;
+            return node;
+          };
+
+          if (isIdentifier(parameter.name)) {
+            const updatedParameterType = visitEachChild(
+              parameter.type,
+              searchArgument,
+              this.context
+            );
+            if (found) {
+              foundUsers.push({
+                type: updatedParameterType,
+                parameterName: parameter.name
+              });
             }
+          }
         }
+      }
 
-        return;
-    }
+      if (foundUsers.length) {
+        //todo: if there are multiple infers, we need to create an intersection
+        if (foundUsers.length > 1) {
+          //todo: intersection start
+        }
 
-    protected followExport(declarationName: string, statement: ExportDeclaration, sourceFile: SourceFile): Declaration | undefined {
-        if (statement.exportClause) {
-            //export {y} from 'x'
-            if (isNamedExports(statement.exportClause)) {
-                for (const element of statement.exportClause.elements) {
-                    //see if declarationName is exported
-                    if (getEscapedText(element.name) === declarationName) {
-                        if (!statement.moduleSpecifier || !isStringLiteral(statement.moduleSpecifier)) {
-                            // it's `export {Class}` and Class is either a Declaration or ImportSpecifier
-                            if (!statement.moduleSpecifier || !isStringLiteral(statement.moduleSpecifier)) {
-                                // it's `export {Class};` and Class is either a Declaration or ImportSpecifier
-                                if (isNodeWithLocals(sourceFile) && sourceFile.locals) {
-                                    const found = sourceFile.locals.get(declarationName as __String);
-                                    if (found && found.declarations && found.declarations[0]) {
-                                        const declaration = found.declarations[0];
-                                        if (declaration && isImportSpecifier(declaration)) {
-                                            const importOrExport = declaration.parent.parent.parent;
-                                            const found = this.resolveImportSpecifier(
-                                                element.propertyName ? getEscapedText(element.propertyName) : declarationName,
-                                                importOrExport, sourceFile,
-                                            );
-                                            if (found) return found;
-                                        } else if (declaration) {
-                                        }
-                                        return declaration;
-                                    }
-                                }
-                            }
-                        } else {
-                            // it's `export {Class} from 'x'`
-                            const found = this.resolveImportSpecifier(element.propertyName ? getEscapedText(element.propertyName) : declarationName, statement, sourceFile);
-                            if (found) return found;
-                        }
-                    }
-                }
-            }
+        const isReceiveType = foundUsers.find(
+          v =>
+            isTypeReferenceNode(v.type) &&
+            isIdentifier(v.type.typeName) &&
+            getIdentifierName(v.type.typeName) === "ReceiveType"
+        );
+        if (isReceiveType) {
+          // If it's used in ReceiveType<T>, then we can just use T directly without trying to infer it from ReceiveType<T> itself
+          program.pushOp(
+            ReflectionOp.inline,
+            program.pushStack(isReceiveType.parameterName)
+          );
         } else {
-            //export * from 'x'
-            //see if `x` exports declarationName (or one of its exports * from 'y')
-            const found = this.resolveImportSpecifier(declarationName, statement, sourceFile);
+          for (const foundUser of foundUsers) {
+            program.pushConditionalFrame();
+
+            program.pushOp(
+              ReflectionOp.typeof,
+              program.pushStack(
+                this.f.createArrowFunction(
+                  undefined,
+                  undefined,
+                  [],
+                  undefined,
+                  undefined,
+                  foundUser.parameterName
+                )
+              )
+            );
+            this.extractPackStructOfType(foundUser.type, program);
+            program.pushOp(ReflectionOp.extends);
+
+            const found = program.findVariable(
+              getIdentifierName(declaration.name)
+            );
             if (found) {
-                return found;
+              this.extractPackStructOfType(declaration.name, program);
+            } else {
+              //type parameter was never found in X of `Y extends X` (no `infer X` was created), probably due to a not supported parameter type expression.
+              program.pushOp(ReflectionOp.any);
             }
+            this.extractPackStructOfType(
+              { kind: SyntaxKind.NeverKeyword } as TypeNode,
+              program
+            );
+            program.pushOp(ReflectionOp.condition);
+            program.popFrameImplicit();
+          }
         }
-        return;
-    }
-
-    protected getTypeOfType(type: Node | Declaration): Expression | undefined {
-        const reflection = this.isWithReflection(this.sourceFile, type);
-        if (!reflection) return;
-
-        const program = new CompilerProgram(type, this.sourceFile);
-        this.extractPackStructOfType(type, program);
-        return this.packOpsAndStack(program);
-    }
-
-    protected packOpsAndStack(program: CompilerProgram) {
-        const packStruct = program.buildPackStruct();
-        if (packStruct.ops.length === 0) return;
-        // debugPackStruct(this.sourceFile, program.forNode, packStruct);
-        const packed = [...packStruct.stack, encodeOps(packStruct.ops)];
-        return this.valueToExpression(packed);
-    }
 
-    /**
-     * Note: We have to duplicate the expressions as it can be that incoming expression are from another file and contain wrong pos/end properties,
-     * so the code generation is then broken when we simply reuse them. Wrong code like ``User.__type = [.toEqual({`` is then generated.
-     * This function is probably not complete, but we add new copies when required.
-     */
-    protected valueToExpression(value: undefined | PackExpression | PackExpression[]): Expression {
-        return this.nodeConverter.toExpression(value);
-    }
-
-    /**
-     * A class is decorated with type information by adding a static variable.
-     *
-     * class Model {
-     *     static __types = pack(ReflectionOp.string); //<-- encoded type information
-     *     title: string;
-     * }
-     */
-    protected decorateClass(sourceFile: SourceFile, node: ClassDeclaration | ClassExpression): Node {
-        const reflection = this.isWithReflection(sourceFile, node);
-        if (!reflection) {
-            return node;
+        if (foundUsers.length > 1) {
+          //todo: intersection end
         }
-        const type = this.getTypeOfType(node);
-        const __type = this.f.createPropertyDeclaration(
-            this.f.createModifiersFromModifierFlags(ModifierFlags.Static), '__type',
-            undefined, undefined,
-            type);
-
-        if (isClassDeclaration(node)) {
-            // return node;
-            return this.f.updateClassDeclaration(node, node.modifiers,
-                node.name, node.typeParameters, node.heritageClauses,
-                this.f.createNodeArray<ClassElement>([...node.members, __type]),
-            );
+      } else if (declaration.constraint) {
+        if (isUsedInFunction)
+          program.resolveFunctionParametersIncrease(declaration.parent);
+        const constraint = getEffectiveConstraintOfTypeParameter(declaration);
+        if (constraint) {
+          this.extractPackStructOfType(constraint, program);
+        } else {
+          program.pushOp(ReflectionOp.never);
         }
-
-        return this.f.updateClassExpression(node, node.modifiers,
-            node.name, node.typeParameters, node.heritageClauses,
-            this.f.createNodeArray<ClassElement>([...node.members, __type]),
-        );
+        if (isUsedInFunction)
+          program.resolveFunctionParametersDecrease(declaration.parent);
+      } else {
+        program.pushOp(ReflectionOp.never);
+      }
+    } else {
+      program.pushOp(ReflectionOp.any);
+      // program.pushOp(ReflectionOp.typeParameter, program.findOrAddStackEntry(getNameAsString(typeName)));
+    }
+  }
+
+  protected createAccessorForEntityName(
+    e: QualifiedName
+  ): PropertyAccessExpression {
+    return this.f.createPropertyAccessExpression(
+      isIdentifier(e.left) ? e.left : this.createAccessorForEntityName(e.left),
+      e.right
+    );
+  }
+
+  protected findDeclarationInFile(
+    sourceFile: SourceFile | ModuleDeclaration,
+    declarationName: string
+  ): Declaration | undefined {
+    if (isNodeWithLocals(sourceFile) && sourceFile.locals) {
+      const declarationSymbol = sourceFile.locals.get(
+        declarationName as __String
+      );
+      if (
+        declarationSymbol &&
+        declarationSymbol.declarations &&
+        declarationSymbol.declarations[0]
+      ) {
+        return declarationSymbol.declarations[0];
+      }
     }
-
-    /**
-     * const fn = function() {}
-     *
-     * => const fn = __assignType(function() {}, [34])
-     */
-    protected decorateFunctionExpression(expression: FunctionExpression) {
-        const encodedType = this.getTypeOfType(expression);
-        if (!encodedType) return expression;
-
-        return this.wrapWithAssignType(expression, encodedType);
+    return;
+  }
+
+  protected resolveImportSpecifier(
+    _declarationName: string | ModuleExportName,
+    importOrExport: ExportDeclaration | ImportDeclaration | JSDocImportTag,
+    sourceFile: SourceFile
+  ): Declaration | undefined {
+    const declarationName =
+      "string" === typeof _declarationName
+        ? _declarationName
+        : getIdentifierName(_declarationName);
+    if (
+      !importOrExport.moduleSpecifier ||
+      !isStringLiteral(importOrExport.moduleSpecifier)
+    ) {
+      return;
     }
 
-    /**
-     * function name() {}
-     *
-     * => function name() {}; name.__type = 34;
-     */
-    protected decorateFunctionDeclaration(declaration: FunctionDeclaration) {
-        const encodedType = this.getTypeOfType(declaration);
-        if (!encodedType) return declaration;
-
-        if (!declaration.name) {
-            //its likely `export default function() {}`
-            if (!declaration.body) return;
-
-            //since a new default export is created, we do not need ExportKey&DefaultKeyword on the function anymore,
-            //but it should preserve all others like Async.
-            const modifier: readonly Modifier[] = declaration.modifiers
-                ? declaration.modifiers.filter(v => v.kind !== SyntaxKind.ExportKeyword && v.kind !== SyntaxKind.DefaultKeyword && v.kind !== SyntaxKind.Decorator) as Modifier[]
-                : [];
-            return this.f.createExportAssignment(undefined, undefined, this.wrapWithAssignType(
-                this.f.createFunctionExpression(modifier, declaration.asteriskToken, declaration.name, declaration.typeParameters, declaration.parameters, declaration.type, declaration.body),
-                encodedType,
-            ));
-        }
+    const source: SourceFile | ModuleDeclaration | undefined =
+      this.resolver.resolve(sourceFile, importOrExport);
 
-        const statements: Statement[] = [declaration];
-        statements.push(this.f.createExpressionStatement(
-            this.f.createAssignment(this.f.createPropertyAccessExpression(serializeEntityNameAsExpression(this.f, declaration.name), '__type'), encodedType),
-        ));
-        return statements;
+    if (!source) {
+      debug(
+        "module not found",
+        (importOrExport.moduleSpecifier as any).text,
+        "Is transpileOnly enabled? It needs to be disabled."
+      );
+      return;
     }
 
-    /**
-     * const fn = () => {}
-     * => const fn = __assignType(() => {}, [34])
-     */
-    protected decorateArrowFunction(expression: ArrowFunction) {
-        const encodedType = this.getTypeOfType(expression);
-        if (!encodedType) return expression;
-
-        return this.wrapWithAssignType(expression, encodedType);
-    }
+    const declaration = this.findDeclarationInFile(source, declarationName);
+    sourceFile = source;
 
     /**
-     * Object.assign(fn, {__type: []}) is much slower than a custom implementation like
-     *
-     * assignType(fn, [])
-     *
-     * where we embed assignType() at the beginning of the type.
+     * declaration could also be `import {PrimaryKey} from 'xy'`, which we want to skip
      */
-    protected wrapWithAssignType(fn: Expression, type: Expression) {
-        this.embedAssignType = true;
-
-        return this.f.createCallExpression(
-            this.f.createIdentifier('__assignType'),
-            undefined,
-            [
-                fn,
-                type,
-            ],
-        );
+    if (declaration && !isImportSpecifier(declaration)) {
+      //if `export {PrimaryKey} from 'xy'`, then follow xy
+      if (isExportDeclaration(declaration)) {
+        return this.followExport(declarationName, declaration, sourceFile);
+      }
+      return declaration;
     }
 
-    /**
-     * Checks if reflection was disabled/enabled in file via JSDoc attribute for a particular
-     * Node, e.g `@reflection no`. If nothing is found, "reflection" config option needs to be used.
-     */
-    protected getExplicitReflectionMode(sourceFile: SourceFile | undefined, node: Node): boolean | undefined {
-        let current: Node | undefined = node;
-
-        let reflectionComment: string | undefined = undefined;
-
-        while ('undefined' === typeof reflectionComment && current) {
-            const next = sourceFile && extractJSDocAttribute(sourceFile, current, 'reflection');
-            if ('undefined' !== typeof next) reflectionComment = next;
-            current = current.parent;
-        }
-
-        if (reflectionComment === '' || reflectionComment === 'true' || reflectionComment === 'default'
-            || reflectionComment === 'enabled' || reflectionComment === '1') {
-            return true;
-        }
+    //not found, look in exports
+    if (isSourceFile(sourceFile)) {
+      for (const statement of sourceFile.statements) {
+        if (!isExportDeclaration(statement)) continue;
+        const found = this.followExport(declarationName, statement, sourceFile);
+        if (found) return found;
+      }
+    }
 
-        if (reflectionComment === 'false' || reflectionComment === 'disabled' || reflectionComment === 'never'
-            || reflectionComment === 'no' || reflectionComment === '0') {
-            return false;
+    return;
+  }
+
+  protected followExport(
+    declarationName: string,
+    statement: ExportDeclaration,
+    sourceFile: SourceFile
+  ): Declaration | undefined {
+    if (statement.exportClause) {
+      //export {y} from 'x'
+      if (isNamedExports(statement.exportClause)) {
+        for (const element of statement.exportClause.elements) {
+          //see if declarationName is exported
+          if (getEscapedText(element.name) === declarationName) {
+            if (
+              !statement.moduleSpecifier ||
+              !isStringLiteral(statement.moduleSpecifier)
+            ) {
+              // it's `export {Class}` and Class is either a Declaration or ImportSpecifier
+              if (
+                !statement.moduleSpecifier ||
+                !isStringLiteral(statement.moduleSpecifier)
+              ) {
+                // it's `export {Class};` and Class is either a Declaration or ImportSpecifier
+                if (isNodeWithLocals(sourceFile) && sourceFile.locals) {
+                  const found = sourceFile.locals.get(
+                    declarationName as __String
+                  );
+                  if (found && found.declarations && found.declarations[0]) {
+                    const declaration = found.declarations[0];
+                    if (declaration && isImportSpecifier(declaration)) {
+                      const importOrExport = declaration.parent.parent.parent;
+                      const found = this.resolveImportSpecifier(
+                        element.propertyName
+                          ? getEscapedText(element.propertyName)
+                          : declarationName,
+                        importOrExport,
+                        sourceFile
+                      );
+                      if (found) return found;
+                    } else if (declaration) {
+                    }
+                    return declaration;
+                  }
+                }
+              }
+            } else {
+              // it's `export {Class} from 'x'`
+              const found = this.resolveImportSpecifier(
+                element.propertyName
+                  ? getEscapedText(element.propertyName)
+                  : declarationName,
+                statement,
+                sourceFile
+              );
+              if (found) return found;
+            }
+          }
         }
+      }
+    } else {
+      //export * from 'x'
+      //see if `x` exports declarationName (or one of its exports * from 'y')
+      const found = this.resolveImportSpecifier(
+        declarationName,
+        statement,
+        sourceFile
+      );
+      if (found) {
+        return found;
+      }
+    }
+    return;
+  }
+
+  protected getTypeOfType(type: Node | Declaration): Expression | undefined {
+    const reflection = this.isWithReflection(this.sourceFile, type);
+    if (!reflection) return;
+
+    const program = new CompilerProgram(type, this.sourceFile);
+    this.extractPackStructOfType(type, program);
+    return this.packOpsAndStack(program);
+  }
+
+  protected packOpsAndStack(program: CompilerProgram) {
+    const packStruct = program.buildPackStruct();
+    if (packStruct.ops.length === 0) return;
+    // debugPackStruct(this.sourceFile, program.forNode, packStruct);
+    const packed = [...packStruct.stack, encodeOps(packStruct.ops)];
+    return this.valueToExpression(packed);
+  }
+
+  /**
+   * Note: We have to duplicate the expressions as it can be that incoming expression are from another file and contain wrong pos/end properties,
+   * so the code generation is then broken when we simply reuse them. Wrong code like ``User.__type = [.toEqual({`` is then generated.
+   * This function is probably not complete, but we add new copies when required.
+   */
+  protected valueToExpression(
+    value: undefined | PackExpression | PackExpression[]
+  ): Expression {
+    return this.nodeConverter.toExpression(value);
+  }
+
+  /**
+   * A class is decorated with type information by adding a static variable.
+   *
+   * class Model {
+   *     static __types = pack(ReflectionOp.string); //<-- encoded type information
+   *     title: string;
+   * }
+   */
+  protected decorateClass(
+    sourceFile: SourceFile,
+    node: ClassDeclaration | ClassExpression
+  ): Node {
+    const reflection = this.isWithReflection(sourceFile, node);
+    if (!reflection) {
+      return node;
+    }
+    const type = this.getTypeOfType(node);
+    const __type = this.f.createPropertyDeclaration(
+      this.f.createModifiersFromModifierFlags(ModifierFlags.Static),
+      "__type",
+      undefined,
+      undefined,
+      type
+    );
+
+    if (isClassDeclaration(node)) {
+      // return node;
+      return this.f.updateClassDeclaration(
+        node,
+        node.modifiers,
+        node.name,
+        node.typeParameters,
+        node.heritageClauses,
+        this.f.createNodeArray<ClassElement>([...node.members, __type])
+      );
+    }
+
+    return this.f.updateClassExpression(
+      node,
+      node.modifiers,
+      node.name,
+      node.typeParameters,
+      node.heritageClauses,
+      this.f.createNodeArray<ClassElement>([...node.members, __type])
+    );
+  }
+
+  /**
+   * const fn = function() {}
+   *
+   * => const fn = __assignType(function() {}, [34])
+   */
+  protected decorateFunctionExpression(expression: FunctionExpression) {
+    const encodedType = this.getTypeOfType(expression);
+    if (!encodedType) return expression;
+
+    return this.wrapWithAssignType(expression, encodedType);
+  }
+
+  /**
+   * function name() {}
+   *
+   * => function name() {}; name.__type = 34;
+   */
+  protected decorateFunctionDeclaration(declaration: FunctionDeclaration) {
+    const encodedType = this.getTypeOfType(declaration);
+    if (!encodedType) return declaration;
+
+    if (!declaration.name) {
+      //its likely `export default function() {}`
+      if (!declaration.body) return;
+
+      //since a new default export is created, we do not need ExportKey&DefaultKeyword on the function anymore,
+      //but it should preserve all others like Async.
+      const modifier: readonly Modifier[] = declaration.modifiers
+        ? (declaration.modifiers.filter(
+            v =>
+              v.kind !== SyntaxKind.ExportKeyword &&
+              v.kind !== SyntaxKind.DefaultKeyword &&
+              v.kind !== SyntaxKind.Decorator
+          ) as Modifier[])
+        : [];
+      return this.f.createExportAssignment(
+        undefined,
+        undefined,
+        this.wrapWithAssignType(
+          this.f.createFunctionExpression(
+            modifier,
+            declaration.asteriskToken,
+            declaration.name,
+            declaration.typeParameters,
+            declaration.parameters,
+            declaration.type,
+            declaration.body
+          ),
+          encodedType
+        )
+      );
+    }
+
+    const statements: Statement[] = [declaration];
+    statements.push(
+      this.f.createExpressionStatement(
+        this.f.createAssignment(
+          this.f.createPropertyAccessExpression(
+            serializeEntityNameAsExpression(this.f, declaration.name),
+            "__type"
+          ),
+          encodedType
+        )
+      )
+    );
+    return statements;
+  }
+
+  /**
+   * const fn = () => {}
+   * => const fn = __assignType(() => {}, [34])
+   */
+  protected decorateArrowFunction(expression: ArrowFunction) {
+    const encodedType = this.getTypeOfType(expression);
+    if (!encodedType) return expression;
+
+    return this.wrapWithAssignType(expression, encodedType);
+  }
+
+  /**
+   * Object.assign(fn, {__type: []}) is much slower than a custom implementation like
+   *
+   * assignType(fn, [])
+   *
+   * where we embed assignType() at the beginning of the type.
+   */
+  protected wrapWithAssignType(fn: Expression, type: Expression) {
+    this.embedAssignType = true;
+
+    return this.f.createCallExpression(
+      this.f.createIdentifier("__assignType"),
+      undefined,
+      [fn, type]
+    );
+  }
+
+  /**
+   * Checks if reflection was disabled/enabled in file via JSDoc attribute for a particular
+   * Node, e.g `@reflection no`. If nothing is found, "reflection" config option needs to be used.
+   */
+  protected getExplicitReflectionMode(
+    sourceFile: SourceFile | undefined,
+    node: Node
+  ): boolean | undefined {
+    let current: Node | undefined = node;
+
+    let reflectionComment: string | undefined = undefined;
+
+    while ("undefined" === typeof reflectionComment && current) {
+      const next =
+        sourceFile && extractJSDocAttribute(sourceFile, current, "reflection");
+      if ("undefined" !== typeof next) reflectionComment = next;
+      current = current.parent;
+    }
+
+    if (
+      reflectionComment === "" ||
+      reflectionComment === "true" ||
+      reflectionComment === "default" ||
+      reflectionComment === "enabled" ||
+      reflectionComment === "1"
+    ) {
+      return true;
+    }
 
-        return;
+    if (
+      reflectionComment === "false" ||
+      reflectionComment === "disabled" ||
+      reflectionComment === "never" ||
+      reflectionComment === "no" ||
+      reflectionComment === "0"
+    ) {
+      return false;
     }
+
+    return;
+  }
 }
 
 export class DeclarationTransformer extends ReflectionTransformer {
-    protected addExports: { identifier: string }[] = [];
-
-    transformSourceFile(sourceFile: SourceFile): SourceFile {
-        if ((sourceFile as any).deepkitDeclarationTransformed) return sourceFile;
-
-        this.sourceFile = sourceFile;
-        this.addExports = [];
+  protected addExports: { identifier: string }[] = [];
 
-        const configResolver = this.getConfigResolver(sourceFile);
-        const reflection = configResolver.match(sourceFile.fileName);
+  transformSourceFile(sourceFile: SourceFile): SourceFile {
+    if ((sourceFile as any).deepkitDeclarationTransformed) return sourceFile;
 
-        // important to override the compilerOptions with the one from the configResolver
-        // since the one provided by TSC/plugins are not necessarily the full picture.
-        // ConfigResolver resolves the whole config.
-        // Since this.compilerOptions was already passed to Resolver, we update its values by reference.
-        Object.assign(this.compilerOptions, configResolver.config.compilerOptions);
+    this.sourceFile = sourceFile;
+    this.addExports = [];
 
-        if (reflection.mode === 'never') return sourceFile;
+    const configResolver = this.getConfigResolver(sourceFile);
+    const reflection = configResolver.match(sourceFile.fileName);
 
-        const visitor = (node: Node): any => {
-            node = visitEachChild(node, visitor, this.context);
+    // important to override the compilerOptions with the one from the configResolver
+    // since the one provided by TSC/plugins are not necessarily the full picture.
+    // ConfigResolver resolves the whole config.
+    // Since this.compilerOptions was already passed to Resolver, we update its values by reference.
+    Object.assign(this.compilerOptions, configResolver.config.compilerOptions);
 
-            if ((isTypeAliasDeclaration(node) || isInterfaceDeclaration(node) || isEnumDeclaration(node)) && hasModifier(node, SyntaxKind.ExportKeyword)) {
-                const reflection = this.isWithReflection(sourceFile, node);
-                if (reflection) {
-                    this.addExports.push({ identifier: getIdentifierName(this.getDeclarationVariableName(node.name)) });
-                }
-            }
+    if (reflection.mode === "never") return sourceFile;
 
-            return node;
-        };
-        this.sourceFile = visitNode(this.sourceFile, visitor);
-
-        if (this.addExports.length) {
-            const exports: Statement[] = [];
-            const handledIdentifier: string[] = [];
-            for (const imp of this.addExports) {
-                if (handledIdentifier.includes(imp.identifier)) continue;
-                handledIdentifier.push(imp.identifier);
-
-                //export declare type __ΩXY = any[];
-                exports.push(this.f.createTypeAliasDeclaration([
-                        this.f.createModifier(SyntaxKind.ExportKeyword),
-                        this.f.createModifier(SyntaxKind.DeclareKeyword),
-                    ], this.f.createIdentifier(imp.identifier),
-                    undefined,
-                    this.f.createArrayTypeNode(this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword)),
-                ));
-            }
+    const visitor = (node: Node): any => {
+      node = visitEachChild(node, visitor, this.context);
 
-            this.sourceFile = this.f.updateSourceFile(this.sourceFile, [...this.sourceFile.statements, ...exports]);
+      if (
+        (isTypeAliasDeclaration(node) ||
+          isInterfaceDeclaration(node) ||
+          isEnumDeclaration(node)) &&
+        hasModifier(node, SyntaxKind.ExportKeyword)
+      ) {
+        const reflection = this.isWithReflection(sourceFile, node);
+        if (reflection) {
+          this.addExports.push({
+            identifier: getIdentifierName(
+              this.getDeclarationVariableName(node.name)
+            )
+          });
         }
+      }
 
-        (this.sourceFile as any).deepkitDeclarationTransformed = true;
+      return node;
+    };
+    this.sourceFile = visitNode(this.sourceFile, visitor);
+
+    if (this.addExports.length) {
+      const exports: Statement[] = [];
+      const handledIdentifier: string[] = [];
+      for (const imp of this.addExports) {
+        if (handledIdentifier.includes(imp.identifier)) continue;
+        handledIdentifier.push(imp.identifier);
+
+        //export declare type __ΩXY = any[];
+        exports.push(
+          this.f.createTypeAliasDeclaration(
+            [
+              this.f.createModifier(SyntaxKind.ExportKeyword),
+              this.f.createModifier(SyntaxKind.DeclareKeyword)
+            ],
+            this.f.createIdentifier(imp.identifier),
+            undefined,
+            this.f.createArrayTypeNode(
+              this.f.createKeywordTypeNode(SyntaxKind.AnyKeyword)
+            )
+          )
+        );
+      }
 
-        return this.sourceFile;
+      this.sourceFile = this.f.updateSourceFile(this.sourceFile, [
+        ...this.sourceFile.statements,
+        ...exports
+      ]);
     }
+
+    (this.sourceFile as any).deepkitDeclarationTransformed = true;
+
+    return this.sourceFile;
+  }
 }
 
 let loaded = false;
-const cache = new Cache;
+const cache = new Cache();
 
-export const transformer: CustomTransformerFactory = function deepkitTransformer(context) {
+export const transformer: CustomTransformerFactory =
+  function deepkitTransformer(context) {
     if (!loaded) {
-        debug('@deepkit/type transformer loaded\n');
-        loaded = true;
+      debug("@deepkit/type transformer loaded\n");
+      loaded = true;
     }
     cache.tick();
     return new ReflectionTransformer(context, cache);
-};
+  };
 
-export const declarationTransformer: CustomTransformerFactory = function deepkitDeclarationTransformer(context) {
+export const declarationTransformer: CustomTransformerFactory =
+  function deepkitDeclarationTransformer(context) {
     return new DeclarationTransformer(context, cache);
-};
-
+  };
diff --git a/src/config.ts b/src/config.ts
index 4e21ca555b7a1fb43b2020e5ce16516c1f9bb90e..a37243ec430296ffe6fa1cb4fa7829fb187cd778 100644
--- a/src/config.ts
+++ b/src/config.ts
@@ -1,9 +1,10 @@
-import { dirname, isAbsolute, join } from 'path';
-import type { CompilerOptions, ParseConfigHost } from 'typescript';
-import ts from 'typescript';
+import { dirname, isAbsolute, join } from "path";
+import type { CompilerOptions, ParseConfigHost } from "typescript";
+import ts from "typescript";
 
-import { debug, debug2, isDebug } from './debug.js';
-import { patternMatch } from './resolver.js';
+import { readFileSync } from "fs";
+import { debug, debug2, isDebug } from "./debug.js";
+import { patternMatch } from "./resolver.js";
 
 /**
  * Default means reflection is enabled for this file.
@@ -11,224 +12,307 @@ import { patternMatch } from './resolver.js';
  * Explicit means that reflection is per default disabled for this file, but each symbol/type
  * in it is allowed to enable it using jsdoc `@reflection`.
  */
-export const reflectionModes = ['default', 'explicit', 'never'] as const;
+export const reflectionModes = ["default", "explicit", "never"] as const;
 export type Mode = (typeof reflectionModes)[number];
-export type RawMode = Mode | '' | boolean | string | string[] | undefined;
+export type RawMode = Mode | "" | boolean | string | string[] | undefined;
 
 // don't use from @deepkit/core since we don't want to have a dependency to @deepkit/core
 export function isObject(obj: any): obj is { [key: string]: any } {
-    if (!obj) {
-        return false;
-    }
-    return typeof obj === 'object' && !Array.isArray(obj);
+  if (!obj) {
+    return false;
+  }
+  return typeof obj === "object" && !Array.isArray(obj);
 }
 
-const defaultMergeStrategy = 'merge';
+const defaultMergeStrategy = "merge";
+
+export const reflectionLevel = ["minimal", "normal", "verbose"];
+export type Level = (typeof reflectionLevel)[number];
 
 /**
  * These are the values that can be in the tsconfig.json file.
  */
 export interface TsConfigJson {
-    extends?: string;
-    compilerOptions?: any;
-
+  extends?: string;
+  compilerOptions?: any;
+
+  reflection?: RawMode;
+
+  /**
+   * Defines the level of reflection to be used during the transpilation process.
+   *
+   * @remarks
+   * The level determines how much extra data is captured in the byte code for each type. This can be one of the following values:
+   * - `minimal` - Only the essential type information is captured.
+   * - `normal` - Additional type information is captured, including some contextual data.
+   * - `verbose` - All available type information is captured, including detailed contextual data.
+   */
+  reflectionLevel?: Level;
+
+  deepkitCompilerOptions?: {
+    /**
+     * Either true to activate reflection for all files compiled using this tsconfig,
+     * or a list of globs/file paths relative to this tsconfig.json.
+     * Globs/file paths can be prefixed with a ! to exclude them.
+     */
     reflection?: RawMode;
 
-    deepkitCompilerOptions?: {
-        /**
-         * Either true to activate reflection for all files compiled using this tsconfig,
-         * or a list of globs/file paths relative to this tsconfig.json.
-         * Globs/file paths can be prefixed with a ! to exclude them.
-         */
-        reflection?: RawMode;
-
-        /**
-         * If a tsconfig extends another tsconfig, this option defines how the reflection/exclude
-         * options are merged. The default strategy is `merge`, which means that the reflection/exclude
-         * options are merged with the parent tsconfig.json. If set to `replace`, the reflection/exclude
-         * options are not merged, but the parent tsconfig.json is ignored.
-         */
-        mergeStrategy?: 'merge' | 'replace';
-
-        /**
-         * List of globs/file paths relative to this tsconfig.json
-         * which are then excluded from the type compilation step.
-         * Per default a few global .d.ts files are excluded like `lib.dom*.d.ts` and `*typedarrays.d.ts`.
-         */
-        exclude?: string[];
-    };
+    /**
+     * Defines the level of reflection to be used during the transpilation process.
+     *
+     * @remarks
+     * The level determines how much extra data is captured in the byte code for each type. This can be one of the following values:
+     * - `minimal` - Only the essential type information is captured.
+     * - `normal` - Additional type information is captured, including some contextual data.
+     * - `verbose` - All available type information is captured, including detailed contextual data.
+     */
+    reflectionLevel?: Level;
+
+    /**
+     * If a tsconfig extends another tsconfig, this option defines how the reflection/exclude
+     * options are merged. The default strategy is `merge`, which means that the reflection/exclude
+     * options are merged with the parent tsconfig.json. If set to `replace`, the reflection/exclude
+     * options are not merged, but the parent tsconfig.json is ignored.
+     */
+    mergeStrategy?: "merge" | "replace";
+
+    /**
+     * List of globs/file paths relative to this tsconfig.json
+     * which are then excluded from the type compilation step.
+     * Per default a few global .d.ts files are excluded like `lib.dom*.d.ts` and `*typedarrays.d.ts`.
+     */
+    exclude?: string[];
+  };
 }
 
 /**
  * Read config and parses under TypeScript specification.
  */
-function readTsConfig(parseConfigHost: ParseConfigHost, path: string): TsConfigJson | undefined {
-    const configFile = ts.readConfigFile(path, (path: string) => parseConfigHost.readFile(path));
-    if (configFile.error) {
-        debug(`Failed to read tsconfig ${path}: ${configFile.error.messageText}`);
-        return;
-    }
-
-    const parsed = ts.parseJsonConfigFileContent(configFile.config, parseConfigHost, dirname(path));
-    // errors we ignore entirely
-    const ignoredErrors = [
-        18003, // No inputs were found in config file.
-    ];
-    // errors we soft ignore but still log
-    const softErrors: number[] = [
-        18000, // Circularity detected while resolving configuration
-    ];
-    const errors = parsed.errors.filter(v => !ignoredErrors.includes(v.code));
-    if (errors.length) {
-        debug(`Failed to parse tsconfig ${path}: ${parsed.errors.map(v => v.messageText).join(', ')}`);
-    }
-    const hardErrors = errors.filter(v => !softErrors.includes(v.code));
-    if (hardErrors.length) {
-        return;
-    }
-
-    return Object.assign(configFile.config, {
-        compilerOptions: parsed.options,
-    });
+function readTsConfig(
+  parseConfigHost: ParseConfigHost,
+  path: string
+): TsConfigJson | undefined {
+  const configFile = ts.readConfigFile(path, (path: string) =>
+    parseConfigHost.readFile(path)
+  );
+  if (configFile.error) {
+    debug(`Failed to read tsconfig ${path}: ${configFile.error.messageText}`);
+    return;
+  }
+
+  const parsed = ts.parseJsonConfigFileContent(
+    configFile.config,
+    parseConfigHost,
+    dirname(path)
+  );
+  // errors we ignore entirely
+  const ignoredErrors = [
+    18003 // No inputs were found in config file.
+  ];
+  // errors we soft ignore but still log
+  const softErrors: number[] = [
+    18000 // Circularity detected while resolving configuration
+  ];
+  const errors = parsed.errors.filter(v => !ignoredErrors.includes(v.code));
+  if (errors.length) {
+    debug(
+      `Failed to parse tsconfig ${path}: ${parsed.errors.map(v => v.messageText).join(", ")}`
+    );
+  }
+  const hardErrors = errors.filter(v => !softErrors.includes(v.code));
+  if (hardErrors.length) {
+    return;
+  }
+
+  const json = readFileSync(path, "utf8");
+  const tsconfig = JSON.parse(json);
+
+  return Object.assign(configFile.config, {
+    compilerOptions: parsed.options,
+    reflectionLevel: tsconfig.reflectionLevel
+      ? String(tsconfig.reflectionLevel)
+      : undefined
+  });
 }
 
 export interface ReflectionConfig {
-    /**
-     * Allows to exclude type definitions/TS files from being included in the type compilation step.
-     * When a global .d.ts is matched, their types won't be embedded (useful to exclude DOM for example)
-     */
-    exclude?: string[];
-
-    /**
-     * Either a boolean indication general reflection mode,
-     * or a list of globs to match against.
-     */
-    reflection?: string[] | Mode;
+  /**
+   * Allows to exclude type definitions/TS files from being included in the type compilation step.
+   * When a global .d.ts is matched, their types won't be embedded (useful to exclude DOM for example)
+   */
+  exclude?: string[];
+
+  /**
+   * Either a boolean indication general reflection mode,
+   * or a list of globs to match against.
+   */
+  reflection?: string[] | Mode;
+
+  /**
+   * Defines the level of reflection to be used during the transpilation process.
+   */
+  reflectionLevel?: Level;
 }
 
 export interface CurrentConfig extends ReflectionConfig {
-    compilerOptions: ts.CompilerOptions;
-    mergeStrategy?: 'merge' | 'replace';
-    extends?: string;
+  compilerOptions: ts.CompilerOptions;
+  mergeStrategy?: "merge" | "replace";
+  extends?: string;
 }
 
 export interface ResolvedConfig extends ReflectionConfig {
-    path: string; //tsconfig path
-    compilerOptions: ts.CompilerOptions;
-    mergeStrategy: 'merge' | 'replace';
+  path: string; //tsconfig path
+  compilerOptions: ts.CompilerOptions;
+  mergeStrategy: "merge" | "replace";
+  reflectionLevel: Level;
 }
 
-export function reflectionModeMatcher(config: ReflectionConfig, filePath: string): Mode {
-    if (Array.isArray(config.exclude)) {
-        if (patternMatch(filePath, config.exclude)) return 'never';
-    }
-    if (Array.isArray(config.reflection)) {
-        return patternMatch(filePath, config.reflection) ? 'default' : 'never';
-    }
-    if (config.reflection === 'default' || config.reflection === 'explicit') return config.reflection;
-    return 'never';
+export function reflectionModeMatcher(
+  config: ReflectionConfig,
+  filePath: string
+): Mode {
+  if (Array.isArray(config.exclude)) {
+    if (patternMatch(filePath, config.exclude)) return "never";
+  }
+  if (Array.isArray(config.reflection)) {
+    return patternMatch(filePath, config.reflection) ? "default" : "never";
+  }
+  if (config.reflection === "default" || config.reflection === "explicit")
+    return config.reflection;
+
+  return "never";
 }
 
 function ensureStringArray(value: any): string[] {
-    if (Array.isArray(value)) return value.map(v => '' + v);
-    if ('string' === typeof value) return [value];
-    return [];
+  if (Array.isArray(value)) return value.map(v => "" + v);
+  if ("string" === typeof value) return [value];
+  return [];
 }
 
 export function parseRawMode(mode: RawMode): string[] | Mode {
-    if ('boolean' === typeof mode) return mode ? 'default' : 'never';
-    if (mode === 'default' || mode === 'explicit') return mode;
-    return ensureStringArray(mode);
+  if ("boolean" === typeof mode) return mode ? "default" : "never";
+  if (mode === "default" || mode === "explicit") return mode;
+  return ensureStringArray(mode);
 }
 
 function resolvePaths(baseDir: string, paths: any): void {
-    if (!paths || !Array.isArray(paths)) return;
-
-    for (let i = 0; i < paths.length; i++) {
-        if ('string' !== typeof paths[i]) continue;
-        if (isAbsolute(paths[i])) continue;
-        let path = paths[i];
-        let exclude = false;
-        if (path.startsWith('!')) {
-            exclude = true;
-            path = path.substring(1);
-        }
-
-        // we treat as relative if it starts with ./ or contains a /
-        if (path.startsWith('./') || path.includes('/')) {
-            path = join(baseDir, path);
-        }
-        // ensure backslashes are forward slashes
-        path = path.replace(/\\/g, '/');
-        if (exclude) path = '!' + path;
-        paths[i] = path;
+  if (!paths || !Array.isArray(paths)) return;
+
+  for (let i = 0; i < paths.length; i++) {
+    if ("string" !== typeof paths[i]) continue;
+    if (isAbsolute(paths[i])) continue;
+    let path = paths[i];
+    let exclude = false;
+    if (path.startsWith("!")) {
+      exclude = true;
+      path = path.substring(1);
     }
-}
 
-function appendPaths(strategy: 'merge' | 'replace' = defaultMergeStrategy, parent: string[], existing?: string[]) {
-    // important to always return a new array, otherwise we would modify the parent array with subsequent calls
-    if (strategy === 'replace') {
-        // replace means we stick with existing if it is defined, otherwise we use parent
-        return [...(existing || parent)];
+    // we treat as relative if it starts with ./ or contains a /
+    if (path.startsWith("./") || path.includes("/")) {
+      path = join(baseDir, path);
     }
-    if (!existing) return [...parent];
-    return [...parent, ...existing];
+    // ensure backslashes are forward slashes
+    path = path.replace(/\\/g, "/");
+    if (exclude) path = "!" + path;
+    paths[i] = path;
+  }
 }
 
-function applyConfigValues(existing: CurrentConfig, parent: TsConfigJson, baseDir: string) {
-    const parentReflection = isObject(parent.deepkitCompilerOptions)
-        ? parent.deepkitCompilerOptions?.reflection
-        : parent.reflection;
+function appendPaths(
+  strategy: "merge" | "replace" = defaultMergeStrategy,
+  parent: string[],
+  existing?: string[]
+) {
+  // important to always return a new array, otherwise we would modify the parent array with subsequent calls
+  if (strategy === "replace") {
+    // replace means we stick with existing if it is defined, otherwise we use parent
+    return [...(existing || parent)];
+  }
+  if (!existing) return [...parent];
+  return [...parent, ...existing];
+}
 
-    if (isObject(parent.deepkitCompilerOptions) && 'undefined' === typeof existing.mergeStrategy) {
-        existing.mergeStrategy = parent.deepkitCompilerOptions.mergeStrategy;
+function applyConfigValues(
+  existing: CurrentConfig,
+  parent: TsConfigJson,
+  baseDir: string
+) {
+  const parentReflection = isObject(parent.deepkitCompilerOptions)
+    ? parent.deepkitCompilerOptions?.reflection
+    : parent.reflection;
+  const parentReflectionLevel =
+    parent.deepkitCompilerOptions?.reflectionLevel ||
+    parent.reflectionLevel ||
+    parent.compilerOptions?.reflectionLevel;
+
+  if (
+    isObject(parent.deepkitCompilerOptions) &&
+    "undefined" === typeof existing.mergeStrategy
+  ) {
+    existing.mergeStrategy = parent.deepkitCompilerOptions.mergeStrategy;
+  }
+
+  if ("undefined" !== typeof parentReflection) {
+    const next = parseRawMode(parentReflection);
+    if ("undefined" === typeof existing.reflection) {
+      existing.reflection = next;
+    } else if ("string" === typeof existing.reflection) {
+      // if existing is already a string, there is nothing to inherit from parent
+    } else if (Array.isArray(next) && Array.isArray(existing.reflection)) {
+      existing.reflection = appendPaths(
+        existing.mergeStrategy,
+        next,
+        existing.reflection
+      );
+    } else if ("string" === typeof next && Array.isArray(existing.reflection)) {
+      // debug(`Warning: config parent tsconfig has reflection=${next}, but child tsconfig has reflection=${JSON.stringify(existing.reflection)}. reflection stays as array.`);
     }
+  }
 
-    if ('undefined' !== typeof parentReflection) {
-        const next = parseRawMode(parentReflection);
-        if ('undefined' === typeof existing.reflection) {
-            existing.reflection = next;
-        } else if ('string' === typeof existing.reflection) {
-            // if existing is already a string, there is nothing to inherit from parent
-        } else if (Array.isArray(next) && Array.isArray(existing.reflection)) {
-            existing.reflection = appendPaths(existing.mergeStrategy, next, existing.reflection);
-        } else if ('string' === typeof next && Array.isArray(existing.reflection)) {
-            // debug(`Warning: config parent tsconfig has reflection=${next}, but child tsconfig has reflection=${JSON.stringify(existing.reflection)}. reflection stays as array.`);
-        }
+  if ("undefined" !== typeof parentReflectionLevel) {
+    if ("undefined" === typeof existing.reflectionLevel) {
+      existing.reflectionLevel = parentReflectionLevel;
     }
-
-    if (isObject(parent.deepkitCompilerOptions)) {
-        if (`undefined` !== typeof parent.deepkitCompilerOptions.exclude) {
-            const next = ensureStringArray(parent.deepkitCompilerOptions.exclude);
-            existing.exclude = appendPaths(existing.mergeStrategy, next, existing.exclude);
-        }
+  }
+
+  if (isObject(parent.deepkitCompilerOptions)) {
+    if (`undefined` !== typeof parent.deepkitCompilerOptions.exclude) {
+      const next = ensureStringArray(parent.deepkitCompilerOptions.exclude);
+      existing.exclude = appendPaths(
+        existing.mergeStrategy,
+        next,
+        existing.exclude
+      );
     }
+  }
 
-    resolvePaths(baseDir, existing.reflection);
-    resolvePaths(baseDir, existing.exclude);
+  resolvePaths(baseDir, existing.reflection);
+  resolvePaths(baseDir, existing.exclude);
 
-    if (parent.compilerOptions) {
-        // typescript already correctly merges the compiler options
-        if (Object.keys(existing.compilerOptions).length === 0) {
-            Object.assign(existing.compilerOptions, parent.compilerOptions);
-        }
+  if (parent.compilerOptions) {
+    // typescript already correctly merges the compiler options
+    if (Object.keys(existing.compilerOptions).length === 0) {
+      Object.assign(existing.compilerOptions, parent.compilerOptions);
     }
-    existing.extends = parent.extends;
+  }
+  existing.extends = parent.extends;
 }
 
 export interface MatchResult {
-    tsConfigPath: string;
-    mode: (typeof reflectionModes)[number];
+  tsConfigPath: string;
+  mode: (typeof reflectionModes)[number];
+  level: (typeof reflectionLevel)[number];
 }
 
 export const defaultExcluded = [
-    'lib.dom*.d.ts',
-    '*typedarrays.d.ts',
-    'lib.webworker*.d.ts',
-    'lib.decorator*.d.ts',
-    'lib.es2015.proxy.d.ts',
-    'lib.es2020.sharedmemory.d.ts',
-    'lib.es2015.core.d.ts',
+  "lib.dom*.d.ts",
+  "*typedarrays.d.ts",
+  "lib.webworker*.d.ts",
+  "lib.decorator*.d.ts",
+  "lib.es2015.proxy.d.ts",
+  "lib.es2020.sharedmemory.d.ts",
+  "lib.es2015.core.d.ts"
 ];
 
 export type Matcher = (path: string) => MatchResult;
@@ -236,96 +320,123 @@ export type ConfigResolver = { match: Matcher; config: ResolvedConfig };
 export type ReflectionConfigCache = { [path: string]: ConfigResolver };
 
 export function getConfigResolver(
-    cache: ReflectionConfigCache,
-    host: ParseConfigHost,
-    compilerOptions: CompilerOptions,
-    sourceFile: { fileName: string },
-    tsConfigPath: string = '',
+  cache: ReflectionConfigCache,
+  host: ParseConfigHost,
+  compilerOptions: CompilerOptions,
+  sourceFile: { fileName: string },
+  tsConfigPath: string = ""
 ): ConfigResolver {
-    let config: CurrentConfig = {
-        // We use the parameter `compilerOptions` only for compilerOptions.configFilePath.
-        // We load the compilerOptions manually since transformers don't get the full picture
-        // (path aliases are missing for example).
-        // It's important to load compilerOptions manually if there is compilerOptions.configFilePath
-        // since not all build tools provide the full compilerOptions.
-        compilerOptions: {},
-    };
-
-    tsConfigPath = tsConfigPath || ('string' === typeof compilerOptions.configFilePath ? compilerOptions.configFilePath : '');
+  let config: CurrentConfig = {
+    // We use the parameter `compilerOptions` only for compilerOptions.configFilePath.
+    // We load the compilerOptions manually since transformers don't get the full picture
+    // (path aliases are missing for example).
+    // It's important to load compilerOptions manually if there is compilerOptions.configFilePath
+    // since not all build tools provide the full compilerOptions.
+    compilerOptions: {}
+  };
+
+  tsConfigPath =
+    tsConfigPath ||
+    ("string" === typeof compilerOptions.configFilePath
+      ? compilerOptions.configFilePath
+      : "");
+
+  if (tsConfigPath) {
+    if (cache[tsConfigPath]) {
+      return cache[tsConfigPath];
+    }
 
-    if (tsConfigPath) {
-        if (cache[tsConfigPath]) return cache[tsConfigPath];
-        const configFile = readTsConfig(host, tsConfigPath);
-        if (configFile) applyConfigValues(config, configFile, dirname(tsConfigPath));
-    } else {
-        if (!tsConfigPath && sourceFile) {
-            //find tsconfig via sourceFile.fileName
-            const baseDir = dirname(sourceFile.fileName);
-            const configPath = ts.findConfigFile(baseDir, path => {
-                path = isAbsolute(path) ? path : join(baseDir, path);
-                return host.fileExists(path);
-            });
-            debug2(`No tsConfigPath|compilerOptions.configFilePath provided. Manually searching for tsconfig.json in ${baseDir} returned ${configPath}`);
-            if (configPath) {
-                //configPath might be relative to passed basedir
-                tsConfigPath = isAbsolute(configPath) ? configPath : join(baseDir, configPath);
-            }
-        }
-        if (tsConfigPath) {
-            if (cache[tsConfigPath]) return cache[tsConfigPath];
-            //configPath might be relative to passed basedir
-            const configFile = readTsConfig(host, tsConfigPath);
-            if (configFile) applyConfigValues(config, configFile, dirname(tsConfigPath));
-        }
+    const configFile = readTsConfig(host, tsConfigPath);
+    if (configFile)
+      applyConfigValues(config, configFile, dirname(tsConfigPath));
+  } else {
+    if (!tsConfigPath && sourceFile) {
+      //find tsconfig via sourceFile.fileName
+      const baseDir = dirname(sourceFile.fileName);
+      const configPath = ts.findConfigFile(baseDir, path => {
+        path = isAbsolute(path) ? path : join(baseDir, path);
+        return host.fileExists(path);
+      });
+      debug2(
+        `No tsConfigPath|compilerOptions.configFilePath provided. Manually searching for tsconfig.json in ${baseDir} returned ${configPath}`
+      );
+      if (configPath) {
+        //configPath might be relative to passed basedir
+        tsConfigPath = isAbsolute(configPath)
+          ? configPath
+          : join(baseDir, configPath);
+      }
     }
 
     if (tsConfigPath) {
-        let basePath = dirname(tsConfigPath);
-        let currentConfig = config;
-        const seen = new Set<string>();
-        seen.add(tsConfigPath);
-        //iterate through all configs (this.config.extends) until we have all reflection options found.
-        while (currentConfig.extends) {
-            const path = join(basePath, currentConfig.extends);
-            if (seen.has(path)) break;
-            seen.add(path);
-            const nextConfig = ts.readConfigFile(path, (path: string) => host.readFile(path));
-            if (!nextConfig) break;
-            basePath = dirname(path);
-            applyConfigValues(currentConfig, nextConfig.config, basePath);
-        }
-    } else {
-        throw new Error(`No tsconfig found for ${sourceFile?.fileName}, that is weird. Either provide a tsconfig or compilerOptions.configFilePath`);
+      if (cache[tsConfigPath]) return cache[tsConfigPath];
+      //configPath might be relative to passed basedir
+      const configFile = readTsConfig(host, tsConfigPath);
+      if (configFile)
+        applyConfigValues(config, configFile, dirname(tsConfigPath));
     }
-
-    config.exclude = config.exclude ? [...defaultExcluded, ...config.exclude] : [...defaultExcluded];
-
-    config.compilerOptions.configFilePath = tsConfigPath;
-
-    const resolvedConfig: ResolvedConfig = {
-        path: tsConfigPath,
-        // we want to maintain options passed from tsc API (transpile, Program)
-        compilerOptions: Object.assign(config.compilerOptions, compilerOptions),
-        exclude: config.exclude,
-        reflection: config.reflection,
-        mergeStrategy: config.mergeStrategy || defaultMergeStrategy,
-    };
-
-    if (isDebug()) {
-        debug(
-            `Found config ${resolvedConfig.path}:\nreflection:`,
-            resolvedConfig.reflection,
-            `\nexclude:`,
-            resolvedConfig.exclude,
-            `\npaths:`,
-            resolvedConfig.compilerOptions.paths,
-        );
+  }
+
+  if (tsConfigPath) {
+    let basePath = dirname(tsConfigPath);
+    let currentConfig = config;
+    const seen = new Set<string>();
+    seen.add(tsConfigPath);
+    //iterate through all configs (this.config.extends) until we have all reflection options found.
+    while (currentConfig.extends) {
+      const path = join(basePath, currentConfig.extends);
+      if (seen.has(path)) break;
+      seen.add(path);
+      const nextConfig = ts.readConfigFile(path, (path: string) =>
+        host.readFile(path)
+      );
+
+      if (!nextConfig) break;
+      basePath = dirname(path);
+      applyConfigValues(currentConfig, nextConfig.config, basePath);
     }
-
-    const match = (path: string) => {
-        const mode = reflectionModeMatcher(config, path);
-        return { mode, tsConfigPath };
-    };
-
-    return (cache[tsConfigPath] = { config: resolvedConfig, match });
+  } else {
+    throw new Error(
+      `No tsconfig found for ${sourceFile?.fileName}, that is weird. Either provide a tsconfig or compilerOptions.configFilePath`
+    );
+  }
+
+  config.exclude = config.exclude
+    ? [...defaultExcluded, ...config.exclude]
+    : [...defaultExcluded];
+
+  config.compilerOptions.configFilePath = tsConfigPath;
+
+  const resolvedConfig: ResolvedConfig = {
+    path: tsConfigPath,
+    // we want to maintain options passed from tsc API (transpile, Program)
+    compilerOptions: Object.assign(config.compilerOptions, compilerOptions),
+    exclude: config.exclude,
+    reflection: config.reflection,
+    reflectionLevel:
+      config.reflectionLevel ||
+      (config.compilerOptions?.reflectionLevel
+        ? String(config.compilerOptions?.reflectionLevel)
+        : undefined) ||
+      "normal",
+    mergeStrategy: config.mergeStrategy || defaultMergeStrategy
+  };
+
+  if (isDebug()) {
+    debug(
+      `Found config ${resolvedConfig.path}:\nreflection:`,
+      resolvedConfig.reflection,
+      `\nexclude:`,
+      resolvedConfig.exclude,
+      `\npaths:`,
+      resolvedConfig.compilerOptions.paths
+    );
+  }
+
+  const match = (path: string) => {
+    const mode = reflectionModeMatcher(config, path);
+    return { mode, tsConfigPath, level: resolvedConfig.reflectionLevel };
+  };
+
+  return (cache[tsConfigPath] = { config: resolvedConfig, match });
 }
diff --git a/src/loader.ts b/src/loader.ts
index c052a5e646842240fbaaabb9a4ad5e020ffaec3e..b6e890d6b9080167b1ea5a49b5c7f46fd9f9709a 100644
--- a/src/loader.ts
+++ b/src/loader.ts
@@ -1,58 +1,91 @@
-import type { CompilerOptions, SourceFile, TransformationContext } from 'typescript';
-import ts from 'typescript';
-import { Cache, ReflectionTransformer } from './compiler.js';
+import type {
+  CompilerOptions,
+  SourceFile,
+  TransformationContext
+} from "typescript";
+import ts from "typescript";
+import { Cache, ReflectionTransformer } from "./compiler.js";
 
 export class DeepkitLoader {
-    protected options: CompilerOptions = {
-        allowJs: true,
-        declaration: false,
+  protected options: CompilerOptions = {
+    allowJs: true,
+    declaration: false
+  };
+
+  protected host = ts.createCompilerHost(this.options);
+
+  protected program = ts.createProgram([], this.options, this.host);
+
+  protected printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed });
+  protected cache = new Cache();
+
+  protected knownFiles: { [path: string]: string } = {};
+  protected sourceFiles: { [path: string]: SourceFile } = {};
+
+  constructor() {
+    const originReadFile = this.host.readFile;
+    this.host.readFile = (fileName: string) => {
+      if (this.knownFiles[fileName]) return this.knownFiles[fileName];
+      return originReadFile.call(this.host, fileName);
     };
 
-    protected host = ts.createCompilerHost(this.options);
-
-    protected program = ts.createProgram([], this.options, this.host);
-
-    protected printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed });
-    protected cache = new Cache;
-
-    protected knownFiles: { [path: string]: string } = {};
-    protected sourceFiles: { [path: string]: SourceFile } = {};
-
-    constructor() {
-        const originReadFile = this.host.readFile;
-        this.host.readFile = (fileName: string) => {
-            if (this.knownFiles[fileName]) return this.knownFiles[fileName];
-            return originReadFile.call(this.host, fileName);
-        };
-
-        //the program should not write any files
-        this.host.writeFile = () => {
-        };
-
-        const originalGetSourceFile = this.host.getSourceFile;
-        this.host.getSourceFile = (fileName: string, languageVersion: ts.ScriptTarget, onError?: (message: string) => void, shouldCreateNewSourceFile?: boolean): SourceFile | undefined => {
-            if (this.sourceFiles[fileName]) return this.sourceFiles[fileName];
-            return originalGetSourceFile.call(this.host, fileName, languageVersion, onError, shouldCreateNewSourceFile);
-        };
-    }
-
-    transform(source: string, path: string): string {
-        this.knownFiles[path] = source;
-        const sourceFile = ts.createSourceFile(path, source, ts.ScriptTarget.ESNext, true, path.endsWith('.tsx') ? ts.ScriptKind.TSX : ts.ScriptKind.TS);
-        let newSource = source;
-
-        ts.transform(sourceFile, [
-            (context: TransformationContext) => {
-                const transformer = new ReflectionTransformer(context, this.cache).forHost(this.host).withReflection({ reflection: 'default' });
-                return (node: SourceFile): SourceFile => {
-                    const sourceFile = transformer.transformSourceFile(node);
-
-                    newSource = this.printer.printNode(ts.EmitHint.SourceFile, sourceFile, sourceFile);
-                    return sourceFile;
-                };
-            }
-        ], this.options);
-
-        return newSource;
-    }
+    //the program should not write any files
+    this.host.writeFile = () => {};
+
+    const originalGetSourceFile = this.host.getSourceFile;
+    this.host.getSourceFile = (
+      fileName: string,
+      languageVersion: ts.ScriptTarget,
+      onError?: (message: string) => void,
+      shouldCreateNewSourceFile?: boolean
+    ): SourceFile | undefined => {
+      if (this.sourceFiles[fileName]) return this.sourceFiles[fileName];
+      return originalGetSourceFile.call(
+        this.host,
+        fileName,
+        languageVersion,
+        onError,
+        shouldCreateNewSourceFile
+      );
+    };
+  }
+
+  transform(source: string, path: string): string {
+    this.knownFiles[path] = source;
+    const sourceFile = ts.createSourceFile(
+      path,
+      source,
+      ts.ScriptTarget.ESNext,
+      true,
+      path.endsWith(".tsx") ? ts.ScriptKind.TSX : ts.ScriptKind.TS
+    );
+    let newSource = source;
+
+    ts.transform(
+      sourceFile,
+      [
+        (context: TransformationContext) => {
+          const transformer = new ReflectionTransformer(context, this.cache)
+            .forHost(this.host)
+            .withReflection({
+              reflection: "default",
+              reflectionLevel: "normal"
+            });
+          return (node: SourceFile): SourceFile => {
+            const sourceFile = transformer.transformSourceFile(node);
+
+            newSource = this.printer.printNode(
+              ts.EmitHint.SourceFile,
+              sourceFile,
+              sourceFile
+            );
+            return sourceFile;
+          };
+        }
+      ],
+      this.options
+    );
+
+    return newSource;
+  }
 }
diff --git a/src/reflection-ast.ts b/src/reflection-ast.ts
index 13120228863a3f028bd939e99f0258d437c85331..88c76656c15ea1d290fda28140568b3c6c1180ec 100644
--- a/src/reflection-ast.ts
+++ b/src/reflection-ast.ts
@@ -8,300 +8,522 @@
  * You should have received a copy of the MIT License along with this program.
  */
 
+import { CloneNodeHook, cloneNode as tsNodeClone } from "@marcj/ts-clone-node";
 import ts, {
-    __String,
-    ArrowFunction,
-    BigIntLiteral,
-    BinaryExpression,
-    EntityName,
-    Expression,
-    Identifier,
-    ImportDeclaration,
-    isBigIntLiteral,
-    JSDoc,
-    JSDocImportTag,
-    ModifierLike,
-    Node,
-    NodeArray,
-    NodeFactory,
-    NumericLiteral,
-    PrivateIdentifier,
-    PropertyAccessExpression,
-    PropertyName,
-    QualifiedName,
-    StringLiteral,
-    StringLiteralLike,
-    SymbolTable,
-} from 'typescript';
-import { cloneNode as tsNodeClone, CloneNodeHook } from '@marcj/ts-clone-node';
-import { SourceFile } from './ts-types.js';
+  __String,
+  ArrowFunction,
+  BigIntLiteral,
+  BinaryExpression,
+  EntityName,
+  Expression,
+  Identifier,
+  ImportDeclaration,
+  isBigIntLiteral,
+  JSDoc,
+  JSDocImportTag,
+  ModifierLike,
+  Node,
+  NodeArray,
+  NodeFactory,
+  NumericLiteral,
+  PrivateIdentifier,
+  PropertyAccessExpression,
+  PropertyName,
+  QualifiedName,
+  StringLiteral,
+  StringLiteralLike,
+  SymbolTable
+} from "typescript";
+import { SourceFile } from "./ts-types.js";
 
 const {
-    isArrowFunction,
-    isComputedPropertyName,
-    isIdentifier,
-    isNamedImports,
-    isNumericLiteral,
-    isPrivateIdentifier,
-    isStringLiteral,
-    isStringLiteralLike,
-    setOriginalNode,
-    getLeadingCommentRanges,
-    isNoSubstitutionTemplateLiteral,
-    NodeFlags,
-    SyntaxKind,
+  isArrowFunction,
+  isComputedPropertyName,
+  isIdentifier,
+  isNamedImports,
+  isNumericLiteral,
+  isPrivateIdentifier,
+  isStringLiteral,
+  isStringLiteralLike,
+  setOriginalNode,
+  getLeadingCommentRanges,
+  isNoSubstitutionTemplateLiteral,
+  NodeFlags,
+  SyntaxKind
 } = ts;
 
 export type PackExpression = Expression | string | number | boolean | bigint;
 
 function is__String(value: any): value is __String {
-    return typeof value === 'string';
+  return typeof value === "string";
 }
 
-export function getIdentifierName(node: Identifier | PrivateIdentifier | StringLiteral | __String): string {
-    if (is__String(node)) return node as string;
-    if (isIdentifier(node) || isPrivateIdentifier(node)) {
-        return ts.unescapeLeadingUnderscores(node.escapedText);
-    }
-    if (isStringLiteral(node)) return node.text;
-    return '';
+export function getIdentifierName(
+  node: Identifier | PrivateIdentifier | StringLiteral | __String
+): string {
+  if (is__String(node)) return node as string;
+  if (isIdentifier(node) || isPrivateIdentifier(node)) {
+    return ts.unescapeLeadingUnderscores(node.escapedText);
+  }
+  if (isStringLiteral(node)) return node.text;
+  return "";
 }
 
-export function getEscapedText(node: Identifier | PrivateIdentifier | StringLiteral | __String): string {
-    if (is__String(node)) return node as string;
-    if (isIdentifier(node) || isPrivateIdentifier(node)) return node.escapedText as string;
-    return getIdentifierName(node);
+export function getEscapedText(
+  node: Identifier | PrivateIdentifier | StringLiteral | __String
+): string {
+  if (is__String(node)) return node as string;
+  if (isIdentifier(node) || isPrivateIdentifier(node))
+    return node.escapedText as string;
+  return getIdentifierName(node);
 }
 
 export function findSourceFile(node: Node): SourceFile | undefined {
-    if (node.kind === SyntaxKind.SourceFile) return node as SourceFile;
-    let current = node.parent;
-    while (current && current.kind !== SyntaxKind.SourceFile) {
-        current = current.parent;
-    }
-    return current as SourceFile;
+  if (node.kind === SyntaxKind.SourceFile) return node as SourceFile;
+  let current = node.parent;
+  while (current && current.kind !== SyntaxKind.SourceFile) {
+    current = current.parent;
+  }
+  return current as SourceFile;
 }
 
 export function joinQualifiedName(name: EntityName): string {
-    if (isIdentifier(name)) return getIdentifierName(name);
-    return joinQualifiedName(name.left) + '_' + getIdentifierName(name.right);
+  if (isIdentifier(name)) return getIdentifierName(name);
+  return joinQualifiedName(name.left) + "_" + getIdentifierName(name.right);
 }
 
-export function getCommentOfNode(sourceFile: SourceFile, node: Node): string | undefined {
-    const comment = getLeadingCommentRanges(sourceFile.text, node.pos);
-    if (!comment) return;
+const BANNER_REGEX = /^\/\*\s---.*\n[\s\S]*\s*---\s*\*\//;
+
+export function getCommentOfNode(
+  sourceFile: SourceFile,
+  node: Node
+): string | undefined {
+  const commentLines = getLeadingCommentRanges(sourceFile.text, node.pos);
+  if (!commentLines || commentLines.length === 0) return;
+
+  const commentLine = commentLines.slice(-1)[0];
+  if (!commentLine) return;
+
+  const comment = sourceFile.text.slice(commentLine.pos, commentLine.end);
+  if (comment.match(BANNER_REGEX)) {
+    return undefined;
+  }
 
-    return comment.map(v => sourceFile.text.substring(v.pos, v.end)).join('\n');
+  return comment;
 }
 
-export function parseJSDocAttributeFromText(comment: string, attribute: string): string | undefined {
-    // no regex
-    const index = comment.indexOf('@' + attribute + ' ');
-    if (index === -1) {
-        let start = 0;
-        while (true) {
-            const withoutContent = comment.indexOf('@' + attribute, start);
-            if (withoutContent === -1) return undefined;
-            //make sure next character is space or end of comment
-            const nextCharacter = comment[withoutContent + attribute.length + 1];
-            if (!nextCharacter || nextCharacter === ' ' || nextCharacter === '\n' || nextCharacter === '\r' || nextCharacter === '\t') {
-                return '';
-            }
-            start = withoutContent + attribute.length + 1;
-        }
-        return undefined;
+export function parseJSDocAttributeFromText(
+  comment: string,
+  attribute: string
+): [string | undefined, number] {
+  // no regex
+  const attributeStr = `@${attribute} `;
+  const index = comment.indexOf(attributeStr);
+  if (index === -1) {
+    let start = 0;
+    while (true) {
+      const withoutContent = comment.indexOf(`@${attribute}`, start);
+      if (withoutContent === -1) {
+        return [undefined, -1];
+      }
+
+      // make sure next character is space or end of comment
+      const nextCharacter = comment[withoutContent + attribute.length + 1];
+      if (
+        !nextCharacter ||
+        nextCharacter === " " ||
+        nextCharacter === "\n" ||
+        nextCharacter === "\r" ||
+        nextCharacter === "\t"
+      ) {
+        return [undefined, withoutContent + attribute.length + 1];
+      }
+      start = withoutContent + attribute.length + 1;
     }
+  }
+
+  const start = index + attributeStr.length;
+  // end is either next attribute @ or end of comment.
+  const nextAttribute = comment.indexOf("@", start);
+  const endOfComment = comment.indexOf("*/", start);
+  const end =
+    nextAttribute === -1 ? endOfComment : Math.min(nextAttribute, endOfComment);
+  const content = comment.substring(start, end).trim();
+
+  // make sure multiline comments are supported, and each line is trimmed and `\s\s\s\*` removed
+  return [
+    content
+      .split("\n")
+      .map(v => {
+        const indexOfStar = v.indexOf("*");
+        if (indexOfStar === -1) {
+          return v.trim();
+        }
 
-    const start = index + attribute.length + 2;
-    // end is either next attribute @ or end of comment.
-    const nextAttribute = comment.indexOf('@', start);
-    const endOfComment = comment.indexOf('*/', start);
-    const end = nextAttribute === -1 ? endOfComment : Math.min(nextAttribute, endOfComment);
-    const content = comment.substring(start, end).trim();
-
-    // make sure multiline comments are supported, and each line is trimmed and `\s\s\s\*` removed
-    return content.split('\n').map(v => {
-        const indexOfStar = v.indexOf('*');
-        if (indexOfStar === -1) return v.trim();
         return v.substring(indexOfStar + 1).trim();
-    }).join('\n');
+      })
+      .join("\n")
+      .replace(/\n*$/g, ""),
+    end + 1
+  ];
 }
 
-export function extractJSDocAttribute(sourceFile: SourceFile, node: Node | undefined, attribute: string): string | undefined {
-    // in TypeScript 5.3 they made JSDoc parsing optional and disabled by default.
-    // we need to read the comments manually and then parse @{attribute} {value} manually.
-    // we need reference to SourceFile, since Node.getSourceFile() although available in types,
-    // is not available at runtime sometimes (works in tests, but fails with tsc).
-    if (!node) return undefined;
-    const comment = getCommentOfNode(sourceFile, node);
-    if (!comment) return undefined;
+export function parseJSDocBooleanFromText(
+  comment: string,
+  attribute: string
+): boolean | undefined {
+  return new RegExp(
+    `^\s*@(${attribute?.trim()})\s*(false|False|FALSE|0|n|N|no|No|NO)\s*$`,
+    "gm"
+  ).test(comment?.trim())
+    ? false
+    : new RegExp(
+          `^\s*@(${attribute?.trim()})\s*(true|True|TRUE|1|y|Y|yes|Yes|YES)?\s*$`,
+          "gm"
+        ).test(comment?.trim())
+      ? true
+      : undefined;
+}
 
-    return parseJSDocAttributeFromText(comment, attribute);
+const JS_DOC_REGEX = /^\s*\*\s\@[a-z]+\:?(.*)\s[a-zA-Z0-9_]+$/gim;
+
+export function parseJSDocDescription(comment: string): string | undefined {
+  let lines = comment
+    .split("\n")
+    .filter(line => line && !line.includes("/**") && !line.includes("*/"))
+    .map(line =>
+      line
+        .replace(/^\s*\*\s*/g, "")
+        .replace(/^\*\s*/g, "")
+        .trim()
+    );
+
+  const attribute = lines.findIndex(line => line.startsWith("@"));
+  if (attribute !== -1) {
+    lines = lines.slice(0, attribute);
+  }
+
+  return lines.join("\n").trim() || undefined;
 }
 
-export function getPropertyName(f: NodeFactory, node?: PropertyName): string | symbol | number | ArrowFunction {
-    if (!node) return '';
+export function extractJSDocAttribute(
+  sourceFile: SourceFile,
+  node: Node | undefined,
+  attribute: string
+): string | undefined {
+  // in TypeScript 5.3 they made JSDoc parsing optional and disabled by default.
+  // we need to read the comments manually and then parse @{attribute} {value} manually.
+  // we need reference to SourceFile, since Node.getSourceFile() although available in types,
+  // is not available at runtime sometimes (works in tests, but fails with tsc).
+  if (!node) return undefined;
+  const comment = getCommentOfNode(sourceFile, node);
+  if (!comment) return undefined;
+
+  let result = parseJSDocAttributeFromText(comment, attribute);
+  if (!result[0] && attribute === "description") {
+    result[0] = parseJSDocDescription(comment);
+  }
+
+  return result[0];
+}
 
-    if (isIdentifier(node)) return getIdentifierName(node);
-    if (isStringLiteral(node)) return node.text;
-    if (isNumericLiteral(node)) return +node.text;
-    if (isNoSubstitutionTemplateLiteral(node)) return node.text;
-    if (isComputedPropertyName(node)) {
-        return f.createArrowFunction(undefined, undefined, [], undefined, undefined, node.expression);
+export function extractJSDocArray(
+  sourceFile: SourceFile,
+  node: Node | undefined,
+  attribute: string
+): string[] | undefined {
+  // in TypeScript 5.3 they made JSDoc parsing optional and disabled by default.
+  // we need to read the comments manually and then parse @{attribute} {value} manually.
+  // we need reference to SourceFile, since Node.getSourceFile() although available in types,
+  // is not available at runtime sometimes (works in tests, but fails with tsc).
+  if (!node) return undefined;
+  const comment = getCommentOfNode(sourceFile, node);
+  if (!comment) return undefined;
+
+  const results = [] as string[];
+
+  try {
+    let result = parseJSDocAttributeFromText(comment, attribute);
+    if (result.length < 2) {
+      return undefined;
     }
-    if (isPrivateIdentifier(node)) return getIdentifierName(node);
 
-    return '';
-}
+    if (result[0] && result[1] > -1) {
+      results.push(result[0]);
+    }
 
-export function getNameAsString(node?: PropertyName | QualifiedName): string {
-    if (!node) return '';
-    if (isIdentifier(node)) return getIdentifierName(node);
-    if (isStringLiteral(node)) return node.text;
-    if (isNumericLiteral(node)) return node.text;
-    if (isBigIntLiteral(node)) return node.text;
-    if (isNoSubstitutionTemplateLiteral(node)) return node.text;
-    if (isComputedPropertyName(node)) {
-        if (isStringLiteralLike(node) || isNumericLiteral(node)) return (node as StringLiteralLike | NumericLiteral).text;
-        return '';
+    let currentComment = comment;
+    while (result[1] > -1 && currentComment.length > result[1]) {
+      currentComment = currentComment.substring(result[1]);
+
+      // search for next attribute
+      result = parseJSDocAttributeFromText(currentComment, attribute);
+      if (result[0]) {
+        results.push(result[0]);
+      }
     }
-    if (isPrivateIdentifier(node)) return getIdentifierName(node);
+  } catch (error) {
+    console.error(
+      "Error parsing JSDoc attribute:",
+      attribute,
+      "in comment:",
+      comment
+    );
+    console.error(error);
+  }
+
+  return results;
+}
 
-    return joinQualifiedName(node);
+export function extractJSDocBoolean(
+  sourceFile: SourceFile,
+  node: Node | undefined,
+  attribute: string
+): boolean | undefined {
+  // in TypeScript 5.3 they made JSDoc parsing optional and disabled by default.
+  // we need to read the comments manually and then parse @{attribute} {value} manually.
+  // we need reference to SourceFile, since Node.getSourceFile() although available in types,
+  // is not available at runtime sometimes (works in tests, but fails with tsc).
+  if (!node) {
+    return undefined;
+  }
+
+  const comment = getCommentOfNode(sourceFile, node);
+  if (!comment) {
+    return undefined;
+  }
+
+  return parseJSDocBooleanFromText(comment, attribute);
 }
 
-export function hasModifier(node: Node & { modifiers?: NodeArray<ModifierLike> }, modifier: ts.SyntaxKind): boolean {
-    if (!node.modifiers) return false;
-    return node.modifiers.some(v => v.kind === modifier);
+export function getPropertyName(
+  f: NodeFactory,
+  node?: PropertyName
+): string | symbol | number | ArrowFunction {
+  if (!node) return "";
+
+  if (isIdentifier(node)) return getIdentifierName(node);
+  if (isStringLiteral(node)) return node.text;
+  if (isNumericLiteral(node)) return +node.text;
+  if (isNoSubstitutionTemplateLiteral(node)) return node.text;
+  if (isComputedPropertyName(node)) {
+    return f.createArrowFunction(
+      undefined,
+      undefined,
+      [],
+      undefined,
+      undefined,
+      node.expression
+    );
+  }
+  if (isPrivateIdentifier(node)) return getIdentifierName(node);
+
+  return "";
 }
 
-const cloneHook = <T extends Node>(node: T, payload: { depth: number }): CloneNodeHook<T> | undefined => {
-    if (isIdentifier(node)) {
-        //ts-clone-node wants to read `node.text` which does not exist. we hook into it and provide the correct value.
-        return {
-            text: () => {
-                return getIdentifierName(node);
-            },
-        } as any;
-    }
-    return;
+export function getNameAsString(node?: PropertyName | QualifiedName): string {
+  if (!node) return "";
+  if (isIdentifier(node)) return getIdentifierName(node);
+  if (isStringLiteral(node)) return node.text;
+  if (isNumericLiteral(node)) return node.text;
+  if (isBigIntLiteral(node)) return node.text;
+  if (isNoSubstitutionTemplateLiteral(node)) return node.text;
+  if (isComputedPropertyName(node)) {
+    if (isStringLiteralLike(node) || isNumericLiteral(node))
+      return (node as StringLiteralLike | NumericLiteral).text;
+    return "";
+  }
+  if (isPrivateIdentifier(node)) return getIdentifierName(node);
+
+  return joinQualifiedName(node);
+}
+
+export function hasModifier(
+  node: Node & { modifiers?: NodeArray<ModifierLike> },
+  modifier: ts.SyntaxKind
+): boolean {
+  if (!node.modifiers) return false;
+  return node.modifiers.some(v => v.kind === modifier);
+}
+
+const cloneHook = <T extends Node>(
+  node: T,
+  payload: { depth: number }
+): CloneNodeHook<T> | undefined => {
+  if (isIdentifier(node)) {
+    //ts-clone-node wants to read `node.text` which does not exist. we hook into it and provide the correct value.
+    return {
+      text: () => {
+        return getIdentifierName(node);
+      }
+    } as any;
+  }
+  return;
 };
 
 export class NodeConverter {
-    constructor(protected f: NodeFactory) {
+  constructor(protected f: NodeFactory) {}
+
+  toExpression<T extends PackExpression | PackExpression[]>(
+    node?: T
+  ): Expression {
+    if (node === undefined) return this.f.createIdentifier("undefined");
+
+    if (Array.isArray(node)) {
+      return this.f.createArrayLiteralExpression(
+        this.f.createNodeArray(
+          node.map(v => this.toExpression(v))
+        ) as NodeArray<Expression>
+      );
     }
 
-    toExpression<T extends PackExpression | PackExpression[]>(node?: T): Expression {
-        if (node === undefined) return this.f.createIdentifier('undefined');
-
-        if (Array.isArray(node)) {
-            return this.f.createArrayLiteralExpression(this.f.createNodeArray(node.map(v => this.toExpression(v))) as NodeArray<Expression>);
-        }
-
-        if ('string' === typeof node) return this.f.createStringLiteral(node, true);
-        if ('number' === typeof node) return this.f.createNumericLiteral(node);
-        if ('bigint' === typeof node) return this.f.createBigIntLiteral(String(node));
-        if ('boolean' === typeof node) return node ? this.f.createTrue() : this.f.createFalse();
-
-        if (node.pos === -1 && node.end === -1 && node.parent === undefined) {
-            if (isArrowFunction(node)) {
-                if (node.body.pos === -1 && node.body.end === -1 && node.body.parent === undefined) return node;
-                return this.f.createArrowFunction(node.modifiers, node.typeParameters, node.parameters, node.type, node.equalsGreaterThanToken, this.toExpression(node.body as Expression));
-            }
-            return node;
-        }
-        switch (node.kind) {
-            case SyntaxKind.Identifier:
-                return finish(node, this.f.createIdentifier(getIdentifierName(node as Identifier)));
-            case SyntaxKind.StringLiteral:
-                return finish(node, this.f.createStringLiteral((node as StringLiteral).text));
-            case SyntaxKind.NumericLiteral:
-                return finish(node, this.f.createNumericLiteral((node as NumericLiteral).text));
-            case SyntaxKind.BigIntLiteral:
-                return finish(node, this.f.createBigIntLiteral((node as BigIntLiteral).text));
-            case SyntaxKind.TrueKeyword:
-                return finish(node, this.f.createTrue());
-            case SyntaxKind.FalseKeyword:
-                return finish(node, this.f.createFalse());
-        }
-
-        //todo: ts-node-clone broke with ts 4.8,
-        // => TypeError: Cannot read properties of undefined (reading 'emitNode')
-        // which is probably due a broken node clone. We need to figure out which node it is
-        // and see what the issue is. since ts-node-clone is not really maintained anymore,
-        // we need to fork it
-        try {
-            return tsNodeClone(node, {
-                preserveComments: false,
-                factory: this.f,
-                setOriginalNodes: true,
-                preserveSymbols: true,
-                setParents: true,
-                hook: cloneHook,
-            }) as Expression;
-        } catch (error) {
-            console.error('could not clone node', node);
-            throw error;
-        }
+    if ("string" === typeof node) return this.f.createStringLiteral(node, true);
+    if ("number" === typeof node) return this.f.createNumericLiteral(node);
+    if ("bigint" === typeof node)
+      return this.f.createBigIntLiteral(String(node));
+    if ("boolean" === typeof node)
+      return node ? this.f.createTrue() : this.f.createFalse();
+
+    if (node.pos === -1 && node.end === -1 && node.parent === undefined) {
+      if (isArrowFunction(node)) {
+        if (
+          node.body.pos === -1 &&
+          node.body.end === -1 &&
+          node.body.parent === undefined
+        )
+          return node;
+        return this.f.createArrowFunction(
+          node.modifiers,
+          node.typeParameters,
+          node.parameters,
+          node.type,
+          node.equalsGreaterThanToken,
+          this.toExpression(node.body as Expression)
+        );
+      }
+      return node;
+    }
+    switch (node.kind) {
+      case SyntaxKind.Identifier:
+        return finish(
+          node,
+          this.f.createIdentifier(getIdentifierName(node as Identifier))
+        );
+      case SyntaxKind.StringLiteral:
+        return finish(
+          node,
+          this.f.createStringLiteral((node as StringLiteral).text)
+        );
+      case SyntaxKind.NumericLiteral:
+        return finish(
+          node,
+          this.f.createNumericLiteral((node as NumericLiteral).text)
+        );
+      case SyntaxKind.BigIntLiteral:
+        return finish(
+          node,
+          this.f.createBigIntLiteral((node as BigIntLiteral).text)
+        );
+      case SyntaxKind.TrueKeyword:
+        return finish(node, this.f.createTrue());
+      case SyntaxKind.FalseKeyword:
+        return finish(node, this.f.createFalse());
+    }
 
+    //todo: ts-node-clone broke with ts 4.8,
+    // => TypeError: Cannot read properties of undefined (reading 'emitNode')
+    // which is probably due a broken node clone. We need to figure out which node it is
+    // and see what the issue is. since ts-node-clone is not really maintained anymore,
+    // we need to fork it
+    try {
+      return tsNodeClone(node, {
+        preserveComments: false,
+        factory: this.f,
+        setOriginalNodes: true,
+        preserveSymbols: true,
+        setParents: true,
+        hook: cloneHook
+      }) as Expression;
+    } catch (error) {
+      console.error("could not clone node", node);
+      throw error;
     }
+  }
 }
 
 function isExternalOrCommonJsModule(file: SourceFile): boolean {
-    //both attributes are internal and not yet public
-    return (file.externalModuleIndicator || file.commonJsModuleIndicator) !== undefined;
+  //both attributes are internal and not yet public
+  return (
+    (file.externalModuleIndicator || file.commonJsModuleIndicator) !== undefined
+  );
 }
 
-export function isNodeWithLocals(node: Node): node is (Node & { locals: SymbolTable | undefined }) {
-    return 'locals' in node;
+export function isNodeWithLocals(
+  node: Node
+): node is Node & { locals: SymbolTable | undefined } {
+  return "locals" in node;
 }
 
 //logic copied from typescript
 export function getGlobalsOfSourceFile(file: SourceFile): SymbolTable | void {
-    if (file.redirectInfo) return;
-    if (!isNodeWithLocals(file)) return;
-    if (!isExternalOrCommonJsModule(file)) return file.locals;
-    if (file.jsGlobalAugmentations) return file.jsGlobalAugmentations;
-    if (file.symbol && file.symbol.globalExports) return file.symbol.globalExports;
+  if (file.redirectInfo) return;
+  if (!isNodeWithLocals(file)) return;
+  if (!isExternalOrCommonJsModule(file)) return file.locals;
+  if (file.jsGlobalAugmentations) return file.jsGlobalAugmentations;
+  if (file.symbol && file.symbol.globalExports)
+    return file.symbol.globalExports;
 }
 
 /**
  * For imports that can removed (like a class import only used as type only, like `p: Model[]`) we have
  * to modify the import so TS does not remove it.
  */
-export function ensureImportIsEmitted(importDeclaration: ImportDeclaration | JSDocImportTag, specifierName?: Identifier) {
-    if (specifierName && importDeclaration.importClause && importDeclaration.importClause.namedBindings) {
-        // const binding = importDeclaration.importClause.namedBindings;
-        if (isNamedImports(importDeclaration.importClause.namedBindings)) {
-            for (const element of importDeclaration.importClause.namedBindings.elements) {
-                if (element.name.escapedText === specifierName.escapedText) {
-                    (element.flags as any) |= NodeFlags.Synthesized;
-                    return;
-                }
-            }
+export function ensureImportIsEmitted(
+  importDeclaration: ImportDeclaration | JSDocImportTag,
+  specifierName?: Identifier
+) {
+  if (
+    specifierName &&
+    importDeclaration.importClause &&
+    importDeclaration.importClause.namedBindings
+  ) {
+    // const binding = importDeclaration.importClause.namedBindings;
+    if (isNamedImports(importDeclaration.importClause.namedBindings)) {
+      for (const element of importDeclaration.importClause.namedBindings
+        .elements) {
+        if (element.name.escapedText === specifierName.escapedText) {
+          (element.flags as any) |= NodeFlags.Synthesized;
+          return;
         }
+      }
     }
+  }
 
-    (importDeclaration.flags as any) |= NodeFlags.Synthesized;
+  (importDeclaration.flags as any) |= NodeFlags.Synthesized;
 }
 
-
 /**
  * Serializes an entity name as an expression for decorator type metadata.
  *
  * @param node The entity name to serialize.
  */
-export function serializeEntityNameAsExpression(f: NodeFactory, node: EntityName): SerializedEntityNameAsExpression {
-    switch (node.kind) {
-        case SyntaxKind.Identifier:
-            return finish(node, f.createIdentifier(getIdentifierName(node)));
-        case SyntaxKind.QualifiedName:
-            return finish(node, serializeQualifiedNameAsExpression(f, node));
-    }
-    return node;
+export function serializeEntityNameAsExpression(
+  f: NodeFactory,
+  node: EntityName
+): SerializedEntityNameAsExpression {
+  switch (node.kind) {
+    case SyntaxKind.Identifier:
+      return finish(node, f.createIdentifier(getIdentifierName(node)));
+    case SyntaxKind.QualifiedName:
+      return finish(node, serializeQualifiedNameAsExpression(f, node));
+  }
+  return node;
 }
 
-type SerializedEntityNameAsExpression = Identifier | BinaryExpression | PropertyAccessExpression;
+type SerializedEntityNameAsExpression =
+  | Identifier
+  | BinaryExpression
+  | PropertyAccessExpression;
 
 /**
  * Serializes an qualified name as an expression for decorator type metadata.
@@ -310,26 +532,31 @@ type SerializedEntityNameAsExpression = Identifier | BinaryExpression | Property
  * @param useFallback A value indicating whether to use logical operators to test for the
  *                    qualified name at runtime.
  */
-function serializeQualifiedNameAsExpression(f: NodeFactory, node: QualifiedName): SerializedEntityNameAsExpression {
-    return f.createPropertyAccessExpression(serializeEntityNameAsExpression(f, node.left), node.right);
+function serializeQualifiedNameAsExpression(
+  f: NodeFactory,
+  node: QualifiedName
+): SerializedEntityNameAsExpression {
+  return f.createPropertyAccessExpression(
+    serializeEntityNameAsExpression(f, node.left),
+    node.right
+  );
 }
 
 export type MetaNode = Node & {
-    jsDoc?: JSDoc[];
-    _original?: MetaNode;
-    original?: MetaNode;
-    _symbol?: Symbol;
-    symbol?: Symbol;
-    _parent?: MetaNode;
-    localSymbol?: Symbol;
+  jsDoc?: JSDoc[];
+  _original?: MetaNode;
+  original?: MetaNode;
+  _symbol?: Symbol;
+  symbol?: Symbol;
+  _parent?: MetaNode;
+  localSymbol?: Symbol;
 };
 
 function finish<T extends MetaNode>(oldNode: MetaNode, newNode: T): T {
-    setOriginalNode(newNode, oldNode);
-    newNode._original = newNode.original;
+  setOriginalNode(newNode, oldNode);
+  newNode._original = newNode.original;
 
-    newNode._symbol = oldNode._symbol ?? oldNode.symbol;
-    newNode.symbol = newNode._symbol;
-    return newNode;
+  newNode._symbol = oldNode._symbol ?? oldNode.symbol;
+  newNode.symbol = newNode._symbol;
+  return newNode;
 }
-
diff --git a/tsconfig.esm.json b/tsconfig.esm.json
index 551fa2c6421c2ccc167a0901bfc380a101141ed2..4344ffb13558514ac34b3d6dfb76a79b5d2628d3 100644
--- a/tsconfig.esm.json
+++ b/tsconfig.esm.json
@@ -6,7 +6,7 @@
   },
   "references": [
     {
-      "path": "../type-spec/tsconfig.esm.json"
+      "path": "../type-spec@1.0.1/tsconfig.esm.json"
     }
   ]
 }
\ No newline at end of file
diff --git a/tsconfig.json b/tsconfig.json
index 07813e9a1ed03f14e7bca805cb3475f1b8c75c17..7ab2a6e72521e9cec35f83eb386b7fa911acc78d 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -14,24 +14,19 @@
     "outDir": "./dist/cjs",
     "declaration": true,
     "composite": true,
-    "types": [
-      "lz-string",
-      "micromatch",
-      "node"
-    ]
+    "types": ["lz-string", "node"]
   },
   "include": [
     "src",
     "install-transformer.ts",
     "compiler-debug.ts",
-    "index.ts"
-  ],
-  "exclude": [
-    "tests"
+    "index.ts",
+    "dependencies.d.ts"
   ],
+  "exclude": ["tests"],
   "references": [
     {
-      "path": "../type-spec/tsconfig.json"
+      "path": "../type-spec@1.0.1/tsconfig.json"
     }
   ]
 }
