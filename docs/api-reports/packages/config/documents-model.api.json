{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.38.3",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@storm-software/config!",
  "docComment": "",
  "name": "@storm-software/config",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@storm-software/config!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-software/config!ColorConfig:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ColorConfig = "
            },
            {
              "kind": "Reference",
              "text": "Infer",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "ColorConfigSchema",
              "canonicalReference": "@storm-software/config!ColorConfigSchema:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "releaseTag": "Public",
          "name": "ColorConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-software/config!ColorConfigInput:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ColorConfigInput = "
            },
            {
              "kind": "Reference",
              "text": "InferIn",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "ColorConfigSchema",
              "canonicalReference": "@storm-software/config!ColorConfigSchema:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "releaseTag": "Public",
          "name": "ColorConfigInput",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!ColorConfigSchema:var",
          "docComment": "/**\n * Storm theme color config values used for styling various workspace elements\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ColorConfigSchema: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    primary: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    background: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    success: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    info: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    warning: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    error: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    fatal: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n    primary: string;\n    background: string;\n    success: string;\n    info: string;\n    warning: string;\n    error: string;\n    fatal: string;\n}, {\n    primary?: string | undefined;\n    background?: string | undefined;\n    success?: string | undefined;\n    info?: string | undefined;\n    warning?: string | undefined;\n    error?: string | undefined;\n    fatal?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/schema.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ColorConfigSchema",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 33
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-software/config!ConfigFile:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ConfigFile = "
            },
            {
              "kind": "Reference",
              "text": "Infer",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "ConfigFileSchema",
              "canonicalReference": "@storm-software/config!ConfigFileSchema:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "releaseTag": "Public",
          "name": "ConfigFile",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-software/config!ConfigFileInput:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ConfigFileInput = "
            },
            {
              "kind": "Reference",
              "text": "InferIn",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "ConfigFileSchema",
              "canonicalReference": "@storm-software/config!ConfigFileSchema:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "releaseTag": "Public",
          "name": "ConfigFileInput",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!ConfigFileSchema:var",
          "docComment": "/**\n * Full Storm config file values used during various dev-ops processes\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ConfigFileSchema: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    name: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    namespace: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    license: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    homepage: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    preMajor: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodBoolean",
              "canonicalReference": "!z.ZodBoolean:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    owner: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    worker: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    runtimeDirectory: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    fileBanner: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    colors: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n        primary: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        background: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        success: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        info: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        warning: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        error: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        fatal: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    }, {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    }>;\n    env: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodEnum",
              "canonicalReference": "!z.ZodEnum:type"
            },
            {
              "kind": "Content",
              "text": "<[\"development\", \"staging\", \"production\"]>>;\n    ci: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodBoolean",
              "canonicalReference": "!z.ZodBoolean:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    repository: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    workspaceRoot: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    branch: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    organization: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    timezone: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    locale: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    projects: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodRecord",
              "canonicalReference": "!z.ZodRecord:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n        name: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n        namespace: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        license: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        homepage: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        preMajor: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodBoolean",
              "canonicalReference": "!z.ZodBoolean:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        owner: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n        worker: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        runtimeDirectory: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        fileBanner: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        colors: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n            primary: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n            background: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n            success: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n            info: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n            warning: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n            error: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n            fatal: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n            primary: string;\n            background: string;\n            success: string;\n            info: string;\n            warning: string;\n            error: string;\n            fatal: string;\n        }, {\n            primary?: string | undefined;\n            background?: string | undefined;\n            success?: string | undefined;\n            info?: string | undefined;\n            warning?: string | undefined;\n            error?: string | undefined;\n            fatal?: string | undefined;\n        }>;\n        root: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n        version: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        projectType: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodEnum",
              "canonicalReference": "!z.ZodEnum:type"
            },
            {
              "kind": "Content",
              "text": "<[\"application\", \"library\"]>>;\n        tags: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodArray",
              "canonicalReference": "!z.ZodArray:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ", \"many\">>;\n        modules: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodRecord",
              "canonicalReference": "!z.ZodRecord:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodAny",
              "canonicalReference": "!z.ZodAny:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n        name: string;\n        namespace: string;\n        license: string;\n        homepage: string;\n        preMajor: boolean;\n        owner: string;\n        worker: string;\n        runtimeDirectory: string;\n        fileBanner: string;\n        colors: {\n            primary: string;\n            background: string;\n            success: string;\n            info: string;\n            warning: string;\n            error: string;\n            fatal: string;\n        };\n        root: string;\n        version: string;\n        projectType: \"application\" | \"library\";\n        tags: string[];\n        modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n    }, {\n        name: string;\n        owner: string;\n        colors: {\n            primary?: string | undefined;\n            background?: string | undefined;\n            success?: string | undefined;\n            info?: string | undefined;\n            warning?: string | undefined;\n            error?: string | undefined;\n            fatal?: string | undefined;\n        };\n        root: string;\n        modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n        namespace?: string | undefined;\n        license?: string | undefined;\n        homepage?: string | undefined;\n        preMajor?: boolean | undefined;\n        worker?: string | undefined;\n        runtimeDirectory?: string | undefined;\n        fileBanner?: string | undefined;\n        version?: string | undefined;\n        projectType?: \"application\" | \"library\" | undefined;\n        tags?: string[] | undefined;\n    }>>;\n}, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n    name: string;\n    namespace: string;\n    license: string;\n    homepage: string;\n    preMajor: boolean;\n    owner: string;\n    worker: string;\n    runtimeDirectory: string;\n    fileBanner: string;\n    colors: {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    };\n    env: \"development\" | \"staging\" | \"production\";\n    ci: boolean;\n    repository: string;\n    workspaceRoot: string;\n    branch: string;\n    organization: string;\n    timezone: string;\n    locale: string;\n    projects: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, {\n        name: string;\n        namespace: string;\n        license: string;\n        homepage: string;\n        preMajor: boolean;\n        owner: string;\n        worker: string;\n        runtimeDirectory: string;\n        fileBanner: string;\n        colors: {\n            primary: string;\n            background: string;\n            success: string;\n            info: string;\n            warning: string;\n            error: string;\n            fatal: string;\n        };\n        root: string;\n        version: string;\n        projectType: \"application\" | \"library\";\n        tags: string[];\n        modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n    }>;\n}, {\n    name: string;\n    owner: string;\n    colors: {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    };\n    repository: string;\n    workspaceRoot: string;\n    projects: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, {\n        name: string;\n        owner: string;\n        colors: {\n            primary?: string | undefined;\n            background?: string | undefined;\n            success?: string | undefined;\n            info?: string | undefined;\n            warning?: string | undefined;\n            error?: string | undefined;\n            fatal?: string | undefined;\n        };\n        root: string;\n        modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n        namespace?: string | undefined;\n        license?: string | undefined;\n        homepage?: string | undefined;\n        preMajor?: boolean | undefined;\n        worker?: string | undefined;\n        runtimeDirectory?: string | undefined;\n        fileBanner?: string | undefined;\n        version?: string | undefined;\n        projectType?: \"application\" | \"library\" | undefined;\n        tags?: string[] | undefined;\n    }>;\n    namespace?: string | undefined;\n    license?: string | undefined;\n    homepage?: string | undefined;\n    preMajor?: boolean | undefined;\n    worker?: string | undefined;\n    runtimeDirectory?: string | undefined;\n    fileBanner?: string | undefined;\n    env?: \"development\" | \"staging\" | \"production\" | undefined;\n    ci?: boolean | undefined;\n    branch?: string | undefined;\n    organization?: string | undefined;\n    timezone?: string | undefined;\n    locale?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/schema.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ConfigFileSchema",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 203
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!DefaultStormColorConfig:var",
          "docComment": "/**\n * Storm theme config values used for styling various workspace elements\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultStormColorConfig: "
            },
            {
              "kind": "Reference",
              "text": "ColorConfig",
              "canonicalReference": "@storm-software/config!ColorConfig:type"
            }
          ],
          "fileUrlPath": "packages/config/src/utilities/default-config.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultStormColorConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!DefaultStormPackageConfig:var",
          "docComment": "/**\n * Storm Workspace config values used during various dev-ops processes\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultStormPackageConfig: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PackageConfigInput",
              "canonicalReference": "@storm-software/config!PackageConfigInput:type"
            },
            {
              "kind": "Content",
              "text": ", \"name\">"
            }
          ],
          "fileUrlPath": "packages/config/src/utilities/default-config.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultStormPackageConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!DefaultStormProjectConfig:var",
          "docComment": "/**\n * Storm Workspace config values used during various dev-ops processes\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultStormProjectConfig: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ProjectConfigInput",
              "canonicalReference": "@storm-software/config!ProjectConfigInput:type"
            },
            {
              "kind": "Content",
              "text": ", \"name\" | \"root\">"
            }
          ],
          "fileUrlPath": "packages/config/src/utilities/default-config.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultStormProjectConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!getConfigModule:var",
          "docComment": "/**\n * Get the config for a specific Storm config module\n *\n * @param moduleName - The name of the config module\n *\n * @param options - The options for the config module\n *\n * @returns The config for the specified Storm config module. If the module does not exist, `undefined` is returned.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getConfigModule: "
            },
            {
              "kind": "Content",
              "text": "<TModuleConfig = any>(schema: "
            },
            {
              "kind": "Reference",
              "text": "Schema",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": ", moduleName: string) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<TModuleConfig>"
            }
          ],
          "fileUrlPath": "packages/config/src/get-config.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "getConfigModule",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!getDefaultConfig:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getDefaultConfig: "
            },
            {
              "kind": "Content",
              "text": "() => "
            },
            {
              "kind": "Reference",
              "text": "StormConfig",
              "canonicalReference": "@storm-software/config!StormConfig:type"
            }
          ],
          "fileUrlPath": "packages/config/src/utilities/default-config.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "getDefaultConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!getDefaultConfigFile:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getDefaultConfigFile: "
            },
            {
              "kind": "Content",
              "text": "() => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConfigFileInput",
              "canonicalReference": "@storm-software/config!ConfigFileInput:type"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "packages/config/src/utilities/default-config.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "getDefaultConfigFile",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!getStormConfig:var",
          "docComment": "/**\n * Get the static config for the current Storm workspace\n *\n * @returns The static config for the current Storm workspace\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getStormConfig: "
            },
            {
              "kind": "Content",
              "text": "<TModuleName extends string = string, TModuleConfig = any>(schema?: "
            },
            {
              "kind": "Reference",
              "text": "Schema",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": ", moduleName?: TModuleName | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StormConfig",
              "canonicalReference": "@storm-software/config!StormConfig:type"
            },
            {
              "kind": "Content",
              "text": "<TModuleName, TModuleConfig>>"
            }
          ],
          "fileUrlPath": "packages/config/src/get-config.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "getStormConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!isDevelopment:var",
          "docComment": "/**\n * Checks if the current environment is development.\n *\n * @returns True if the current environment is development.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isDevelopment: "
            },
            {
              "kind": "Content",
              "text": "() => boolean"
            }
          ],
          "fileUrlPath": "packages/config/src/utilities/environment.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isDevelopment",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!isProduction:var",
          "docComment": "/**\n * Checks if the current environment is production.\n *\n * @returns True if the current environment is production.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isProduction: "
            },
            {
              "kind": "Content",
              "text": "() => boolean"
            }
          ],
          "fileUrlPath": "packages/config/src/utilities/environment.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isProduction",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!loadStormConfig:var",
          "docComment": "/**\n * Get the config for the current Storm workspace's config file\n *\n * @param defaultConfig - The default config to apply under the current workspace config\n *\n * @returns The config for the current Storm workspace\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "loadStormConfig: "
            },
            {
              "kind": "Content",
              "text": "<TConfig extends "
            },
            {
              "kind": "Reference",
              "text": "StormConfig",
              "canonicalReference": "@storm-software/config!StormConfig:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "StormConfig",
              "canonicalReference": "@storm-software/config!StormConfig:type"
            },
            {
              "kind": "Content",
              "text": ">(projectName?: string, defaultConfig?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<TConfig> | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<TConfig>"
            }
          ],
          "fileUrlPath": "packages/config/src/load-config.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "loadStormConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-software/config!PackageConfig:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PackageConfig = "
            },
            {
              "kind": "Reference",
              "text": "Infer",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "PackageConfigSchema",
              "canonicalReference": "@storm-software/config!PackageConfigSchema:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "releaseTag": "Public",
          "name": "PackageConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-software/config!PackageConfigInput:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PackageConfigInput = "
            },
            {
              "kind": "Reference",
              "text": "InferIn",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "PackageConfigSchema",
              "canonicalReference": "@storm-software/config!PackageConfigSchema:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "releaseTag": "Public",
          "name": "PackageConfigInput",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!PackageConfigSchema:var",
          "docComment": "/**\n * Storm base schema used to represent a package's config (either workspace or project)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "PackageConfigSchema: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    name: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    namespace: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    license: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    homepage: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    preMajor: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodBoolean",
              "canonicalReference": "!z.ZodBoolean:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    owner: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    worker: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    runtimeDirectory: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    fileBanner: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    colors: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n        primary: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        background: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        success: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        info: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        warning: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        error: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        fatal: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    }, {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    }>;\n}, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n    name: string;\n    namespace: string;\n    license: string;\n    homepage: string;\n    preMajor: boolean;\n    owner: string;\n    worker: string;\n    runtimeDirectory: string;\n    fileBanner: string;\n    colors: {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    };\n}, {\n    name: string;\n    owner: string;\n    colors: {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    };\n    namespace?: string | undefined;\n    license?: string | undefined;\n    homepage?: string | undefined;\n    preMajor?: boolean | undefined;\n    worker?: string | undefined;\n    runtimeDirectory?: string | undefined;\n    fileBanner?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/schema.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "PackageConfigSchema",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 69
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-software/config!ProjectConfig:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ProjectConfig = "
            },
            {
              "kind": "Reference",
              "text": "Infer",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "ProjectConfigSchema",
              "canonicalReference": "@storm-software/config!ProjectConfigSchema:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "releaseTag": "Public",
          "name": "ProjectConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-software/config!ProjectConfigInput:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ProjectConfigInput = "
            },
            {
              "kind": "Reference",
              "text": "InferIn",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "ProjectConfigSchema",
              "canonicalReference": "@storm-software/config!ProjectConfigSchema:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "releaseTag": "Public",
          "name": "ProjectConfigInput",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!ProjectConfigSchema:var",
          "docComment": "/**\n * Storm project schema used to represent a project's config\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ProjectConfigSchema: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    name: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    namespace: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    license: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    homepage: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    preMajor: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodBoolean",
              "canonicalReference": "!z.ZodBoolean:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    owner: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    worker: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    runtimeDirectory: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    fileBanner: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    colors: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n        primary: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        background: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        success: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        info: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        warning: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        error: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        fatal: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    }, {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    }>;\n    root: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    projectType: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodEnum",
              "canonicalReference": "!z.ZodEnum:type"
            },
            {
              "kind": "Content",
              "text": "<[\"application\", \"library\"]>>;\n    tags: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodArray",
              "canonicalReference": "!z.ZodArray:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ", \"many\">>;\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodRecord",
              "canonicalReference": "!z.ZodRecord:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodAny",
              "canonicalReference": "!z.ZodAny:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n    name: string;\n    namespace: string;\n    license: string;\n    homepage: string;\n    preMajor: boolean;\n    owner: string;\n    worker: string;\n    runtimeDirectory: string;\n    fileBanner: string;\n    colors: {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    };\n    root: string;\n    version: string;\n    projectType: \"application\" | \"library\";\n    tags: string[];\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n}, {\n    name: string;\n    owner: string;\n    colors: {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    };\n    root: string;\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n    namespace?: string | undefined;\n    license?: string | undefined;\n    homepage?: string | undefined;\n    preMajor?: boolean | undefined;\n    worker?: string | undefined;\n    runtimeDirectory?: string | undefined;\n    fileBanner?: string | undefined;\n    version?: string | undefined;\n    projectType?: \"application\" | \"library\" | undefined;\n    tags?: string[] | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/schema.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ProjectConfigSchema",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 95
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!setEnv:var",
          "docComment": "/**\n * Sets the environment variables for the current process.\n *\n * @param defaultConfig - The default configuration to use if none is found.\n *\n * @returns The loaded configuration.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "setEnv: "
            },
            {
              "kind": "Content",
              "text": "<TConfig extends "
            },
            {
              "kind": "Reference",
              "text": "StormConfig",
              "canonicalReference": "@storm-software/config!StormConfig:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "StormConfig",
              "canonicalReference": "@storm-software/config!StormConfig:type"
            },
            {
              "kind": "Content",
              "text": ">(projectName?: string, defaultConfig?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<TConfig> | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<TConfig>"
            }
          ],
          "fileUrlPath": "packages/config/src/utilities/set-env.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "setEnv",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-software/config!StormConfig:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type StormConfig<TModuleName extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", TModuleConfig = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TStormConfig",
              "canonicalReference": "@storm-software/config!~TStormConfig:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any> & {\n        [moduleName in TModuleName]: TModuleConfig;\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "releaseTag": "Public",
          "name": "StormConfig",
          "typeParameters": [
            {
              "typeParameterName": "TModuleName",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "typeParameterName": "TModuleConfig",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-software/config!StormConfigInput:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type StormConfigInput = "
            },
            {
              "kind": "Reference",
              "text": "InferIn",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "StormConfigSchema",
              "canonicalReference": "@storm-software/config!StormConfigSchema:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "releaseTag": "Public",
          "name": "StormConfigInput",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!StormConfigSchema:var",
          "docComment": "/**\n * Full Storm Workspace config values used during various dev-ops processes\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "StormConfigSchema: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    name: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    namespace: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    license: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    homepage: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    preMajor: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodBoolean",
              "canonicalReference": "!z.ZodBoolean:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    owner: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    worker: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    runtimeDirectory: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    fileBanner: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    colors: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n        primary: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        background: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        success: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        info: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        warning: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        error: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        fatal: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    }, {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    }>;\n    root: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    projectType: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodEnum",
              "canonicalReference": "!z.ZodEnum:type"
            },
            {
              "kind": "Content",
              "text": "<[\"application\", \"library\"]>>;\n    tags: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodArray",
              "canonicalReference": "!z.ZodArray:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ", \"many\">>;\n    env: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodEnum",
              "canonicalReference": "!z.ZodEnum:type"
            },
            {
              "kind": "Content",
              "text": "<[\"development\", \"staging\", \"production\"]>>;\n    ci: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodBoolean",
              "canonicalReference": "!z.ZodBoolean:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    repository: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    workspaceRoot: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    branch: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    organization: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    timezone: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    locale: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    configFile: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodNullable",
              "canonicalReference": "!z.ZodNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">>;\n    runtimeVersion: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodRecord",
              "canonicalReference": "!z.ZodRecord:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodAny",
              "canonicalReference": "!z.ZodAny:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n    name: string;\n    namespace: string;\n    license: string;\n    homepage: string;\n    preMajor: boolean;\n    owner: string;\n    worker: string;\n    runtimeDirectory: string;\n    fileBanner: string;\n    colors: {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    };\n    root: string;\n    version: string;\n    projectType: \"application\" | \"library\";\n    tags: string[];\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n    env: \"development\" | \"staging\" | \"production\";\n    ci: boolean;\n    repository: string;\n    workspaceRoot: string;\n    branch: string;\n    organization: string;\n    timezone: string;\n    locale: string;\n    configFile: string | null;\n    runtimeVersion: string;\n}, {\n    name: string;\n    owner: string;\n    colors: {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    };\n    root: string;\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n    repository: string;\n    workspaceRoot: string;\n    namespace?: string | undefined;\n    license?: string | undefined;\n    homepage?: string | undefined;\n    preMajor?: boolean | undefined;\n    worker?: string | undefined;\n    runtimeDirectory?: string | undefined;\n    fileBanner?: string | undefined;\n    version?: string | undefined;\n    projectType?: \"application\" | \"library\" | undefined;\n    tags?: string[] | undefined;\n    env?: \"development\" | \"staging\" | \"production\" | undefined;\n    ci?: boolean | undefined;\n    branch?: string | undefined;\n    organization?: string | undefined;\n    timezone?: string | undefined;\n    locale?: string | undefined;\n    configFile?: string | null | undefined;\n    runtimeVersion?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/schema.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "StormConfigSchema",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 133
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!WorkspaceSchema:var",
          "docComment": "/**\n * Storm theme color config values used for styling various workspace elements\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "WorkspaceSchema: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "!z.ZodObject:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    env: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodEnum",
              "canonicalReference": "!z.ZodEnum:type"
            },
            {
              "kind": "Content",
              "text": "<[\"development\", \"staging\", \"production\"]>>;\n    ci: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodBoolean",
              "canonicalReference": "!z.ZodBoolean:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    repository: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    workspaceRoot: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    branch: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    organization: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    timezone: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    locale: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "!z.ZodDefault:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "!z.ZodString:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "!z.ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n    env: \"development\" | \"staging\" | \"production\";\n    ci: boolean;\n    repository: string;\n    workspaceRoot: string;\n    branch: string;\n    organization: string;\n    timezone: string;\n    locale: string;\n}, {\n    repository: string;\n    workspaceRoot: string;\n    env?: \"development\" | \"staging\" | \"production\" | undefined;\n    ci?: boolean | undefined;\n    branch?: string | undefined;\n    organization?: string | undefined;\n    timezone?: string | undefined;\n    locale?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/schema.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "WorkspaceSchema",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 33
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!wrapped_ColorConfig:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "wrapped_ColorConfig: "
            },
            {
              "kind": "Content",
              "text": "import(\"@decs/typeschema\").TypeSchema<{\n    primary: string;\n    background: string;\n    success: string;\n    info: string;\n    warning: string;\n    error: string;\n    fatal: string;\n}, {\n    primary?: string | undefined;\n    background?: string | undefined;\n    success?: string | undefined;\n    info?: string | undefined;\n    warning?: string | undefined;\n    error?: string | undefined;\n    fatal?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "wrapped_ColorConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!wrapped_ConfigFile:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "wrapped_ConfigFile: "
            },
            {
              "kind": "Content",
              "text": "import(\"@decs/typeschema\").TypeSchema<{\n    name: string;\n    namespace: string;\n    license: string;\n    homepage: string;\n    preMajor: boolean;\n    owner: string;\n    worker: string;\n    runtimeDirectory: string;\n    fileBanner: string;\n    colors: {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    };\n    env: \"development\" | \"staging\" | \"production\";\n    ci: boolean;\n    repository: string;\n    workspaceRoot: string;\n    branch: string;\n    organization: string;\n    timezone: string;\n    locale: string;\n    projects: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, {\n        name: string;\n        namespace: string;\n        license: string;\n        homepage: string;\n        preMajor: boolean;\n        owner: string;\n        worker: string;\n        runtimeDirectory: string;\n        fileBanner: string;\n        colors: {\n            primary: string;\n            background: string;\n            success: string;\n            info: string;\n            warning: string;\n            error: string;\n            fatal: string;\n        };\n        root: string;\n        version: string;\n        projectType: \"application\" | \"library\";\n        tags: string[];\n        modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n    }>;\n}, {\n    name: string;\n    owner: string;\n    colors: {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    };\n    repository: string;\n    workspaceRoot: string;\n    projects: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, {\n        name: string;\n        owner: string;\n        colors: {\n            primary?: string | undefined;\n            background?: string | undefined;\n            success?: string | undefined;\n            info?: string | undefined;\n            warning?: string | undefined;\n            error?: string | undefined;\n            fatal?: string | undefined;\n        };\n        root: string;\n        modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n        namespace?: string | undefined;\n        license?: string | undefined;\n        homepage?: string | undefined;\n        preMajor?: boolean | undefined;\n        worker?: string | undefined;\n        runtimeDirectory?: string | undefined;\n        fileBanner?: string | undefined;\n        version?: string | undefined;\n        projectType?: \"application\" | \"library\" | undefined;\n        tags?: string[] | undefined;\n    }>;\n    namespace?: string | undefined;\n    license?: string | undefined;\n    homepage?: string | undefined;\n    preMajor?: boolean | undefined;\n    worker?: string | undefined;\n    runtimeDirectory?: string | undefined;\n    fileBanner?: string | undefined;\n    env?: \"development\" | \"staging\" | \"production\" | undefined;\n    ci?: boolean | undefined;\n    branch?: string | undefined;\n    organization?: string | undefined;\n    timezone?: string | undefined;\n    locale?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "wrapped_ConfigFile",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!wrapped_PackageConfig:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "wrapped_PackageConfig: "
            },
            {
              "kind": "Content",
              "text": "import(\"@decs/typeschema\").TypeSchema<{\n    name: string;\n    namespace: string;\n    license: string;\n    homepage: string;\n    preMajor: boolean;\n    owner: string;\n    worker: string;\n    runtimeDirectory: string;\n    fileBanner: string;\n    colors: {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    };\n}, {\n    name: string;\n    owner: string;\n    colors: {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    };\n    namespace?: string | undefined;\n    license?: string | undefined;\n    homepage?: string | undefined;\n    preMajor?: boolean | undefined;\n    worker?: string | undefined;\n    runtimeDirectory?: string | undefined;\n    fileBanner?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "wrapped_PackageConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!wrapped_ProjectConfig:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "wrapped_ProjectConfig: "
            },
            {
              "kind": "Content",
              "text": "import(\"@decs/typeschema\").TypeSchema<{\n    name: string;\n    namespace: string;\n    license: string;\n    homepage: string;\n    preMajor: boolean;\n    owner: string;\n    worker: string;\n    runtimeDirectory: string;\n    fileBanner: string;\n    colors: {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    };\n    root: string;\n    version: string;\n    projectType: \"application\" | \"library\";\n    tags: string[];\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n}, {\n    name: string;\n    owner: string;\n    colors: {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    };\n    root: string;\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n    namespace?: string | undefined;\n    license?: string | undefined;\n    homepage?: string | undefined;\n    preMajor?: boolean | undefined;\n    worker?: string | undefined;\n    runtimeDirectory?: string | undefined;\n    fileBanner?: string | undefined;\n    version?: string | undefined;\n    projectType?: \"application\" | \"library\" | undefined;\n    tags?: string[] | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "wrapped_ProjectConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-software/config!wrapped_StormConfig:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "wrapped_StormConfig: "
            },
            {
              "kind": "Content",
              "text": "import(\"@decs/typeschema\").TypeSchema<{\n    name: string;\n    namespace: string;\n    license: string;\n    homepage: string;\n    preMajor: boolean;\n    owner: string;\n    worker: string;\n    runtimeDirectory: string;\n    fileBanner: string;\n    colors: {\n        primary: string;\n        background: string;\n        success: string;\n        info: string;\n        warning: string;\n        error: string;\n        fatal: string;\n    };\n    root: string;\n    version: string;\n    projectType: \"application\" | \"library\";\n    tags: string[];\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n    env: \"development\" | \"staging\" | \"production\";\n    ci: boolean;\n    repository: string;\n    workspaceRoot: string;\n    branch: string;\n    organization: string;\n    timezone: string;\n    locale: string;\n    configFile: string | null;\n    runtimeVersion: string;\n}, {\n    name: string;\n    owner: string;\n    colors: {\n        primary?: string | undefined;\n        background?: string | undefined;\n        success?: string | undefined;\n        info?: string | undefined;\n        warning?: string | undefined;\n        error?: string | undefined;\n        fatal?: string | undefined;\n    };\n    root: string;\n    modules: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n    repository: string;\n    workspaceRoot: string;\n    namespace?: string | undefined;\n    license?: string | undefined;\n    homepage?: string | undefined;\n    preMajor?: boolean | undefined;\n    worker?: string | undefined;\n    runtimeDirectory?: string | undefined;\n    fileBanner?: string | undefined;\n    version?: string | undefined;\n    projectType?: \"application\" | \"library\" | undefined;\n    tags?: string[] | undefined;\n    env?: \"development\" | \"staging\" | \"production\" | undefined;\n    ci?: boolean | undefined;\n    branch?: string | undefined;\n    organization?: string | undefined;\n    timezone?: string | undefined;\n    locale?: string | undefined;\n    configFile?: string | null | undefined;\n    runtimeVersion?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/config/src/types.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "wrapped_StormConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        }
      ]
    }
  ]
}
