{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.38.4",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@storm-stack/utilities!",
  "docComment": "",
  "name": "@storm-stack/utilities",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@storm-stack/utilities!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!copyFile:var",
          "docComment": "/**\n * Copy a file from one location to another\n *\n * @param file - The file to copy\n *\n * @param dest - The destination location\n *\n * @returns An indicator specifying if the copy was successful\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "copyFile: "
            },
            {
              "kind": "Content",
              "text": "(file: string, dest: string) => string | "
            },
            {
              "kind": "Reference",
              "text": "Buffer",
              "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            }
          ],
          "fileUrlPath": "packages/file-system/src/files/copy-files.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "copyFile",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!copyFiles:var",
          "docComment": "/**\n * Copy files from one location to another\n *\n * @param from - The source location\n *\n * @param to - The destination location\n *\n * @param options - The copy options\n *\n * @returns An indicator specifying if the copy was successful\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "copyFiles: "
            },
            {
              "kind": "Content",
              "text": "(from: string, to: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "CopySyncOptions",
              "canonicalReference": "!\"\\\"fs\\\"\".CopySyncOptions:interface"
            },
            {
              "kind": "Content",
              "text": ") => string | "
            },
            {
              "kind": "Reference",
              "text": "Buffer",
              "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            }
          ],
          "fileUrlPath": "packages/file-system/src/files/copy-files.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "copyFiles",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/utilities!createCliOptions:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createCliOptions(obj: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string | number | boolean>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/file-system/src/cli/create-cli-options.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "createCliOptions"
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/utilities!createCliOptionsString:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createCliOptionsString(obj: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string | number | boolean>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/file-system/src/cli/create-cli-options.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "createCliOptionsString"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!deriveNewSemverVersion:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "deriveNewSemverVersion: "
            },
            {
              "kind": "Content",
              "text": "(currentSemverVersion: string, semverSpecifier: string, preid?: string) => string"
            }
          ],
          "fileUrlPath": "packages/file-system/src/package-management/semver-fns.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "deriveNewSemverVersion",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/utilities!ensurePackage:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function ensurePackage(pkg: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", dev: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", pkgManager?: "
            },
            {
              "kind": "Reference",
              "text": "PackageManagers",
              "canonicalReference": "@storm-stack/utilities!PackageManagers:type"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ", tag?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", projectPath?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", exactVersion?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/file-system/src/package-management/package-fns.ts",
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pkg",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "dev",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "pkgManager",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": true
            },
            {
              "parameterName": "tag",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            },
            {
              "parameterName": "projectPath",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "isOptional": true
            },
            {
              "parameterName": "exactVersion",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "isOptional": true
            }
          ],
          "name": "ensurePackage"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!execute:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "execute: "
            },
            {
              "kind": "Content",
              "text": "(command: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "ExecOptions",
              "canonicalReference": "!\"\\\"child_process\\\"\".ExecOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", env?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string>, stdio?: "
            },
            {
              "kind": "Reference",
              "text": "StdioOptions",
              "canonicalReference": "!\"\\\"child_process\\\"\".StdioOptions:type"
            },
            {
              "kind": "Content",
              "text": ") => string | "
            },
            {
              "kind": "Reference",
              "text": "Buffer",
              "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            }
          ],
          "fileUrlPath": "packages/file-system/src/cli/execute.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "execute",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!executeAsync:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "executeAsync: "
            },
            {
              "kind": "Content",
              "text": "(command: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "ExecOptions",
              "canonicalReference": "!\"\\\"child_process\\\"\".ExecOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", env?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string>, stdio?: "
            },
            {
              "kind": "Reference",
              "text": "StdioOptions",
              "canonicalReference": "!\"\\\"child_process\\\"\".StdioOptions:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string | "
            },
            {
              "kind": "Reference",
              "text": "Buffer",
              "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined>"
            }
          ],
          "fileUrlPath": "packages/file-system/src/cli/execute.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "executeAsync",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!exists:var",
          "docComment": "/**\n * Check if a file exists\n *\n * @param filePath - The file path to check\n *\n * @returns An indicator specifying if the file exists\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "exists: "
            },
            {
              "kind": "Content",
              "text": "(filePath: string) => boolean"
            }
          ],
          "fileUrlPath": "packages/file-system/src/files/exists.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "exists",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/utilities!findFileName:function(1)",
          "docComment": "/**\n * Find the file name from a file path.\n *\n * @param filePath - The file path to process\n *\n * @returns The file name\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function findFileName(filePath: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/file-system/src/files/file-path-fns.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "filePath",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "findFileName"
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/utilities!findFilePath:function(1)",
          "docComment": "/**\n * Find the file path from a file path.\n *\n * @param filePath - The file path to process\n *\n * @returns The file path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function findFilePath(filePath: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/file-system/src/files/file-path-fns.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "filePath",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "findFilePath"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!forwardedHeaders:var",
          "docComment": "/**\n * Returns the headers that should be forwarded from the ClientRequest as headers in the next request sent to the node\n *\n * @param request - A Request\n *\n * @returns A record with the headers where keys are the names and values are the header values\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "forwardedHeaders: "
            },
            {
              "kind": "Content",
              "text": "(request: "
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "!Request:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string>"
            }
          ],
          "fileUrlPath": "packages/file-system/src/http-fns.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "forwardedHeaders",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!getWorkspaceRoot:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getWorkspaceRoot: "
            },
            {
              "kind": "Content",
              "text": "() => any"
            }
          ],
          "fileUrlPath": "packages/file-system/src/files/get-workspace-root.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "getWorkspaceRoot",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/utilities!installPackage:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function installPackage(pkg: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", dev: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", pkgManager?: "
            },
            {
              "kind": "Reference",
              "text": "PackageManagers",
              "canonicalReference": "@storm-stack/utilities!PackageManagers:type"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ", tag?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", projectPath?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", exactVersion?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/file-system/src/package-management/package-fns.ts",
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pkg",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "dev",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "pkgManager",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": true
            },
            {
              "parameterName": "tag",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            },
            {
              "parameterName": "projectPath",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "isOptional": true
            },
            {
              "parameterName": "exactVersion",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "isOptional": true
            }
          ],
          "name": "installPackage"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!isRelativeVersionKeyword:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isRelativeVersionKeyword: "
            },
            {
              "kind": "Content",
              "text": "(val: string) => "
            },
            {
              "kind": "Reference",
              "text": "val",
              "canonicalReference": "@storm-stack/utilities!~val"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "ReleaseType",
              "canonicalReference": "!unknown"
            }
          ],
          "fileUrlPath": "packages/file-system/src/package-management/semver-fns.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isRelativeVersionKeyword",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/utilities!PackageManagers:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PackageManagers = "
            },
            {
              "kind": "Content",
              "text": "\"npm\" | \"yarn\" | \"pnpm\" | \"bun\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/file-system/src/package-management/package-fns.ts",
          "releaseTag": "Public",
          "name": "PackageManagers",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!PackageManagers:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "PackageManagers: "
            },
            {
              "kind": "Content",
              "text": "{\n    NPM: "
            },
            {
              "kind": "Reference",
              "text": "PackageManagers",
              "canonicalReference": "@storm-stack/utilities!PackageManagers:type"
            },
            {
              "kind": "Content",
              "text": ";\n    YARN: "
            },
            {
              "kind": "Reference",
              "text": "PackageManagers",
              "canonicalReference": "@storm-stack/utilities!PackageManagers:type"
            },
            {
              "kind": "Content",
              "text": ";\n    PNPM: "
            },
            {
              "kind": "Reference",
              "text": "PackageManagers",
              "canonicalReference": "@storm-stack/utilities!PackageManagers:type"
            },
            {
              "kind": "Content",
              "text": ";\n    BUN: "
            },
            {
              "kind": "Reference",
              "text": "PackageManagers",
              "canonicalReference": "@storm-stack/utilities!PackageManagers:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "packages/file-system/src/package-management/package-fns.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "PackageManagers",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/utilities!parseVersion:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "parseVersion: "
            },
            {
              "kind": "Content",
              "text": "(semver: string) => import(\"semver/classes/semver\") | null"
            }
          ],
          "fileUrlPath": "packages/file-system/src/package-management/semver-fns.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "parseVersion",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/utilities!renameFile:function(1)",
          "docComment": "/**\n * Rename the file name with a new name.\n *\n * @param filePath - The current file path being processed\n *\n * @param newFileName - The updated file name being processed\n *\n * @returns The modified or unmodified file path.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function renameFile(filePath: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", newFileName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/file-system/src/files/file-path-fns.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "filePath",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "newFileName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "renameFile"
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/utilities!resolvePath:function(1)",
          "docComment": "/**\n * Resolve the file path to an absolute path.\n *\n * @param filePath - The file path to process\n *\n * @param basePath - The base path to use when resolving the file path\n *\n * @returns The resolved file path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function resolvePath(filePath: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", basePath?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/file-system/src/files/file-path-fns.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "filePath",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "basePath",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "resolvePath"
        }
      ]
    }
  ]
}
