{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.38.5",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@storm-stack/serialization!",
  "docComment": "",
  "name": "@storm-stack/serialization",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@storm-stack/serialization!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!Class:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Class = "
            },
            {
              "kind": "Content",
              "text": "{\n    new (...args: any[]): any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "Class",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!ClassInstance:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ClassInstance = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "ClassInstance",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/serialization!ClassSerializable:interface",
          "docComment": "/**\n * A class that can be serialized and deserialized\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClassSerializable<_TData, TJsonValue extends "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "_TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TJsonValue",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "ClassSerializable",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!ClassSerializable#deserialize:member",
              "docComment": "/**\n * Deserialize the class from a JSON object\n *\n * @param json - The JSON object to deserialize from\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deserialize: "
                },
                {
                  "kind": "Content",
                  "text": "(json: TJsonValue) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deserialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!ClassSerializable#serialize:member",
              "docComment": "/**\n * Serialize the class to a JSON object\n *\n * @returns The data object to serialize\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "JsonParserResult",
                  "canonicalReference": "@storm-stack/serialization!JsonParserResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!ClassTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ClassTypeAnnotation = "
            },
            {
              "kind": "Content",
              "text": "[\"class\", string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "ClassTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!CompositeTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CompositeTypeAnnotation = "
            },
            {
              "kind": "Reference",
              "text": "TypedArrayAnnotation",
              "canonicalReference": "@storm-stack/serialization!TypedArrayAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ClassTypeAnnotation",
              "canonicalReference": "@storm-stack/serialization!ClassTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SymbolTypeAnnotation",
              "canonicalReference": "@storm-stack/serialization!SymbolTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CustomTypeAnnotation",
              "canonicalReference": "@storm-stack/serialization!CustomTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "CompositeTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!CustomTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CustomTypeAnnotation = "
            },
            {
              "kind": "Content",
              "text": "[\"custom\", string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "CustomTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/serialization!DataTransformer:interface",
          "docComment": "/**\n * A class that can be serialized and deserialized\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DataTransformer<TData, TJsonValue extends "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TJsonValue",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "DataTransformer",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!DataTransformer#deserialize:member",
              "docComment": "/**\n * Deserialize the class from a JSON object\n *\n * @param json - The JSON object to deserialize from\n *\n * @returns The deserialized data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deserialize: "
                },
                {
                  "kind": "Reference",
                  "text": "DeserializeFunct",
                  "canonicalReference": "@storm-stack/serialization!DeserializeFunct:type"
                },
                {
                  "kind": "Content",
                  "text": "<TData, TJsonValue>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deserialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!DataTransformer#serialize:member",
              "docComment": "/**\n * Serialize the class to a JSON object\n *\n * @param data - The data object to serialize\n *\n * @returns The serialized JSON object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize: "
                },
                {
                  "kind": "Reference",
                  "text": "SerializationFunct",
                  "canonicalReference": "@storm-stack/serialization!SerializationFunct:type"
                },
                {
                  "kind": "Content",
                  "text": "<TData, TJsonValue>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!DeserializeFunct:type",
          "docComment": "/**\n * A function that can deserialize a certain type of data\n *\n * @param json - The JSON object to deserialize from\n *\n * @returns The deserialized data\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DeserializeFunct<TData = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", TJsonValue extends "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(json: TJsonValue) => TData"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "DeserializeFunct",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "TJsonValue",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/serialization!IJsonParser:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IJsonParser "
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "IJsonParser",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!IJsonParser#deserialize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deserialize: "
                },
                {
                  "kind": "Content",
                  "text": "<TData = any>(payload: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonParserResult",
                  "canonicalReference": "@storm-stack/serialization!JsonParserResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => TData"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deserialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!IJsonParser#parse:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parse: "
                },
                {
                  "kind": "Content",
                  "text": "<TData = any>(strData: string) => TData"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!IJsonParser#register:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "register: "
                },
                {
                  "kind": "Content",
                  "text": "<TData = any, TJsonValue extends "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/serialization!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/serialization!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ">(name: string, serialize: (object: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/serialization!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ") => TJsonValue, deserialize: (payload: TJsonValue) => TData, isApplicable: (data: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@storm-stack/serialization!~data"
                },
                {
                  "kind": "Content",
                  "text": " is TData) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "register",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!IJsonParser#serialize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize: "
                },
                {
                  "kind": "Content",
                  "text": "(object: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/serialization!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "JsonParserResult",
                  "canonicalReference": "@storm-stack/serialization!JsonParserResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!IJsonParser#stringify:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stringify: "
                },
                {
                  "kind": "Content",
                  "text": "<TData = any>(data: TData) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stringify",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!InnerNode:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type InnerNode<T> = "
            },
            {
              "kind": "Content",
              "text": "[T, "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "Tree",
              "canonicalReference": "@storm-stack/serialization!Tree:type"
            },
            {
              "kind": "Content",
              "text": "<T>>]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "InnerNode",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/serialization!JsonArray:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonArray extends "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "JsonArray",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/serialization!JsonObject:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonObject "
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "JsonObject",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@storm-stack/serialization!JsonObject:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/serialization!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/serialization!JsonParserResult:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonParserResult "
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "JsonParserResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!JsonParserResult#json:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "json: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/serialization!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "json",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/serialization!JsonParserResult#meta:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "meta?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        values?: "
                },
                {
                  "kind": "Reference",
                  "text": "Tree",
                  "canonicalReference": "@storm-stack/serialization!Tree:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TypeAnnotation",
                  "canonicalReference": "@storm-stack/serialization!TypeAnnotation:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "Tree",
                  "canonicalReference": "@storm-stack/serialization!Tree:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TypeAnnotation",
                  "canonicalReference": "@storm-stack/serialization!TypeAnnotation:type"
                },
                {
                  "kind": "Content",
                  "text": ">> | undefined;\n        referentialEqualities?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string[]> | [string[]] | [string[], "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string[]>];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "meta",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 16
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!JsonValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type JsonValue = "
            },
            {
              "kind": "Reference",
              "text": "PrimitiveJsonValue",
              "canonicalReference": "@storm-stack/serialization!PrimitiveJsonValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JsonArray",
              "canonicalReference": "@storm-stack/serialization!JsonArray:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JsonObject",
              "canonicalReference": "@storm-stack/serialization!JsonObject:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "JsonValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!Leaf:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Leaf<T> = "
            },
            {
              "kind": "Content",
              "text": "[T]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "Leaf",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!LeafTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type LeafTypeAnnotation = "
            },
            {
              "kind": "Reference",
              "text": "PrimitiveTypeAnnotation",
              "canonicalReference": "@storm-stack/serialization!PrimitiveTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | \"regexp\" | \"Date\" | \"Error\" | \"URL\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "LeafTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!PrimitiveJsonValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PrimitiveJsonValue = "
            },
            {
              "kind": "Content",
              "text": "string | number | boolean | undefined | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "PrimitiveJsonValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!PrimitiveTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PrimitiveTypeAnnotation = "
            },
            {
              "kind": "Content",
              "text": "\"number\" | \"undefined\" | \"bigint\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "PrimitiveTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/serialization!Serializable:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Serializable: "
            },
            {
              "kind": "Content",
              "text": "<TData = any>(options?: {\n    identifier?: string;\n}) => <TClass extends new (..._args: any) => any = new (..._args: any) => TData>(target: TClass) => {\n    new (..._args: any): {\n        [x: string]: any;\n        __typename: string;\n        serialize: () => "
            },
            {
              "kind": "Reference",
              "text": "JsonParserResult",
              "canonicalReference": "@storm-stack/serialization!JsonParserResult:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        deserialize: (json: "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "JsonParserResult",
              "canonicalReference": "@storm-stack/serialization!JsonParserResult:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        stringify: () => string;\n        parse: (strObject: string) => TData;\n        isTypeOf(value: any): "
            },
            {
              "kind": "Reference",
              "text": "value",
              "canonicalReference": "@storm-stack/serialization!~value"
            },
            {
              "kind": "Content",
              "text": " is TData;\n    };\n    __typename: string;\n    isTypeOf(value: any): "
            },
            {
              "kind": "Reference",
              "text": "value",
              "canonicalReference": "@storm-stack/serialization!~value"
            },
            {
              "kind": "Content",
              "text": " is TData;\n    deserialize: (json: "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "JsonParserResult",
              "canonicalReference": "@storm-stack/serialization!JsonParserResult:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    parse: (strObject: string) => TData;\n} & TClass"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/serializable.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Serializable",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!SerializableJsonValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializableJsonValue = "
            },
            {
              "kind": "Content",
              "text": "symbol | "
            },
            {
              "kind": "Reference",
              "text": "Set",
              "canonicalReference": "!Set:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> | undefined | bigint | "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ClassInstance",
              "canonicalReference": "@storm-stack/serialization!ClassInstance:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "SerializableJsonValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!SerializableType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializableType<T> = "
            },
            {
              "kind": "Reference",
              "text": "ClassSerializable",
              "canonicalReference": "@storm-stack/serialization!ClassSerializable:interface"
            },
            {
              "kind": "Content",
              "text": "<T> & "
            },
            {
              "kind": "Reference",
              "text": "ClassTypeCheckable",
              "canonicalReference": "@storm-stack/serialization!~ClassTypeCheckable:interface"
            },
            {
              "kind": "Content",
              "text": "<T> & "
            },
            {
              "kind": "Reference",
              "text": "ITyped",
              "canonicalReference": "@storm-stack/serialization!~ITyped:interface"
            },
            {
              "kind": "Content",
              "text": " & T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "SerializableType",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!SerializationFunct:type",
          "docComment": "/**\n * A function that can serialize a certain type of data\n *\n * @param data - The data object to serialize\n *\n * @returns The serialized JSON object\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializationFunct<TData = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", TJsonValue extends "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/serialization!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(data: TData) => TJsonValue"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "SerializationFunct",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "TJsonValue",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!SerializationMetadata:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializationMetadata<T> = "
            },
            {
              "kind": "Reference",
              "text": "DataTransformer",
              "canonicalReference": "@storm-stack/serialization!DataTransformer:interface"
            },
            {
              "kind": "Content",
              "text": "<T> & "
            },
            {
              "kind": "Reference",
              "text": "ClassTypeCheckable",
              "canonicalReference": "@storm-stack/serialization!~ClassTypeCheckable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "SerializationMetadata",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!SimpleTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SimpleTypeAnnotation = "
            },
            {
              "kind": "Reference",
              "text": "LeafTypeAnnotation",
              "canonicalReference": "@storm-stack/serialization!LeafTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | \"map\" | \"set\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "SimpleTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@storm-stack/serialization!StormParser:class",
          "docComment": "/**\n * A static JSON parser class used by Storm Software to serialize and deserialize JSON\n *\n * @remarks\n *\n * This class uses the [SuperJSON](https://github.com/blitz-js/superjson) library\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StormParser extends "
            },
            {
              "kind": "Reference",
              "text": "SuperJSON",
              "canonicalReference": "!unknown"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/storm-parser.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "StormParser",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@storm-stack/serialization!StormParser.deserialize:member(1)",
              "docComment": "/**\n * Deserialize the given value with superjson using the given metadata\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static deserialize<TData = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(payload: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonParserResult",
                  "canonicalReference": "@storm-stack/serialization!JsonParserResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TData"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "payload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "deserialize"
            },
            {
              "kind": "Property",
              "canonicalReference": "@storm-stack/serialization!StormParser.instance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get instance(): "
                },
                {
                  "kind": "Reference",
                  "text": "StormParser",
                  "canonicalReference": "@storm-stack/serialization!StormParser:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "instance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@storm-stack/serialization!StormParser.parse:member(1)",
              "docComment": "/**\n * Parse the given value with superjson using the given metadata\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static parse<TData = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(strData: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TData"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "strData",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "parse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@storm-stack/serialization!StormParser.register:member(1)",
              "docComment": "/**\n * Register a custom schema with superjson\n *\n * @param name - The name of the schema\n *\n * @param serialize - The function to serialize the schema\n *\n * @param deserialize - The function to deserialize the schema\n *\n * @param isApplicable - The function to check if the schema is applicable\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static register<TData = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", TJsonObject extends "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/serialization!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/serialization!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ">(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", serialize: "
                },
                {
                  "kind": "Content",
                  "text": "(data: TData) => TJsonObject"
                },
                {
                  "kind": "Content",
                  "text": ", deserialize: "
                },
                {
                  "kind": "Content",
                  "text": "(json: TJsonObject) => TData"
                },
                {
                  "kind": "Content",
                  "text": ", isApplicable: "
                },
                {
                  "kind": "Content",
                  "text": "(data: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@storm-stack/serialization!~data"
                },
                {
                  "kind": "Content",
                  "text": " is TData"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "typeParameterName": "TJsonObject",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "serialize",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "deserialize",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isApplicable",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 16
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "register"
            },
            {
              "kind": "Method",
              "canonicalReference": "@storm-stack/serialization!StormParser.registerClass:member(1)",
              "docComment": "/**\n * Register a class with superjson\n *\n * @param classConstructor - The class constructor to register\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static registerClass(classConstructor: "
                },
                {
                  "kind": "Reference",
                  "text": "Class",
                  "canonicalReference": "@storm-stack/serialization!Class:type"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        identifier?: string;\n        allowProps?: string[];\n    } | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "classConstructor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "registerClass"
            },
            {
              "kind": "Method",
              "canonicalReference": "@storm-stack/serialization!StormParser.serialize:member(1)",
              "docComment": "/**\n * Serialize the given value with superjson\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static serialize(object: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/serialization!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JsonParserResult",
                  "canonicalReference": "@storm-stack/serialization!JsonParserResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "object",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "serialize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@storm-stack/serialization!StormParser.stringify:member(1)",
              "docComment": "/**\n * Stringify the given value with superjson\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static stringify(json: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "json",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "stringify"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!SymbolTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SymbolTypeAnnotation = "
            },
            {
              "kind": "Content",
              "text": "[\"symbol\", string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "SymbolTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!Tree:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Tree<T> = "
            },
            {
              "kind": "Reference",
              "text": "InnerNode",
              "canonicalReference": "@storm-stack/serialization!InnerNode:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "Leaf",
              "canonicalReference": "@storm-stack/serialization!Leaf:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "Tree",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!TypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TypeAnnotation = "
            },
            {
              "kind": "Reference",
              "text": "SimpleTypeAnnotation",
              "canonicalReference": "@storm-stack/serialization!SimpleTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CompositeTypeAnnotation",
              "canonicalReference": "@storm-stack/serialization!CompositeTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "TypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/serialization!TypedArrayAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TypedArrayAnnotation = "
            },
            {
              "kind": "Content",
              "text": "[\"typed-array\", string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/serialization/src/types.d.ts",
          "releaseTag": "Public",
          "name": "TypedArrayAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        }
      ]
    }
  ]
}
