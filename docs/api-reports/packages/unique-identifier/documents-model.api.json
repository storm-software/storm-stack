{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.38.5",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@storm-stack/unique-identifier!",
  "docComment": "",
  "name": "@storm-stack/unique-identifier",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@storm-stack/unique-identifier!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!Class:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Class = "
            },
            {
              "kind": "Content",
              "text": "{\n    new (...args: any[]): any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "Class",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!ClassInstance:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ClassInstance = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "ClassInstance",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/unique-identifier!ClassSerializable:interface",
          "docComment": "/**\n * A class that can be serialized and deserialized\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClassSerializable<TData, TJsonValue extends "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TJsonValue",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "ClassSerializable",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!ClassSerializable#deserialize:member",
              "docComment": "/**\n * Deserialize the class from a JSON object\n *\n * @param json - The JSON object to deserialize from\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deserialize: "
                },
                {
                  "kind": "Content",
                  "text": "(json: TJsonValue) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deserialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!ClassSerializable#serialize:member",
              "docComment": "/**\n * Serialize the class to a JSON object\n *\n * @returns The data object to serialize\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize: "
                },
                {
                  "kind": "Content",
                  "text": "() => TJsonValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!ClassTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ClassTypeAnnotation = "
            },
            {
              "kind": "Content",
              "text": "[\"class\", string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "ClassTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!CompositeTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CompositeTypeAnnotation = "
            },
            {
              "kind": "Reference",
              "text": "TypedArrayAnnotation",
              "canonicalReference": "@storm-stack/unique-identifier!TypedArrayAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ClassTypeAnnotation",
              "canonicalReference": "@storm-stack/unique-identifier!ClassTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SymbolTypeAnnotation",
              "canonicalReference": "@storm-stack/unique-identifier!SymbolTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CustomTypeAnnotation",
              "canonicalReference": "@storm-stack/unique-identifier!CustomTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "CompositeTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!CustomTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CustomTypeAnnotation = "
            },
            {
              "kind": "Content",
              "text": "[\"custom\", string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "CustomTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/unique-identifier!DataTransformer:interface",
          "docComment": "/**\n * A class that can be serialized and deserialized\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DataTransformer<TData, TJsonValue extends "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TJsonValue",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "DataTransformer",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!DataTransformer#deserialize:member",
              "docComment": "/**\n * Deserialize the class from a JSON object\n *\n * @param json - The JSON object to deserialize from\n *\n * @returns The deserialized data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deserialize: "
                },
                {
                  "kind": "Reference",
                  "text": "DeserializeFunct",
                  "canonicalReference": "@storm-stack/unique-identifier!DeserializeFunct:type"
                },
                {
                  "kind": "Content",
                  "text": "<TData, TJsonValue>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deserialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!DataTransformer#serialize:member",
              "docComment": "/**\n * Serialize the class to a JSON object\n *\n * @param data - The data object to serialize\n *\n * @returns The serialized JSON object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize: "
                },
                {
                  "kind": "Reference",
                  "text": "SerializationFunct",
                  "canonicalReference": "@storm-stack/unique-identifier!SerializationFunct:type"
                },
                {
                  "kind": "Content",
                  "text": "<TData, TJsonValue>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/unique-identifier!deserialize:function(1)",
          "docComment": "/**\n * Deserialize the given value with superjson using the given metadata\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function deserialize<TData = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": ">(payload: "
            },
            {
              "kind": "Reference",
              "text": "JsonParserResult",
              "canonicalReference": "@storm-stack/unique-identifier!JsonParserResult:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "TData"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/json-parser.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "payload",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "deserialize"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!DeserializeFunct:type",
          "docComment": "/**\n * A function that can deserialize a certain type of data\n *\n * @param json - The JSON object to deserialize from\n *\n * @returns The deserialized data\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DeserializeFunct<TData = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", TJsonValue extends "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(json: TJsonValue) => TData"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "DeserializeFunct",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "TJsonValue",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/unique-identifier!IJsonParser:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IJsonParser "
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "IJsonParser",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!IJsonParser#deserialize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deserialize: "
                },
                {
                  "kind": "Content",
                  "text": "<TData = any>(payload: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonParserResult",
                  "canonicalReference": "@storm-stack/unique-identifier!JsonParserResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => TData"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deserialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!IJsonParser#parse:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parse: "
                },
                {
                  "kind": "Content",
                  "text": "<TData = any>(strData: string) => TData"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!IJsonParser#register:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "register: "
                },
                {
                  "kind": "Content",
                  "text": "<TData = any, TJsonValue extends "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ">(name: string, serialize: (object: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ") => TJsonValue, deserialize: (payload: TJsonValue) => TData, isApplicable: (data: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@storm-stack/unique-identifier!~data"
                },
                {
                  "kind": "Content",
                  "text": " is TData) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "register",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!IJsonParser#serialize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize: "
                },
                {
                  "kind": "Content",
                  "text": "(object: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "JsonParserResult",
                  "canonicalReference": "@storm-stack/unique-identifier!JsonParserResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!IJsonParser#stringify:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stringify: "
                },
                {
                  "kind": "Content",
                  "text": "<TData = any>(data: TData) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stringify",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!InnerNode:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type InnerNode<T> = "
            },
            {
              "kind": "Content",
              "text": "[T, "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "Tree",
              "canonicalReference": "@storm-stack/unique-identifier!Tree:type"
            },
            {
              "kind": "Content",
              "text": "<T>>]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "InnerNode",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/unique-identifier!JsonArray:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonArray extends "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "JsonArray",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/unique-identifier!JsonObject:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonObject "
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "JsonObject",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@storm-stack/unique-identifier!JsonObject:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@storm-stack/unique-identifier!JsonParserResult:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonParserResult "
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "JsonParserResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!JsonParserResult#json:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "json: "
                },
                {
                  "kind": "Reference",
                  "text": "JsonValue",
                  "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "json",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@storm-stack/unique-identifier!JsonParserResult#meta:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "meta?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        values?: "
                },
                {
                  "kind": "Reference",
                  "text": "Tree",
                  "canonicalReference": "@storm-stack/unique-identifier!Tree:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TypeAnnotation",
                  "canonicalReference": "@storm-stack/unique-identifier!TypeAnnotation:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "Tree",
                  "canonicalReference": "@storm-stack/unique-identifier!Tree:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TypeAnnotation",
                  "canonicalReference": "@storm-stack/unique-identifier!TypeAnnotation:type"
                },
                {
                  "kind": "Content",
                  "text": ">> | undefined;\n        referentialEqualities?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string[]> | [string[]] | [string[], "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string[]>];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "meta",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 16
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type JsonValue = "
            },
            {
              "kind": "Reference",
              "text": "PrimitiveJsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!PrimitiveJsonValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JsonArray",
              "canonicalReference": "@storm-stack/unique-identifier!JsonArray:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JsonObject",
              "canonicalReference": "@storm-stack/unique-identifier!JsonObject:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "JsonValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!Leaf:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Leaf<T> = "
            },
            {
              "kind": "Content",
              "text": "[T]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "Leaf",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!LeafTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type LeafTypeAnnotation = "
            },
            {
              "kind": "Reference",
              "text": "PrimitiveTypeAnnotation",
              "canonicalReference": "@storm-stack/unique-identifier!PrimitiveTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | \"regexp\" | \"Date\" | \"Error\" | \"URL\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "LeafTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/unique-identifier!parse:function(1)",
          "docComment": "/**\n * Parse the given value with superjson using the given metadata\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function parse<TData = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": ">(strData: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "TData"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/json-parser.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "strData",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "parse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/unique-identifier!parseQueryParam:function(1)",
          "docComment": "/**\n * Parse the given value with qs using the given metadata\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function parseQueryParam<TData = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": ">(strData: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Content",
              "text": "{\n    comma?: boolean | undefined;\n    delimiter?: string | "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    depth?: number | false | undefined;\n    arrayLimit?: number | undefined;\n    parseArrays?: boolean | undefined;\n    allowDots?: boolean | undefined;\n    plainObjects?: boolean | undefined;\n    allowPrototypes?: boolean | undefined;\n    parameterLimit?: number | undefined;\n    strictNullHandling?: boolean | undefined;\n    ignoreQueryPrefix?: boolean | undefined;\n    charset?: \"utf-8\" | \"iso-8859-1\" | undefined;\n    charsetSentinel?: boolean | undefined;\n    interpretNumericEntities?: boolean | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "TData"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/query-params-parser.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "strData",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "parseQueryParam"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!PrimitiveJsonValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PrimitiveJsonValue = "
            },
            {
              "kind": "Content",
              "text": "string | number | boolean | undefined | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "PrimitiveJsonValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!PrimitiveTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PrimitiveTypeAnnotation = "
            },
            {
              "kind": "Content",
              "text": "\"number\" | \"undefined\" | \"bigint\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "PrimitiveTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/unique-identifier!register:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function register<TData = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", TJsonObject extends "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": ">(name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", serialize: "
            },
            {
              "kind": "Content",
              "text": "(data: TData) => TJsonObject"
            },
            {
              "kind": "Content",
              "text": ", deserialize: "
            },
            {
              "kind": "Content",
              "text": "(json: TJsonObject) => TData"
            },
            {
              "kind": "Content",
              "text": ", isApplicable: "
            },
            {
              "kind": "Content",
              "text": "(data: any) => "
            },
            {
              "kind": "Reference",
              "text": "data",
              "canonicalReference": "@storm-stack/unique-identifier!~data"
            },
            {
              "kind": "Content",
              "text": " is TData"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/json-parser.ts",
          "returnTypeTokenRange": {
            "startIndex": 17,
            "endIndex": 18
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            },
            {
              "parameterName": "serialize",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": false
            },
            {
              "parameterName": "deserialize",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "isOptional": false
            },
            {
              "parameterName": "isApplicable",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 16
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "TJsonObject",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "register"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@storm-stack/unique-identifier!Serializable:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Serializable: "
            },
            {
              "kind": "Content",
              "text": "<TData = any>(options: {\n    name?: string | undefined;\n    serialize: "
            },
            {
              "kind": "Reference",
              "text": "SerializationFunct",
              "canonicalReference": "@storm-stack/unique-identifier!SerializationFunct:type"
            },
            {
              "kind": "Content",
              "text": "<TData>;\n    deserialize: "
            },
            {
              "kind": "Reference",
              "text": "DeserializeFunct",
              "canonicalReference": "@storm-stack/unique-identifier!DeserializeFunct:type"
            },
            {
              "kind": "Content",
              "text": "<TData>;\n}) => <TClass extends new (...args: any) => any = new (...args: any) => TData>(target: TClass) => {\n    new (...args: any): {\n        [x: string]: any;\n        __typename: string;\n        serialize: () => "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": ";\n        deserialize: (json: "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": ") => void;\n        isTypeOf(value: any): "
            },
            {
              "kind": "Reference",
              "text": "value",
              "canonicalReference": "@storm-stack/unique-identifier!~value"
            },
            {
              "kind": "Content",
              "text": " is TData;\n    };\n} & TClass"
            }
          ],
          "fileUrlPath": "packages/serialization/src/serializable.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Serializable",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!SerializableJsonValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializableJsonValue = "
            },
            {
              "kind": "Reference",
              "text": "Symbol",
              "canonicalReference": "!Symbol:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Set",
              "canonicalReference": "!Set:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> | undefined | bigint | "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ClassInstance",
              "canonicalReference": "@storm-stack/unique-identifier!ClassInstance:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "SerializableJsonValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 18
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!SerializableType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializableType<T> = "
            },
            {
              "kind": "Reference",
              "text": "ClassSerializable",
              "canonicalReference": "@storm-stack/unique-identifier!ClassSerializable:interface"
            },
            {
              "kind": "Content",
              "text": "<T> & "
            },
            {
              "kind": "Reference",
              "text": "ClassTypeCheckable",
              "canonicalReference": "@storm-stack/unique-identifier!~ClassTypeCheckable:interface"
            },
            {
              "kind": "Content",
              "text": "<T> & "
            },
            {
              "kind": "Reference",
              "text": "ITyped",
              "canonicalReference": "@storm-stack/unique-identifier!~ITyped:interface"
            },
            {
              "kind": "Content",
              "text": " & T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "SerializableType",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!SerializationFunct:type",
          "docComment": "/**\n * A function that can serialize a certain type of data\n *\n * @param data - The data object to serialize\n *\n * @returns The serialized JSON object\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializationFunct<TData = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", TJsonValue extends "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(data: TData) => TJsonValue"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "SerializationFunct",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "TJsonValue",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!SerializationMetadata:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializationMetadata<T> = "
            },
            {
              "kind": "Reference",
              "text": "DataTransformer",
              "canonicalReference": "@storm-stack/unique-identifier!DataTransformer:interface"
            },
            {
              "kind": "Content",
              "text": "<T> & "
            },
            {
              "kind": "Reference",
              "text": "ClassTypeCheckable",
              "canonicalReference": "@storm-stack/unique-identifier!~ClassTypeCheckable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "SerializationMetadata",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/unique-identifier!serialize:function(1)",
          "docComment": "/**\n * Serialize the given value with superjson\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function serialize(object: "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "JsonParserResult",
              "canonicalReference": "@storm-stack/unique-identifier!JsonParserResult:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/json-parser.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "object",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "serialize"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!SimpleTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SimpleTypeAnnotation = "
            },
            {
              "kind": "Reference",
              "text": "LeafTypeAnnotation",
              "canonicalReference": "@storm-stack/unique-identifier!LeafTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | \"map\" | \"set\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "SimpleTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/unique-identifier!stringify:function(1)",
          "docComment": "/**\n * Stringify the given value with superjson\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function stringify(json: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/json-parser.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "json",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "stringify"
        },
        {
          "kind": "Function",
          "canonicalReference": "@storm-stack/unique-identifier!stringifyQueryParam:function(1)",
          "docComment": "/**\n * Stringify the given value with qs\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function stringifyQueryParam(json: "
            },
            {
              "kind": "Reference",
              "text": "JsonValue",
              "canonicalReference": "@storm-stack/unique-identifier!JsonValue:type"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Content",
              "text": "{\n    delimiter?: string | undefined;\n    strictNullHandling?: boolean | undefined;\n    skipNulls?: boolean | undefined;\n    encode?: boolean | undefined;\n    filter?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string | number> | ((prefix: string, value: any) => any) | undefined;\n    arrayFormat?: \"indices\" | \"brackets\" | \"repeat\" | \"comma\" | undefined;\n    indices?: boolean | undefined;\n    sort?: ((a: any, b: any) => number) | undefined;\n    serializeDate?: ((d: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ") => string) | undefined;\n    format?: \"RFC1738\" | \"RFC3986\" | undefined;\n    encodeValuesOnly?: boolean | undefined;\n    addQueryPrefix?: boolean | undefined;\n    charset?: \"utf-8\" | \"iso-8859-1\" | undefined;\n    allowDots?: boolean | undefined;\n    charsetSentinel?: boolean | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/query-params-parser.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "json",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "stringifyQueryParam"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!SymbolTypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SymbolTypeAnnotation = "
            },
            {
              "kind": "Content",
              "text": "[\"symbol\", string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "SymbolTypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!Tree:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Tree<T> = "
            },
            {
              "kind": "Reference",
              "text": "InnerNode",
              "canonicalReference": "@storm-stack/unique-identifier!InnerNode:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "Leaf",
              "canonicalReference": "@storm-stack/unique-identifier!Leaf:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "Tree",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!TypeAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TypeAnnotation = "
            },
            {
              "kind": "Reference",
              "text": "SimpleTypeAnnotation",
              "canonicalReference": "@storm-stack/unique-identifier!SimpleTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CompositeTypeAnnotation",
              "canonicalReference": "@storm-stack/unique-identifier!CompositeTypeAnnotation:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "TypeAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@storm-stack/unique-identifier!TypedArrayAnnotation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TypedArrayAnnotation = "
            },
            {
              "kind": "Content",
              "text": "[\"typed-array\", string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/serialization/src/types.ts",
          "releaseTag": "Public",
          "name": "TypedArrayAnnotation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        }
      ]
    }
  ]
}
