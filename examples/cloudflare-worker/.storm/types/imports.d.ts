/* eslint-disable */
// biome-ignore lint: disable
// prettier-ignore

/// <reference types="@storm-stack/types" />

// Generated by Storm Stack
// Note: Do not edit this file manually - it will be overwritten automatically

declare global {
  const StormError: (typeof import("../runtime/error"))["StormError"];
  const StormJSON: (typeof import("@stryke/json"))["StormJSON"];
  const StormRequest: (typeof import("../runtime/request"))["StormRequest"];
  const StormResponse: (typeof import("../runtime/response"))["StormResponse"];
  const StormLog: (typeof import("../runtime/log"))["StormLog"];
  const uniqueId: (typeof import("../runtime/id"))["uniqueId"];
  const getRandom: (typeof import("../runtime/id"))["getRandom"];

  type StormError = import("../runtime/error").StormError;
  type StormRequest<TData = any> = import("../runtime/request").StormRequest<TData>;
  type StormResponse = import("../runtime/response").StormResponse;
  type StormLog = import("../runtime/log").StormLog;
}

declare module "storm:error" {
  let _StormError: (typeof import("../runtime/error"))["StormError"];
  export { _StormError as StormError };
}

declare module "storm:json" {
  let _StormJSON: (typeof import("@stryke/json"))["StormJSON"];
  export { _StormJSON as StormJSON };
}

declare module "storm:request" {
  let _StormRequest: (typeof import("../runtime/request"))["StormRequest"];
  export { _StormRequest as StormRequest };
}

declare module "storm:response" {
  let _StormResponse: (typeof import("../runtime/response"))["StormResponse"];
  export { _StormResponse as StormResponse };
}

declare module "storm:log" {
  let _StormLog: (typeof import("../runtime/log"))["StormLog"];
  export { _StormLog as StormLog };
}

declare module "storm:id" {
  let _uniqueId: (typeof import("../runtime/id"))["uniqueId"];
  let _getRandom: (typeof import("../runtime/id"))["getRandom"];
  export { _getRandom as getRandom, _uniqueId as uniqueId };
}

export {};
