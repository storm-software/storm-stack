/* eslint-disable */
// biome-ignore lint: disable
// prettier-ignore

/// <reference types="../../../../dist/packages/types" />
/// <reference types="../../../../dist/packages/types/node" />

// Generated by Storm Stack
// Note: Do not edit this file manually - it will be overwritten automatically

declare module "storm:app" {
  const withContext: (typeof import("../runtime/app"))["withContext"];

  export { withContext };
}

declare module "storm:env" {
  const getBuildInfo: (typeof import("../runtime/env"))["getBuildInfo"];
  const getRuntimeInfo: (typeof import("../runtime/env"))["getRuntimeInfo"];
  const getEnvPaths: (typeof import("../runtime/env"))["getEnvPaths"];

  export { getBuildInfo, getEnvPaths, getRuntimeInfo };
}

declare module "storm:context" {
  const useStorm: (typeof import("../runtime/context"))["useStorm"];
  const STORM_ASYNC_CONTEXT: (typeof import("../runtime/context"))["STORM_ASYNC_CONTEXT"];

  export { STORM_ASYNC_CONTEXT, useStorm };
}

declare module "storm:event" {
  const _StormEvent: (typeof import("../runtime/event"))["StormEvent"];

  class StormEvent<
    TEventType extends string = string,
    TEventData = any
  > extends _StormEvent<TEventType, TEventData> {
    /**
     * Creates a new event.
     *
     * @param type - The event type.
     * @param data - The event data.
     */
    public constructor(type: TEventType, data: TEventData) {
      super(type, data);
    }
  }

  export { StormEvent };
}
