/* eslint-disable */
// biome-ignore lint: disable
// prettier-ignore

// Generated by Storm Stack
// Note: Do not edit this file manually - it will be overwritten automatically

import { colors } from "../../runtime/cli";

/**
 * Renders the Serve command usage information.
 *
 * @param mode - The render mode to use when displaying the usage information (either "full" or "minimal").
 * @returns The rendered string displaying usage information.
 */
export function renderUsage(mode: "full" | "minimal" = "full"): string {
  return `${colors.whiteBright(colors.bold(`Serve${mode === "minimal" ? " Command" : ""}`))}

  ${colors.gray("Start a server and serve the application.")}

  ${colors.whiteBright(colors.bold("Usage:"))}
    examples-cli serve [options] 

  ${colors.whiteBright(colors.bold("Options:"))}
    --help, -h, -?                       ${colors.gray("Show help information. [default: false]")} 
    --version, -v                        ${colors.gray("Show the version of the application. [default: false]")} 
    --interactive, -i, --interact        ${colors.gray("Enable interactive mode (will be set to false if running in a CI pipeline). [default: true]")} 
    --no-interactive, --no-interact      ${colors.gray("Disable interactive mode (will be set to true if running in a CI pipeline). [default: false]")} 
    --no-banner                          ${colors.gray("Hide the banner displayed while running the CLI application (will be set to true if running in a CI pipeline). [default: false]")} 
    --verbose, -v                        ${colors.gray("Enable verbose output. [default: false]")} 
    --host <host>                        ${colors.gray('The host to bind the server to. [default: "localhost"]')} 
    --port <port>, -p <port>             ${colors.gray("The port to bind the server to. [default: 3000]")} 
    --compress, -c                       ${colors.gray("Should the server serve compressed files?")} 
    --no-compress                        ${colors.gray("The inverse of the compress option. [default: false]")} 
    --platform <platform>                ${colors.gray('Should the server serve compressed files? Valid options are: node, browser [default: "node"]')} 
    --load-env, -l                       ${colors.gray("Should the server load environment variables from the .env file? [default: true]")} 
    --no-load-env                        ${colors.gray("The inverse of the load-env option. [default: false]")}
`;
}
