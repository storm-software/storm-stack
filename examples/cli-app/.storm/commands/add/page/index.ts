/* eslint-disable */
// biome-ignore lint: disable
// prettier-ignore

// Generated by Storm Stack
// Note: Do not edit this file manually - it will be overwritten automatically

import { deserialize } from "@deepkit/type";
import { getSink as getSentrySink } from "@storm-stack/log-sentry";
import { getSink as getStorageSink } from "@storm-stack/log-storage";
import { defineCommand } from "@stryke/cli/define-command";
import type { CommandContext } from "@stryke/cli/types";
import { builder } from "storm:app";
import { StormRequest } from "storm:request";
import { StormResponse } from "storm:response";
import { storage } from "storm:storage";
import handle from "../../../../src/commands/add/page";
import { AddPagePayload } from "../../../../src/types";

const handleCommand = builder<
  StormRequest<AddPagePayload>,
  StormResponse<any>,
  CommandContext<any>,
  any
>({
  name: "examples-cli-app",
  log: [
    { handle: await getStorageSink({ storage }), logLevel: "debug" },
    { handle: getSentrySink(), logLevel: "error" }
  ],
  storage
})
  .handler(handle)
  .deserializer(
    (payload: any) =>
      new StormRequest(deserialize<AddPagePayload>(payload.args))
  )
  .build();

export default defineCommand({
  meta: {
    name: "page",
    displayName: "Add - Page",
    description: "Add a page to the file system"
  },
  args: {
    file: {
      description: "The file to add to the file system.",
      type: "string",
      required: false,
      default: "page.ts"
    }
  },
  handle: handleCommand
});
